{"compress":true,"commitItems":[["dec07a19-512f-4c0c-9c4f-a4dab1712b7d",1583309986652,"---\ntitle: 人生苦短，我用Docker\ncopyright: true\ncomments: true\nmathjax: false\ntags:\n  - Docker\n  - 备忘录\ncategories:\n  - 备忘录\nabbrlink: 2180828103\ndate: 2019-10-10 10:11:18\nupdated: 2019-10-30 10:11:18\nimage:\n---\n# 人生苦短，我用Docker\n\n1. 使用服务器Docker服务搭建Deepo-jupyter深度学习框架\n\n<!--more-->\n\n## 使用服务器Docker服务搭建Deepo-jupyter深度学习框架\n\n```sh\n# 需要保证服务器已经安装docker以及nvidia-docker\n# 首先服务器拉取deepo镜像\n# 注意换源，不然会非常慢的\ndocker pull ufoym/deepo:all-py36-jupyter\n# 开启deepo\n# -it 保持输入与交互\n# -p 端口映射，服务器的7777映射到docker的8888\n# -v 文件保存\n# --name 设置容器名字\nnvidia-docker run -it -p 7777:8888 --ipc=host -v /home/username/Projects/:/Projects --name deepo-jupyter ufoym/deepo:all-py36-jupyter\n# 注意下次启动直接使用容器，不需要重新创建\ndocker container start deepo-jupyter\ndocker container attach deepo-jupyter\n# 启动jupyter-notebook\nnohup jupyter notebook --no-browser --ip=0.0.0.0 --allow-root --NotebookApp.token= --notebook-dir='/Projects'\n# 如果想在本地机器的浏览器中使用jupyter的话，ssh登录的时候需要指定端口映射\n# 本地1234映射到host的127.0.0.1:7777\nssh username@host-ip -L 1234:127.0.0.1:7777\n#\n# 设置alias\n# 本地\nalias ssh-jupyter=\"ssh -p 22 name@ip -L 1234:127.0.0.1:7777\"\n# host\nalias deepo-jupyter-create='nvidia-docker run -it -p 7777:8888 --ipc=host -v /home/username/Jupyter/:/Jupyter --name deepo-jupyter ufoym/deepo:all-py36-jupyter'\nalias deepo-jupyter='docker container start deepo-jupyter && docker container attach deepo-jupyter'\n# docker-jupyter\nvim /etc/bash.bashrc\nalias deepo-jupyter='nohup jupyter notebook --no-browser --ip=0.0.0.0 --allow-root --NotebookApp.token= --notebook-dir=\"/Projects\" &'\nsource /etc/bash.bashrc\n# enjoy it!\n127.0.0.1:1234\n```\n\n## Docker容器挂载主机目录后的权限问题\n\n由于Docker使用root权限运行，挂载目录后，容器内创建文件后的权限就变成了root，主机就没有权限修改。而docker是通过用户的uid和gid来分辨用户和用户组，所以我们可以通过创建非root用户，并修改其uid和gid与主机用户保持一致，从而保证主机用户对挂载目录的权限。\n\n```sh\nuseradd user\nusermod -u 1001 user\ngroupmod -g 1001 user\nchown -R user.user files\n```",[[1583309931296,["Lau@DESKTOP-NNL6EUI",[[1,1822,"\n\n"]],[1822,1822],[1823,1823]]],[1583309931793,["Lau@DESKTOP-NNL6EUI",[[1,1824,"\n"]],[1823,1823],[1824,1824]]],[1583309933960,["Lau@DESKTOP-NNL6EUI",[[-1,1824,"\n"],[1,1825,"#"]],[1824,1824],[1825,1825]]],[1583309934245,["Lau@DESKTOP-NNL6EUI",[[1,1825,"# "]],[1825,1825],[1827,1827]]],[1583309934611,["Lau@DESKTOP-NNL6EUI",[[1,1827,"\n\n"]],[1827,1827],[1828,1828]]],[1583309936035,["Lau@DESKTOP-NNL6EUI",[[-1,1828,"\n"],[1,1829,"·"]],[1828,1828],[1829,1829]]],[1583309936431,["Lau@DESKTOP-NNL6EUI",[[1,1829,"··"]],[1829,1829],[1831,1831]]],[1583309937404,["Lau@DESKTOP-NNL6EUI",[[-1,1829,"··"]],[1831,1831],[1829,1829]]],[1583309937556,["Lau@DESKTOP-NNL6EUI",[[-1,1828,"·"],[1,1829,"\n"]],[1829,1829],[1828,1828]]],[1583309938521,["Lau@DESKTOP-NNL6EUI",[[-1,1828,"\n"],[1,1829,"`"]],[1828,1828],[1829,1829]]],[1583309938946,["Lau@DESKTOP-NNL6EUI",[[1,1829,"``"]],[1829,1829],[1831,1831]]],[1583309938985,["Lau@DESKTOP-NNL6EUI",[[1,1831,"language\n```\n"]],[1831,1831],[1831,1839]]],[1583309939267,["Lau@DESKTOP-NNL6EUI",[[-1,1831,"language"],[1,1839,"\n"]],[1831,1839],[1832,1832]]],[1583309948763,["Lau@DESKTOP-NNL6EUI",[[1,1832,"dockerd"]],[1832,1832],[1839,1839]]],[1583309952714,["Lau@DESKTOP-NNL6EUI",[[1,1832,"$ "]],[1832,1832],[1834,1834]]],[1583309954030,["Lau@DESKTOP-NNL6EUI",[[1,1842,"\n"]],[1841,1841],[1842,1842]]],[1583309956702,["Lau@DESKTOP-NNL6EUI",[[-1,1842,"\n"]],[1842,1842],[1841,1841]]],[1583309957794,["Lau@DESKTOP-NNL6EUI",[[1,1832,"\n"]],[1831,1831],[1832,1832]]],[1583309959888,["Lau@DESKTOP-NNL6EUI",[[1,1832,"$ "]],[1832,1832],[1834,1834]]],[1583309960554,["Lau@DESKTOP-NNL6EUI",[[-1,1832,"$ "]],[1834,1834],[1832,1832]]],[1583309962496,["Lau@DESKTOP-NNL6EUI",[[1,1832,"# iakj"]],[1832,1832],[1838,1838]]],[1583309963338,["Lau@DESKTOP-NNL6EUI",[[-1,1834,"iakj"]],[1838,1838],[1834,1834]]],[1583309984030,["Lau@DESKTOP-NNL6EUI",[[1,1834,"查看docker当前情况，用于排除"]],[1834,1834],[1851,1851]]],[1583309990906,["Lau@DESKTOP-NNL6EUI",[[1,1851,"问题很有用"]],[1851,1851],[1856,1856]]],[1583310000139,["Lau@DESKTOP-NNL6EUI",[[1,1827,"docker服务启动不了"]],[1827,1827],[1839,1839]]],[1583310002193,["Lau@DESKTOP-NNL6EUI",[[1,1840,"\n"]],[1839,1839],[1840,1840]]]],null,"Lau@DESKTOP-NNL6EUI"],["43627b14-710f-4a0c-b115-138c9a11a81a",1583814402496,"---\ntitle: 人生苦短，我用Docker\ncopyright: true\ncomments: true\nmathjax: false\ntags:\n  - Docker\n  - 备忘录\ncategories:\n  - 备忘录\nabbrlink: 2180828103\ndate: 2019-10-10 10:11:18\nupdated: 2019-10-30 10:11:18\nimage:\n---\n# 人生苦短，我用Docker\n\n1. 使用服务器Docker服务搭建Deepo-jupyter深度学习框架\n\n<!--more-->\n\n## 使用服务器Docker服务搭建Deepo-jupyter深度学习框架\n\n```sh\n# 需要保证服务器已经安装docker以及nvidia-docker\n# 首先服务器拉取deepo镜像\n# 注意换源，不然会非常慢的\ndocker pull ufoym/deepo:all-py36-jupyter\n# 开启deepo\n# -it 保持输入与交互\n# -p 端口映射，服务器的7777映射到docker的8888\n# -v 文件保存\n# --name 设置容器名字\nnvidia-docker run -it -p 7777:8888 --ipc=host -v /home/username/Projects/:/Projects --name deepo-jupyter ufoym/deepo:all-py36-jupyter\n# 注意下次启动直接使用容器，不需要重新创建\ndocker container start deepo-jupyter\ndocker container attach deepo-jupyter\n# 启动jupyter-notebook\nnohup jupyter notebook --no-browser --ip=0.0.0.0 --allow-root --NotebookApp.token= --notebook-dir='/Projects'\n# 如果想在本地机器的浏览器中使用jupyter的话，ssh登录的时候需要指定端口映射\n# 本地1234映射到host的127.0.0.1:7777\nssh username@host-ip -L 1234:127.0.0.1:7777\n#\n# 设置alias\n# 本地\nalias ssh-jupyter=\"ssh -p 22 name@ip -L 1234:127.0.0.1:7777\"\n# host\nalias deepo-jupyter-create='nvidia-docker run -it -p 7777:8888 --ipc=host -v /home/username/Jupyter/:/Jupyter --name deepo-jupyter ufoym/deepo:all-py36-jupyter'\nalias deepo-jupyter='docker container start deepo-jupyter && docker container attach deepo-jupyter'\n# docker-jupyter\nvim /etc/bash.bashrc\nalias deepo-jupyter='nohup jupyter notebook --no-browser --ip=0.0.0.0 --allow-root --NotebookApp.token= --notebook-dir=\"/Projects\" &'\nsource /etc/bash.bashrc\n# enjoy it!\n127.0.0.1:1234\n```\n\n## Docker容器挂载主机目录后的权限问题\n\n由于Docker使用root权限运行，挂载目录后，容器内创建文件后的权限就变成了root，主机就没有权限修改。而docker是通过用户的uid和gid来分辨用户和用户组，所以我们可以通过创建非root用户，并修改其uid和gid与主机用户保持一致，从而保证主机用户对挂载目录的权限。\n\n```sh\nuseradd user\nusermod -u 1001 user\ngroupmod -g 1001 user\nchown -R user.user files\n```\n\n## docker服务启动不了\n\n```\n# 查看docker当前情况，用于排除问题很有用\n$ dockerd\n```\n",[[1583814396732,["Lau@DESKTOP-NNL6EUI",[[-1,259,"<!--more-->"]],[259,270],[259,259]]],[1583814396905,["Lau@DESKTOP-NNL6EUI",[[-1,260,"\n"]],[259,259],[258,258]]]],null,"Lau@DESKTOP-NNL6EUI"],["239a2f7b-8277-4139-8c1c-c9d2aeef7bee",1583842744684,"---\ntitle: 人生苦短，我用Docker\ncopyright: true\ncomments: true\nmathjax: false\ntags:\n  - Docker\n  - 备忘录\ncategories:\n  - 备忘录\nabbrlink: 2180828103\ndate: 2019-10-10 10:11:18\nupdated: 2019-10-30 10:11:18\nimage:\n---\n# 人生苦短，我用Docker\n\n1. 使用服务器Docker服务搭建Deepo-jupyter深度学习框架\n\n\n## 使用服务器Docker服务搭建Deepo-jupyter深度学习框架\n\n```sh\n# 需要保证服务器已经安装docker以及nvidia-docker\n# 首先服务器拉取deepo镜像\n# 注意换源，不然会非常慢的\ndocker pull ufoym/deepo:all-py36-jupyter\n# 开启deepo\n# -it 保持输入与交互\n# -p 端口映射，服务器的7777映射到docker的8888\n# -v 文件保存\n# --name 设置容器名字\nnvidia-docker run -it -p 7777:8888 --ipc=host -v /home/username/Projects/:/Projects --name deepo-jupyter ufoym/deepo:all-py36-jupyter\n# 注意下次启动直接使用容器，不需要重新创建\ndocker container start deepo-jupyter\ndocker container attach deepo-jupyter\n# 启动jupyter-notebook\nnohup jupyter notebook --no-browser --ip=0.0.0.0 --allow-root --NotebookApp.token= --notebook-dir='/Projects'\n# 如果想在本地机器的浏览器中使用jupyter的话，ssh登录的时候需要指定端口映射\n# 本地1234映射到host的127.0.0.1:7777\nssh username@host-ip -L 1234:127.0.0.1:7777\n#\n# 设置alias\n# 本地\nalias ssh-jupyter=\"ssh -p 22 name@ip -L 1234:127.0.0.1:7777\"\n# host\nalias deepo-jupyter-create='nvidia-docker run -it -p 7777:8888 --ipc=host -v /home/username/Jupyter/:/Jupyter --name deepo-jupyter ufoym/deepo:all-py36-jupyter'\nalias deepo-jupyter='docker container start deepo-jupyter && docker container attach deepo-jupyter'\n# docker-jupyter\nvim /etc/bash.bashrc\nalias deepo-jupyter='nohup jupyter notebook --no-browser --ip=0.0.0.0 --allow-root --NotebookApp.token= --notebook-dir=\"/Projects\" &'\nsource /etc/bash.bashrc\n# enjoy it!\n127.0.0.1:1234\n```\n\n## Docker容器挂载主机目录后的权限问题\n\n由于Docker使用root权限运行，挂载目录后，容器内创建文件后的权限就变成了root，主机就没有权限修改。而docker是通过用户的uid和gid来分辨用户和用户组，所以我们可以通过创建非root用户，并修改其uid和gid与主机用户保持一致，从而保证主机用户对挂载目录的权限。\n\n```sh\nuseradd user\nusermod -u 1001 user\ngroupmod -g 1001 user\nchown -R user.user files\n```\n\n## docker服务启动不了\n\n```\n# 查看docker当前情况，用于排除问题很有用\n$ dockerd\n```\n",[[1583842691090,["Lau@DESKTOP-NNL6EUI",[[-1,496,"nvidia-docker run -it -p 7777:8888 --ipc=host -v /home/username/Projects/:/Projects --name deepo-jupyter ufoym/deepo:all-py36-jupyter"],[1,629,"```bash\nsource ~/.zshrc\n```"]],[496,629],[523,523]]],[1583842692396,["Lau@DESKTOP-NNL6EUI",[[1,496,"nvidia-docker run -it -p 7777:8888 --ipc=host -v /home/username/Projects/:/Projects --name deepo-jupyter ufoym/deepo:all-py36-jupyter"],[-1,496,"```bash\nsource ~/.zshrc\n```"]],[523,523],[496,629]]],[1583843302779,["Lau@DESKTOP-NNL6EUI",[[-1,496,"nvidia-"],[1,515,"-runtime=nvidia -"],[-1,522,"777:8888"],[1,530,"890:7890"],[-1,551,"username/Projects/:/Projects"],[1,579,"liuzh/lau/:/lau"],[-1,593,"jupyter"],[1,600,"all36"],[-1,622,"jupyter"],[1,629,"cu100"]],[496,629],[622,622]]]],null,"Lau@DESKTOP-NNL6EUI"]]}