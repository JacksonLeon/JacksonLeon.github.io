<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GeekJoe</title>
  
  <subtitle>步子大了容易扯着蛋</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jacksonleon.gitee.io/"/>
  <updated>2019-10-10T02:11:18.000Z</updated>
  <id>https://jacksonleon.gitee.io/</id>
  
  <author>
    <name>Joseph</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker 备忘录</title>
    <link href="https://jacksonleon.gitee.io/posts/2180828103.html"/>
    <id>https://jacksonleon.gitee.io/posts/2180828103.html</id>
    <published>2019-10-10T02:11:18.000Z</published>
    <updated>2019-10-10T02:11:18.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-备忘录"><a href="#Docker-备忘录" class="headerlink" title="Docker 备忘录"></a>Docker 备忘录</h1><a id="more"></a><h2 id="使用服务器Docker服务搭建Deepo-jupyter深度学习框架"><a href="#使用服务器Docker服务搭建Deepo-jupyter深度学习框架" class="headerlink" title="使用服务器Docker服务搭建Deepo-jupyter深度学习框架"></a>使用服务器Docker服务搭建Deepo-jupyter深度学习框架</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需要保证服务器已经安装docker以及nvidia-docker</span></span><br><span class="line"><span class="comment"># 首先服务器拉取deepo镜像</span></span><br><span class="line"><span class="comment"># 注意换源，不然会非常慢的</span></span><br><span class="line">docker pull ufoym/deepo:all-py36-jupyter</span><br><span class="line"><span class="comment"># 开启deepo</span></span><br><span class="line"><span class="comment"># -it 保持输入与交互</span></span><br><span class="line"><span class="comment"># -p 端口映射，服务器的7777映射到docker的8888</span></span><br><span class="line"><span class="comment"># -v 文件保存</span></span><br><span class="line"><span class="comment"># --name 设置容器名字</span></span><br><span class="line">nvidia-docker run -it -p 7777:8888 --ipc=host -v /home/username/data/:/data --name deepo-jupyter ufoym/deepo:all-py36-jupyter</span><br><span class="line"><span class="comment"># 注意下次启动直接使用容器，不需要重新创建</span></span><br><span class="line">docker container start deepo-jupyter</span><br><span class="line">docker container attach deepo-jupyter</span><br><span class="line"><span class="comment"># 启动jupyter-notebook</span></span><br><span class="line">jupyter notebook --no-browser --ip=0.0.0.0 --allow-root --NotebookApp.token= --notebook-dir=<span class="string">'/data'</span></span><br><span class="line"><span class="comment"># 如果想在本地机器的浏览器中使用jupyter的话，ssh登录的时候需要指定端口映射</span></span><br><span class="line"><span class="comment"># 本地1234映射到host的127.0.0.1:7777</span></span><br><span class="line">ssh username@host-ip -L 1234:127.0.0.1:7777</span><br><span class="line"><span class="comment"># 设置alias</span></span><br><span class="line"><span class="comment"># 本地</span></span><br><span class="line"><span class="built_in">alias</span> ssh-jupyter=<span class="string">"ssh -p 22 name@ip -L 1234:127.0.0.1:7777"</span></span><br><span class="line"><span class="comment"># host</span></span><br><span class="line"><span class="built_in">alias</span> deepo-jupyter-create=<span class="string">'nvidia-docker run -it -p 7777:8888 --ipc=host -v /home/username/data/:/data --name deepo-jupyter ufoym/deepo:all-py36-jupyter'</span></span><br><span class="line"><span class="built_in">alias</span> deepo-jupyter=<span class="string">'docker container start deepo-jupyter &amp;&amp; docker container attach deepo-jupyter'</span></span><br><span class="line"><span class="comment"># docker-jupyter</span></span><br><span class="line"><span class="built_in">alias</span> deepo-jupyter=<span class="string">'jupyter notebook --no-browser --ip=0.0.0.0 --allow-root --NotebookApp.token= --notebook-dir='</span>\<span class="string">''</span>/data<span class="string">'\'</span><span class="string">''</span></span><br><span class="line"><span class="comment"># enjoy it!</span></span><br><span class="line">127.0.0.1:1234</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-备忘录&quot;&gt;&lt;a href=&quot;#Docker-备忘录&quot; class=&quot;headerlink&quot; title=&quot;Docker 备忘录&quot;&gt;&lt;/a&gt;Docker 备忘录&lt;/h1&gt;
    
    </summary>
    
      <category term="备忘录" scheme="https://jacksonleon.gitee.io/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
    
      <category term="Docker" scheme="https://jacksonleon.gitee.io/tags/Docker/"/>
    
      <category term="备忘录" scheme="https://jacksonleon.gitee.io/tags/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>NLP-1</title>
    <link href="https://jacksonleon.gitee.io/posts/266062298.html"/>
    <id>https://jacksonleon.gitee.io/posts/266062298.html</id>
    <published>2019-09-21T08:46:51.000Z</published>
    <updated>2019-09-21T08:46:51.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="Enter password, and enjoy it!" />    <label for="hbePass">Enter password, and enjoy it!</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="c4f6256286d5f4cb195e1aec0d29d488e07b9b2b4998fd1ac249c7ea9b5219fd"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Password is needed for this post.
    
    </summary>
    
      <category term="NLP" scheme="https://jacksonleon.gitee.io/categories/NLP/"/>
    
    
      <category term="NLP" scheme="https://jacksonleon.gitee.io/tags/NLP/"/>
    
      <category term="Reproduce" scheme="https://jacksonleon.gitee.io/tags/Reproduce/"/>
    
  </entry>
  
  <entry>
    <title>NLP-0</title>
    <link href="https://jacksonleon.gitee.io/posts/3233814797.html"/>
    <id>https://jacksonleon.gitee.io/posts/3233814797.html</id>
    <published>2019-09-21T08:31:45.000Z</published>
    <updated>2019-09-21T08:31:45.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="Enter password, and enjoy it!" />    <label for="hbePass">Enter password, and enjoy it!</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="3eb99583dcc472a885d4754e691751ae26817aaec858fc114b96cdc4535cc822"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Password is needed for this post.
    
    </summary>
    
      <category term="NLP" scheme="https://jacksonleon.gitee.io/categories/NLP/"/>
    
    
      <category term="NLP" scheme="https://jacksonleon.gitee.io/tags/NLP/"/>
    
      <category term="Reproduce" scheme="https://jacksonleon.gitee.io/tags/Reproduce/"/>
    
  </entry>
  
  <entry>
    <title>Manjaro备忘录</title>
    <link href="https://jacksonleon.gitee.io/posts/1396604906.html"/>
    <id>https://jacksonleon.gitee.io/posts/1396604906.html</id>
    <published>2019-09-14T13:48:52.000Z</published>
    <updated>2019-09-14T13:48:52.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Manjaro备忘录"><a href="#Manjaro备忘录" class="headerlink" title="Manjaro备忘录"></a>Manjaro备忘录</h1><a id="more"></a><h3 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h3><p>manjaro KDE版，rufus，DD模式，英文，nonfree。<br><a href="https://manjaro.org/download/kde/" target="_blank" rel="noopener">manjaro</a>、<a href="https://rufus.ie/" target="_blank" rel="noopener">rufus</a></p><h3 id="更改pacman镜像"><a href="#更改pacman镜像" class="headerlink" title="更改pacman镜像"></a>更改pacman镜像</h3><p>manjaro基于arch，用pacman做软件包管理，但是由于众所周知的原因，国内连接国外镜像非常慢，因此需要更改为国内镜像。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 利用pacman-mirrors选择镜像，或者手动在/etc/pacman.d/mirrorlist里添加</span><br><span class="line">sudo pacman -S pacman-mirrors</span><br><span class="line"># 中国区镜像排序，一般选择前两个镜像</span><br><span class="line">sudo pacman-mirrors -i -c China -m rank</span><br></pre></td></tr></table></figure><h3 id="同步更新"><a href="#同步更新" class="headerlink" title="同步更新"></a>同步更新</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Syy</span><br><span class="line">sudo pacman -Syu</span><br></pre></td></tr></table></figure><h3 id="添加Arch-Linux-中文社区仓库"><a href="#添加Arch-Linux-中文社区仓库" class="headerlink" title="添加Arch Linux 中文社区仓库"></a>添加Arch Linux 中文社区仓库</h3><p>在 <code>/etc/pacman.conf</code> 文件末尾添加以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line"># SigLevel = Optional TrustedOnly</span><br><span class="line">SigLevel = Optional TrustAll</span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch</span><br></pre></td></tr></table></figure><h3 id="ZSH"><a href="#ZSH" class="headerlink" title="ZSH"></a>ZSH</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装zsh</span></span><br><span class="line">sudo  pacman -S zsh</span><br><span class="line"><span class="comment"># 安装oh-my-zsh</span></span><br><span class="line">sh -c <span class="string">"<span class="variable">$wget</span> https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)”</span></span><br><span class="line"><span class="string"># 使用zsh替换bash</span></span><br><span class="line"><span class="string">chsh -s /bin/zsh</span></span><br><span class="line"><span class="string"># 修改.zshrc主题</span></span><br><span class="line"><span class="string">ZSH_THEME="</span>agnoster<span class="string">"</span></span><br><span class="line"><span class="string"># zsh-autosuggestions 和 zsh-syntax-highlighting</span></span><br><span class="line"><span class="string">sudo pacman -S zsh-autosuggestions zsh-syntax-highlighting</span></span><br><span class="line"><span class="string">vim ~/.zshrc</span></span><br><span class="line"><span class="string"># 加入</span></span><br><span class="line"><span class="string">source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh</span></span><br><span class="line"><span class="string">source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</span></span><br></pre></td></tr></table></figure><h3 id="移除Octopi换Pamac"><a href="#移除Octopi换Pamac" class="headerlink" title="移除Octopi换Pamac"></a>移除Octopi换Pamac</h3><p>KDE自带的软件管理器octopi比较丑，可以换另一个管理器pamac。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 安装pamac</span><br><span class="line">sudo pacman -S pamac</span><br></pre></td></tr></table></figure><p>打开pamac，搜索octopi，移除所有octopi相关的orphan依赖包。</p><h3 id="安装yay"><a href="#安装yay" class="headerlink" title="安装yay"></a>安装yay</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S yay</span><br><span class="line">yay --aururl &quot;https://aur.tuna.tsinghua.edu.cn&quot; --save</span><br></pre></td></tr></table></figure><h3 id="中文输入法"><a href="#中文输入法" class="headerlink" title="中文输入法"></a>中文输入法</h3><p>安装中文谷歌拼音输入法和字体</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S adobe-source-han-sans-cn-fonts adobe-source-han-serif-cn-fonts</span><br><span class="line">sudo pacman -S fcitx fcitx-googlepinyin fcitx-im fcitx-configtool</span><br><span class="line"><span class="comment"># 编辑 ~/.xinitrc</span></span><br><span class="line"><span class="built_in">export</span> GTK_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> QT_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> XMODIFIERS=<span class="string">"@im=fcitx"</span></span><br><span class="line"><span class="comment"># exec放到最后</span></span><br><span class="line"><span class="comment"># 重新登录后，在开始菜单System里找到Input Method设置，添加谷歌拼音输入法</span></span><br></pre></td></tr></table></figure><h3 id="Clash-for-Manajro"><a href="#Clash-for-Manajro" class="headerlink" title="Clash for Manajro"></a>Clash for Manajro</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ pacs clash</span><br><span class="line">community/haskell-clash-prelude 0.99.3-66</span><br><span class="line">CAES Language <span class="keyword">for</span> Synchronous Hardware - Prelude library</span><br><span class="line">archlinuxcn/clash 0.15.0-5</span><br><span class="line">A rule based proxy <span class="keyword">in</span> Go</span><br><span class="line">$ sudo pacman -S clash</span><br><span class="line">$ <span class="built_in">cd</span> ~/.config/clash</span><br><span class="line">$ mv your-config.yaml config.yaml</span><br><span class="line"><span class="comment"># 下载Country.mmdb</span></span><br><span class="line"><span class="comment"># 地址：https://drop.me/Brbk0r</span></span><br><span class="line">$ mv ~/Download/Country.mmdb Country.mmdb</span><br><span class="line"><span class="comment"># 运行clash</span></span><br><span class="line">$ clash -d ~/.config/clash</span><br><span class="line"><span class="comment"># 重新启动 clash-linux 以加载配置文件，可通过 http://clash.razord.top/ 或者 http://yacd.haishan.me/#/ 进行策略组节点的切换，连接的 ip 和端口根据自己的 config.yml 中的external-controller填写</span></span><br><span class="line"><span class="comment"># 开机启动</span></span><br><span class="line">在设置-》工作区-》开机和关机-》自动启动中添加程序，命令为：/usr/bin/clash -d ~/.config/clash</span><br><span class="line">$ ps aux | grep clash | grep -v grep</span><br></pre></td></tr></table></figure><h3 id="全局截图"><a href="#全局截图" class="headerlink" title="全局截图"></a>全局截图</h3><p>使用<code>deepin-screenshot</code>截图工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S deepin-screenshot</span><br></pre></td></tr></table></figure><p>配置系统快捷键，在【系统设置】-【工作区】-【自定义快捷键】中，点击【编辑】-【新建】-【全局快捷键】-【命令/URL：】，然后填写动作名称，如我这里是<code>Deepin截图</code>,然后分别填写注释（非必须）、触发器（win+shift+s）和动作（deepin-screenshot）。</p><h3 id="类Unity全局菜单"><a href="#类Unity全局菜单" class="headerlink" title="类Unity全局菜单"></a>类Unity全局菜单</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S appmenu-gtk-module libdbusmenu-glib</span><br></pre></td></tr></table></figure><p>添加部件中选择全局菜单，并放置到合适的位置。</p><p><img src="https://i.loli.net/2019/09/18/5BGNWUpszb2RSPm.png" alt="深度截图_20190917232323"></p><p>改进后：</p><p><img src="https://i.loli.net/2019/09/18/qiLNC4csk5dHzGr.png" alt="globalmenu_2019091822134.png"></p><p>安装<code>plasma5-applets-active-window-control</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S plasma5-applets-active-window-control</span><br></pre></td></tr></table></figure><p>配置配件：</p><p>添加部件到全局菜单左边：</p><p><img src="https://i.loli.net/2019/09/18/hxivZdApwrt1kTY.png" style="zoom: 67%;"></p><p>配置软件：</p><p><img src="https://i.loli.net/2019/09/18/RH4TNgBhfEGpQxw.png" style="zoom:80%;"><img src="https://i.loli.net/2019/09/18/GmAY8Tq7cCZ3DSk.png" style="zoom:80%;"></p><h3 id="终端走代理"><a href="#终端走代理" class="headerlink" title="终端走代理"></a>终端走代理</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><p>在终端中直接运行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export http_proxy=http://proxyAddress:port</span><br></pre></td></tr></table></figure><p>这个办法的好处是简单直接，并且影响面很小（只对当前终端有效，退出就不行了）。</p><p>如果你用的是ss代理，在当前终端运行以下命令，那么<code>wget</code> <code>curl</code> 这类网络命令都会经过ss代理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export ALL_PROXY=socks5://127.0.0.1:1080</span><br></pre></td></tr></table></figure><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>把代理服务器地址写入shell配置文件<code>.bashrc</code>或者<code>.zshrc</code></p><p>直接在<code>.bashrc</code>或者<code>.zshrc</code>添加下面内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export http_proxy=&quot;http://localhost:port&quot;</span><br><span class="line">export https_proxy=&quot;http://localhost:port&quot;</span><br></pre></td></tr></table></figure><p>以使用shadowsocks代理为例，ss的代理端口为<code>1080</code>,那么应该设置为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export http_proxy=&quot;socks5://127.0.0.1:1080&quot;</span><br><span class="line">export https_proxy=&quot;socks5://127.0.0.1:1080&quot;</span><br></pre></td></tr></table></figure><p>或者直接设置ALL_PROXY</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export ALL_PROXY=socks5://127.0.0.1:1080</span><br></pre></td></tr></table></figure><p><code>localhost</code>就是一个域名，域名默认指向 <code>127.0.0.1</code>，两者是一样的。</p><p>然后<code>ESC</code>后<code>:wq</code>保存文件，接着在终端中执行<br><code>source ~/.bashrc</code></p><p>或者退出当前终端再起一个终端。 这个办法的好处是把代理服务器永久保存了，下次就可以直接用了。</p><p>或者通过设置alias简写来简化操作，每次要用的时候输入<code>setproxy</code>，不用了就<code>unsetproxy</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alias setproxy=&quot;export ALL_PROXY=socks5://127.0.0.1:1080&quot;</span><br><span class="line">alias unsetproxy=&quot;unset ALL_PROXY&quot;</span><br><span class="line">alias ip=&quot;curl -i http://ip.cn&quot;</span><br></pre></td></tr></table></figure><h3 id="Alias"><a href="#Alias" class="headerlink" title="Alias"></a>Alias</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑~/.zshrc或者/etc/zsh/zprofile，前面的是对应当前用户，后面的对应全局用户</span></span><br><span class="line"><span class="comment"># 或者直接在终端中输入，不过重启后会失效</span></span><br><span class="line"><span class="comment"># pacman aliases</span></span><br><span class="line"><span class="built_in">alias</span> pac=<span class="string">'sudo pacman -S'</span>   <span class="comment"># install</span></span><br><span class="line"><span class="built_in">alias</span> pacu=<span class="string">'sudo pacman -Syu'</span><span class="comment"># upgrade, add 'a' to the list of letters to update AUR packages if you use yaourt</span></span><br><span class="line"><span class="built_in">alias</span> pacy=<span class="string">'sudo pacman -Sy'</span><span class="comment"># update</span></span><br><span class="line"><span class="built_in">alias</span> pacr=<span class="string">'sudo pacman -R'</span><span class="comment"># remove </span></span><br><span class="line"><span class="built_in">alias</span> pacs=<span class="string">'sudo pacman -Ss'</span><span class="comment"># search packages</span></span><br><span class="line"><span class="built_in">alias</span> paci=<span class="string">'sudo pacman -Si'</span><span class="comment"># info</span></span><br><span class="line"><span class="built_in">alias</span> paclo=<span class="string">'sudo pacman -Qdt'</span><span class="comment"># list orphans</span></span><br><span class="line"><span class="built_in">alias</span> pacro=<span class="string">'paclo &amp;&amp; sudo pacman -Rns $(sudo pacman -Qtdq)'</span> <span class="comment"># remove orphans</span></span><br><span class="line"><span class="built_in">alias</span> pacc=<span class="string">'sudo pacman -Scc'</span><span class="comment"># clean cache</span></span><br><span class="line"><span class="built_in">alias</span> paclf=<span class="string">'sudo pacman -Ql'</span><span class="comment"># list files</span></span><br><span class="line"><span class="comment"># proxy</span></span><br><span class="line"><span class="built_in">alias</span> setproxy=<span class="string">"export ALL_PROXY=socks5://127.0.0.1:1080"</span></span><br><span class="line"><span class="built_in">alias</span> unsetproxy=<span class="string">"unset ALL_PROXY"</span></span><br><span class="line"><span class="built_in">alias</span> ip=<span class="string">"curl -i http://ip.cn"</span></span><br><span class="line"><span class="comment"># NVIDIA driver</span></span><br><span class="line"><span class="built_in">alias</span> nv_on=<span class="string">"sudo tee /proc/acpi/bbswitch &lt;&lt;&lt; ON"</span></span><br><span class="line"><span class="built_in">alias</span> nv_off=<span class="string">"sudo tee /proc/acpi/bbswitch &lt;&lt;&lt; OFF"</span></span><br><span class="line"><span class="built_in">alias</span> nv_setting=<span class="string">"optirun -b none nvidia-settings -c :8"</span></span><br><span class="line"><span class="comment"># 其他</span></span><br></pre></td></tr></table></figure><h3 id="Deepin-TIM"><a href="#Deepin-TIM" class="headerlink" title="Deepin TIM"></a>Deepin TIM</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Tim on KDE</span></span><br><span class="line">sudo pacman -S gnome-settings-daemon</span><br><span class="line"><span class="comment"># 在非gnome桌面下安装gnome的套件。</span></span><br><span class="line"><span class="comment"># deepin-wine可能调用到某些功能。</span></span><br><span class="line">cp /etc/xdg/autostart/org.gnome.SettingsDaemon.XSettings.desktop ~/.config/autostart/</span><br><span class="line"><span class="comment"># 加入到用户开机自启的配置</span></span><br><span class="line">sudo pacman -S deepin.com.qq.office</span><br></pre></td></tr></table></figure><h3 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S chromium</span><br><span class="line">sudo pacman -S vlc</span><br><span class="line">sudo pacman -S visual-studio-code-bin</span><br><span class="line">sudo pacman -S typora</span><br><span class="line">sudo pacman -S vim</span><br><span class="line">sudo pacman -S netease-cloud-music</span><br><span class="line"><span class="comment"># 分辨率以及多显示器</span></span><br><span class="line">sudo pacman -S kscreen</span><br></pre></td></tr></table></figure><h3 id="NVIDIA驱动（non-free-Bumblebee）"><a href="#NVIDIA驱动（non-free-Bumblebee）" class="headerlink" title="NVIDIA驱动（non-free,Bumblebee）"></a>NVIDIA驱动（non-free,Bumblebee）</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S bumblebee bbswitch<span class="comment"># 安装bumblebee</span></span><br><span class="line">sudo gpasswd -a username bumblebee<span class="comment"># 将当前用户添加到bumblebee组中</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> bumblebeed.service<span class="comment"># 启用服务</span></span><br><span class="line"><span class="comment"># 转自ArchLinux Wiki</span></span><br><span class="line"><span class="comment"># 在64位的操作系统上，假如您想32位的程序发挥好nvidia-utils的优势，还必须启用multilib源来安装lib32的包(例如lib32-nvidia-utils, lib32-nvidia-340xx-utils AUR 或者 lib32-nvidia-304xx-utils)。</span></span><br><span class="line"><span class="comment"># 启用multilib源</span></span><br><span class="line"><span class="comment"># 对于multilib这个源，我们只需要简单的将/etc/pacman.conf中的multilib的注释取消了就行</span></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">sudo pacman -S bumblebee nvidia opencl-nvidia lib32-nvidia-utils lib32-opencl-nvidia mesa lib32-mesa-libgl xf86-video-intel</span><br><span class="line"><span class="comment"># 配置bumblebee：</span></span><br><span class="line"><span class="comment"># 编辑/etc/bumblebee/bumblebee.conf</span></span><br><span class="line">Driver=nvidia</span><br><span class="line">-----------------</span><br><span class="line">[driver-nvidia]</span><br><span class="line">PMMethod=bbswitch</span><br><span class="line"><span class="comment"># 重启电脑</span></span><br><span class="line">reboot</span><br><span class="line"><span class="comment"># 开启NVIDIA显卡</span></span><br><span class="line">sudo tee /proc/acpi/bbswitch &lt;&lt;&lt; ON<span class="comment">#关闭则是off</span></span><br><span class="line"><span class="comment"># 查看显卡状态</span></span><br><span class="line">nvidia-smi</span><br><span class="line"><span class="comment"># 启动nvidia-settings</span></span><br><span class="line">optirun -b none nvidia-settings -c :8<span class="comment">#正常使用nvidia-settings是启动不了的，需要用optirun调用</span></span><br><span class="line"><span class="comment"># 测试一下</span></span><br><span class="line">sudo tee /proc/acpi/bbswitch &lt;&lt;&lt; ON<span class="comment"># 需要开启NVIDIA显卡</span></span><br><span class="line">nvidia-smi</span><br><span class="line">Mon Sep 23 21:38:32 2019</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 430.40       Driver Version: 430.40       CUDA Version: 10.1     |</span><br><span class="line">|-------------------------------+----------------------+----------------------+</span><br><span class="line">| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|===============================+======================+======================|</span><br><span class="line">|   0  GeForce GTX 950M    Off  | 00000000:01:00.0 Off |                  N/A |</span><br><span class="line">| N/A   37C    P0    N/A /  N/A |      0MiB /  2004MiB |      1%      Default |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| Processes:                                                       GPU Memory |</span><br><span class="line">|  GPU       PID   Type   Process name                             Usage      |</span><br><span class="line">|=============================================================================|</span><br><span class="line">|  No running processes found                                                 |</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><h4 id="单击打开文件"><a href="#单击打开文件" class="headerlink" title="单击打开文件"></a>单击打开文件</h4><p>KDE 默认是单击打开文件，但是用习惯 Windows 的我们肯定是不习惯的：</p><p><code>System Settings &gt; Desktop Behavior &gt; Workspace &gt; Click Behavior &gt; Double-Click to open files and folders(single click to select)</code> </p><h4 id="Realtek-RTL8111-8168-8411偶尔崩溃"><a href="#Realtek-RTL8111-8168-8411偶尔崩溃" class="headerlink" title="Realtek RTL8111/8168/8411偶尔崩溃"></a>Realtek RTL8111/8168/8411偶尔崩溃</h4><p>以前的内核是比较适合使用r8168这个驱动的，用r8169会崩溃，所以一般会有一个黑名单文件直接将r8169禁用了。但是现在情况反了过来，r8169驱动对于新的内核支持的比较好，所以可以将黑名单修改一下，并卸载r8168驱动，重启就可以了。</p><p>在<code>/etc/modprobe.d</code>文件夹下，将<code>r8169_blacklist.conf</code>这个文件名修改为<code>r8168_blacklist.conf</code>，里面的内容修改为<code>blacklist r8168</code>。</p><p>重启就好了。</p><h3 id="NVIDIA驱动"><a href="#NVIDIA驱动" class="headerlink" title="NVIDIA驱动"></a><del>NVIDIA驱动</del></h3><p><del>首先上 <a href="https://www.nvidia.cn/Download/index.aspx?lang=cn" target="_blank" rel="noopener">NVIDIA</a> 官网下载自己的显卡驱动，操作系统选择 <code>Linux 64-bit</code>。下载下来的文件应该是一个扩展名为 <code>.run</code> 的文件，将它存放至 <code>~/</code> 或者其他目录。</del></p><p><del>我们还需要安装开发工具以及内核头文件来编译驱动，首先是内核头文件，先检查自己的内核版本。</del></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ uname -r</span><br><span class="line">4.19.69-1-MANJARO</span><br></pre></td></tr></table></figure><p><del>我们需要安装的内核头文件则是<code>linux419-headers</code>:</del></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S linux419-headers</span><br></pre></td></tr></table></figure><p><del>接着安装开发工具，出现选项时直接按下 <code>回车键</code> 安装全部。</del></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S base-devel dkms</span><br></pre></td></tr></table></figure><p><del>禁用 Nouveau 开源驱动：</del></p><p><del>编辑 <code>/etc/default/grub</code> Grub 配置文件</del><br><del>将 <code>GRUB_CMDLINE_LINUX</code> 开头的那一行改为 <code>GRUB_CMDLINE_LINUX=&quot;nouveau.modeset=0&quot;</code>。</del><br><del>完成之后更新grub</del></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo update-grub</span><br><span class="line"># 重启</span><br><span class="line">$ sudo reboot</span><br><span class="line">#重启之后，由于没有显卡驱动的支持，可能会卡在 BIOS Logo 界面或者是黑屏。这个时候你需要按下 ALT + CTRL + F2 进入到 TTY 文本模式。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 运行，全部yes</span><br><span class="line">$ chmod +777 NVIDIA-Linux-x86_64-430.50.run</span><br><span class="line">$ sudo ./NVIDIA-Linux-x86_64-430.50.run</span><br><span class="line"># 重启</span><br><span class="line">$ sudo reboot</span><br></pre></td></tr></table></figure><p><del>测试一下：</del></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ nvidia-smi</span><br><span class="line">Sun Sep 15 17:25:02 2019       </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 430.50       Driver Version: 430.50       CUDA Version: 10.1     |</span><br><span class="line">|-------------------------------+----------------------+----------------------+</span><br><span class="line">| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|===============================+======================+======================|</span><br><span class="line">|   0  GeForce GTX 950M    Off  | 00000000:01:00.0 Off |                  N/A |</span><br><span class="line">| N/A   37C    P0    N/A /  N/A |      0MiB /  2004MiB |      0%      Default |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">                                                                               </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| Processes:                                                       GPU Memory |</span><br><span class="line">|  GPU       PID   Type   Process name                             Usage      |</span><br><span class="line">|=============================================================================|</span><br><span class="line">|  No running processes found                                                 |</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure><h3 id="SSD配置"><a href="#SSD配置" class="headerlink" title="SSD配置"></a>SSD配置</h3><p>如果安装在SSD上，可以选择以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable fstrim.timer</span><br><span class="line">sudo systemctl start fstrim.timer</span><br></pre></td></tr></table></figure><h3 id="miniconda"><a href="#miniconda" class="headerlink" title="miniconda"></a>miniconda</h3><p>我使用miniconda管理环境并安装python相关package。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</span><br><span class="line">sh Miniconda3-latest-Linux-x86_64.sh </span><br><span class="line"></span><br><span class="line"># 编辑 ~/.zshrc,在最后添加如下环境变量（注意PATH要在前面）</span><br><span class="line">export PATH=&quot;$PATH:$HOME/miniconda3/bin&quot;</span><br><span class="line"></span><br><span class="line"># 编辑完成后</span><br><span class="line">source .zshrc</span><br><span class="line"></span><br><span class="line"># 测试成功</span><br><span class="line">conda -V</span><br></pre></td></tr></table></figure><h4 id="更改miniconda的pypi镜像"><a href="#更改miniconda的pypi镜像" class="headerlink" title="更改miniconda的pypi镜像"></a>更改miniconda的pypi镜像</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 进入base环境或新建的python环境</span><br><span class="line">source activate</span><br><span class="line"></span><br><span class="line">pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><h3 id="安装pytorch和tensorflow"><a href="#安装pytorch和tensorflow" class="headerlink" title="安装pytorch和tensorflow"></a>安装pytorch和tensorflow</h3><p>manjaro的cuda（10.1）和cudnn（7.5）版本都是最新的，pytorch和tensorflow没有对应的二进制版本，pip不好用。最简单的方式是使用conda安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 安装cuda和cudnn</span><br><span class="line">sudo pacman -S cuda cudnn</span><br><span class="line"></span><br><span class="line"># 进入conda环境，py36是我的python3.6.5环境</span><br><span class="line">source activate py36</span><br><span class="line"></span><br><span class="line">conda install tensorflow-gpu</span><br><span class="line">conda install pytorch torchvision cudatoolkit=10.0 -c pytorch</span><br></pre></td></tr></table></figure><h3 id="alias"><a href="#alias" class="headerlink" title="alias"></a>alias</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alias -L</span></span><br><span class="line"><span class="built_in">alias</span> -- -=<span class="string">'cd -'</span></span><br><span class="line"><span class="built_in">alias</span> -g ...=../..</span><br><span class="line"><span class="built_in">alias</span> -g ....=../../..</span><br><span class="line"><span class="built_in">alias</span> -g .....=../../../..</span><br><span class="line"><span class="built_in">alias</span> -g ......=../../../../..</span><br><span class="line"><span class="built_in">alias</span> 1=<span class="string">'cd -'</span></span><br><span class="line"><span class="built_in">alias</span> 2=<span class="string">'cd -2'</span></span><br><span class="line"><span class="built_in">alias</span> 3=<span class="string">'cd -3'</span></span><br><span class="line"><span class="built_in">alias</span> 4=<span class="string">'cd -4'</span></span><br><span class="line"><span class="built_in">alias</span> 5=<span class="string">'cd -5'</span></span><br><span class="line"><span class="built_in">alias</span> 6=<span class="string">'cd -6'</span></span><br><span class="line"><span class="built_in">alias</span> 7=<span class="string">'cd -7'</span></span><br><span class="line"><span class="built_in">alias</span> 8=<span class="string">'cd -8'</span></span><br><span class="line"><span class="built_in">alias</span> 9=<span class="string">'cd -9'</span></span><br><span class="line"><span class="built_in">alias</span> _=sudo</span><br><span class="line"><span class="built_in">alias</span> afind=<span class="string">'ack -il'</span></span><br><span class="line"><span class="built_in">alias</span> g=git</span><br><span class="line"><span class="built_in">alias</span> ga=<span class="string">'git add'</span></span><br><span class="line"><span class="built_in">alias</span> gaa=<span class="string">'git add --all'</span></span><br><span class="line"><span class="built_in">alias</span> gap=<span class="string">'git apply'</span></span><br><span class="line"><span class="built_in">alias</span> gapa=<span class="string">'git add --patch'</span></span><br><span class="line"><span class="built_in">alias</span> gau=<span class="string">'git add --update'</span></span><br><span class="line"><span class="built_in">alias</span> gav=<span class="string">'git add --verbose'</span></span><br><span class="line"><span class="built_in">alias</span> gb=<span class="string">'git branch'</span></span><br><span class="line"><span class="built_in">alias</span> gbD=<span class="string">'git branch -D'</span></span><br><span class="line"><span class="built_in">alias</span> gba=<span class="string">'git branch -a'</span></span><br><span class="line"><span class="built_in">alias</span> gbd=<span class="string">'git branch -d'</span></span><br><span class="line"><span class="built_in">alias</span> gbda=<span class="string">'git branch --no-color --merged | command grep -vE "^(\+|\*|\s*(master|develop|dev)\s*$)" | command xargs -n 1 git branch -d'</span></span><br><span class="line"><span class="built_in">alias</span> gbl=<span class="string">'git blame -b -w'</span></span><br><span class="line"><span class="built_in">alias</span> gbnm=<span class="string">'git branch --no-merged'</span></span><br><span class="line"><span class="built_in">alias</span> gbr=<span class="string">'git branch --remote'</span></span><br><span class="line"><span class="built_in">alias</span> gbs=<span class="string">'git bisect'</span></span><br><span class="line"><span class="built_in">alias</span> gbsb=<span class="string">'git bisect bad'</span></span><br><span class="line"><span class="built_in">alias</span> gbsg=<span class="string">'git bisect good'</span></span><br><span class="line"><span class="built_in">alias</span> gbsr=<span class="string">'git bisect reset'</span></span><br><span class="line"><span class="built_in">alias</span> gbss=<span class="string">'git bisect start'</span></span><br><span class="line"><span class="built_in">alias</span> gc=<span class="string">'git commit -v'</span></span><br><span class="line"><span class="built_in">alias</span> <span class="string">'gc!'</span>=<span class="string">'git commit -v --amend'</span></span><br><span class="line"><span class="built_in">alias</span> gca=<span class="string">'git commit -v -a'</span></span><br><span class="line"><span class="built_in">alias</span> <span class="string">'gca!'</span>=<span class="string">'git commit -v -a --amend'</span></span><br><span class="line"><span class="built_in">alias</span> gcam=<span class="string">'git commit -a -m'</span></span><br><span class="line"><span class="built_in">alias</span> <span class="string">'gcan!'</span>=<span class="string">'git commit -v -a --no-edit --amend'</span></span><br><span class="line"><span class="built_in">alias</span> <span class="string">'gcans!'</span>=<span class="string">'git commit -v -a -s --no-edit --amend'</span></span><br><span class="line"><span class="built_in">alias</span> gcb=<span class="string">'git checkout -b'</span></span><br><span class="line"><span class="built_in">alias</span> gcd=<span class="string">'git checkout develop'</span></span><br><span class="line"><span class="built_in">alias</span> gcf=<span class="string">'git config --list'</span></span><br><span class="line"><span class="built_in">alias</span> gcl=<span class="string">'git clone --recurse-submodules'</span></span><br><span class="line"><span class="built_in">alias</span> gclean=<span class="string">'git clean -id'</span></span><br><span class="line"><span class="built_in">alias</span> gcm=<span class="string">'git checkout master'</span></span><br><span class="line"><span class="built_in">alias</span> gcmsg=<span class="string">'git commit -m'</span></span><br><span class="line"><span class="built_in">alias</span> <span class="string">'gcn!'</span>=<span class="string">'git commit -v --no-edit --amend'</span></span><br><span class="line"><span class="built_in">alias</span> gco=<span class="string">'git checkout'</span></span><br><span class="line"><span class="built_in">alias</span> gcount=<span class="string">'git shortlog -sn'</span></span><br><span class="line"><span class="built_in">alias</span> gcp=<span class="string">'git cherry-pick'</span></span><br><span class="line"><span class="built_in">alias</span> gcpa=<span class="string">'git cherry-pick --abort'</span></span><br><span class="line"><span class="built_in">alias</span> gcpc=<span class="string">'git cherry-pick --continue'</span></span><br><span class="line"><span class="built_in">alias</span> gcs=<span class="string">'git commit -S'</span></span><br><span class="line"><span class="built_in">alias</span> gcsm=<span class="string">'git commit -s -m'</span></span><br><span class="line"><span class="built_in">alias</span> gd=<span class="string">'git diff'</span></span><br><span class="line"><span class="built_in">alias</span> gdca=<span class="string">'git diff --cached'</span></span><br><span class="line"><span class="built_in">alias</span> gdct=<span class="string">'git describe --tags $(git rev-list --tags --max-count=1)'</span></span><br><span class="line"><span class="built_in">alias</span> gdcw=<span class="string">'git diff --cached --word-diff'</span></span><br><span class="line"><span class="built_in">alias</span> gds=<span class="string">'git diff --staged'</span></span><br><span class="line"><span class="built_in">alias</span> gdt=<span class="string">'git diff-tree --no-commit-id --name-only -r'</span></span><br><span class="line"><span class="built_in">alias</span> gdw=<span class="string">'git diff --word-diff'</span></span><br><span class="line"><span class="built_in">alias</span> gf=<span class="string">'git fetch'</span></span><br><span class="line"><span class="built_in">alias</span> gfa=<span class="string">'git fetch --all --prune'</span></span><br><span class="line"><span class="built_in">alias</span> gfg=<span class="string">'git ls-files | grep'</span></span><br><span class="line"><span class="built_in">alias</span> gfo=<span class="string">'git fetch origin'</span></span><br><span class="line"><span class="built_in">alias</span> gg=<span class="string">'git gui citool'</span></span><br><span class="line"><span class="built_in">alias</span> gga=<span class="string">'git gui citool --amend'</span></span><br><span class="line"><span class="built_in">alias</span> ggpull=<span class="string">'git pull origin "$(git_current_branch)"'</span></span><br><span class="line"><span class="built_in">alias</span> ggpur=ggu</span><br><span class="line"><span class="built_in">alias</span> ggpush=<span class="string">'git push origin "$(git_current_branch)"'</span></span><br><span class="line"><span class="built_in">alias</span> ggsup=<span class="string">'git branch --set-upstream-to=origin/$(git_current_branch)'</span></span><br><span class="line"><span class="built_in">alias</span> ghh=<span class="string">'git help'</span></span><br><span class="line"><span class="built_in">alias</span> gignore=<span class="string">'git update-index --assume-unchanged'</span></span><br><span class="line"><span class="built_in">alias</span> gignored=<span class="string">'git ls-files -v | grep "^[[:lower:]]"'</span></span><br><span class="line"><span class="built_in">alias</span> git-svn-dcommit-push=<span class="string">'git svn dcommit &amp;&amp; git push github master:svntrunk'</span></span><br><span class="line"><span class="built_in">alias</span> gk=<span class="string">'\gitk --all --branches'</span></span><br><span class="line"><span class="built_in">alias</span> gke=<span class="string">'\gitk --all $(git log -g --pretty=%h)'</span></span><br><span class="line"><span class="built_in">alias</span> gl=<span class="string">'git pull'</span></span><br><span class="line"><span class="built_in">alias</span> glg=<span class="string">'git log --stat'</span></span><br><span class="line"><span class="built_in">alias</span> glgg=<span class="string">'git log --graph'</span></span><br><span class="line"><span class="built_in">alias</span> glgga=<span class="string">'git log --graph --decorate --all'</span></span><br><span class="line"><span class="built_in">alias</span> glgm=<span class="string">'git log --graph --max-count=10'</span></span><br><span class="line"><span class="built_in">alias</span> glgp=<span class="string">'git log --stat -p'</span></span><br><span class="line"><span class="built_in">alias</span> glo=<span class="string">'git log --oneline --decorate'</span></span><br><span class="line"><span class="built_in">alias</span> globurl=<span class="string">'noglob urlglobber '</span></span><br><span class="line"><span class="built_in">alias</span> glod=<span class="string">'git log --graph --pretty='</span>\<span class="string">''</span>%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)&lt;%an&gt;%Creset<span class="string">'\'</span></span><br><span class="line"><span class="built_in">alias</span> glods=<span class="string">'git log --graph --pretty='</span>\<span class="string">''</span>%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)&lt;%an&gt;%Creset<span class="string">'\'</span><span class="string">' --date=short'</span></span><br><span class="line"><span class="built_in">alias</span> glog=<span class="string">'git log --oneline --decorate --graph'</span></span><br><span class="line"><span class="built_in">alias</span> gloga=<span class="string">'git log --oneline --decorate --graph --all'</span></span><br><span class="line"><span class="built_in">alias</span> glol=<span class="string">'git log --graph --pretty='</span>\<span class="string">''</span>%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset<span class="string">'\'</span></span><br><span class="line"><span class="built_in">alias</span> glola=<span class="string">'git log --graph --pretty='</span>\<span class="string">''</span>%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset<span class="string">'\'</span><span class="string">' --all'</span></span><br><span class="line"><span class="built_in">alias</span> glols=<span class="string">'git log --graph --pretty='</span>\<span class="string">''</span>%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset<span class="string">'\'</span><span class="string">' --stat'</span></span><br><span class="line"><span class="built_in">alias</span> glp=_git_log_prettily</span><br><span class="line"><span class="built_in">alias</span> glum=<span class="string">'git pull upstream master'</span></span><br><span class="line"><span class="built_in">alias</span> gm=<span class="string">'git merge'</span></span><br><span class="line"><span class="built_in">alias</span> gma=<span class="string">'git merge --abort'</span></span><br><span class="line"><span class="built_in">alias</span> gmom=<span class="string">'git merge origin/master'</span></span><br><span class="line"><span class="built_in">alias</span> gmt=<span class="string">'git mergetool --no-prompt'</span></span><br><span class="line"><span class="built_in">alias</span> gmtvim=<span class="string">'git mergetool --no-prompt --tool=vimdiff'</span></span><br><span class="line"><span class="built_in">alias</span> gmum=<span class="string">'git merge upstream/master'</span></span><br><span class="line"><span class="built_in">alias</span> gp=<span class="string">'git push'</span></span><br><span class="line"><span class="built_in">alias</span> gpd=<span class="string">'git push --dry-run'</span></span><br><span class="line"><span class="built_in">alias</span> gpf=<span class="string">'git push --force-with-lease'</span></span><br><span class="line"><span class="built_in">alias</span> <span class="string">'gpf!'</span>=<span class="string">'git push --force'</span></span><br><span class="line"><span class="built_in">alias</span> gpoat=<span class="string">'git push origin --all &amp;&amp; git push origin --tags'</span></span><br><span class="line"><span class="built_in">alias</span> gpristine=<span class="string">'git reset --hard &amp;&amp; git clean -dfx'</span></span><br><span class="line"><span class="built_in">alias</span> gpsup=<span class="string">'git push --set-upstream origin $(git_current_branch)'</span></span><br><span class="line"><span class="built_in">alias</span> gpu=<span class="string">'git push upstream'</span></span><br><span class="line"><span class="built_in">alias</span> gpv=<span class="string">'git push -v'</span></span><br><span class="line"><span class="built_in">alias</span> gr=<span class="string">'git remote'</span></span><br><span class="line"><span class="built_in">alias</span> gra=<span class="string">'git remote add'</span></span><br><span class="line"><span class="built_in">alias</span> grb=<span class="string">'git rebase'</span></span><br><span class="line"><span class="built_in">alias</span> grba=<span class="string">'git rebase --abort'</span></span><br><span class="line"><span class="built_in">alias</span> grbc=<span class="string">'git rebase --continue'</span></span><br><span class="line"><span class="built_in">alias</span> grbd=<span class="string">'git rebase develop'</span></span><br><span class="line"><span class="built_in">alias</span> grbi=<span class="string">'git rebase -i'</span></span><br><span class="line"><span class="built_in">alias</span> grbm=<span class="string">'git rebase master'</span></span><br><span class="line"><span class="built_in">alias</span> grbs=<span class="string">'git rebase --skip'</span></span><br><span class="line"><span class="built_in">alias</span> grep=<span class="string">'grep  --color=auto --exclude-dir=&#123;.bzr,CVS,.git,.hg,.svn&#125;'</span></span><br><span class="line"><span class="built_in">alias</span> grev=<span class="string">'git revert'</span></span><br><span class="line"><span class="built_in">alias</span> grh=<span class="string">'git reset'</span></span><br><span class="line"><span class="built_in">alias</span> grhh=<span class="string">'git reset --hard'</span></span><br><span class="line"><span class="built_in">alias</span> grm=<span class="string">'git rm'</span></span><br><span class="line"><span class="built_in">alias</span> grmc=<span class="string">'git rm --cached'</span></span><br><span class="line"><span class="built_in">alias</span> grmv=<span class="string">'git remote rename'</span></span><br><span class="line"><span class="built_in">alias</span> groh=<span class="string">'git reset origin/$(git_current_branch) --hard'</span></span><br><span class="line"><span class="built_in">alias</span> grrm=<span class="string">'git remote remove'</span></span><br><span class="line"><span class="built_in">alias</span> grs=<span class="string">'git restore'</span></span><br><span class="line"><span class="built_in">alias</span> grset=<span class="string">'git remote set-url'</span></span><br><span class="line"><span class="built_in">alias</span> grss=<span class="string">'git restore --source'</span></span><br><span class="line"><span class="built_in">alias</span> grt=<span class="string">'cd "$(git rev-parse --show-toplevel || echo .)"'</span></span><br><span class="line"><span class="built_in">alias</span> gru=<span class="string">'git reset --'</span></span><br><span class="line"><span class="built_in">alias</span> grup=<span class="string">'git remote update'</span></span><br><span class="line"><span class="built_in">alias</span> grv=<span class="string">'git remote -v'</span></span><br><span class="line"><span class="built_in">alias</span> gsb=<span class="string">'git status -sb'</span></span><br><span class="line"><span class="built_in">alias</span> gsd=<span class="string">'git svn dcommit'</span></span><br><span class="line"><span class="built_in">alias</span> gsh=<span class="string">'git show'</span></span><br><span class="line"><span class="built_in">alias</span> gsi=<span class="string">'git submodule init'</span></span><br><span class="line"><span class="built_in">alias</span> gsps=<span class="string">'git show --pretty=short --show-signature'</span></span><br><span class="line"><span class="built_in">alias</span> gsr=<span class="string">'git svn rebase'</span></span><br><span class="line"><span class="built_in">alias</span> gss=<span class="string">'git status -s'</span></span><br><span class="line"><span class="built_in">alias</span> gst=<span class="string">'git status'</span></span><br><span class="line"><span class="built_in">alias</span> gsta=<span class="string">'git stash push'</span></span><br><span class="line"><span class="built_in">alias</span> gstaa=<span class="string">'git stash apply'</span></span><br><span class="line"><span class="built_in">alias</span> gstall=<span class="string">'git stash --all'</span></span><br><span class="line"><span class="built_in">alias</span> gstc=<span class="string">'git stash clear'</span></span><br><span class="line"><span class="built_in">alias</span> gstd=<span class="string">'git stash drop'</span></span><br><span class="line"><span class="built_in">alias</span> gstl=<span class="string">'git stash list'</span></span><br><span class="line"><span class="built_in">alias</span> gstp=<span class="string">'git stash pop'</span></span><br><span class="line"><span class="built_in">alias</span> gsts=<span class="string">'git stash show --text'</span></span><br><span class="line"><span class="built_in">alias</span> gsu=<span class="string">'git submodule update'</span></span><br><span class="line"><span class="built_in">alias</span> gsw=<span class="string">'git switch'</span></span><br><span class="line"><span class="built_in">alias</span> gswc=<span class="string">'git switch -c'</span></span><br><span class="line"><span class="built_in">alias</span> gtl=<span class="string">'gtl()&#123; git tag --sort=-v:refname -n -l "$&#123;1&#125;*" &#125;; noglob gtl'</span></span><br><span class="line"><span class="built_in">alias</span> gts=<span class="string">'git tag -s'</span></span><br><span class="line"><span class="built_in">alias</span> gtv=<span class="string">'git tag | sort -V'</span></span><br><span class="line"><span class="built_in">alias</span> gunignore=<span class="string">'git update-index --no-assume-unchanged'</span></span><br><span class="line"><span class="built_in">alias</span> gunwip=<span class="string">'git log -n 1 | grep -q -c "\-\-wip\-\-" &amp;&amp; git reset HEAD~1'</span></span><br><span class="line"><span class="built_in">alias</span> gup=<span class="string">'git pull --rebase'</span></span><br><span class="line"><span class="built_in">alias</span> gupa=<span class="string">'git pull --rebase --autostash'</span></span><br><span class="line"><span class="built_in">alias</span> gupav=<span class="string">'git pull --rebase --autostash -v'</span></span><br><span class="line"><span class="built_in">alias</span> gupv=<span class="string">'git pull --rebase -v'</span></span><br><span class="line"><span class="built_in">alias</span> gwch=<span class="string">'git whatchanged -p --abbrev-commit --pretty=medium'</span></span><br><span class="line"><span class="built_in">alias</span> gwip=<span class="string">'git add -A; git rm $(git ls-files --deleted) 2&gt; /dev/null; git commit --no-verify --no-gpg-sign -m "--wip-- [skip ci]"'</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">history</span>=omz_history</span><br><span class="line"><span class="built_in">alias</span> ip=<span class="string">'curl -i http://ip.cn'</span></span><br><span class="line"><span class="built_in">alias</span> l=<span class="string">'ls -lah'</span></span><br><span class="line"><span class="built_in">alias</span> la=<span class="string">'ls -lAh'</span></span><br><span class="line"><span class="built_in">alias</span> ll=<span class="string">'ls -lh'</span></span><br><span class="line"><span class="built_in">alias</span> ls=<span class="string">'ls --color=tty'</span></span><br><span class="line"><span class="built_in">alias</span> lsa=<span class="string">'ls -lah'</span></span><br><span class="line"><span class="built_in">alias</span> md=<span class="string">'mkdir -p'</span></span><br><span class="line"><span class="built_in">alias</span> pac=<span class="string">'sudo pacman -S'</span></span><br><span class="line"><span class="built_in">alias</span> pacc=<span class="string">'sudo pacman -Scc'</span></span><br><span class="line"><span class="built_in">alias</span> paci=<span class="string">'sudo pacman -Si'</span></span><br><span class="line"><span class="built_in">alias</span> paclf=<span class="string">'sudo pacman -Ql'</span></span><br><span class="line"><span class="built_in">alias</span> paclo=<span class="string">'sudo pacman -Qdt'</span></span><br><span class="line"><span class="built_in">alias</span> pacr=<span class="string">'sudo pacman -R'</span></span><br><span class="line"><span class="built_in">alias</span> pacs=<span class="string">'sudo pacman -Ss'</span></span><br><span class="line"><span class="built_in">alias</span> pacu=<span class="string">'sudo pacman -Syu'</span></span><br><span class="line"><span class="built_in">alias</span> pacy=<span class="string">'sudo pacman -Sy'</span></span><br><span class="line"><span class="built_in">alias</span> rd=rmdir</span><br><span class="line"><span class="built_in">alias</span> run-help=man</span><br><span class="line"><span class="built_in">alias</span> setproxy=<span class="string">'export ALL_PROXY=socks5://127.0.0.1:1080'</span></span><br><span class="line"><span class="built_in">alias</span> unsetproxy=<span class="string">'unset ALL_PROXY'</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">which</span>-command=<span class="built_in">whence</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Manjaro备忘录&quot;&gt;&lt;a href=&quot;#Manjaro备忘录&quot; class=&quot;headerlink&quot; title=&quot;Manjaro备忘录&quot;&gt;&lt;/a&gt;Manjaro备忘录&lt;/h1&gt;
    
    </summary>
    
      <category term="备忘录" scheme="https://jacksonleon.gitee.io/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
    
      <category term="备忘录" scheme="https://jacksonleon.gitee.io/tags/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
      <category term="Manjaro" scheme="https://jacksonleon.gitee.io/tags/Manjaro/"/>
    
  </entry>
  
  <entry>
    <title>Hexo备忘录</title>
    <link href="https://jacksonleon.gitee.io/posts/4259083123.html"/>
    <id>https://jacksonleon.gitee.io/posts/4259083123.html</id>
    <published>2019-09-14T13:44:26.000Z</published>
    <updated>2019-09-14T13:44:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo备忘录"><a href="#Hexo备忘录" class="headerlink" title="Hexo备忘录"></a>Hexo备忘录</h1><ul><li><p>生成密钥并添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;email&quot;</span><br><span class="line"># 拉取到本地</span><br><span class="line">git clone git@github.com:JacksonLeon/Hexo_Blog.git Blog</span><br></pre></td></tr></table></figure></li><li><p>安装Hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 安装nvm版本管理（直接安装nodejs会有权限错误）</span><br><span class="line">yay -S nvm</span><br><span class="line">source /usr/share/nvm/init-nvm.sh</span><br><span class="line">nvm install node</span><br><span class="line"></span><br><span class="line"># 安装npm和hexo</span><br><span class="line">sudo pacman -S npm</span><br><span class="line">npm install hexo-cli -g</span><br><span class="line">sudo npm install hexo -g</span><br><span class="line"># 安装依赖</span><br><span class="line">sudo npm install</span><br></pre></td></tr></table></figure></li><li><p>Git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># git默认设置</span><br><span class="line">git config --global user.email &quot;im.lauzh@outlook.com&quot;</span><br><span class="line">git config --global user.name &quot;lau&quot;</span><br><span class="line"># 切换分支deploy</span><br><span class="line">git checkout -b deploy</span><br><span class="line"># 修改及添加remote</span><br><span class="line">git remote rename origin github</span><br><span class="line">git remote add gitee git@gitee.com:JacksonLeon/Hexo_Blog.git</span><br><span class="line">git remote add gitlab git@gitlab.com:JosephLau/hexo_blog.git</span><br></pre></td></tr></table></figure></li><li><p>其他</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mkdir .deploy</span><br><span class="line">cd .deploy</span><br><span class="line">git init</span><br><span class="line">git remote add github git@github.com:JacksonLeon/JacksonLeon.github.io.git</span><br><span class="line">git remote add gitee git@gitee.com:JacksonLeon/JacksonLeon.git</span><br><span class="line">git remote add tencent git@git.dev.tencent.com:JacksonLeon/JacksonLeon.git</span><br><span class="line">git fetch gitee master</span><br><span class="line">git merge gitee/master</span><br><span class="line">cp -R ../public/* .</span><br><span class="line">git reset --hard gitee/master</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hexo备忘录&quot;&gt;&lt;a href=&quot;#Hexo备忘录&quot; class=&quot;headerlink&quot; title=&quot;Hexo备忘录&quot;&gt;&lt;/a&gt;Hexo备忘录&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;生成密钥并添加&lt;/p&gt;
&lt;figure class=&quot;highlight plai
      
    
    </summary>
    
      <category term="备忘录" scheme="https://jacksonleon.gitee.io/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
    
      <category term="Hexo" scheme="https://jacksonleon.gitee.io/tags/Hexo/"/>
    
      <category term="备忘录" scheme="https://jacksonleon.gitee.io/tags/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>How to be a Postgraduate student(MIT)</title>
    <link href="https://jacksonleon.gitee.io/posts/1898461496.html"/>
    <id>https://jacksonleon.gitee.io/posts/1898461496.html</id>
    <published>2019-05-18T03:08:40.000Z</published>
    <updated>2019-05-18T03:08:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="How-to-be-a-Postgraduate-student-MIT"><a href="#How-to-be-a-Postgraduate-student-MIT" class="headerlink" title="How to be a Postgraduate student(MIT)"></a>How to be a Postgraduate student(MIT)</h1><blockquote><p>Reproduce</p></blockquote><p>本文的主旨是解释如何做研究。我们提供的这些建议，对于研究本身（阅读、写作和程序设计）、理解研究过程以及开始研究（方法论、选题、选导师和情感因素），都是极具价值的。</p><p>这是什么？并没有什么神丹妙药可以保证在研究中取得成功，本文只是列举了一些可能会对研究有所帮助的非正式意见。</p><p>目标读者是谁？本文主要是为新入学的研究生而写。</p><p>如何使用？要精读完本文，太长了一些，最好是采用浏览的方式。很多人觉得下面的方法很有效：先快速通读一遍，然后选取其中与自己当前研究项目有关的部分仔细研究。</p><p>本文被粗略地分为两部分。第一部分涉及研究者所需具备的各种技能：如阅读，写作和程序设计等等。第二部分讨论研究过程本身：即研究究竟是怎么回事，如何做研究，如何选题和选导师，如何考虑研究中的情感因素。很多读者反映，从长远看，第二部分比第一部分更有价值，也更让人感兴趣。</p><p><strong>本文的主要内容包括：</strong></p><p>一、掌握一些阅读的诀窍。</p><p>二、如何成为研究领域的一员：与相关人员保持联系，他们可以使你保持对研究前沿的跟踪，知道应该读什么材料。</p><p>三、学习相关领域的知识：对几个领域都有基本的理解，对于一个或者两个领域要精通。</p><p>四、如何做研究笔记。</p><p>五、如何写期刊论文和毕业论文。如何为草稿写评审意见，如何利用别人的评审意见。如何发表论文。</p><p>六、如何做研究报告及演讲。</p><p>七、掌握和自己相关领域的程序设计。</p><p>八、有关研究生涯最重要的问题，如何选导师。不同的导师具有不同的风格，导师是你必须了解如何利用的资源。</p><p>九、关于毕业论文。毕业论文将占据研究生生涯的大部分时间，本部分涉及如何选题，以及如何避免浪费时间。</p><p>十、研究方法论。</p><p>十一、或许是最重要的一节：涉及研究过程中的情感因素，包括如何面对失败，如何设定目标，如何避免不安全感，保持自信，享受快乐。</p><a id="more"></a><h2 id="一、阅读"><a href="#一、阅读" class="headerlink" title="一、阅读"></a>一、阅读</h2><p><strong>很多研究人员花一半的时间阅读文献</strong>，可以很快地从别人的工作中学到很多东西。阅读文献，始于今日。一旦你开始写作论文，就没有多少时间了，那时的阅读主要集中于论文主题相关的文献。在研究生的头两年，大部分的时间要用于做课程作业和打基础。此时，阅读课本和出版的期刊文章就可以了。</p><p>在自己研究领域打下坚实的基础所需要的阅读量，是令人望而止步的。</p><p>一个有用的小技巧是：<strong>首先找出那些最本质的论文</strong>。此时可以参考一些有用的书目：例如研究生课程表，其他学校（主要是斯坦福大学）研究生录取程序的建议阅读列表，这些可以让你有一些初步的印象。如果你对自己研究的某个子领域感兴趣，向该领域的高年级研究生<strong>请教本领域最重要的十篇论文</strong>是什么，如果可以，借过来复印。</p><p>回顾最近几年的出版物，将那些非常感兴趣的复制下来。这不仅是由于其中很多都是意义重大的论文，对于了解实验室成员的工作进展也是很重要的。每年都应该去所在学校的计算机科学图书馆，翻阅其他院校出版的和自己相关领域技术报告，并选出自己感兴趣的仔细加以阅读。</p><p>阅读论文是需要练习的技能。不可能完整地阅读所有的论文。阅读论文可分为三个阶段：第一阶段是：看论文中是否有感兴趣的东西。论文可能含有摘要，其中可能有内容的介绍，但是也有可能没有或者总结得不好，因此需要你跳读，这看一点那看一点，了解作者究竟做了些什么。<strong>内容目录（</strong>the table of contents<strong>）、结论部分（</strong>conclusion<strong>）和简介</strong>（introduction）<strong>是三个重点</strong>。如果这些方法都不行，就只好顺序快速浏览了。一旦搞清楚了论文的大概和创新点，就可以决定是否需要进行第二阶段了。</p><p>在第二阶段，<strong>要找出论文真正具有内容的部分</strong>。很多15页的论文可以重写为一页左右的篇幅；因此需要你寻找那些真正激动人心的地方，这经常隐藏于某个地方。论文作者从其工作中所发现的感兴趣的地方，未必是你感兴趣的，反之亦然。最后，如果觉得该论文确实有价值，返回去通篇精读。读论文时要牢记一个问题，“我应该如何利用该论文？”“真的像作者宣称的那样么？”“如果..会发生什么？”。<strong>理解论文得到了什么结论并不等同于理解了该论文</strong>。理解论文，就要了解论文的目的，作者所作的选择（很多都是隐含的），假设和形式化是否可行，论文指出了怎样的方向，论文所涉及领域都有哪些问题，作者的研究中持续出现的难点模式是什么，论文所表达的策略观点是什么，诸如此类。将阅读与程序设计联系在一起是很有帮助的。如果读者对某个领域感兴趣，在阅读了一些论文后，试试实现论文中所描述程序的“玩具”版本。这无疑会加深理解。要知道，其他的机构具有不同的思考问题的方式，值得去阅读，严肃对待，并引用它们的工作，即使你认为自己明晓他们的错误所在。</p><p>在第三阶段，经常会有人递给你一本书或者一篇论文并告诉你应该读读，因为其中有闪光的地方或可以应用到你的研究工作中。但等你阅读完了，你发现没什么特别闪光的地方，仅仅是勉强可用而已。于是，困惑就来了，“我哪不对啊？我漏掉什么了吗？”实际上，这是因为你的朋友在阅读书或论文时，在头脑中早已形成的一些想法的催化下，看出了其中对你的研究课题有价值的地方。</p><h2 id="二、建立关系"><a href="#二、建立关系" class="headerlink" title="二、建立关系"></a>二、建立关系</h2><p>研究生一两年后，对自己准备从事的子领域已经有了一些想法。一般而言，引导所在领域潮流的工作最终会变成正式发表的论文，但至少在领域高手（领先者）完全明白一年之后，也就是说，高手的工作至少领先一年。</p><p>高手是如何发现新思路的？可能是来自某次会议，也可能来自于与别人的交流。下面是从新思路产生到发表的一般流程。Jo Cool有了一个好想法，她将尚不完整的实现与其他一些工作融合在一起，写了一份草稿论文。她想知道这个想法究竟怎么样，因此她将论文的拷贝发送给十位朋友并请他们进行评论。朋友们觉得这个想法很棒，同时也指出了其中的错误之处，然后这些朋友又把论文拷贝给他们各自的一些朋友，如此继续。几个月后，Jo对之进行了大量修订，并送交给AAAI(the Association for the Advancement of Artificial Intelligence)。六个月后，该论文以五页的篇幅正式发表（这是AAAI会议录允许的最大篇幅）。最后Jo开始整理相关的程序，并写了一个更长的论文（基于在AAAI发表论文得到的反馈），然后送交给某某期刊。某某刊要花大约两年的时间，包括对论文进行评审，作者对论文修改所花费的时间，以及相应的出版延迟。因此，理想情况下，Jo的思想<strong>最终发表在期刊上需要大约三年时间</strong>。所以潮人很少能从本领域出版的期刊文章中学到什么东西，来得太迟了。</p><p>你，也可以成为一个高手。下面是建立学术关系网的一些诀窍：有很多讨论某个自己研究的子领域（如机器视觉）的邮件列表，选择自己感兴趣的列表加入。 当与很熟悉本领域的人讨论自己的思想时，他们很可能不直接评价你的想法，而是说：“你读过某某吗？”这并不是一个设问，而是<strong>建议你去阅读某份文献</strong>，它很可能与你的想法有关。如果你还没有读过该文献，从跟你交谈的高手那里得到该文献的详细信息，或者直接从他那里借一份拷贝下来。当你读到某份让你感到很兴奋的论文，复印五份送交给对之感兴趣的其他五个人，他们可能会反馈回来很好的建议。</p><p>有的实验室每星期或每两星期聚会一次，对大家阅读完的论文进行讨论。有些人并不介意别人去翻看他们的书桌，也就是说，去翻阅他们堆在书桌上的不久要阅读或者经常翻阅的论文。你可以去翻翻看，有没有自己感兴趣的。当然了，首先要得到主人的许可，要知道有些人确实反感别人翻自己的东西。去试试那些平易近人的人。同样，有些人也并不介意你翻看他们的文件柜。实验室中可是有很多学问精深的人，他们的文件柜里也是有好多宝贝。与利用学校图书馆相比，这通常是更快更可靠的寻找论文的方式。把自己写出的草稿的拷贝分发给那些可能感兴趣的人（这也有一个潜在的问题：虽然所在领域的剽窃很少，但也确实有。你可以在第一页写上“请不要影印或者引用”的字样以做部分防范）。大部分人不会阅读自己收到的大部分论文，因此如果只有少数人返回评论给你，也不用太在意。你可以如此反复几次——这是期刊论文所必需的。注意，除了自己的导师，一般很少将两次以上的草稿送给同一个人。</p><p><strong>当你写完一篇论文后，将论文的拷贝送给那些可能感兴趣的人</strong>。别以为人家自然而然地就会去阅读发表论文的期刊或者会议录。如果是内部的出版物（备忘录和技术报告）就更不容易读到了。</p><p>你保持联系的人越是各式各样，效果就越好。<strong>尝试与不同研究组、实验室人员、不同学术领域的人交换论文</strong>，使自己成为没有联系的两个科研组交流的桥梁，这样，很快的，你的桌子上就会冒出一大摞相关的论文。</p><p>如果某篇论文引用了自己感兴趣的某些东西，做好笔记。维护一份自己感兴趣参考文献的日志。到图书馆去看看能不能找到这些论文。如果要了解某个主题的发展轨迹，<strong>可以有意地去做一张引用的**</strong>“<strong><strong>参考文献</strong></strong>”<strong>**图</strong>。所谓的参考文献图，是指引用文献组成的网：论文A引用B和C，B引用C和D，C引用D，等等。<strong>注意那些被经常引用的论文，这通常是值得阅读的</strong>。参考文献图有奇妙的性质，由于经常研究同一主题的研究组可能相互并不了解，当你搜索该图时，会突然发现进入另一部分的方式，这通常出现于不同学校或者采用不同方法的研究组。尽可能了解多种方法是很有价值的，这比非常深入的了解某一种方法更好。</p><p><strong>跟别人交谈</strong>，告诉他们你在做什么，并询问人家在做什么。（如果你对与别的学生讨论自己的想法感到害羞，也要坚持交谈，即使自己没有什么想法，与他们讨论自己认为确实优秀的论文。这将很自然地引导到下一步做什么的讨论。）当然也可以参加一些非正式的讨论会，比如在午餐时。</p><p>从某个时间开始，你将会开始参加学术会议。如果你确实参加了，你会发现一个事实，几乎所有的会议论文都令人生厌或者愚蠢透顶（这其中的理由很有意思，但与本文无关，不做讨论）。那还去参加会议干吗？主要是为了结识实验室之外的人。外面的人会传播有关你的工作的新闻，邀请你作报告，告知你某地的学术风气和研究者的特点，把你介绍给其他人，帮助你找到一份暑期工作，获得到别的实验室工作的机会，诸如此类。如何与别人结识呢？如果觉得某人的论文有价值，就跑上去，说：“我非常欣赏您的论文”，并提问一个问题。这样你会结识另外一群人，或许还会学到另外一种看待事物的方式。可以去问高年级同学如何获取这样的机会，他们或许已经在你想去的地方工作过了，能帮你联系。</p><h2 id="三、学习其他领域"><a href="#三、学习其他领域" class="headerlink" title="三、学习其他领域"></a>三、学习其他领域</h2><p>通常的情况，你只能做自己研究领域的事情，对自己研究领域之外的事情一无所知，好像有些人现在也仍然这么认为。但是，现在要求好的研究者对几个相关的领域都了解颇深。计算的可行性本身并没有对什么是智能提供足够的约束，其他的领域给出了其他形式的约束，例如心理学获得的经验数据。更重要的是，<strong>其他的研究领域给了你思考的新工具，看待智能的新方法</strong>。学习其他领域的另外一个原因是自己研究的领域本身并没有评价研究价值的标准，全是借自于其他领域。数学将定理作为进展；工程会问某个对象是否工作可靠；心理学要求可重复的试验；哲学有严格的思辨；等等。所有这些标准有时都在自己研究领域中起作用，熟悉这些标准有助于你评价他人的工作，深入自己的工作以及保护自己的工作。</p><p>下面是如何学习自己所知甚少领域的一些方法：</p><p>选修一门研究生课程，这很牢靠，但通常不是最有效的方法。</p><p>阅读课本。这方法还算不错，不过课本的知识经常是过时的，一般还有很高比例的与内容无关的修辞。</p><p><strong>找出该领域最棒的期刊是什么</strong>，向该领域的高人请教。然后找出最近几年值得阅读的文章，并跟踪相关参考文献。这是最快的感受该领域的方法，但有时候你也许会有错误的理解。</p><p>找出该领域最著名的学者，阅读他们所著的书籍。</p><p>跟该领域的研究生泡在一起。</p><p>参看外校研究该领域的系的课程表。拜访那里的研究生院办公室，挑选有用的文献。</p><p>下面是一些需要了解的我们研究领域相关的科目（可能与我们的研究方向有出入，供大家参考）：</p><p><strong>计算机科学</strong>是我们所使用的技术。你需要选修的初级研究生课程肯定不能让你对计算机科学有足够的了解，因此你必须通过阅读学习更多的知识。计算机科学所有的领域——理论体系结构，系统，语言等等——都是必须学习的。</p><p><strong>数学可能是接下来需要了解的最重要的学科</strong>。对于工作在视觉或者医学图像处理的人来说更关键。对于以系统为中心的工作，表面上看，并不相关，但数学会教你有用的思维方式。你需要能阅读定理，如果具有证明定理的能力将会给本领域的大多数人留下深刻的印象。很少有人能自学数学，光做个听众是不够的，还得做习题集。尽可能早地选修尽可能多的数学课，其他领域的课程以后选也很容易。计算机科学是以离散数学为基础的：代数，图论，等等。如果你要从事推理方面的工作，逻辑是很重要的。逻辑是认识思维的主流方法。所以你必须具备足够的逻辑知识，这样你才能保护自己的观点。</p><p>每一个人都需要知道<strong>认知心理学的某些知识</strong>。如果你想做有关学习的工作，那么发展心理学是很重要的。发展心理学从一般意义上讲也是很有用的，它能告诉你对于人类来说，哪些事情难哪些容易。它还给出了有关认知体系结构的认知模型。例如，有关儿童语言学习的工作就对语言处理理论施加了坚实的约束。</p><p>心理学中更“软”的部分，例如心理分析和社会心理学，对自己研究领域的影响看似很小，但具有潜在的重大意义。它们会给你非常不同的理解人是什么的方式。像社会学和人类学这样的社会科学可以起相似的作用。具有多种观点是很有用的。上述学科你有可能需要自学，不幸的是，很难区分出这些领域哪些是优秀的成果哪些是垃圾。</p><p>物理学对于我们某些研究领域也具有极大的影响。</p><p><strong>哲学是某些研究领域看不见的框架</strong>。哲学也能帮助你运用或者读懂很多自己研究领域论文中用到的观点。有关思维和语言的哲学与自己研究领域更相关。哲学存在着多种学派，从比较大的范围来分，哲学可分为分析哲学和大陆哲学。大陆哲学则对我们习以为常的很多东西有非常不同的看待方式。</p><p>看起来要学习太多的东西，是不是？确实如此。要小心一个陷阱：认为对于所有的X，“只有我对X了解的更多，这个问题才会变得容易”。要知道，与之相关需要进一步了解的东西是永远没完的，但最终你还是要坐下来去解决问题的。</p><h2 id="四、笔记"><a href="#四、笔记" class="headerlink" title="四、笔记"></a>四、笔记</h2><p><strong>很多科学家都有做科研笔记的习惯</strong>，你也应该这样。可能你曾被告知从五年级开始，对于每一门科学课都应该记笔记，确实如此。不同的记笔记方式适用于不同的人，可以做在线笔记，记在笔记本或者便笺簿上。可能需要在实验室有一个，家里还有一个。<strong>在笔记本上记录下自己的想法</strong>。只有你自己才会去读它，因此可以记得比较随意。记录下自己的思索，当前工作中遇到的问题，可能的解决方案，对将来可能用到的参考文献作小结。定期翻阅你自己的笔记本，有些人会做月度总结，方便将来的引用。</p><p><strong>笔记中记录中的东西经常可以作为一篇论文的骨干</strong>。这会使生活变得轻松些。另外，你会发现写粗略的论文——标题，摘要，分标题，以及正文的片段——是一种记录自己当前工作的有效方式，即使你并不准备把它变成一篇真正的论文（过一段时间你或许会改变想法）。你或许会发现Vera Johnson-Steiner的书《Notebooks of the Mind》很有用，该书并不是描写如何做笔记，它描述了随着思想片断的积累，创新思想是如何出现的。</p><h2 id="五、写作"><a href="#五、写作" class="headerlink" title="五、写作"></a>五、写作</h2><p>写作的理由有很多。勤于写作不仅仅给你练习的机会。</p><p>在整个读研的过程中，你需要写一到两篇（这取决于你所在系的规定）毕业论文，以获得Ph.D.或者MS。</p><p><strong>学术的规则就是要么发表，要么腐烂</strong>。在很多领域和学校，这通常只有在你成为一名教师时才会要求。但是我们实验室的很多研究生毕业之前就已经开始发表论文了。鼓励论文发表是促进研究的很好策略。</p><p><strong>写下自己的想法是很好的调整思路的方式</strong>。你会经常地发现自以为很完美的想法一旦写下来就显得语无伦次。</p><p>如果你工作的目的是不仅为自己还要为他人服务，就必须把它发表。<strong>这也是研究的基本责任</strong>。如果你写得精彩，会有更多的人来了解你的工作。自己单独完成写作是很难的，你需要经常地从他人那里获得反馈。对你的论文作评论就是最重要的一种形式。<strong>任何事情，要做就要做到最好</strong>。</p><p>阅读有关如何写作的书籍。Strunk和White的《Elements of Style》对写作中基本的应该如何不应该如何做了介绍。Claire的《The MLA’s Line By Line》（Houghton Mifflin）是有关在句子级别如何进行编辑的书籍。Jacques Barzun的《Simple and Direct: A Rhetoric for Writers》（Harper and Row, 1985）是有关如何作文的。</p><p>写论文时，<strong>读读那些写作高超的书，并思考作者的句法运用</strong>。你会发现不知不觉地，你已经吸收了作者的风格。</p><p>要<strong>成为写作高手，需要付出颇多</strong>，历经数年，期间还要忍受和认真对待他人的批评。除此之外，并无捷径可走。</p><p>写作有时候是很痛苦的，看起来好像是从“实际的”工作中分心了。但如果你已经掌握了写作技巧，写起来会很快。而且如果你把写作当作一门艺术的话，你能从中得到很多乐趣。</p><p>你肯定会遇到思路阻塞的情况，这有很多的可能原因，没有一定可以避免的方法。追求完美可能导致思路阻塞：无论开始写什么，总觉得不够好。要理解写作是一个调试的过程。先写一个草稿，然后返回修订。写草稿有助于理顺思路，<strong>如果写不出来正文，那就写个大纲</strong>。逐步对之细化，直到已经很容易写出各部分的内容。如果连草稿也写不出来，隐藏掉所有写作窗口，然后随便输入自己脑袋里想到的东西，即使看起来好像是垃圾。当你已经写出了很多文本后，重新打开窗口，将刚才写的东西编辑进去。</p><p>另外写作中一个常见错误是以为可以将所有的内容依次写出。通常你应该将<strong>论文的核心内容写出来</strong>，最后才是介绍部分。引起作者思路阻塞的另一个原因是不切实际的以为写作是很容易的事情。写作是耗时耗力的，如果发现自己每天只能写一页，也不要放弃。</p><p>完美主义可能会导致对本来已经足够好的论文还在不停地打磨。这是浪费时间（这也是一种有意无意之间逃避做研究的表现）。将论文看作你与本领域其他人交谈时的谈话。在交谈中，并不是每一句话都是完美的。很少有人会期待自己的某次谈话就是全部的故事，是与对方的最后一次交流。</p><p>写信是一种很好的练习。很多技术论文，如果其风格更类似于给朋友的信，那么会有很大的提高。坚持记日记也是练习写作的方法（也会使你试验更多的文体，不仅仅是技术论文）。这两种方法还有其它的实质作用。</p><p><strong>一个常见的陷阱是花很多时间去追求修辞而不是内容</strong>。要避免这样。LaTeX并非完美，但是它有很多你所需的修饰语。如果这还不够，还可从其他从事这一研究的人那里借用一些词语用法。很多站点（例如MIT）都提供一个写作修辞的数据库。</p><p><strong>清楚自己要表达什么</strong>。这是清楚的写作中最难最重要的因素。如果你写了拙劣的东西，且不知道如何修改，这很有可能是因为你不知道自己要说什么。一旦搞清楚了自己要说什么，说就行了。</p><p>论文的写作要有利于读者查找到你所做的工作。<strong>无论是段落的组织还是通篇的组织，都要将最核心的部分放在前面</strong>。<strong>要精心写作摘要</strong>。确保摘要已经反映出你的好思路是什么。确保自己明白自己的创新点是什么，然后用几句话表达出来。太多的论文摘要只是一般性地介绍论文，只说有一个好思路，却不说是什么。</p><p><strong>不要用大话来贩卖你的工作</strong>。你的读者都是很优秀的人，正直且自尊。与之相反，也不要为自己的工作道歉或者进行消减。</p><p><strong>确保自己的论文有中心思想</strong>。如果你的程序在10毫秒内解决了问题X，告诉读者你是如何办到的。不要只是解释你的系统是如何构建的，是做什么的，还要解释其工作原理和价值所在。</p><p>写作是给人看的，而不是机器。因此仅观点正确是不行的，还<strong>要易懂</strong>。不要靠读者自己去推理，除非是最明显的推论。如果你在第七页的脚注上解释了某个小玩意的工作原理，接着在第二十三页没有进一步解释就引用了它，此时如果读者感到困惑一点都不值得奇怪。正式的论文要写清楚是很难的。不要模仿数学领域的文献，它们的标准是尽可能少的解释，使读者感到越困难越好。</p><p>如果你等做完所有的工作后才开始写作，会失去很多。一旦开始了某个科研项目，建议养成这样的习惯：<strong>每隔几个月，就写一篇解释当前工作进展或者学习所得的非正式论文</strong>。从你研究笔记中的记载开始，花两天的时间写下来——如果你花的时间更长，说明你是一个完美主义者。写的只是草稿——不是为了被引用的那种。将论文复制数十份，送给你的朋友和那些感兴趣的人（包括你的导师）。与写正式论文相比，这样做也有很多好处（评论，理清思路，写作练习等等），而且从某种意义上讲，付出无需那么多。如果你做得不错，这些非正式论文以后可以作为正式论文的骨干内容，也就是从自己实验室的Working Paper成为一篇期刊文章。一旦你成为Secret Paper Passing Network的成员，会有很多人给你寄论文拷贝要求评论。获得他人对自己的论文的评论是很有价值的。因此你评论的论文越多，你获得支持就越多，也会收到更多人对你论文的评论。不仅如此，<strong>学习评价别人的论文</strong>也有助你的选择。为论文写有用的评论是一门艺术。</p><p>要写出有用的评论，需要读两遍论文。第一遍了解其思想，第二遍开始作评论。如果某人在论文中屡次犯同一错误，不要每次都标记出来。而是要弄清楚模式是什么，他为什么这样做，对此还可以做什么，然后在第一页清晰地指出或者私下交流。</p><p>不要在论文写毁灭性的批评如“垃圾”，这对于作者毫无帮助。<strong>花时间提出建设性的建议</strong>，要设身处地地为作者着想。评论有很多种，有对表达的评论，有对内容的评论。对表达的评论包括校对打字稿、标点、拼写错误、字词丢失等；还可以是校正语法，修辞，以及混乱不清楚的段落。通常人们会持续地犯同一语法错误，因此需要花时间明确指出。接下来是对组织结构的评论：不同程度（子句，句子，段落，小节乃至一章）的次序混乱，冗余，无关的内容，以及论点是否丢失。你可以建议作者扩展自己的想法，考虑某个问题或错误，论文存在的潜在问题，表达赞美等。“因为Y，你应该读X”是一种总是有用的评论。当被要求对论文作评论时，你首先要弄清楚哪种评论更有用。对于早期的论文草稿，主要需要你对内容和论文的组织结构作评论；对于最终的草稿，主要需要你评论表达的细节。</p><p>注意，作为一种礼貌，在要求别人评论之前，<strong>应首先用拼写检查器对自己的论文进行检查</strong>。你无须接受所有的意见，但是<strong>必须都认真对待</strong>。将论文的部分内容裁掉是挺令人痛心的，但往往也提高了论文的水平。你经常会发现某个意见确实指出了问题，但是解决方法你觉得不可接受，那么就去寻找第三条道路。要多发表论文，这其实比想象中的容易。</p><p><strong>确保论文可读性比较好</strong>。论文被拒绝的原因，除了没有意义之外，就是无法理解或者组织糟糕。</p><p><strong>通常是先向会议投交一篇篇幅比较短的有关工作内容的早期报告，然后再往期刊投交一份篇幅较长的最终正式论文</strong>。看看IJCAI(International Joint Conferences on Artificial Intelligence)的会议录，你会发现会议论文录取的标准相当低。而且由于会议评审过程本身固有的随机性，录取的标准变化更大，所以一个发表论文的诀窍是不停地试。主要的会议都会在被接收的论文中评出内容和表达俱佳的获奖论文，仔细研究研究。</p><p>论文在投往期刊之前，应该交流一段时间，并根据反馈的评论进行适当的修订。要抵制那种急匆匆地把结果投往期刊的做法。在自己的研究领域，没有竞赛，而且不管怎么说，出版周期的延迟要大大超过对草稿进行评论的时间。另外，读一读你想投稿的期刊或者会议的过刊，确保自己论文的风格和内容是适合的。很多出版物都有一页左右的“作者投稿须知”，仔细看看。</p><p>论文被拒绝了，千万不要沮丧灰心。</p><p>期刊和会议的论文评审过程存在很大的不同。为了节省时间，会议论文的评审必须迅速，没有时间细究或者交流。如果你被拒绝了，你就失败了。但期刊论文则不同，你可以经常地与编辑争辩，通过编辑与评审人争辩。如果你收到了令人生厌的评审报告，应该向大会的程序主席或者编辑投诉。评审人一般都会对你有所帮助，当然不能期望可以从会议论文评审人那里得到多少反馈，但对于期刊论文，往往可以得到非常棒的建议。你不必完全按照评审报告的建议去做，但是，如果你不按照报告去做，那么就<strong>必须解释原因</strong>，并且要意识到这可能会导致进一步的负面评价。不管怎么样，无论是哪种评审，作为被评审者都要有礼貌。因为在余下的职业生涯中，你将会与评审者在一个学术圈子里。</p><p><strong>论文写作所花的时间总是比期望的要高</strong>，论文的发表在耗费时间这个问题上则更严重。当你完成了一篇论文，投出去，等待发表。数月后，论文以及评论意见被返回来，你不得不对论文进行修改。然后又是几个月，才返回对你修改的确认。如果你同时发表了该论文的不同形式，如有一篇短的投会议，一篇长的投期刊，这样的过程将反复数个回合。结果有可能是当你已经厌倦了，研究主题也已经令人生厌后数年，你仍然在修改那篇论文。这启示我们：不要去做那些需要热情投入但是很难发表论文的研究，那将苦不堪言。</p><h2 id="六、讲演"><a href="#六、讲演" class="headerlink" title="六、讲演"></a>六、讲演</h2><p>与同行交流的另外一种方式就是讲演，上面提到的有关论文写作的问题，同样适用于讲演。<strong>站在听众面前从容讲演而不会使听众恹恹欲睡的能力，对于你成功地获得别人的承认、尊敬乃至最终的求职都是非常关键的</strong>。讲演的能力不是天生的，下面是一些学习和练习讲演的方法：</p><p>Patrick Winston有一篇很好的有关如何作讲演的小论文。每年的一月，他都会就此作讲演，演示和描述他的演讲技巧。</p><p>如果你觉得自己是一个糟糕的演讲者，或者想成为一名优秀的演讲者，选一门公共演讲课。初级的表演课也很有用。</p><p>如果你的导师有定期的<strong>研究讨论会</strong>，<strong>自愿去作演讲</strong>。</p><p>计算机教研室有一系列的半正式报告座谈会，如果你觉自己的某些观点值得写进研究领域的Memo或者会议论文中，自告奋勇去作一场报告。</p><p><strong>深入了解实验室的不同人研究的项目</strong>，当你外地的亲朋好友来的时候，你可以领着他们逛一圈，并就自己研究的内容做20分钟的汇报。</p><p>由于修改演讲远比修改论文容易，有些人会觉得这是很好的寻找如何表达思想的方式（Nike Brady有一次曾说，他所有最好的论文都来自于演讲）。</p><p>在一间空屋子里练习，最好就是你马上要做的报告。这有助于调整报告的技巧：每一张幻灯讲些什么；转换的延迟以及保持衔接；保持解释和幻灯的同步；估计报告的时间长度。你花在调整设备上的时间越少，留下来的与人交流的时间就越长。</p><p>用镜子，录音机或者录像机练习是另外一种方法。实验室会提供这三种设备，这也有助于调整自己的发音和肢体语言。</p><p>对于比较正式的报告，特别是你的答辩，应该在几个朋友面前练习一遍，请他们批评指正。</p><p><strong>观察别人是如何做报告</strong>的。有很多访问MIT的人会做报告，参加这样的报告会能够感受自己不熟悉的领域，并且如果报告令人提不起兴趣，你可以暗中分析报告者错在哪里。</p><p>找一位朋友，将你最近的想法说给他听。这既可以提高交际技巧，又能检验自己的思路。</p><h2 id="七、程序设计"><a href="#七、程序设计" class="headerlink" title="七、程序设计"></a>七、程序设计</h2><p>并不是所有自己研究领域的论文都包含代码，而且本领域的很多重量级人物从来没有写过一个重要的程序。但是为了掌握自己研究的工作原理，你必须会程序设计。不仅仅是很多计算机研究工作需要编写代码，学会程序设计还能带给你什么是可计算的什么是不可计算的直觉。</p><p>当然，<strong>学习一门语言并不能等同于学习程序设计</strong>；自己的程序设计包含的一些技术与那些在系统程序设计或者应用程序设计中用到的大不相同。开始学的时候，可以先看看Abelson和Sussman的《Structure and Interpretation of Computer Programs》，并做一些练习。这本书与自己所研究的程序设计本质上并不相干，但是包含了一些相同的技术。最后，进行实际的程序设计，而不是阅读，才是最好的学习程序的方法。</p><p>学习程序设计有很多传统。有些人习惯一起写代码，这取决于个性。还有的人寻找机会直接向有经验的程序员学习，或者请他对你的代码进行评价。阅读别人的代码也是很有效的方法。如果可以向高年级同学要他们的源代码，他们可能会有些抱怨，说自己的编程风格差极了，程序实际上并不能工作云云。不管怎么样，最后你获得了源代码。然后你要仔细地通篇阅读，这很费时间。<strong>通常阅读并完全理解别人代码所花的时间与你自己编程完成的时间是一样多的</strong>，因此要计划好在你的头一个或者头两个学期用数周的时间去阅读别人的代码。你将从中学到很多以前不曾想到在课本中也没有的技巧。如果你读到了整篇不可理解没有注释的程序，你就会明白<strong>不应该如何写代码</strong>了。在软件工程课里学习到的那些知识在自己的程序设计中很有可能依然有用。要给代码加注释，使用正确的数据抽象，将数据和你的代码隔离开，提高可移植性，诸如此类。经过头几年的学习后，就应该写一些自己的标准程序设计模块了。</p><p><strong>任何你感兴趣的东西都可以尝试用程序实现</strong>。你可以抓住问题的实质，在几天之内完成一个功能版本。修改已有的程序是另外一种有效的方法，前提是你已经写过这样的东西，并且确实了解其工作原理，优缺点以及效率等问题。不像其他通常的程序员相互借阅代码（演示代码例外）。虽然可以对代码进行修改满足自己的需要，但记住理解别人的代码是很耗时的，有时候还不如自己写一个。有时候构建一个标准包的工作本身就可以成为一篇论文。像论文一样，程序也有可能过于追求完美。不停重写代码以求完美，最大化的抽象所有的东西，编写宏和库，与操作系统内核打交道，这都使得很多人偏离了自己的论文，偏离了自己的领域（从另外一方面，或许这正是你需要将来谋生的手段）。</p><h2 id="八、导师"><a href="#八、导师" class="headerlink" title="八、导师"></a>八、导师</h2><p>导师应该有两种类型，教学导师和论文导师，由于一些客观原因，我们科里的导师身兼两职，既是教学导师又是论文导师。</p><p>教学导师的作用是作为系方代表，告诉你对你的正式要求是什么，如果你的进度慢了敦促你，批准你的课程计划等。如果一切顺利的话，你每年只需要见教学导师两次，在注册日那天。从另一方面讲，如果你遇到了困难，教学导师替你向系里反映或者提供指导。论文导师是监督你研究的人，选择论文导师是你读研期间最重要的选择，比选题都重要得多。有很多领域的技术方面或者研究过程中的非正式知识，只能从导师那里学到，在任何教科书上都找不到。导师与研究生的关系是非常个性化的，你的个人特点必须与导师的配合得很好，这样你们才能合作成功。不同的导师具有不同的风格。</p><p>下面是一些需要值得考虑的因素（对四医大而言，基本上在录取时就确定了导师，下面亦可作为与导师交流及课题选择时的参考）：</p><p><strong>你需要多大程度的指导</strong>？有些导师会给你一个定义良好的适合做论文的问题，对解决方法进行解释，并告诉你如何开展工作。如果你陷在某个地方了，他们会告诉你如何开展下去。有些导师则属于甩手型，他们可能对你的选题毫无帮助，但是一旦你选好题目，他们对于引导你的思路具有非常大的作用。你需要考虑清楚自己适合独立工作还是需要指导。</p><p><strong>你需要多大程度的联系</strong>？有的导师要求每周与你见面，听取你工作进展的汇报。他们会告诉你应该读的论文，并给你实际的练习和项目做。而有些导师每学期与你的谈话不会超过两次。</p><p><strong>你能承受的压力有多大</strong>？有些导师施加的压力是很大的。</p><p><strong>听取导师意见的认真程度如何</strong>？大多数导师会相当正式地建议你的论文题目。有些导师是值得信赖的，他们给出的建议，如果按照执行，几乎肯定会做出一篇可接受的论文，如果不是令人兴奋的论文的话。有些导师则一下子抛出很多思路，大部分是不切实际的，但是有一些，或许会导致重大突破。如果选了这样的一位导师，你首先得把自己当作一个过滤器。</p><p><strong>导师提供了什么类型的研究组</strong>？有些教授会创造环境，把所有的学生聚集在一起，即使他们做的不是同一个项目。很多教授每周或者每两周与自己的学生们会面。这对你有用么？你能与教授的学生和睦相处么？有些学生发现他们更能与其他教研组的学生建立良好的工作关系。</p><p><strong>你想参与大的项目么</strong>？有些教授将大系统分解，每个学生负责一部分。这给了你与一组人讨论问题的机会。有些论文项目包含了多个研究领域，需要你与两个以上的教授建立密切的工作关系。虽然你正式的论文导师只有一位，但是有时候这并不反映实际情况。</p><p>导师愿意指导其研究领域之外的论文题目么？你是否能与导师一起工作，比你做什么本身更重要。推理方面的教员指导过视觉方面的论文。但是有些教员只愿意指导自己研究兴趣领域内的论文，这对于那些欲获得终身职位的年轻教员来说尤其如此。</p><p>导师愿意并且能够在会议上推荐你的工作吗？这是导师工作的一部分，对你将来工作意义重大。上述这些因素，不同学校的情况很不相同。</p><p>研究生研一结束或研二学年开始阶段，必须找导师对你的论文进行指导，下面是一些诀窍。查阅实验室的研究总结，其中有一页左右的篇幅描述了每个教师以及很多研究生目前在做什么。如果你对某些教师的研究工作感兴趣，查阅其最近的论文。在第一学期，与尽可能多的教师交谈，去感受他们喜欢做什么，他们的研究和指导风格是什么。与预期导师的研究生交谈，要保证与导师的多个学生交流，因为每位导师在与不同的学生交流时有不同的工作方式和交流效果，不能被一个学生的看法所左右。很多教师所在研究组的会议对新同学都是公开的，这是非常好的了解导师工作方式的途径。不要由于交流不好，浪费时间在自己并不想做的项目上。不要完全依赖你的导师，要建立自己的网络，找一些能定期评审你的工作的人是很重要的，因为研究时很容易走火入魔。网络中的人可以包括自己实验室或者外单位的研究生和老师。实验室中有些同学只是名义上由导师指导，这对于那些独立性很强的人来说很好。除非你确保自己没有导师也行，且有牢靠的支持网络，否则就不要这么干。</p><h2 id="九、论文"><a href="#九、论文" class="headerlink" title="九、论文"></a>九、论文</h2><p><strong>做论文将占据研究生生活的大部分时间</strong>，主要是去做研究，包括选题，这比实际的写作耗时更多。硕士论文的目的是为做博士论文练兵。<strong>博士水平的研究如果没有准备好的话，是很难进行的</strong>。硕士论文最本质的要求是展示自己的掌握程度：你已经完全理解了本领域最新进展，并具备相应的操作水平。并不需要你对本领域的最新知识有所拓展，也不要求发表你的论文。但我们实验室的论文总是比较大气的，因此很多硕士论文实际上都对本领域的发展做出了显著的贡献，大约有一半都出版了，这并不一定是好事情，很多人精力都集中于硕士的工作，所以我们也有这样的名声：硕士论文的质量往往比博士论文高。这有悖于硕士工作本来是为博士研究做准备的原有目的。</p><p>论文的另外一个因素是<strong>所做研究要对领域有所贡献</strong>，至少需要两年，这使得研究生学习时间之长令人难以忍受。现在或许你感受不到匆忙，但当你已经在实验室呆了七年后，你肯定迫不及待地想逃出去。硕士从入学到毕业平均时间是两年半，如果某个硕士生的题目过于庞大，可将之分解，一部分来做硕士论文，另一部分给博士生作博士论文。想要了解硕士论文研究是什么样的，读几本最新的硕士论文。记住比较好的论文是那些出版的或者成为技术报告的，因为这标志着该论文被认为是扩展了领域的最新知识——换句话说，他们的论文远远超出了硕士论文的水平。还要读一些通过的但是没有出版的论文。博士论文必须对最新知识有所拓展，博士论文的研究必须具备可出版的质量。</p><p><strong>选题是论文工作中最重要最困难的部分</strong>：好的论文题目不仅能够表达个人观点，而且可与同行交流。选择题目必须是自己愿意倾注热情的，其远景是你愿意作为一个科学家的理由，是你最为关注的目标。或许你想造一台可与之交谈的计算机，或许你想把人类从计算机的愚蠢使用中拯救出来，或许你想展示万物都是统一的，或许你想在太空发现新生命。远景观点总是比较大的，你的论文并不能实现你的远景，但是可以朝着那个方向努力。</p><p>做论文时，最困难的就是如何将问题缩减至可解决的水平，同时规模又足以做一篇论文。题目太大太虚了，你会发现需要不断的缩小题目的范围。选题是一个渐进的过程，会持续到你宣布论文已经完成那一刻为止。实际上，<strong>解决问题通常比精确地描述问题要容易得多</strong>。如果你的目标是一个五十年的工程，那么合理的十年工程是什么，一年的呢？如果目标的结构庞大，那么最核心的部件是什么？如何最大程度的了解核心部件？一个重要的因素是你可以忍受多大程度的风险。在最终的成功和风险之间需要权衡。</p><p><strong>好的论文选题要有一个中心部分</strong>，你确信肯定可以完成，并且你和你的导师都同意这已经满足毕业要求了。除此之外，论文中还有多种扩展，有失败的可能，但如果成功了，会增加论文的精彩程度。虽然不是每一个论文选题都符合这个模式，但值得一试。有些人觉得同时在多个项目中工作可以在选题的时候选择可以完成的那个，这确实降低了风险。另外一些人则愿意在做任何工作之前，选一个单独的题目。</p><p>可能你只对某个领域感兴趣，这样你的选题范围就狭窄得多。有时候，你会发现系里的老师没有一个人能够指导你选择的领域，可能还会发现好像那个领域没什么很自然的选题，反而对别的领域有好想法。硕士选题比博士选题更难，因为硕士论文必须在你所知不多没有足够自信时就完成。博士选题需要考虑的一个因素是是否继续硕士阶段所研究的领域，可能拓展或者作为基础，或者干脆转到另外一个领域。待在同一个领域事情就简单了，可能只需要一到两年就毕业了，特别是如果在硕士阶段的工作中已经发现了适合做博士论文的题目。不足之处在于容易定型，改换领域则能增加知识的宽度。</p><p>有的论文题目很新奇，有的则很普通。前者开创了新领域，探索了以前未曾研究过的现象，或者为很难描述的问题提供了有效的解决方法；后者则完美地解决了定义良好的问题。两种论文都是有价值的，选择哪一种论文，取决于个人风格。</p><p>无论选什么样的题目，<strong>必须是前人未曾做过的</strong>。即使是同时有人做的工作，也不好。有很多东西可作，根本无需竞争。还有一种常见的情况，读了别人的论文后感觉很惊慌，好像它已经把你的问题解决了。这通常发生在确定论文题目过程中。实际上往往只是表面类似，因此将论文送给某个了解你的工作的高人看看，看他怎么说。另外，每个论文的“将来的工作”部分，是很好的论文题目来源。</p><p>选好题后，你必须能够回答下列问题：论文的论点是什么？你想说明什么？你必须分别有一句、一段、五分钟的答案。如果你不知道自己在干什么，别人也不会严肃对待你的选题，更糟糕的是，你会陷在选题——再选题的圈子里而不能自拔。开始作论文研究后，一定<strong>要能够用简单的语言解释每一部分的理论和实现是如何为目标服务的</strong>。记住，一旦选好了题目，你必须与导师就论文完成的标准达成清晰的一致。如果你和他对论文具有不同的期望，最后你肯定死得很惨。必须定义好“完成”的测试标准，像一系列的能够证明你的理论和程序的例子，这是必须做的，即是你的导师并不这么要求。如果环境发生了根本的变化，测试也要随之改变。用实例检验是最简单的测试方式。做论文的过程中，有很多浪费时间的方式，要避免下列活动（除非确实跟论文相关）：语言表达的设计；用户接口或者图形接口上过分讲究；发明新的形式化方法；过分优化代码；创建工具；官僚作风。任何与你的论文不是很相关的工作要尽量减少。一种众所周知的“论文逃避”现象，就是你突然发现改正某个操作系统的BUG是非常吸引人也很重要的工作，此时你总是自觉不自觉的偏离了论文的工作。要记住自己应该做些什么（本文对于部分作者来说就属于论文逃避现象）。</p><h2 id="十、研究方法论"><a href="#十、研究方法论" class="headerlink" title="十、研究方法论"></a>十、研究方法论</h2><p>研究方法学定义了什么是科研活动，如何开展研究，如何衡量研究的进展，以及什么叫做成功。不同的方法论定义了不同的研究学派。方法是工具，使用即可，不要让他们来使用你，不要把自己陷于口号之中：“在问为什么之前，先搞清楚计算的是什么”。 实际上，要在自己研究领域取得成功，你必须擅长各种技术方法，还必须具备怀疑的态度。例如，你必须能够证明定理，同时你还必须思考该定理是否说明了什么。</p><p>很多优秀的篇章都是巧妙地在几种方法论中取得平衡。例如，你必须选择一条在太多理论（可能与任何实际问题都无关）和繁琐的实现（把实际的解决方法表达得语无伦次）之间的最佳路线。你经常会面临区分“干净”和“肮脏”的研究决策。你应该花时间将问题在某种程度上形式化吗？还是保持问题的原始状态，此时虽然结构不良但更接近实际？采用前一种方法（如果可行的话）会得到清晰确定的结果，但这一过程往往是繁琐的，或者至少不会直接解决问题。后者则有陷入各种处理的漩涡之中的危险。任何工作，任何人，必须做出明智的平衡。有些工作像科学：你观察人们是怎样学习算术的，大脑是如何工作的，袋鼠是如何跳的，然后搞清楚原理，形成可检验的理论。有些工作像工程：努力创建一个更好的问题解决方法或者算法。有些工作像数学：跟形式化打交道，要理解属性，给出证明。有些工作是实例驱动的，目标是解释特定的现象。最好的工作是以上几种的结合。方法具有社会性，看看别人是如何攻克类似难题的，向别人请教他们是如何处理某种特殊情况的（内容有些难于理解，可尽量体会）。</p><h2 id="十一、情感因素"><a href="#十一、情感因素" class="headerlink" title="十一、情感因素"></a>十一、情感因素</h2><p>研究是艰苦的工作，很容易对之失去兴趣。一个令人尴尬的事实是在本实验室读博的学生只有很少比例最后获得学位。有些人离开是因为可以在产业界赚到更多的钱，或者由于个人的原因；最主要的原因则是由于论文。本节的目标是解释这种情况发生的原因，并给出一些有益的建议。</p><p><strong>所有的研究都包含风险</strong>。如果你的项目不可能失败，那是开发，不是研究。面对项目失败时是多么艰难啊，很容易将你负责的项目失败解释为你自己的失败，虽然，这实际上也证明了你有勇气向困难挑战。在人工智能领域很少有人总是一直成功，一年年地出论文。实际上，失败是经常的。你会发现他们经常是同时做几个项目，只有一些是成功的。最终成功的项目也许反复失败过多次，经历过很多由于方法错误的失败之后，才取得最终的成功。在你以后的工作生涯中，会经历很多失败。但是每一个失败的项目都代表了你的工作，很多思想，思考方式，甚至编写的代码，在若干年后你发现可用于另外一个完全不同的项目。这种效果只有在你积累了相当程度的失败之后才会显现出来。因此<strong>要有最初的失败后才会成功的信念</strong>。<strong>研究所花费的实际时间往往比计划的要多得多，</strong>一个小技巧是给每个子任务分配三倍于预期的时间（有些人加了一句：“……，即使考虑了这条原则”）。</p><p><strong>成功的关键在于使得研究成为你日常生活的一部分</strong>。很多突破和灵感都发生在你散步时。如果无时无刻地都潜意识的思考研究，就会发现思如泉涌。<strong>成功的研究者，坚持的作用一般大于天资</strong>。“尝试”也是很重要的，就是区分浅薄和重要思路的能力。你会发现自己成功的比例是很随机的。有时候，一个星期就做完了以前需要三个月才能完成的工作，这是令人欣喜的，使得你更愿意在本领域工作下去。其他一些时候，你完全陷在那里，感觉什么也做不了，这种情况很难处理。你会觉得自己永远不会做出任何有价值的东西了，或者觉得自己不再具备研究者的素质了。这些感觉几乎肯定是错误的，你需要的是暂停一下，对糟糕的结果保持高度的容忍。</p><p>通过定期设置中短期的目标，例如每周的或者每月的，你有很多工作要做。增加达到这些目标的可能性有两种方法，你可以把目标记在笔记本中，并告诉另外一个人。你可以与某个朋友商定交换每周的目标并看谁最终实现了自己的目标，或者告诉你的导师。有时你会完全陷在那里，类似于写作过程的思路阻塞，这有很多可能的原因，却并无一定的解决方法。</p><p>如果范围过于宽泛，可尝试去解决流程中的子问题。</p><p>有时候对你研究能力的怀疑会消磨掉你所有的热情而使得你一事无成。要牢记<strong>研究能力是学习而得的技能</strong>，而不是天生的。</p><p>如果发现自己陷入严重的困境，一个多星期都毫无进展，尝试每天只工作一小时。几天后，你可能就会发现一切又回到了正轨。</p><p><strong>害怕失败会使得研究工作更加困难</strong>。如果发现自己无法完成工作，问问自己是否是由于在逃避用实验检验自己的思路。发现自己最近几个月的工作完全是白费的这种可能，会阻止你进一步开展工作。没有办法避免这种情况，只要认识到失败和浪费也是研究过程的一部分。</p><p>看看Alan Lakien的书《How to Get Control of Your Time and Your Life》，其中包含很多能使你进入充满创造力的状态的无价方法。</p><p>在数学中，如果你证明了某个定理，你就确实做了某些事情；如果该定理别人都证不出来，那么你的工作是令人兴奋的。但不同的实践者、子领域和学校会强调不同的标准。这样的一个后果就是你不可能令所有的人都满意。另外一个后果就是<strong>你无法确定自己是否取得了进展</strong>，这会让你觉得很不安全。对你工作的评价从“我所见过最伟大的”到“空虚，多余，不明所以”不一而足，这都是很正常的，根据别人的反馈修订自己的工作。有几种方法有助于克服研究过程中的不安全感。被承认的感觉：包括毕业论文的接受，发表论文等。更重要的是，<strong>与尽可能多的人交流你的思路，并听取反馈</strong>。首先，他们能贡献有用的思路；其次，肯定有一些人会喜欢你的工作，这会使你感觉不错。由于评价进展的标准是如此不确定，如果不与其他的研究者充分的交流，很容易盲目。特别当你感觉不太好时，应该就你的工作进行交流。此时，很容易看不到自己的贡献，总是想：“如果我能做，肯定是微不足道的。我的所有思想都太明显了”。实际上，当你回头看时，这些虽然对你是很明显的，对别人却并不一定是明显的。将你的工作解释给很多门外汉听，你会发现对你来说平淡无奇的东西原来那么难！获得反馈和支持是非常重要的。一项对诺贝尔获奖者进行的关于怀疑自己问题（在你研究的过程中，你一直觉得自己是在做震惊世界的工作吗？）的调查表明：获奖者们一致回答他们经常怀疑自己工作的价值和正确性，都经历过觉得自己的工作是无关的、太明显了或者是错误的时期。任何科学过程中常见和重要的部分就是经常严格的评价，很多时候不能确定工作的价值也是科学过程不可避免的一部分。有些研究者发现与别人协作比单打独斗工作效果更好。</p><p>很多来到实验室的学生都是以前所在学校最厉害的人。到了这里后，会发现很多更聪明的人，这对于很多一年级学生的自尊形成了打击。但周围都是聪明人也有一个好处：在你把自己不怎么样的（但自己又没有觉察到）想法发表之前就被其他人给打倒在地了。更现实的讲，现实世界中可没有这么多聪明人，因此到外面找一份顾问的工作有利于保持心理平衡。首先，有人会为你的才能付费，这说明你确实有些东西。其次，你发现他们确实太需要你的帮助了，工作带来了满足感。反之，实验室的每一个学生都是从四百多个申请者挑选出来的，因此我们很多学生都很自大，很容易认为只有我才能解决这个问题。这并没什么错，而且有助于推进领域的发展。潜在的问题是你会发现<strong>所有的问题都比你想象的要复杂得多</strong>，研究花的时间比原先计划的多得多，完全依靠自己还做不了。这些都使得我们中的很多人陷入了严重的自信危机。你必须面对一个事实：你所做的只能对某个子领域的一小部分有所贡献，你的论文也不可能解决一个重大的问题。这需要激烈的自我重新评价，充满了痛苦，有时候需要一年左右的时间才能完成。但这一切都是值得的，不自视过高有助于以一种游戏的精神去作研究。人们能够忍受研究的痛苦至少有两个情感原因。一个是驱动：<strong>对问题的热情</strong>。你做该研究是因为离开它就没法活了，很多伟大的工作都是这样做出来的，虽然这样也有油尽灯枯的可能。另外一个原因是好的<strong>研究是充满乐趣的</strong>。在大部分时间里，研究是令人痛苦的，但是如果问题恰好适合你，你可以玩一样的解决它，享受整个过程。二者并非不可兼容，但需要有一个权衡。要想了解研究是怎么样的，遭到怀疑的时候应该如何安慰自己，读一些当代人的自传会有些作用。Gregory Bateson的 Advice to a Young Scientist，Freeman Dyson的Disturbing the Universe, Richard Feynmann的Surely You Are Joking, Feynmann和George Hardy的A Mathematician’s Apology，以及Jim Watson的The Double Helix。</p><p>当你完成了一个项目——例如论文——一两个月后，你可能会觉得这一切是那么不值。这种后冲效果是由于长时间被压抑在该问题上，而且觉得本可以做得更好。总是这样的，别太认真。等再过了一两年，回头看看，你会觉得：嘿，真棒！多棒的工作！</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;How-to-be-a-Postgraduate-student-MIT&quot;&gt;&lt;a href=&quot;#How-to-be-a-Postgraduate-student-MIT&quot; class=&quot;headerlink&quot; title=&quot;How to be a Postgraduate student(MIT)&quot;&gt;&lt;/a&gt;How to be a Postgraduate student(MIT)&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Reproduce&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本文的主旨是解释如何做研究。我们提供的这些建议，对于研究本身（阅读、写作和程序设计）、理解研究过程以及开始研究（方法论、选题、选导师和情感因素），都是极具价值的。&lt;/p&gt;
&lt;p&gt;这是什么？并没有什么神丹妙药可以保证在研究中取得成功，本文只是列举了一些可能会对研究有所帮助的非正式意见。&lt;/p&gt;
&lt;p&gt;目标读者是谁？本文主要是为新入学的研究生而写。&lt;/p&gt;
&lt;p&gt;如何使用？要精读完本文，太长了一些，最好是采用浏览的方式。很多人觉得下面的方法很有效：先快速通读一遍，然后选取其中与自己当前研究项目有关的部分仔细研究。&lt;/p&gt;
&lt;p&gt;本文被粗略地分为两部分。第一部分涉及研究者所需具备的各种技能：如阅读，写作和程序设计等等。第二部分讨论研究过程本身：即研究究竟是怎么回事，如何做研究，如何选题和选导师，如何考虑研究中的情感因素。很多读者反映，从长远看，第二部分比第一部分更有价值，也更让人感兴趣。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本文的主要内容包括：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一、掌握一些阅读的诀窍。&lt;/p&gt;
&lt;p&gt;二、如何成为研究领域的一员：与相关人员保持联系，他们可以使你保持对研究前沿的跟踪，知道应该读什么材料。&lt;/p&gt;
&lt;p&gt;三、学习相关领域的知识：对几个领域都有基本的理解，对于一个或者两个领域要精通。&lt;/p&gt;
&lt;p&gt;四、如何做研究笔记。&lt;/p&gt;
&lt;p&gt;五、如何写期刊论文和毕业论文。如何为草稿写评审意见，如何利用别人的评审意见。如何发表论文。&lt;/p&gt;
&lt;p&gt;六、如何做研究报告及演讲。&lt;/p&gt;
&lt;p&gt;七、掌握和自己相关领域的程序设计。&lt;/p&gt;
&lt;p&gt;八、有关研究生涯最重要的问题，如何选导师。不同的导师具有不同的风格，导师是你必须了解如何利用的资源。&lt;/p&gt;
&lt;p&gt;九、关于毕业论文。毕业论文将占据研究生生涯的大部分时间，本部分涉及如何选题，以及如何避免浪费时间。&lt;/p&gt;
&lt;p&gt;十、研究方法论。&lt;/p&gt;
&lt;p&gt;十一、或许是最重要的一节：涉及研究过程中的情感因素，包括如何面对失败，如何设定目标，如何避免不安全感，保持自信，享受快乐。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Reproduce" scheme="https://jacksonleon.gitee.io/tags/Reproduce/"/>
    
  </entry>
  
  <entry>
    <title>Migrating to Python 3 with pleasure</title>
    <link href="https://jacksonleon.gitee.io/posts/4197357137.html"/>
    <id>https://jacksonleon.gitee.io/posts/4197357137.html</id>
    <published>2019-05-04T01:30:29.000Z</published>
    <updated>2019-05-04T01:30:29.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Migrating-to-Python-3-with-pleasure"><a href="#Migrating-to-Python-3-with-pleasure" class="headerlink" title="Migrating to Python 3 with pleasure"></a>Migrating to Python 3 with pleasure</h1><blockquote><p>Migrating to Python 3 with pleasure</p></blockquote><a id="more"></a><h1 id="English-version"><a href="#English-version" class="headerlink" title="English version"></a>English version</h1><h2 id="A-short-guide-on-features-of-Python-3-for-data-scientists"><a href="#A-short-guide-on-features-of-Python-3-for-data-scientists" class="headerlink" title="A short guide on features of Python 3 for data scientists"></a>A short guide on features of Python 3 for data scientists</h2><p>Python became a mainstream language for machine learning and other scientific fields that heavily operate with data;<br>it boasts various deep learning frameworks and well-established set of tools for data processing and visualization.</p><p>However, Python ecosystem co-exists in Python 2 and Python 3, and Python 2 is still used among data scientists.<br>By the end of 2019 the scientific stack will <a href="http://www.python3statement.org" target="_blank" rel="noopener">stop supporting Python2</a>.<br>As for numpy, after 2018 any new feature releases will only support <a href="https://github.com/numpy/numpy/blob/master/doc/neps/dropping-python2.7-proposal.rst" target="_blank" rel="noopener">Python3</a>. <em>Update (Sep 2018): same story now with pandas, matplotlib, ipython, jupyter notebook and jupyter lab.</em></p><p>To make the transition less frustrating, I’ve collected a bunch of Python 3 features that you may find useful.</p><p><img src="https://uploads.toptal.io/blog/image/92216/toptal-blog-image-1457618659472-be2f380fe3aad41333427ecd5a1ec5c5.jpg" width="400"></p><p>Image from <a href="https://www.toptal.com/python/python-3-is-it-worth-the-switch" target="_blank" rel="noopener">Dario Bertini post (toptal)</a></p><h2 id="Better-paths-handling-with-pathlib"><a href="#Better-paths-handling-with-pathlib" class="headerlink" title="Better paths handling with pathlib"></a>Better paths handling with <code>pathlib</code></h2><p><code>pathlib</code> is a default module in python3, that helps you to avoid tons of <code>os.path.join</code>s:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"></span><br><span class="line">dataset = <span class="string">'wiki_images'</span></span><br><span class="line">datasets_root = Path(<span class="string">'/path/to/datasets/'</span>)</span><br><span class="line"></span><br><span class="line">train_path = datasets_root / dataset / <span class="string">'train'</span></span><br><span class="line">test_path = datasets_root / dataset / <span class="string">'test'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> image_path <span class="keyword">in</span> train_path.iterdir():</span><br><span class="line">    <span class="keyword">with</span> image_path.open() <span class="keyword">as</span> f: <span class="comment"># note, open is a method of Path object</span></span><br><span class="line">        <span class="comment"># do something with an image</span></span><br></pre></td></tr></table></figure><p>Previously it was always tempting to use string concatenation (concise, but obviously bad),<br>now with <code>pathlib</code> the code is safe, concise, and readable.</p><p>Also <code>pathlib.Path</code> has a bunch of methods and properties, that every python novice previously had to google:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">p.exists()</span><br><span class="line">p.is_dir()</span><br><span class="line">p.parts</span><br><span class="line">p.with_name(<span class="string">'sibling.png'</span>) <span class="comment"># only change the name, but keep the folder</span></span><br><span class="line">p.with_suffix(<span class="string">'.jpg'</span>) <span class="comment"># only change the extension, but keep the folder and the name</span></span><br><span class="line">p.chmod(mode)</span><br><span class="line">p.rmdir()</span><br></pre></td></tr></table></figure><p><code>pathlib</code> should save you lots of time,<br>please see <a href="https://docs.python.org/3/library/pathlib.html" target="_blank" rel="noopener">docs</a> and <a href="https://pymotw.com/3/pathlib/" target="_blank" rel="noopener">reference</a> for more.</p><h2 id="Type-hinting-is-now-part-of-the-language"><a href="#Type-hinting-is-now-part-of-the-language" class="headerlink" title="Type hinting is now part of the language"></a>Type hinting is now part of the language</h2><p>Example of type hinting in pycharm: <br><br><img src="images/pycharm-type-hinting.png"></p><p>Python is not just a language for small scripts anymore,<br>data pipelines these days include numerous steps each involving different frameworks (and sometimes very different logic).</p><p>Type hinting was introduced to help with growing complexity of programs, so machines could help with code verification.<br>Previously different modules used custom ways to point <a href="https://www.jetbrains.com/help/pycharm/type-hinting-in-pycharm.html#legacy" target="_blank" rel="noopener">types in docstrings</a><br>(Hint: pycharm can convert old docstrings to fresh type hinting).</p><p>As a simple example, the following code may work with different types of data (that’s what we like about python data stack).<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">repeat_each_entry</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="string">""" Each entry in the data is doubled</span></span><br><span class="line"><span class="string">    &lt;blah blah nobody reads the documentation till the end&gt;</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    index = numpy.repeat(numpy.arange(len(data)), <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> data[index]</span><br></pre></td></tr></table></figure></p><p>This code e.g. works for <code>numpy.array</code> (incl. multidimensional ones), <code>astropy.Table</code> and <code>astropy.Column</code>, <code>bcolz</code>, <code>cupy</code>, <code>mxnet.ndarray</code> and others.</p><p>This code will work for <code>pandas.Series</code>, but in the wrong way:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repeat_each_entry(pandas.Series(data=[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], index=[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])) <span class="comment"># returns Series with Nones inside</span></span><br></pre></td></tr></table></figure></p><p>This was two lines of code. Imagine how unpredictable behavior of a complex system, because just one function may misbehave.<br>Stating explicitly which types a method expects is very helpful in large systems, this will warn you if a function was passed unexpected arguments.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">repeat_each_entry</span><span class="params">(data: Union[numpy.ndarray, bcolz.carray])</span>:</span></span><br></pre></td></tr></table></figure><p>If you have a significant codebase, hinting tools like <a href="http://mypy.readthedocs.io" target="_blank" rel="noopener">MyPy</a> are likely to become part of your continuous integration pipeline.<br>A webinar <a href="https://www.youtube.com/watch?v=JqBCFfiE11g" target="_blank" rel="noopener">“Putting Type Hints to Work”</a> by Daniel Pyrathon is good for a brief introduction.</p><p>Sidenote: unfortunately, hinting is not yet powerful enough to provide fine-grained typing for ndarrays/tensors, but <a href="https://github.com/numpy/numpy/issues/7370" target="_blank" rel="noopener">maybe we’ll have it once</a>, and this will be a great feature for DS.</p><h2 id="Type-hinting-→-type-checking-in-runtime"><a href="#Type-hinting-→-type-checking-in-runtime" class="headerlink" title="Type hinting → type checking in runtime"></a>Type hinting → type checking in runtime</h2><p>By default, function annotations do not influence how your code is working, but merely help you to point code intentions.</p><p>However, you can enforce type checking in runtime with tools like … <a href="https://github.com/RussBaz/enforce" target="_blank" rel="noopener">enforce</a>,<br>this can help you in debugging (there are many cases when type hinting is not working).</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@enforce.runtime_validation</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(text: str)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">    print(text)</span><br><span class="line"></span><br><span class="line">foo(<span class="string">'Hi'</span>) <span class="comment"># ok</span></span><br><span class="line">foo(<span class="number">5</span>)    <span class="comment"># fails</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@enforce.runtime_validation</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">any2</span><span class="params">(x: List[bool])</span> -&gt; bool:</span></span><br><span class="line">    <span class="keyword">return</span> any(x)</span><br><span class="line"></span><br><span class="line">any ([<span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">True</span>, <span class="literal">False</span>]) <span class="comment"># True</span></span><br><span class="line">any2([<span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">True</span>, <span class="literal">False</span>]) <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line">any ([<span class="string">'False'</span>]) <span class="comment"># True</span></span><br><span class="line">any2([<span class="string">'False'</span>]) <span class="comment"># fails</span></span><br><span class="line"></span><br><span class="line">any ([<span class="literal">False</span>, <span class="literal">None</span>, <span class="string">""</span>, <span class="number">0</span>]) <span class="comment"># False</span></span><br><span class="line">any2([<span class="literal">False</span>, <span class="literal">None</span>, <span class="string">""</span>, <span class="number">0</span>]) <span class="comment"># fails</span></span><br></pre></td></tr></table></figure><h2 id="Other-usages-of-function-annotations"><a href="#Other-usages-of-function-annotations" class="headerlink" title="Other usages of function annotations"></a><strike>Other usages of function annotations</strike></h2><p><em>Update: starting from python 3.7 this behavior was <a href="https://www.python.org/dev/peps/pep-0563/#non-typing-usage-of-annotations" target="_blank" rel="noopener">depreciated</a>, and function annotations should be used for type hinting only. Python 4 will not support other usages of annotations.</em></p><p>As mentioned before, annotations do not influence code execution, but rather provide some meta-information,<br>and you can use it as you wish.</p><p>For instance, measurement units are a common pain in scientific areas, <code>astropy</code> package <a href="http://docs.astropy.org/en/stable/units/quantity.html#functions-that-accept-quantities" target="_blank" rel="noopener">provides a simple decorator</a> to control units of input quantities and convert output to required units<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3</span></span><br><span class="line"><span class="keyword">from</span> astropy <span class="keyword">import</span> units <span class="keyword">as</span> u</span><br><span class="line"><span class="meta">@u.quantity_input()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">frequency</span><span class="params">(speed: u.meter / u.s, wavelength: u.nm)</span> -&gt; u.terahertz:</span></span><br><span class="line">    <span class="keyword">return</span> speed / wavelength</span><br><span class="line"></span><br><span class="line">frequency(speed=<span class="number">300</span>_000 * u.km / u.s, wavelength=<span class="number">555</span> * u.nm)</span><br><span class="line"><span class="comment"># output: 540.5405405405404 THz, frequency of green visible light</span></span><br></pre></td></tr></table></figure></p><p>If you’re processing tabular scientific data in python (not necessarily astronomical), you should give <code>astropy</code> a shot.</p><p>You can also define your application-specific decorators to perform control / conversion of inputs and output in the same manner.</p><h2 id="Matrix-multiplication-with"><a href="#Matrix-multiplication-with" class="headerlink" title="Matrix multiplication with @"></a>Matrix multiplication with @</h2><p>Let’s implement one of the simplest ML models &mdash; a linear regression with l2 regularization (a.k.a. ridge regression):</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># l2-regularized linear regression: || AX - y ||^2 + alpha * ||x||^2 -&gt; min</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Python 2</span></span><br><span class="line">X = np.linalg.inv(np.dot(A.T, A) + alpha * np.eye(A.shape[<span class="number">1</span>])).dot(A.T.dot(y))</span><br><span class="line"><span class="comment"># Python 3</span></span><br><span class="line">X = np.linalg.inv(A.T @ A + alpha * np.eye(A.shape[<span class="number">1</span>])) @ (A.T @ y)</span><br></pre></td></tr></table></figure><p>The code with <code>@</code> becomes more readable and more translatable between deep learning frameworks: same code <code>X @ W + b[None, :]</code> for a single layer of perceptron works in <code>numpy</code>, <code>cupy</code>, <code>pytorch</code>, <code>tensorflow</code> (and other frameworks that operate with tensors).</p><h2 id="Globbing-with"><a href="#Globbing-with" class="headerlink" title="Globbing with **"></a>Globbing with <code>**</code></h2><p>Recursive folder globbing is not easy in Python 2, even though the <a href="https://github.com/miracle2k/python-glob2" target="_blank" rel="noopener">glob2</a> custom module exists that overcomes this. A recursive flag is supported since Python 3.5:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> glob</span><br><span class="line"></span><br><span class="line"><span class="comment"># Python 2</span></span><br><span class="line">found_images = (</span><br><span class="line">    glob.glob(<span class="string">'/path/*.jpg'</span>)</span><br><span class="line">  + glob.glob(<span class="string">'/path/*/*.jpg'</span>)</span><br><span class="line">  + glob.glob(<span class="string">'/path/*/*/*.jpg'</span>)</span><br><span class="line">  + glob.glob(<span class="string">'/path/*/*/*/*.jpg'</span>)</span><br><span class="line">  + glob.glob(<span class="string">'/path/*/*/*/*/*.jpg'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Python 3</span></span><br><span class="line">found_images = glob.glob(<span class="string">'/path/**/*.jpg'</span>, recursive=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>A better option is to use <code>pathlib</code> in python3 (minus one import!):<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3</span></span><br><span class="line">found_images = pathlib.Path(<span class="string">'/path/'</span>).glob(<span class="string">'**/*.jpg'</span>)</span><br></pre></td></tr></table></figure></p><p>Note: there are <a href="https://github.com/arogozhnikov/python3_with_pleasure/issues/16" target="_blank" rel="noopener">minor differences</a> between <code>glob.glob</code>, <code>Path.glob</code> and bash globbing.</p><h2 id="Print-is-a-function-now"><a href="#Print-is-a-function-now" class="headerlink" title="Print is a function now"></a>Print is a function now</h2><p>Yes, code now has these annoying parentheses, but there are some advantages:</p><ul><li><p>simple syntax for using file descriptor:</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> &gt;&gt;sys.stderr, <span class="string">"critical error"</span>      <span class="comment"># Python 2</span></span><br><span class="line">print(<span class="string">"critical error"</span>, file=sys.stderr)  <span class="comment"># Python 3</span></span><br></pre></td></tr></table></figure></li><li><p>printing tab-aligned tables without <code>str.join</code>:</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3</span></span><br><span class="line">print(*array, sep=<span class="string">'\t'</span>)</span><br><span class="line">print(batch, epoch, loss, accuracy, time, sep=<span class="string">'\t'</span>)</span><br></pre></td></tr></table></figure></li><li><p>hacky suppressing / redirection of printing output:</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3</span></span><br><span class="line">_print = <span class="keyword">print</span> <span class="comment"># store the original print function</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print</span><span class="params">(*args, **kargs)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span>  <span class="comment"># do something useful, e.g. store output to some file</span></span><br></pre></td></tr></table></figure><p>  In jupyter it is desirable to log each output to a separate file (to track what’s happening after you got disconnected), so you can override <code>print</code> now.</p><p>  Below you can see a context manager that temporarily overrides behavior of print:</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@contextlib.contextmanager</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">replace_print</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> builtins</span><br><span class="line">    _print = <span class="keyword">print</span> <span class="comment"># saving old print function</span></span><br><span class="line">    <span class="comment"># or use some other function here</span></span><br><span class="line">    builtins.<span class="keyword">print</span> = <span class="keyword">lambda</span> *args, **kwargs: _print(<span class="string">'new printing'</span>, *args, **kwargs)</span><br><span class="line">    <span class="keyword">yield</span></span><br><span class="line">    builtins.<span class="keyword">print</span> = _print</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> replace_print():</span><br><span class="line">    &lt;code here will invoke other <span class="keyword">print</span> function&gt;</span><br></pre></td></tr></table></figure><p>  It is <em>not</em> a recommended approach, but a small dirty hack that is now possible.</p></li><li><code>print</code> can participate in list comprehensions and other language constructs  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3</span></span><br><span class="line">result = process(x) <span class="keyword">if</span> is_valid(x) <span class="keyword">else</span> print(<span class="string">'invalid item: '</span>, x)</span><br></pre></td></tr></table></figure></li></ul><h2 id="Underscores-in-Numeric-Literal-Thousands-Separator"><a href="#Underscores-in-Numeric-Literal-Thousands-Separator" class="headerlink" title="Underscores in Numeric Literal (Thousands Separator)"></a>Underscores in Numeric Literal (Thousands Separator)</h2><p><a href="https://www.python.org/dev/peps/pep-0515/" title="PEP-515" target="_blank" rel="noopener">PEP-515</a> introduced underscores in Numeric Literals.<br>In Python3, underscores can be used to group digits visually in integral, floating-point, and complex number literals.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grouping decimal numbers by thousands</span></span><br><span class="line">one_million = <span class="number">1</span>_000_000</span><br><span class="line"></span><br><span class="line"><span class="comment"># grouping hexadecimal addresses by words</span></span><br><span class="line">addr = <span class="number">0xCAFE</span>_F00D</span><br><span class="line"></span><br><span class="line"><span class="comment"># grouping bits into nibbles in a binary literal</span></span><br><span class="line">flags = <span class="number">0</span>b_0011_1111_0100_1110</span><br><span class="line"></span><br><span class="line"><span class="comment"># same, for string conversions</span></span><br><span class="line">flags = int(<span class="string">'0b_1111_0000'</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><h2 id="f-strings-for-simple-and-reliable-formatting"><a href="#f-strings-for-simple-and-reliable-formatting" class="headerlink" title="f-strings for simple and reliable formatting"></a>f-strings for simple and reliable formatting</h2><p>The default formatting system provides a flexibility that is not required in data experiments.<br>The resulting code is either too verbose or too fragile towards any changes.</p><p>Quite typically data scientists outputs some logging information iteratively in a fixed format.<br>It is common to have a code like:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 2</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'&#123;batch:3&#125; &#123;epoch:3&#125; / &#123;total_epochs:3&#125;  accuracy: &#123;acc_mean:0.4f&#125;±&#123;acc_std:0.4f&#125; time: &#123;avg_time:3.2f&#125;'</span>.format(</span><br><span class="line">    batch=batch, epoch=epoch, total_epochs=total_epochs,</span><br><span class="line">    acc_mean=numpy.mean(accuracies), acc_std=numpy.std(accuracies),</span><br><span class="line">    avg_time=time / len(data_batch)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Python 2 (too error-prone during fast modifications, please avoid):</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'&#123;:3&#125; &#123;:3&#125; / &#123;:3&#125;  accuracy: &#123;:0.4f&#125;±&#123;:0.4f&#125; time: &#123;:3.2f&#125;'</span>.format(</span><br><span class="line">    batch, epoch, total_epochs, numpy.mean(accuracies), numpy.std(accuracies),</span><br><span class="line">    time / len(data_batch)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>Sample output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">120  12 / 300  accuracy: 0.8180±0.4649 time: 56.60</span><br></pre></td></tr></table></figure></p><p><strong>f-strings</strong> aka formatted string literals were introduced in Python 3.6:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3.6+</span></span><br><span class="line">print(<span class="string">f'<span class="subst">&#123;batch:<span class="number">3</span>&#125;</span> <span class="subst">&#123;epoch:<span class="number">3</span>&#125;</span> / <span class="subst">&#123;total_epochs:<span class="number">3</span>&#125;</span>  accuracy: <span class="subst">&#123;numpy.mean(accuracies):<span class="number">0.4</span>f&#125;</span>±<span class="subst">&#123;numpy.std(accuracies):<span class="number">0.4</span>f&#125;</span> time: <span class="subst">&#123;time / len(data_batch):<span class="number">3.2</span>f&#125;</span>'</span>)</span><br></pre></td></tr></table></figure></p><h2 id="Explicit-difference-between-‘true-division’-and-‘floor-division’"><a href="#Explicit-difference-between-‘true-division’-and-‘floor-division’" class="headerlink" title="Explicit difference between ‘true division’ and ‘floor division’"></a>Explicit difference between ‘true division’ and ‘floor division’</h2><p>For data science this is definitely a handy change </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data = pandas.read_csv(<span class="string">'timing.csv'</span>)</span><br><span class="line">velocity = data[<span class="string">'distance'</span>] / data[<span class="string">'time'</span>]</span><br></pre></td></tr></table></figure><p>Results in Python 2 depend on whether ‘time’ and ‘distance’ (e.g. measured in meters and seconds) are stored as integers.<br>In Python 3, the result is correct in both cases, because the result of division is float.</p><p>Another case is floor division, which is now an explicit operation:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n_gifts = money // gift_price  <span class="comment"># correct for int and float arguments</span></span><br></pre></td></tr></table></figure><p>In a nutshell:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> operator <span class="keyword">import</span> truediv, floordiv</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>truediv.__doc__, floordiv.__doc__</span><br><span class="line">(<span class="string">'truediv(a, b) -- Same as a / b.'</span>, <span class="string">'floordiv(a, b) -- Same as a // b.'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="number">3</span> / <span class="number">2</span>), (<span class="number">3</span> // <span class="number">2</span>), (<span class="number">3.0</span> // <span class="number">2.0</span>)</span><br><span class="line">(<span class="number">1.5</span>, <span class="number">1</span>, <span class="number">1.0</span>)</span><br></pre></td></tr></table></figure><p>Note, that this applies both to built-in types and to custom types provided by data packages (e.g. <code>numpy</code> or <code>pandas</code>).</p><h2 id="Strict-ordering"><a href="#Strict-ordering" class="headerlink" title="Strict ordering"></a>Strict ordering</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># All these comparisons are illegal in Python 3</span></span><br><span class="line"><span class="number">3</span> &lt; <span class="string">'3'</span></span><br><span class="line"><span class="number">2</span> &lt; <span class="literal">None</span></span><br><span class="line">(<span class="number">3</span>, <span class="number">4</span>) &lt; (<span class="number">3</span>, <span class="literal">None</span>)</span><br><span class="line">(<span class="number">4</span>, <span class="number">5</span>) &lt; [<span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># False in both Python 2 and Python 3</span></span><br><span class="line">(<span class="number">4</span>, <span class="number">5</span>) == [<span class="number">4</span>, <span class="number">5</span>]</span><br></pre></td></tr></table></figure><ul><li><p>prevents from occasional sorting of instances of different types</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sorted([<span class="number">2</span>, <span class="string">'1'</span>, <span class="number">3</span>])  <span class="comment"># invalid for Python 3, in Python 2 returns [2, 3, '1']</span></span><br></pre></td></tr></table></figure></li><li><p>helps to spot some problems that arise when processing raw data</p></li></ul><p>Sidenote: proper check for None is (in both Python versions)<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> a <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">  <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> a: <span class="comment"># WRONG check for None</span></span><br><span class="line">  <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></p><h2 id="Unicode-for-NLP"><a href="#Unicode-for-NLP" class="headerlink" title="Unicode for NLP"></a>Unicode for NLP</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'您好'</span></span><br><span class="line">print(len(s))</span><br><span class="line">print(s[:<span class="number">2</span>])</span><br></pre></td></tr></table></figure><p>Output:</p><ul><li>Python 2: <code>6\n��</code></li><li>Python 3: <code>2\n您好</code>.</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="string">u'со'</span></span><br><span class="line">x += <span class="string">'co'</span> <span class="comment"># ok</span></span><br><span class="line">x += <span class="string">'со'</span> <span class="comment"># fail</span></span><br></pre></td></tr></table></figure><p>Python 2 fails, Python 3 works as expected (because I’ve used russian letters in strings).</p><p>In Python 3 <code>str</code>s are unicode strings, and it is more convenient for NLP processing of non-english texts.</p><p>There are other funny things, for instance:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'a'</span> &lt; type &lt; <span class="string">u'a'</span>  <span class="comment"># Python 2: True</span></span><br><span class="line"><span class="string">'a'</span> &lt; <span class="string">u'a'</span>         <span class="comment"># Python 2: False</span></span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line">Counter(<span class="string">'Möbelstück'</span>)</span><br></pre></td></tr></table></figure><ul><li>Python 2: <code>Counter({&#39;\xc3&#39;: 2, &#39;b&#39;: 1, &#39;e&#39;: 1, &#39;c&#39;: 1, &#39;k&#39;: 1, &#39;M&#39;: 1, &#39;l&#39;: 1, &#39;s&#39;: 1, &#39;t&#39;: 1, &#39;\xb6&#39;: 1, &#39;\xbc&#39;: 1})</code></li><li>Python 3: <code>Counter({&#39;M&#39;: 1, &#39;ö&#39;: 1, &#39;b&#39;: 1, &#39;e&#39;: 1, &#39;l&#39;: 1, &#39;s&#39;: 1, &#39;t&#39;: 1, &#39;ü&#39;: 1, &#39;c&#39;: 1, &#39;k&#39;: 1})</code></li></ul><p>You can handle all of this in Python 2 properly, but Python 3 is more friendly.</p><h2 id="Preserving-order-of-dictionaries-and-kwargs"><a href="#Preserving-order-of-dictionaries-and-kwargs" class="headerlink" title="Preserving order of dictionaries and **kwargs"></a>Preserving order of dictionaries and **kwargs</h2><p>In CPython 3.6+ dicts behave like <code>OrderedDict</code> by default (and <a href="https://stackoverflow.com/questions/39980323/are-dictionaries-ordered-in-python-3-6" target="_blank" rel="noopener">this is guaranteed in Python 3.7+</a>).<br>This preserves order during dict comprehensions (and other operations, e.g. during json serialization/deserialization)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line">x = &#123;str(i):i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>)&#125;</span><br><span class="line">json.loads(json.dumps(x))</span><br><span class="line"><span class="comment"># Python 2</span></span><br><span class="line">&#123;<span class="string">u'1'</span>: <span class="number">1</span>, <span class="string">u'0'</span>: <span class="number">0</span>, <span class="string">u'3'</span>: <span class="number">3</span>, <span class="string">u'2'</span>: <span class="number">2</span>, <span class="string">u'4'</span>: <span class="number">4</span>&#125;</span><br><span class="line"><span class="comment"># Python 3</span></span><br><span class="line">&#123;<span class="string">'0'</span>: <span class="number">0</span>, <span class="string">'1'</span>: <span class="number">1</span>, <span class="string">'2'</span>: <span class="number">2</span>, <span class="string">'3'</span>: <span class="number">3</span>, <span class="string">'4'</span>: <span class="number">4</span>&#125;</span><br></pre></td></tr></table></figure><p>Same applies to <code>**kwargs</code> (in Python 3.6+), they’re kept in the same order as they appear in parameters.<br>Order is crucial when it comes to data pipelines, previously we had to write it in a cumbersome manner:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"></span><br><span class="line"><span class="comment"># Python 2</span></span><br><span class="line">model = nn.Sequential(OrderedDict([</span><br><span class="line">          (<span class="string">'conv1'</span>, nn.Conv2d(<span class="number">1</span>,<span class="number">20</span>,<span class="number">5</span>)),</span><br><span class="line">          (<span class="string">'relu1'</span>, nn.ReLU()),</span><br><span class="line">          (<span class="string">'conv2'</span>, nn.Conv2d(<span class="number">20</span>,<span class="number">64</span>,<span class="number">5</span>)),</span><br><span class="line">          (<span class="string">'relu2'</span>, nn.ReLU())</span><br><span class="line">        ]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Python 3.6+, how it *can* be done, not supported right now in pytorch</span></span><br><span class="line">model = nn.Sequential(</span><br><span class="line">    conv1=nn.Conv2d(<span class="number">1</span>,<span class="number">20</span>,<span class="number">5</span>),</span><br><span class="line">    relu1=nn.ReLU(),</span><br><span class="line">    conv2=nn.Conv2d(<span class="number">20</span>,<span class="number">64</span>,<span class="number">5</span>),</span><br><span class="line">    relu2=nn.ReLU())</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p>Did you notice? Uniqueness of names is also checked automatically.</p><h2 id="Iterable-unpacking"><a href="#Iterable-unpacking" class="headerlink" title="Iterable unpacking"></a>Iterable unpacking</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># handy when amount of additional stored info may vary between experiments, but the same code can be used in all cases</span></span><br><span class="line">model_paramteres, optimizer_parameters, *other_params = load(checkpoint_name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># picking two last values from a sequence</span></span><br><span class="line">*prev, next_to_last, last = values_history</span><br><span class="line"></span><br><span class="line"><span class="comment"># This also works with any iterables, so if you have a function that yields e.g. qualities,</span></span><br><span class="line"><span class="comment"># below is a simple way to take only last two values from a list</span></span><br><span class="line">*prev, next_to_last, last = iter_train(args)</span><br></pre></td></tr></table></figure><h2 id="Default-pickle-engine-provides-better-compression-for-arrays"><a href="#Default-pickle-engine-provides-better-compression-for-arrays" class="headerlink" title="Default pickle engine provides better compression for arrays"></a>Default pickle engine provides better compression for arrays</h2><p>Pickling is a mechanism to pass data between threads / processes, in particular used inside <code>multiprocessing</code> package. </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 2</span></span><br><span class="line"><span class="keyword">import</span> cPickle <span class="keyword">as</span> pickle</span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">print</span> len(pickle.dumps(numpy.random.normal(size=[<span class="number">1000</span>, <span class="number">1000</span>])))</span><br><span class="line"><span class="comment"># result: 23691675</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Python 3</span></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line">len(pickle.dumps(numpy.random.normal(size=[<span class="number">1000</span>, <span class="number">1000</span>])))</span><br><span class="line"><span class="comment"># result: 8000162</span></span><br></pre></td></tr></table></figure><p>Three times less space. And it is <em>much</em> faster.<br>Actually similar compression (but not speed) is achievable with <code>protocol=2</code> parameter, but developers typically ignore this option (or simply are not aware of it). </p><p>Note: pickle is <a href="https://docs.python.org/3/library/pickle.html" target="_blank" rel="noopener">not safe</a> (and not quite transferrable), so never unpickle data received from an untrusted or unauthenticated source.</p><h2 id="Safer-comprehensions"><a href="#Safer-comprehensions" class="headerlink" title="Safer comprehensions"></a>Safer comprehensions</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">labels = &lt;initial_value&gt;</span><br><span class="line">predictions = [model.predict(data) <span class="keyword">for</span> data, labels <span class="keyword">in</span> dataset]</span><br><span class="line"></span><br><span class="line"><span class="comment"># labels are overwritten in Python 2</span></span><br><span class="line"><span class="comment"># labels are not affected by comprehension in Python 3</span></span><br></pre></td></tr></table></figure><h2 id="Super-simply-super"><a href="#Super-simply-super" class="headerlink" title="Super, simply super()"></a>Super, simply super()</h2><p>Python 2 <code>super(...)</code> was a frequent source of mistakes in code.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 2</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySubClass</span><span class="params">(MySuperClass)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, **options)</span>:</span></span><br><span class="line">        super(MySubClass, self).__init__(name=<span class="string">'subclass'</span>, **options)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Python 3</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySubClass</span><span class="params">(MySuperClass)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, **options)</span>:</span></span><br><span class="line">        super().__init__(name=<span class="string">'subclass'</span>, **options)</span><br></pre></td></tr></table></figure><p>More on <code>super</code> and method resolution order on <a href="https://stackoverflow.com/questions/576169/understanding-python-super-with-init-methods" target="_blank" rel="noopener">stackoverflow</a>.</p><h2 id="Better-IDE-suggestions-with-variable-annotations"><a href="#Better-IDE-suggestions-with-variable-annotations" class="headerlink" title="Better IDE suggestions with variable annotations"></a>Better IDE suggestions with variable annotations</h2><p>The most enjoyable thing about programming in languages like Java, C# and alike is that IDE can make very good suggestions,<br>because type of each identifier is known before executing a program.</p><p>In python this is hard to achieve, but annotations will help you</p><ul><li>write your expectations in a clear form</li><li>and get good suggestions from IDE</li></ul><p><img src="images/variable_annotations.png"><br><br>This is an example of PyCharm suggestions with variable annotations.<br>This works even in situations when functions you use are not annotated (e.g. due to backward compatibility).</p><h2 id="Multiple-unpacking"><a href="#Multiple-unpacking" class="headerlink" title="Multiple unpacking"></a>Multiple unpacking</h2><p>Here is how you merge two dicts now:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x = dict(a=<span class="number">1</span>, b=<span class="number">2</span>)</span><br><span class="line">y = dict(b=<span class="number">3</span>, d=<span class="number">4</span>)</span><br><span class="line"><span class="comment"># Python 3.5+</span></span><br><span class="line">z = &#123;**x, **y&#125;</span><br><span class="line"><span class="comment"># z = &#123;'a': 1, 'b': 3, 'd': 4&#125;, note that value for `b` is taken from the latter dict.</span></span><br></pre></td></tr></table></figure></p><p>See <a href="https://stackoverflow.com/questions/38987/how-to-merge-two-dictionaries-in-a-single-expression" target="_blank" rel="noopener">this thread at StackOverflow</a> for a comparison with Python 2.</p><p>The same approach also works for lists, tuples, and sets (<code>a</code>, <code>b</code>, <code>c</code> are any iterables):<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[*a, *b, *c] <span class="comment"># list, concatenating</span></span><br><span class="line">(*a, *b, *c) <span class="comment"># tuple, concatenating</span></span><br><span class="line">&#123;*a, *b, *c&#125; <span class="comment"># set, union</span></span><br></pre></td></tr></table></figure></p><p>Functions also <a href="https://docs.python.org/3/whatsnew/3.5.html#whatsnew-pep-448" target="_blank" rel="noopener">support multiple unpacking</a> for <code>*args</code> and <code>**kwargs</code>:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3.5+</span></span><br><span class="line">do_something(**&#123;**default_settings, **custom_settings&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Also possible, this code also checks there is no intersection between keys of dictionaries</span></span><br><span class="line">do_something(**first_args, **second_args)</span><br></pre></td></tr></table></figure></p><h2 id="Future-proof-APIs-with-keyword-only-arguments"><a href="#Future-proof-APIs-with-keyword-only-arguments" class="headerlink" title="Future-proof APIs with keyword-only arguments"></a>Future-proof APIs with keyword-only arguments</h2><p>Let’s consider this snippet<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model = sklearn.svm.SVC(<span class="number">2</span>, <span class="string">'poly'</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">0.5</span>)</span><br></pre></td></tr></table></figure></p><p>Obviously, an author of this code didn’t get the Python style of coding yet (most probably, just jumped from cpp or rust).<br>Unfortunately, this is not just question of taste, because changing the order of arguments (adding/deleting) in <code>SVC</code> will break this code. In particular, <code>sklearn</code> does some reordering/renaming from time to time of numerous algorithm parameters to provide consistent API. Each such refactoring may drive to broken code.</p><p>In Python 3, library authors may demand explicitly named parameters by using <code>*</code>:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SVC</span><span class="params">(BaseSVC)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, *, C=<span class="number">1.0</span>, kernel=<span class="string">'rbf'</span>, degree=<span class="number">3</span>, gamma=<span class="string">'auto'</span>, coef0=<span class="number">0.0</span>, ... )</span></span></span><br></pre></td></tr></table></figure></p><ul><li>users have to specify names of parameters <code>sklearn.svm.SVC(C=2, kernel=&#39;poly&#39;, degree=2, gamma=4, coef0=0.5)</code> now</li><li>this mechanism provides a great combination of reliability and flexibility of APIs</li></ul><h2 id="Data-classes"><a href="#Data-classes" class="headerlink" title="Data classes"></a>Data classes</h2><p>Python 3.7 introduces data classes, a good replacement for <code>namedtuple</code> in most cases.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@dataclass</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    name: str</span><br><span class="line">    age: int</span><br><span class="line"></span><br><span class="line"><span class="meta">@dataclass</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Coder</span><span class="params">(Person)</span>:</span></span><br><span class="line">    preferred_language: str = <span class="string">'Python 3'</span></span><br></pre></td></tr></table></figure></p><p><code>dataclass</code> decorator takes the job of implementing routine methods for you (initialization, representation, comparison, and hashing when applicable).<br>Let’s name some features:</p><ul><li>data classes can be both mutable and immutable</li><li>default values for fields are supported</li><li>inheritance</li><li>data classes are still old good classes: you can define new methods and override existing</li><li>post-init processing (e.g. to verify consistency) </li></ul><p>Geir Arne Hjelle gives a good overview of dataclasses <a href="https://realpython.com/python-data-classes/" target="_blank" rel="noopener">in his post</a>.</p><h2 id="Customizing-access-to-module-attributes"><a href="#Customizing-access-to-module-attributes" class="headerlink" title="Customizing access to module attributes"></a>Customizing access to module attributes</h2><p>In Python you can control attribute access and hinting with <code>__getattr__</code> and <code>__dir__</code> for any object. Since python 3.7 you can do it for modules too.</p><p>A natural example is implementing a <code>random</code> submodule of tensor libraries, which is typically a shortcut to skip initialization and passing of RandomState objects. Here’s implementation for numpy:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nprandom.py</span></span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line">__random_state = numpy.random.RandomState()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__getattr__</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> getattr(__random_state, name)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__dir__</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> dir(__random_state)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">seed</span><span class="params">(seed)</span>:</span></span><br><span class="line">    __random_state = numpy.random.RandomState(seed=seed)</span><br></pre></td></tr></table></figure></p><p>One can also mix this way functionalities of different objects/submodules. Compare with tricks in <a href="https://github.com/pytorch/pytorch/blob/3ce17bf8f6a2c4239085191ea60d6ee51cd620a5/torch/__init__.py#L253-L256" target="_blank" rel="noopener">pytorch</a> and <a href="https://github.com/cupy/cupy/blob/94592ecac8152d5f4a56a129325cc91d184480ad/cupy/random/distributions.py" target="_blank" rel="noopener">cupy</a>.</p><p>Additionally, now one can</p><ul><li>use it for <a href="https://snarky.ca/lazy-importing-in-python-3-7/" target="_blank" rel="noopener">lazy loading of submodules</a>. For example, <code>import tensorflow</code> takes <strong>~150MB</strong> of RAM is imports all submodules (and dependencies). </li><li>use this for <a href="https://www.python.org/dev/peps/pep-0562/" target="_blank" rel="noopener">deprecations in API</a></li><li>introduce runtime routing between submodules</li></ul><h2 id="Built-in-breakpoint"><a href="#Built-in-breakpoint" class="headerlink" title="Built-in breakpoint()"></a>Built-in breakpoint()</h2><p>Just write <code>breakpoint()</code> in the code to invoke debugger.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3.7+, not all IDEs support this at the moment</span></span><br><span class="line">foo()</span><br><span class="line">breakpoint()</span><br><span class="line">bar()</span><br></pre></td></tr></table></figure></p><p>For remote debugging you may want to try <a href="https://hackernoon.com/python-3-7s-new-builtin-breakpoint-a-quick-tour-4f1aebc444c" target="_blank" rel="noopener">combining breakpoint() with <code>web-pdb</code></a></p><h2 id="Minor-constants-in-math-module"><a href="#Minor-constants-in-math-module" class="headerlink" title="Minor: constants in math module"></a>Minor: constants in <code>math</code> module</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3</span></span><br><span class="line">math.inf <span class="comment"># Infinite float</span></span><br><span class="line">math.nan <span class="comment"># not a number</span></span><br><span class="line"></span><br><span class="line">max_quality = -math.inf  <span class="comment"># no more magic initial values!</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> model <span class="keyword">in</span> trained_models:</span><br><span class="line">    max_quality = max(max_quality, compute_quality(model, data))</span><br></pre></td></tr></table></figure><h2 id="Minor-single-integer-type"><a href="#Minor-single-integer-type" class="headerlink" title="Minor: single integer type"></a>Minor: single integer type</h2><p>Python 2 provides two basic integer types, which are <code>int</code> (64-bit signed integer) and <code>long</code> for long arithmetics (quite confusing after C++).</p><p>Python 3 has a single type <code>int</code>, which incorporates long arithmetics.</p><p>Here is how you check that value is integer:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">isinstance(x, numbers.Integral) <span class="comment"># Python 2, the canonical way</span></span><br><span class="line">isinstance(x, (long, int))      <span class="comment"># Python 2</span></span><br><span class="line">isinstance(x, int)              <span class="comment"># Python 3, easier to remember</span></span><br></pre></td></tr></table></figure><p>Update: first check also works for <em>other integral types</em>, such as <code>numpy.int32</code>, <code>numpy.int64</code>, but others don’t. So they’re not equivalent.</p><h2 id="Other-stuff"><a href="#Other-stuff" class="headerlink" title="Other stuff"></a>Other stuff</h2><ul><li><code>Enum</code>s are theoretically useful, but<ul><li>string-typing is already widely adopted in the python data stack</li><li><code>Enum</code>s don’t seem to interplay with numpy and categorical from pandas</li></ul></li><li>coroutines also <em>sound</em> very promising for data pipelining (see <a href="http://www.dabeaz.com/coroutines/Coroutines.pdf" target="_blank" rel="noopener">slides</a> by David Beazley), but I don’t see their adoption in the wild.</li><li>Python 3 has <a href="https://www.python.org/dev/peps/pep-0384/" target="_blank" rel="noopener">stable ABI</a></li><li>Python 3 supports unicode identifies (so <code>ω = Δφ / Δt</code> is ok), but you’d <a href="https://stackoverflow.com/a/29855176/498892" target="_blank" rel="noopener">better use good old ASCII names</a></li><li>some libraries e.g. <a href="https://github.com/jupyterhub/jupyterhub" target="_blank" rel="noopener">jupyterhub</a> (jupyter in cloud), django and fresh ipython only support Python 3, so features that sound useless for you are useful for libraries you’ll probably want to use once.</li></ul><h3 id="Problems-for-code-migration-specific-for-data-science-and-how-to-resolve-those"><a href="#Problems-for-code-migration-specific-for-data-science-and-how-to-resolve-those" class="headerlink" title="Problems for code migration specific for data science (and how to resolve those)"></a>Problems for code migration specific for data science (and how to resolve those)</h3><ul><li><p>support for nested arguments <a href="https://www.python.org/dev/peps/pep-3113/" target="_blank" rel="noopener">was dropped</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">map(<span class="keyword">lambda</span> x, (y, z): x, z, dict.items())</span><br></pre></td></tr></table></figure><p>However, it is still perfectly working with different comprehensions:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;x:z <span class="keyword">for</span> x, (y, z) <span class="keyword">in</span> d.items()&#125;</span><br></pre></td></tr></table></figure><p>In general, comprehensions are also better ‘translatable’ between Python 2 and 3.</p></li><li><p><code>map()</code>, <code>.keys()</code>, <code>.values()</code>, <code>.items()</code>, etc. return iterators, not lists. Main problems with iterators are:</p><ul><li>no trivial slicing</li><li>can’t be iterated twice</li></ul><p>Almost all of the problems are resolved by converting result to list.</p></li><li><p>see <a href="https://eev.ee/blog/2016/07/31/python-faq-how-do-i-port-to-python-3/" target="_blank" rel="noopener">Python FAQ: How do I port to Python 3?</a> when in trouble</p></li></ul><h3 id="Main-problems-for-teaching-machine-learning-and-data-science-with-python"><a href="#Main-problems-for-teaching-machine-learning-and-data-science-with-python" class="headerlink" title="Main problems for teaching machine learning and data science with python"></a>Main problems for teaching machine learning and data science with python</h3><p>Course authors should spend time in the first lectures to explain what is an iterator,<br>why it can’t be sliced / concatenated / multiplied / iterated twice like a string (and how to deal with it).</p><p>I think most course authors would be happy to avoid these details, but now it is hardly possible.</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Python 2 and Python 3 have co-existed for almost 10 years, but we <em>should</em> move to Python 3.</p><p>Research and production code should become a bit shorter, more readable, and significantly safer after moving to Python 3-only codebase.</p><p>Right now most libraries support both Python versions.<br>And I can’t wait for the bright moment when packages drop support for Python 2 and enjoy new language features.</p><p>Following migrations are promised to be smoother: <a href="https://snarky.ca/why-python-3-exists/" target="_blank" rel="noopener">“we will never do this kind of backwards-incompatible change again”</a></p><h3 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h3><ul><li><a href="http://sebastianraschka.com/Articles/2014_python_2_3_key_diff.html" target="_blank" rel="noopener">Key differences between Python 2.7 and Python 3.x</a></li><li><a href="https://eev.ee/blog/2016/07/31/python-faq-how-do-i-port-to-python-3/" target="_blank" rel="noopener">Python FAQ: How do I port to Python 3?</a></li><li><a href="http://www.asmeurer.com/python3-presentation/slides.html" target="_blank" rel="noopener">10 awesome features of Python that you can’t use because you refuse to upgrade to Python 3</a></li><li><a href="http://pyvideo.org/pycon-us-2013/python-33-trust-me-its-better-than-27.html" target="_blank" rel="noopener">Trust me, python 3.3 is better than 2.7 (video)</a></li><li><a href="http://python-3-for-scientists.readthedocs.io/en/latest/" target="_blank" rel="noopener">Python 3 for scientists</a></li></ul><h3 id="License"><a href="#License" class="headerlink" title="License"></a>License</h3><p>This text was published by <a href="https://arogozhnikov.github.io/about/" target="_blank" rel="noopener">Alex Rogozhnikov</a> and <a href="https://github.com/arogozhnikov/python3_with_pleasure/graphs/contributors" target="_blank" rel="noopener">contributors</a> under <a href="https://creativecommons.org/licenses/by-sa/3.0/" target="_blank" rel="noopener">CC BY-SA 3.0 License</a> (excluding images).</p><h1 id="中文版本"><a href="#中文版本" class="headerlink" title="中文版本"></a>中文版本</h1><h2 id="为数据科学家提供的关于Python-3特性的简介"><a href="#为数据科学家提供的关于Python-3特性的简介" class="headerlink" title="为数据科学家提供的关于Python 3特性的简介"></a>为数据科学家提供的关于Python 3特性的简介</h2><blockquote><p>Python became a mainstream language for machine learning and other scientific fields that heavily operate with data;<br>it boasts various deep learning frameworks and well-established set of tools for data processing and visualization.</p></blockquote><p>Python 已成为机器学习以及其他紧密结合数据的科学领域的主流语言；它提供了各种深度学习的框架以及一系列完善的数据处理和可视化工具。</p><blockquote><p>However, Python ecosystem co-exists in Python 2 and Python 3, and Python 2 is still used among data scientists.<br>By the end of 2019 the scientific stack will <a href="http://www.python3statement.org" target="_blank" rel="noopener">stop supporting Python2</a>.<br>As for numpy, after 2018 any new feature releases will only support <a href="https://github.com/numpy/numpy/blob/master/doc/neps/dropping-python2.7-proposal.rst" target="_blank" rel="noopener">Python3</a>.</p></blockquote><p>然而，Python 的生态圈中 Python 2 和 Python 3 是共存状态，并且数据科学家之中是依然有使用 Python 2 的。2019年年底（Python的）科学组件将会<a href="http://www.python3statement.org" target="_blank" rel="noopener">停止支持 Python 2 </a>。 至于numpy，2018年之后任何推出的新特性将会只支持<a href="https://github.com/numpy/numpy/blob/master/doc/neps/dropping-python2.7-proposal.rst" target="_blank" rel="noopener">Python 3</a> 。</p><blockquote><p>To make the transition less frustrating, I’ve collected a bunch of Python 3 features that you may find useful.</p></blockquote><p>为了让这一过渡更轻松一点，我整理了一些 Python 3 你可能觉得有用的特性。</p><p><img src="https://uploads.toptal.io/blog/image/92216/toptal-blog-image-1457618659472-be2f380fe3aad41333427ecd5a1ec5c5.jpg" width="400"></p><p>图片来源 <a href="https://www.toptal.com/python/python-3-is-it-worth-the-switch" target="_blank" rel="noopener">Dario Bertini post (toptal)</a></p><h2 id="pathlib提供了更好的路径处理"><a href="#pathlib提供了更好的路径处理" class="headerlink" title="pathlib提供了更好的路径处理"></a><code>pathlib</code>提供了更好的路径处理</h2><blockquote><p><code>pathlib</code> is a default module in python3, that helps you to avoid tons of <code>os.path.join</code>s:</p></blockquote><p><code>pathlib</code> 是Python 3 一个默认的组件，有助于避免大量使用<code>os.path.join</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"></span><br><span class="line">dataset = <span class="string">'wiki_images'</span></span><br><span class="line">datasets_root = Path(<span class="string">'/path/to/datasets/'</span>)</span><br><span class="line"></span><br><span class="line">train_path = datasets_root / dataset / <span class="string">'train'</span></span><br><span class="line">test_path = datasets_root / dataset / <span class="string">'test'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> image_path <span class="keyword">in</span> train_path.iterdir():</span><br><span class="line">    <span class="keyword">with</span> image_path.open() <span class="keyword">as</span> f: <span class="comment"># note, open is a method of Path object</span></span><br><span class="line">        <span class="comment"># do something with an image</span></span><br></pre></td></tr></table></figure><blockquote><p>Previously it was always tempting to use string concatenation (concise, but obviously bad),<br>now with <code>pathlib</code> the code is safe, concise, and readable.</p></blockquote><p>以前，人们倾向于使用字符串连接（虽然简洁，但明显不好）；现在，代码中用<code>pathlib</code>是安全的，简洁的，并且更有可读性。</p><blockquote><p>Also <code>pathlib.Path</code> has a bunch of methods and properties, that every python novice previously had to google:</p></blockquote><p>此外，<code>pathlib.Path</code>有大量的方法和属性，每一位 Python 早期的初学者不得不谷歌了解：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">p.exists()</span><br><span class="line">p.is_dir()</span><br><span class="line">p.parts</span><br><span class="line">p.with_name(<span class="string">'sibling.png'</span>) <span class="comment"># only change the name, but keep the folder</span></span><br><span class="line">p.with_suffix(<span class="string">'.jpg'</span>) <span class="comment"># only change the extension, but keep the folder and the name</span></span><br><span class="line">p.chmod(mode)</span><br><span class="line">p.rmdir()</span><br></pre></td></tr></table></figure><blockquote><p><code>pathlib</code> should save you lots of time,<br>please see <a href="https://docs.python.org/3/library/pathlib.html" target="_blank" rel="noopener">docs</a> and <a href="https://pymotw.com/3/pathlib/" target="_blank" rel="noopener">reference</a> for more.</p></blockquote><p><code>pathlib</code> 应当会节省大量时间，请参看<a href="https://docs.python.org/3/library/pathlib.html" target="_blank" rel="noopener">文档</a>以及<a href="https://pymotw.com/3/pathlib/" target="_blank" rel="noopener">指南</a>了解更多。</p><h2 id="类型提示现在已是这语言的一部分"><a href="#类型提示现在已是这语言的一部分" class="headerlink" title="类型提示现在已是这语言的一部分"></a>类型提示现在已是这语言的一部分</h2><blockquote><p>Example of type hinting in pycharm: <br></p></blockquote><p>pycharm环境类型提示的例子：</p><p><img src="images/pycharm-type-hinting.png"></p><blockquote><p>Python is not just a language for small scripts anymore,<br>data pipelines these days include numerous steps each involving different frameworks (and sometimes very different logic).</p></blockquote><p>Python 不再是一种小型的脚本语言，数据管道现如今包含数个级别，而每一级又涉及到不同的框架（甚至有时是千差万别的逻辑）。</p><blockquote><p>Type hinting was introduced to help with growing complexity of programs, so machines could help with code verification.<br>Previously different modules used custom ways to point <a href="https://www.jetbrains.com/help/pycharm/type-hinting-in-pycharm.html#legacy" target="_blank" rel="noopener">types in docstrings</a><br>(Hint: pycharm can convert old docstrings to fresh type hinting).</p></blockquote><p>类型提示的引入是为了在程序的持续增加的复杂性方面提供帮助，这样机器可以辅助代码验证。以前不同的模块使用自定义的方式指定<a href="https://www.jetbrains.com/help/pycharm/type-hinting-in-pycharm.html#legacy" target="_blank" rel="noopener">文档字符中的类型</a>(提示：pycharm可以将旧的字符串转换成新的类型提示)。</p><blockquote><p>As a simple example, the following code may work with different types of data (that’s what we like about python data stack).</p></blockquote><p>作为一个简单的例子，下面的代码可以适用于数据的不同类型（这也是关于数据栈我们喜欢的一点）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">repeat_each_entry</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="string">""" Each entry in the data is doubled</span></span><br><span class="line"><span class="string">    &lt;blah blah nobody reads the documentation till the end&gt;</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    index = numpy.repeat(numpy.arange(len(data)), <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> data[index]</span><br></pre></td></tr></table></figure><blockquote><p>This code e.g. works for <code>numpy.array</code> (incl. multidimensional ones), <code>astropy.Table</code> and <code>astropy.Column</code>, <code>bcolz</code>, <code>cupy</code>, <code>mxnet.ndarray</code> and others.</p></blockquote><p>这段代码可适用于例如 <code>numpy.array</code> (包括多维数组)， <code>astropy.Table</code> 以及 <code>astropy.Column</code>， <code>bcolz</code>， <code>cupy</code>, <code>mxnet.ndarray</code> 和其他的组件。</p><blockquote><p>This code will work for <code>pandas.Series</code>, but in the wrong way:</p></blockquote><p>这段代码虽然也适用于<code>pandas.Series</code>，但是是错误的使用方式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repeat_each_entry(pandas.Series(data=[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], index=[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])) <span class="comment"># returns Series with Nones inside</span></span><br></pre></td></tr></table></figure><blockquote><p>This was two lines of code. Imagine how unpredictable behavior of a complex system, because just one function may misbehave.<br>Stating explicitly which types a method expects is very helpful in large systems, this will warn you if a function was passed unexpected arguments.</p></blockquote><p>这曾经是两行代码。想象一下一个复杂系统不可预知的行为，仅仅是因为一个功能可能会失败。在大型的系统中，明确地指出方法期望的类型是非常有帮助的。如果一个方法通过了意外参数，则会给出警告。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">repeat_each_entry</span><span class="params">(data: Union[numpy.ndarray, bcolz.carray])</span>:</span></span><br></pre></td></tr></table></figure><blockquote><p>If you have a significant codebase, hinting tools like <a href="http://mypy.readthedocs.io" target="_blank" rel="noopener">MyPy</a> are likely to become part of your continuous integration pipeline.A webinar <a href="https://www.youtube.com/watch?v=JqBCFfiE11g" target="_blank" rel="noopener">“Putting Type Hints to Work”</a> by Daniel Pyrathon is good for a brief introduction.</p></blockquote><p>如果你有一个重要的代码仓库，比如<a href="http://mypy.readthedocs.io" target="_blank" rel="noopener">MyPy</a>的提示工具有可能成为你持续集成管道的一部分。Daniel Pyrathon主持的<a href="https://www.youtube.com/watch?v=JqBCFfiE11g" target="_blank" rel="noopener">“Putting Type Hints to Work”</a>研讨会，给出了一个很好的简介。</p><blockquote><p>Sidenote: unfortunately, hinting is not yet powerful enough to provide fine-grained typing for ndarrays/tensors, but <a href="https://github.com/numpy/numpy/issues/7370" target="_blank" rel="noopener">maybe we’ll have it once</a>, and this will be a great feature for DS.</p></blockquote><p>边注：不幸的是，提示信息还不够强大为多维数组/张量提供精细的提示。但是<a href="https://github.com/numpy/numpy/issues/7370" target="_blank" rel="noopener">也许我们会有</a>，并且这将是DS的一个强大功能。</p><h2 id="类型提示-→-在运行时检查类型"><a href="#类型提示-→-在运行时检查类型" class="headerlink" title="类型提示 → 在运行时检查类型"></a>类型提示 → 在运行时检查类型</h2><blockquote><p>By default, function annotations do not influence how your code is working, but merely help you to point code intentions.</p></blockquote><p>默认情况下，方法声明不会影响你运行中的代码，而只是帮助你指出代码的意图。</p><blockquote><p>However, you can enforce type checking in runtime with tools like … <a href="https://github.com/RussBaz/enforce" target="_blank" rel="noopener">enforce</a>,<br>this can help you in debugging (there are many cases when type hinting is not working).</p></blockquote><p>然而，你可以利用工具，比如<a href="https://github.com/RussBaz/enforce" target="_blank" rel="noopener">enforce</a>，在代码运行时执行类型检查，这对你在debug代码时是很有帮助的（类型提示不起作用的情况也很多）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@enforce.runtime_validation</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(text: str)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">    print(text)</span><br><span class="line"></span><br><span class="line">foo(<span class="string">'Hi'</span>) <span class="comment"># ok</span></span><br><span class="line">foo(<span class="number">5</span>)    <span class="comment"># fails</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@enforce.runtime_validation</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">any2</span><span class="params">(x: List[bool])</span> -&gt; bool:</span></span><br><span class="line">    <span class="keyword">return</span> any(x)</span><br><span class="line"></span><br><span class="line">any ([<span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">True</span>, <span class="literal">False</span>]) <span class="comment"># True</span></span><br><span class="line">any2([<span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">True</span>, <span class="literal">False</span>]) <span class="comment"># True</span></span><br><span class="line"></span><br><span class="line">any ([<span class="string">'False'</span>]) <span class="comment"># True</span></span><br><span class="line">any2([<span class="string">'False'</span>]) <span class="comment"># fails</span></span><br><span class="line"></span><br><span class="line">any ([<span class="literal">False</span>, <span class="literal">None</span>, <span class="string">""</span>, <span class="number">0</span>]) <span class="comment"># False</span></span><br><span class="line">any2([<span class="literal">False</span>, <span class="literal">None</span>, <span class="string">""</span>, <span class="number">0</span>]) <span class="comment"># fails</span></span><br></pre></td></tr></table></figure><h2 id="方法声明的其他用途"><a href="#方法声明的其他用途" class="headerlink" title="方法声明的其他用途"></a>方法声明的其他用途</h2><blockquote><p>As mentioned before, annotations do not influence code execution, but rather provide some meta-information,<br>and you can use it as you wish.</p></blockquote><p>正如之前提到的，声明不会影响代码执行，而只是提供一些元信息，此外你也可以随意使用。</p><blockquote><p>For instance, measurement units are a common pain in scientific areas, <code>astropy</code> package <a href="http://docs.astropy.org/en/stable/units/quantity.html#functions-that-accept-quantities" target="_blank" rel="noopener">provides a simple decorator</a> to control units of input quantities and convert output to required units.</p></blockquote><p>比如，测量单位是科学领域常见的痛点，<code>astropy</code>包<a href="http://docs.astropy.org/en/stable/units/quantity.html#functions-that-accept-quantities" target="_blank" rel="noopener">提供了一个简单的装饰器</a>用来控制输入数量的单位及转换输出部分所需的单位。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3</span></span><br><span class="line"><span class="keyword">from</span> astropy <span class="keyword">import</span> units <span class="keyword">as</span> u</span><br><span class="line"><span class="meta">@u.quantity_input()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">frequency</span><span class="params">(speed: u.meter / u.s, wavelength: u.m)</span> -&gt; u.terahertz:</span></span><br><span class="line">    <span class="keyword">return</span> speed / wavelength</span><br><span class="line"></span><br><span class="line">frequency(speed=<span class="number">300</span>_000 * u.km / u.s, wavelength=<span class="number">555</span> * u.nm)</span><br><span class="line"><span class="comment"># output: 540.5405405405404 THz, frequency of green visible light</span></span><br></pre></td></tr></table></figure></p><blockquote><p>If you’re processing tabular scientific data in python (not necessarily astronomical), you should give <code>astropy</code> a shot.</p></blockquote><p>如果你正在用Python处理表格式的科学数据（没必要是天文数字），那么你应该试试<code>astropy</code>。</p><blockquote><p>You can also define your application-specific decorators to perform control / conversion of inputs and output in the same manner.</p></blockquote><p>你也可以自定义专用的装饰器，以相同的方式执行输入和输出的控制/转换。</p><h2 id="矩阵乘号"><a href="#矩阵乘号" class="headerlink" title="矩阵乘号 @"></a>矩阵乘号 @</h2><blockquote><p>Let’s implement one of the simplest ML models &mdash; a linear regression with l2 regularization (a.k.a. ridge regression):</p></blockquote><p>让我们来实现一个最简单的 ML(机器学习) 模型 &mdash; 具有 l2 正则化的线性回归（又名岭回归）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># l2-regularized linear regression: || AX - b ||^2 + alpha * ||x||^2 -&gt; min</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Python 2</span></span><br><span class="line">X = np.linalg.inv(np.dot(A.T, A) + alpha * np.eye(A.shape[<span class="number">1</span>])).dot(A.T.dot(b))</span><br><span class="line"><span class="comment"># Python 3</span></span><br><span class="line">X = np.linalg.inv(A.T @ A + alpha * np.eye(A.shape[<span class="number">1</span>])) @ (A.T @ b)</span><br></pre></td></tr></table></figure><blockquote><p>The code with <code>@</code> becomes more readable and more translatable between deep learning frameworks: same code <code>X @ W + b[None, :]</code> for a single layer of perceptron works in <code>numpy</code>, <code>cupy</code>, <code>pytorch</code>, <code>tensorflow</code> (and other frameworks that operate with tensors).</p></blockquote><p>使用<code>@</code>的代码在深度学习框架之间变得更有可读性和可转换性：对于单层感知器，相同的代码<code>X @ W + b[None, :]</code> 可运行与<code>numpy</code>、 <code>cupy</code>、 <code>pytorch</code>、 <code>tensorflow</code>（以及其他基于张量运行的框架）。</p><h2 id="通配符"><a href="#通配符" class="headerlink" title="通配符 **"></a>通配符 <code>**</code></h2><blockquote><p>Recursive folder globbing is not easy in Python 2, even though the <a href="https://github.com/miracle2k/python-glob2" target="_blank" rel="noopener">glob2</a> custom module exists that overcomes this. A recursive flag is supported since Python 3.5:</p></blockquote><p>即使<a href="https://github.com/miracle2k/python-glob2" target="_blank" rel="noopener">glob2</a>的自定义模块克服了这一点，但是在Python 2中递归的文件夹通配依旧不容易。自Python3.5以来便支持了递归标志：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> glob</span><br><span class="line"></span><br><span class="line"><span class="comment"># Python 2</span></span><br><span class="line">found_images = \</span><br><span class="line">    glob.glob(<span class="string">'/path/*.jpg'</span>) \</span><br><span class="line">  + glob.glob(<span class="string">'/path/*/*.jpg'</span>) \</span><br><span class="line">  + glob.glob(<span class="string">'/path/*/*/*.jpg'</span>) \</span><br><span class="line">  + glob.glob(<span class="string">'/path/*/*/*/*.jpg'</span>) \</span><br><span class="line">  + glob.glob(<span class="string">'/path/*/*/*/*/*.jpg'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Python 3</span></span><br><span class="line">found_images = glob.glob(<span class="string">'/path/**/*.jpg'</span>, recursive=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><blockquote><p>A better option is to use <code>pathlib</code> in python3 (minus one import!):</p></blockquote><p>一个更好的选项就是在Python 3中使用<code>pathlib</code>(减少了一个导入！)：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3</span></span><br><span class="line">found_images = pathlib.Path(<span class="string">'/path/'</span>).glob(<span class="string">'**/*.jpg'</span>)</span><br></pre></td></tr></table></figure></p><h2 id="Print-现在成了一个方法"><a href="#Print-现在成了一个方法" class="headerlink" title="Print 现在成了一个方法"></a>Print 现在成了一个方法</h2><blockquote><p>Yes, code now has these annoying parentheses, but there are some advantages:</p></blockquote><p>是的，代码现在有了这些烦人的括号，但也是有一些好处的：</p><blockquote><ul><li>simple syntax for using file descriptor:</li><li>使用文件描述符的简单语法:</li></ul></blockquote><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> &gt;&gt;sys.stderr, <span class="string">"critical error"</span>      <span class="comment"># Python 2</span></span><br><span class="line">print(<span class="string">"critical error"</span>, file=sys.stderr)  <span class="comment"># Python 3</span></span><br></pre></td></tr></table></figure></code></pre><blockquote><ul><li>printing tab-aligned tables without <code>str.join</code>:</li><li>不使用<code>str.join</code>打印制表符对齐表：</li></ul></blockquote><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3</span></span><br><span class="line">print(*array, sep=<span class="string">'\t'</span>)</span><br><span class="line">print(batch, epoch, loss, accuracy, time, sep=<span class="string">'\t'</span>)</span><br></pre></td></tr></table></figure></code></pre><blockquote><ul><li>hacky suppressing / redirection of printing output:</li><li>结束/重定向打印输出：  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3</span></span><br><span class="line">_print = <span class="keyword">print</span> <span class="comment"># store the original print function</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print</span><span class="params">(*args, **kargs)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span>  <span class="comment"># do something useful, e.g. store output to some file</span></span><br></pre></td></tr></table></figure></li></ul></blockquote><pre><code>In jupyter it is desirable to log each output to a separate file (to track what&#39;s happening after you got disconnected), so you can override `print` now.在jupyter中，最好将每个输出记录到一个单独的文件中（以便跟踪断开连接后发生的情况），以便你现在可以重写 `print` 。Below you can see a context manager that temporarily overrides behavior of print:下面你可以看到暂时覆盖打印行为的上下文管理器：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@contextlib.contextmanager</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">replace_print</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> builtins</span><br><span class="line">    _print = <span class="keyword">print</span> <span class="comment"># saving old print function</span></span><br><span class="line">    <span class="comment"># or use some other function here</span></span><br><span class="line">    builtins.<span class="keyword">print</span> = <span class="keyword">lambda</span> *args, **kwargs: _print(<span class="string">'new printing'</span>, *args, **kwargs)</span><br><span class="line">    <span class="keyword">yield</span></span><br><span class="line">    builtins.<span class="keyword">print</span> = _print</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> replace_print():</span><br><span class="line">    &lt;code here will invoke other <span class="keyword">print</span> function&gt;</span><br></pre></td></tr></table></figure>It is *not* a recommended approach, but a small dirty hack that is now possible.这*并不是*推荐的方法，现在却可能是一次小小的黑客攻击。</code></pre><blockquote><ul><li><code>print</code> can participate in list comprehensions and other language constructs</li><li><code>print</code> 可以参与列表推导式和其他语言结构:</li></ul></blockquote><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3</span></span><br><span class="line">result = process(x) <span class="keyword">if</span> is_valid(x) <span class="keyword">else</span> print(<span class="string">'invalid item: '</span>, x)</span><br></pre></td></tr></table></figure></code></pre><h2 id="数字中的下划线-（千位分隔符）"><a href="#数字中的下划线-（千位分隔符）" class="headerlink" title="数字中的下划线 （千位分隔符）"></a>数字中的下划线 （千位分隔符）</h2><blockquote><p><a href="https://www.python.org/dev/peps/pep-0515/" title="PEP-515" target="_blank" rel="noopener">PEP-515</a> introduced underscores in Numeric Literals.<br>In Python3, underscores can be used to group digits visually in integral, floating-point, and complex number literals.</p></blockquote><p><a href="https://www.python.org/dev/peps/pep-0515/" title="PEP-515" target="_blank" rel="noopener">PEP-515</a>在数字中引入了下划线。在Python 3 中，下划线可以用于在整数，浮点数，以及一些复杂的数字中以可视的方式对数字分组。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grouping decimal numbers by thousands</span></span><br><span class="line">one_million = <span class="number">1</span>_000_000</span><br><span class="line"></span><br><span class="line"><span class="comment"># grouping hexadecimal addresses by words</span></span><br><span class="line">addr = <span class="number">0xCAFE</span>_F00D</span><br><span class="line"></span><br><span class="line"><span class="comment"># grouping bits into nibbles in a binary literal</span></span><br><span class="line">flags = <span class="number">0</span>b_0011_1111_0100_1110</span><br><span class="line"></span><br><span class="line"><span class="comment"># same, for string conversions</span></span><br><span class="line">flags = int(<span class="string">'0b_1111_0000'</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><h2 id="用于简单可靠格式化的-f-strings"><a href="#用于简单可靠格式化的-f-strings" class="headerlink" title="用于简单可靠格式化的 f-strings"></a>用于简单可靠格式化的 f-strings</h2><blockquote><p>The default formatting system provides a flexibility that is not required in data experiments.<br>The resulting code is either too verbose or too fragile towards any changes.</p></blockquote><p>默认的格式化系统提供了数据实验中不必要的灵活性。由此产生的代码对于任何更改都显得过于冗长或者脆弱。</p><blockquote><p>Quite typically data scientists outputs some logging information iteratively in a fixed format.<br>It is common to have a code like:</p></blockquote><p>通常数据科学家会以固定的格式反复输出一些记录信息。如下代码就是常见的一段：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 2</span></span><br><span class="line">print(<span class="string">'&#123;batch:3&#125; &#123;epoch:3&#125; / &#123;total_epochs:3&#125;  accuracy: &#123;acc_mean:0.4f&#125;±&#123;acc_std:0.4f&#125; time: &#123;avg_time:3.2f&#125;'</span>.format(</span><br><span class="line">    batch=batch, epoch=epoch, total_epochs=total_epochs,</span><br><span class="line">    acc_mean=numpy.mean(accuracies), acc_std=numpy.std(accuracies),</span><br><span class="line">    avg_time=time / len(data_batch)</span><br><span class="line">))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Python 2 (too error-prone during fast modifications, please avoid):</span></span><br><span class="line">print(<span class="string">'&#123;:3&#125; &#123;:3&#125; / &#123;:3&#125;  accuracy: &#123;:0.4f&#125;±&#123;:0.4f&#125; time: &#123;:3.2f&#125;'</span>.format(</span><br><span class="line">    batch, epoch, total_epochs, numpy.mean(accuracies), numpy.std(accuracies),</span><br><span class="line">    time / len(data_batch)</span><br><span class="line">))</span><br></pre></td></tr></table></figure><p>简单输出:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">120  12 / 300  accuracy: 0.8180±0.4649 time: 56.60</span><br></pre></td></tr></table></figure></p><blockquote><p><strong>f-strings</strong> aka formatted string literals were introduced in Python 3.6:</p></blockquote><p><strong>f-string</strong> 又名格式化的字符串，在Python 3.6 中引入：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3.6+</span></span><br><span class="line">print(<span class="string">f'<span class="subst">&#123;batch:<span class="number">3</span>&#125;</span> <span class="subst">&#123;epoch:<span class="number">3</span>&#125;</span> / <span class="subst">&#123;total_epochs:<span class="number">3</span>&#125;</span>  accuracy: <span class="subst">&#123;numpy.mean(accuracies):<span class="number">0.4</span>f&#125;</span>±<span class="subst">&#123;numpy.std(accuracies):<span class="number">0.4</span>f&#125;</span> time: <span class="subst">&#123;time / len(data_batch):<span class="number">3.2</span>f&#125;</span>'</span>)</span><br></pre></td></tr></table></figure></p><h2 id="“真正的除法”与“整数除法”之间的明显区别"><a href="#“真正的除法”与“整数除法”之间的明显区别" class="headerlink" title="“真正的除法”与“整数除法”之间的明显区别"></a>“真正的除法”与“整数除法”之间的明显区别</h2><blockquote><p>For data science this is definitely a handy change.</p></blockquote><p>对于数据科学来说，这绝对是一个便利的改变。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data = pandas.read_csv(<span class="string">'timing.csv'</span>)</span><br><span class="line">velocity = data[<span class="string">'distance'</span>] / data[<span class="string">'time'</span>]</span><br></pre></td></tr></table></figure><blockquote><p>Results in Python 2 depend on whether ‘time’ and ‘distance’ (e.g. measured in meters and seconds) are stored as integers.<br>In Python 3, the result is correct in both cases, because the result of division is float.</p></blockquote><p>Python 2 中的计算结果取决于“时间”和“距离”（例如，分别以米和秒计量）是否存储为整数，而在Python 3 中，结果在两种情况下都是正确的，因为除法的计算结果是浮点型了。</p><blockquote><p>Another case is integer division, which is now an explicit operation:</p></blockquote><p>另一种情况是整数除法，它现在是一种精确的运算了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n_gifts = money // gift_price  <span class="comment"># correct for int and float arguments</span></span><br></pre></td></tr></table></figure><blockquote><p>Note, that this applies both to built-in types and to custom types provided by data packages (e.g. <code>numpy</code> or <code>pandas</code>).</p></blockquote><p>注意，这都适用于内置类型及数据包提供的自定义类型（如<code>numpy</code> 或者 <code>pandas</code>）。</p><h2 id="严谨的排序"><a href="#严谨的排序" class="headerlink" title="严谨的排序"></a>严谨的排序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># All these comparisons are illegal in Python 3</span></span><br><span class="line"><span class="number">3</span> &lt; <span class="string">'3'</span></span><br><span class="line"><span class="number">2</span> &lt; <span class="literal">None</span></span><br><span class="line">(<span class="number">3</span>, <span class="number">4</span>) &lt; (<span class="number">3</span>, <span class="literal">None</span>)</span><br><span class="line">(<span class="number">4</span>, <span class="number">5</span>) &lt; [<span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># False in both Python 2 and Python 3</span></span><br><span class="line">(<span class="number">4</span>, <span class="number">5</span>) == [<span class="number">4</span>, <span class="number">5</span>]</span><br></pre></td></tr></table></figure><blockquote><ul><li>prevents from occasional sorting of instances of different types</li><li><p>防止偶尔对不同类型的实例进行排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sorted([<span class="number">2</span>, <span class="string">'1'</span>, <span class="number">3</span>])  <span class="comment"># invalid for Python 3, in Python 2 returns [2, 3, '1']</span></span><br></pre></td></tr></table></figure></li><li><p>helps to spot some problems that arise when processing raw data</p></li><li>有助于发现在处理原始数据时的一些问题</li></ul><p>Sidenote: proper check for None is (in both Python versions)</p></blockquote><p>边注：合理检查None的情况（Python两个版本中都有）<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> a <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">  <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> a: <span class="comment"># WRONG check for None</span></span><br><span class="line">  <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></p><h2 id="用于NLP的Unicode"><a href="#用于NLP的Unicode" class="headerlink" title="用于NLP的Unicode"></a>用于NLP的Unicode</h2><p><em>译者注：NLP，自然语言处理 (Natural Language Processing) </em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'您好'</span></span><br><span class="line">print(len(s))</span><br><span class="line">print(s[:<span class="number">2</span>])</span><br></pre></td></tr></table></figure><p>输出:</p><ul><li>Python 2: <code>6\n��</code></li><li>Python 3: <code>2\n您好</code>.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = u&apos;со&apos;</span><br><span class="line">x += &apos;co&apos; # ok</span><br><span class="line">x += &apos;со&apos; # fail</span><br></pre></td></tr></table></figure><blockquote><p>Python 2 fails, Python 3 works as expected (because I’ve used russian letters in strings).</p></blockquote><p>Python 2 失败了，Python 3 如预期运行（因为我在字符串中使用了俄语的文字）。</p><blockquote><p>In Python 3 <code>str</code>s are unicode strings, and it is more convenient for NLP processing of non-english texts.</p></blockquote><p>在Python 3 中，<code>str</code>是unicode字符串，对于非英文文本的NLP处理更为方便。</p><blockquote><p>There are other funny things, for instance:</p></blockquote><p>这还有一些其他有趣的事情，比如：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'a'</span> &lt; type &lt; <span class="string">u'a'</span>  <span class="comment"># Python 2: True</span></span><br><span class="line"><span class="string">'a'</span> &lt; <span class="string">u'a'</span>         <span class="comment"># Python 2: False</span></span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line">Counter(<span class="string">'Möbelstück'</span>)</span><br></pre></td></tr></table></figure><ul><li>Python 2: <code>Counter({&#39;\xc3&#39;: 2, &#39;b&#39;: 1, &#39;e&#39;: 1, &#39;c&#39;: 1, &#39;k&#39;: 1, &#39;M&#39;: 1, &#39;l&#39;: 1, &#39;s&#39;: 1, &#39;t&#39;: 1, &#39;\xb6&#39;: 1, &#39;\xbc&#39;: 1})</code></li><li>Python 3: <code>Counter({&#39;M&#39;: 1, &#39;ö&#39;: 1, &#39;b&#39;: 1, &#39;e&#39;: 1, &#39;l&#39;: 1, &#39;s&#39;: 1, &#39;t&#39;: 1, &#39;ü&#39;: 1, &#39;c&#39;: 1, &#39;k&#39;: 1})</code></li></ul><blockquote><p>You can handle all of this in Python 2 properly, but Python 3 is more friendly.</p></blockquote><p>虽然你可以用Python 2正确地处理所有这些情况，但Python 3显得更加友好。</p><h2 id="保留字典和-kwargs的顺序"><a href="#保留字典和-kwargs的顺序" class="headerlink" title="保留字典和** kwargs的顺序"></a>保留字典和** kwargs的顺序</h2><blockquote><p>In CPython 3.6+ dicts behave like <code>OrderedDict</code> by default (and <a href="https://stackoverflow.com/questions/39980323/are-dictionaries-ordered-in-python-3-6" target="_blank" rel="noopener">this is guaranteed in Python 3.7+</a>).<br>This preserves order during dict comprehensions (and other operations, e.g. during json serialization/deserialization)</p></blockquote><p>在CPython 3.6+中，字典的默认行为与<code>OrderedDict</code>类似（并且<a href="(https://stackoverflow.com/questions/39980323/are-dictionaries-ordered-in-python-3-6">这在Python 3.7+ 中也得到了保证</a>)）。这在字典释义时提供了顺序（以及其他操作执行时，比如json序列化/反序列化）。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line">x = &#123;str(i):i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>)&#125;</span><br><span class="line">json.loads(json.dumps(x))</span><br><span class="line"><span class="comment"># Python 2</span></span><br><span class="line">&#123;<span class="string">u'1'</span>: <span class="number">1</span>, <span class="string">u'0'</span>: <span class="number">0</span>, <span class="string">u'3'</span>: <span class="number">3</span>, <span class="string">u'2'</span>: <span class="number">2</span>, <span class="string">u'4'</span>: <span class="number">4</span>&#125;</span><br><span class="line"><span class="comment"># Python 3</span></span><br><span class="line">&#123;<span class="string">'0'</span>: <span class="number">0</span>, <span class="string">'1'</span>: <span class="number">1</span>, <span class="string">'2'</span>: <span class="number">2</span>, <span class="string">'3'</span>: <span class="number">3</span>, <span class="string">'4'</span>: <span class="number">4</span>&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>Same applies to <code>**kwargs</code> (in Python 3.6+), they’re kept in the same order as they appear in parameters.<br>Order is crucial when it comes to data pipelines, previously we had to write it in a cumbersome manner:</p></blockquote><p>同样适用于<code>** kwargs</code>（Python 3.6+），它们保持与它们在参数中出现的顺序相同。在数据管道方面，顺序至关重要，以前我们必须以繁琐的方式来编写：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">from torch import nn</span><br><span class="line"></span><br><span class="line"># Python 2</span><br><span class="line">model = nn.Sequential(OrderedDict([</span><br><span class="line">          (&apos;conv1&apos;, nn.Conv2d(1,20,5)),</span><br><span class="line">          (&apos;relu1&apos;, nn.ReLU()),</span><br><span class="line">          (&apos;conv2&apos;, nn.Conv2d(20,64,5)),</span><br><span class="line">          (&apos;relu2&apos;, nn.ReLU())</span><br><span class="line">        ]))</span><br><span class="line"></span><br><span class="line"># Python 3.6+, how it *can* be done, not supported right now in pytorch</span><br><span class="line">model = nn.Sequential(</span><br><span class="line">    conv1=nn.Conv2d(1,20,5),</span><br><span class="line">    relu1=nn.ReLU(),</span><br><span class="line">    conv2=nn.Conv2d(20,64,5),</span><br><span class="line">    relu2=nn.ReLU())</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><blockquote><p>Did you notice? Uniqueness of names is also checked automatically.</p></blockquote><p>你注意到了吗？命名的唯一性也会自动检查。</p><h2 id="可迭代对象的（Iterable）解压"><a href="#可迭代对象的（Iterable）解压" class="headerlink" title="可迭代对象的（Iterable）解压"></a>可迭代对象的（Iterable）解压</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># handy when amount of additional stored info may vary between experiments, but the same code can be used in all cases</span></span><br><span class="line">model_paramteres, optimizer_parameters, *other_params = load(checkpoint_name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># picking two last values from a sequence</span></span><br><span class="line">*prev, next_to_last, last = values_history</span><br><span class="line"></span><br><span class="line"><span class="comment"># This also works with any iterables, so if you have a function that yields e.g. qualities,</span></span><br><span class="line"><span class="comment"># below is a simple way to take only last two values from a list</span></span><br><span class="line">*prev, next_to_last, last = iter_train(args)</span><br></pre></td></tr></table></figure><h2 id="默认的pickle引擎为数组提供更好的压缩"><a href="#默认的pickle引擎为数组提供更好的压缩" class="headerlink" title="默认的pickle引擎为数组提供更好的压缩"></a>默认的pickle引擎为数组提供更好的压缩</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 2</span></span><br><span class="line"><span class="keyword">import</span> cPickle <span class="keyword">as</span> pickle</span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">print</span> len(pickle.dumps(numpy.random.normal(size=[<span class="number">1000</span>, <span class="number">1000</span>])))</span><br><span class="line"><span class="comment"># result: 23691675</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Python 3</span></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line">len(pickle.dumps(numpy.random.normal(size=[<span class="number">1000</span>, <span class="number">1000</span>])))</span><br><span class="line"><span class="comment"># result: 8000162</span></span><br></pre></td></tr></table></figure><blockquote><p>Three times less space. And it is <em>much</em> faster.<br>Actually similar compression (but not speed) is achievable with <code>protocol=2</code> parameter, but users typically ignore this option (or simply are not aware of it).</p></blockquote><p>1/3的空间，以及<em>更加</em>快的速度。事实上，使用<code>protocol = 2</code>参数可以实现类似的压缩（速度则大相径庭），但用户通常会忽略此选项（或者根本不知道它）。</p><h2 id="更安全的压缩"><a href="#更安全的压缩" class="headerlink" title="更安全的压缩"></a>更安全的压缩</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">labels = &lt;initial_value&gt;</span><br><span class="line">predictions = [model.predict(data) <span class="keyword">for</span> data, labels <span class="keyword">in</span> dataset]</span><br><span class="line"></span><br><span class="line"><span class="comment"># labels are overwritten in Python 2</span></span><br><span class="line"><span class="comment"># labels are not affected by comprehension in Python 3</span></span><br></pre></td></tr></table></figure><h2 id="超简单的super-函数"><a href="#超简单的super-函数" class="headerlink" title="超简单的super()函数"></a>超简单的super()函数</h2><blockquote><p>Python 2 <code>super(...)</code> was a frequent source of mistakes in code.</p></blockquote><p>Python 2 中的<code>super(...)</code>曾是代码中最常见的错误源头。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 2</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySubClass</span><span class="params">(MySuperClass)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, **options)</span>:</span></span><br><span class="line">        super(MySubClass, self).__init__(name=<span class="string">'subclass'</span>, **options)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Python 3</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySubClass</span><span class="params">(MySuperClass)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, **options)</span>:</span></span><br><span class="line">        super().__init__(name=<span class="string">'subclass'</span>, **options)</span><br></pre></td></tr></table></figure><blockquote><p>More on <code>super</code> and method resolution order on <a href="https://stackoverflow.com/questions/576169/understanding-python-super-with-init-methods" target="_blank" rel="noopener">stackoverflow</a>.</p></blockquote><p><a href="https://stackoverflow.com/questions/576169/understanding-python-super-with-init-methods" target="_blank" rel="noopener">stackoverflow</a>上有更多关于<code>super</code>和方法解决的信息。</p><h2 id="有着变量注释的更好的IDE建议"><a href="#有着变量注释的更好的IDE建议" class="headerlink" title="有着变量注释的更好的IDE建议"></a>有着变量注释的更好的IDE建议</h2><blockquote><p>The most enjoyable thing about programming in languages like Java, C# and alike is that IDE can make very good suggestions,<br>because type of each identifier is known before executing a program.</p></blockquote><p>关于Java，C＃等语言编程最令人享受的事情是IDE可以提出非常好的建议，因为每个标识符的类型在执行程序之前是已知的。</p><blockquote><p>In python this is hard to achieve, but annotations will help you</p><ul><li>write your expectations in a clear form</li><li>and get good suggestions from IDE</li></ul></blockquote><p>Python中这很难实现，但注释是会帮助你的</p><ul><li>以清晰的形式写下你的期望</li><li>并从IDE获得很好的建议</li></ul><p><img src="images/variable_annotations.png"><br></p><blockquote><p>This is an example of PyCharm suggestions with variable annotations.<br>This works even in situations when functions you use are not annotated (e.g. due to backward compatibility).</p></blockquote><p>这是PyCharm带有变量声明建议的一个例子。即使在你使用的功能未被注释过的情况依旧是有效的（例如，向后的兼容性）。</p><h2 id="更多的解包（unpacking）"><a href="#更多的解包（unpacking）" class="headerlink" title="更多的解包（unpacking）"></a>更多的解包（unpacking）</h2><blockquote><p>Here is how you merge two dicts now:</p></blockquote><p>现在展示如何合并两个字典：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x = dict(a=<span class="number">1</span>, b=<span class="number">2</span>)</span><br><span class="line">y = dict(b=<span class="number">3</span>, d=<span class="number">4</span>)</span><br><span class="line"><span class="comment"># Python 3.5+</span></span><br><span class="line">z = &#123;**x, **y&#125;</span><br><span class="line"><span class="comment"># z = &#123;'a': 1, 'b': 3, 'd': 4&#125;, note that value for `b` is taken from the latter dict.</span></span><br></pre></td></tr></table></figure></p><blockquote><p>See <a href="https://stackoverflow.com/questions/38987/how-to-merge-two-dictionaries-in-a-single-expression" target="_blank" rel="noopener">this thread at StackOverflow</a> for a comparison with Python 2.</p></blockquote><p>请参照<a href="https://stackoverflow.com/questions/38987/how-to-merge-two-dictionaries-in-a-single-expression" target="_blank" rel="noopener">在StackOverflow上的这一过程</a>，与Python 2进行比较。</p><blockquote><p>The same approach also works for lists, tuples, and sets (<code>a</code>, <code>b</code>, <code>c</code> are any iterables):</p></blockquote><p>同样的方法对于列表，元组，以及集合（<code>a</code>, <code>b</code>, <code>c</code> 是可任意迭代的）：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[*a, *b, *c] <span class="comment"># list, concatenating</span></span><br><span class="line">(*a, *b, *c) <span class="comment"># tuple, concatenating</span></span><br><span class="line">&#123;*a, *b, *c&#125; <span class="comment"># set, union</span></span><br></pre></td></tr></table></figure></p><blockquote><p>Functions also <a href="https://docs.python.org/3/whatsnew/3.5.html#whatsnew-pep-448" target="_blank" rel="noopener">support this</a> for <code>*args</code> and <code>**kwargs</code>:</p></blockquote><p>函数对于参数<code>*args</code>和<code>**kwargs</code>同样<a href="https://docs.python.org/3/whatsnew/3.5.html#whatsnew-pep-448" target="_blank" rel="noopener">支持</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Python 3.5+</span><br><span class="line">do_something(**&#123;**default_settings, **custom_settings&#125;)</span><br><span class="line"></span><br><span class="line"># Also possible, this code also checks there is no intersection between keys of dictionaries</span><br><span class="line">do_something(**first_args, **second_args)</span><br></pre></td></tr></table></figure></p><h2 id="具有关键字参数的面向未来的API"><a href="#具有关键字参数的面向未来的API" class="headerlink" title="具有关键字参数的面向未来的API"></a>具有关键字参数的面向未来的API</h2><p>让我们看一下这个代码片段：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model = sklearn.svm.SVC(<span class="number">2</span>, <span class="string">'poly'</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">0.5</span>)</span><br></pre></td></tr></table></figure></p><blockquote><p>Obviously, an author of this code didn’t get the Python style of coding yet (most probably, just jumped from cpp or rust).<br>Unfortunately, this is not just question of taste, because changing the order of arguments (adding/deleting) in <code>SVC</code> will break this code. In particular, <code>sklearn</code> does some reordering/renaming from time to time of numerous algorithm parameters to provide consistent API. Each such refactoring may drive to broken code.</p></blockquote><p>很明显，代码的作者还未理解Python的编码风格（很有可能是从cpp或者rust转到Python的）。<br>不幸的是，这不仅仅是品味的问题，因为在<code>SVC</code>中改变参数顺序（添加/删除）都会破坏代码。 特别是，<code>sklearn</code>会不时地对许多算法参数进行重新排序/重命名以提供一致的API。 每个这样的重构都可能导致代码损坏。</p><blockquote><p>In Python 3, library authors may demand explicitly named parameters by using <code>*</code>:</p></blockquote><p>在Python 3中，类库作者可能会通过使用<code>*</code>来要求明确命名的参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">class SVC(BaseSVC):</span><br><span class="line">    def __init__(self, *, C=1.0, kernel=&apos;rbf&apos;, degree=3, gamma=&apos;auto&apos;, coef0=0.0, ... )</span><br></pre></td></tr></table></figure></p><blockquote><ul><li>users have to specify names of parameters <code>sklearn.svm.SVC(C=2, kernel=&#39;poly&#39;, degree=2, gamma=4, coef0=0.5)</code> now</li><li>this mechanism provides a great combination of reliability and flexibility of APIs</li></ul></blockquote><ul><li>用户现在必须指定参数名称为<code>sklearn.svm.SVC(C=2, kernel=&#39;poly&#39;, degree=2, gamma=4, coef0=0.5)</code></li><li>这种机制提供了API完美结合的可靠性和灵活性</li></ul><h2 id="次要-math模块中的常量"><a href="#次要-math模块中的常量" class="headerlink" title="次要: math模块中的常量"></a>次要: <code>math</code>模块中的常量</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 3</span></span><br><span class="line">math.inf <span class="comment"># 'largest' number</span></span><br><span class="line">math.nan <span class="comment"># not a number</span></span><br><span class="line"></span><br><span class="line">max_quality = -math.inf  <span class="comment"># no more magic initial values!</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> model <span class="keyword">in</span> trained_models:</span><br><span class="line">    max_quality = max(max_quality, compute_quality(model, data))</span><br></pre></td></tr></table></figure><h2 id="次要-单一的整数类型"><a href="#次要-单一的整数类型" class="headerlink" title="次要: 单一的整数类型"></a>次要: 单一的整数类型</h2><blockquote><p>Python 2 provides two basic integer types, which are int (64-bit signed integer) and long for long arithmetics (quite confusing after C++).</p></blockquote><p>Python 2提供了两种基础的整数类型，int(64位有符号的整数)以及对于长整型计算的long（在C++之后就变得非常混乱）。</p><blockquote><p>Python 3 has a single type <code>int</code>, which incorporates long arithmetics.</p></blockquote><p>Python 3有着单一的类型<code>int</code>，其同时融合了长整型的计算。</p><blockquote><p>Here is how you check that value is integer:</p></blockquote><p>如下为如何检查该值是整数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">isinstance(x, numbers.Integral) # Python 2, the canonical way</span><br><span class="line">isinstance(x, (long, int))      # Python 2</span><br><span class="line">isinstance(x, int)              # Python 3, easier to remember</span><br></pre></td></tr></table></figure><h2 id="其他事项"><a href="#其他事项" class="headerlink" title="其他事项"></a>其他事项</h2><ul><li><code>Enum</code>s are theoretically useful, but<ul><li>string-typing is already widely adopted in the python data stack</li><li><code>Enum</code>s don’t seem to interplay with numpy and categorical from pandas</li></ul></li><li>coroutines also <em>sound</em> very promising for data pipelining (see <a href="http://www.dabeaz.com/coroutines/Coroutines.pdf" target="_blank" rel="noopener">slides</a> by David Beazley), but I don’t see their adoption in the wild.</li><li>Python 3 has <a href="https://www.python.org/dev/peps/pep-0384/" target="_blank" rel="noopener">stable ABI</a></li><li>Python 3 supports unicode identifies (so <code>ω = Δφ / Δt</code> is ok), but you’d <a href="https://stackoverflow.com/a/29855176/498892" target="_blank" rel="noopener">better use good old ASCII names</a></li><li>some libraries e.g. <a href="https://github.com/jupyterhub/jupyterhub" target="_blank" rel="noopener">jupyterhub</a> (jupyter in cloud), django and fresh ipython only support Python 3, so features that sound useless for you are useful for libraries you’ll probably want to use once.</li></ul><hr><ul><li><code>Enum</code>（枚举类）理论上是有用的，但是<ul><li>string-typing 已经在Python数据栈中被广泛采用</li><li><code>Enum</code>似乎不会与numpy和pandas的分类相互作用</li></ul></li><li>协程（coroutines）<em>听起来</em>也非常适用于数据管道（参见David Beazley的<a href="http://www.dabeaz.com/coroutines/Coroutines.pdf" target="_blank" rel="noopener">幻灯片</a>），但是我从来没见过代码引用它们。</li><li><p>Python 3 有着<a href="https://www.python.org/dev/peps/pep-0384/" target="_blank" rel="noopener">稳定的ABI</a></p><p><em>ABI（Application Binary Interface）: 应用程序二进制接口 描述了应用程序和操作系统之间，一个应用和它的库之间，或者应用的组成部分之间的低接口。</em></p></li><li>Python 3支持unicode标识（甚至<code>ω=Δφ/Δt</code>也可以），但是你<a href="https://stackoverflow.com/a/29855176/498892" target="_blank" rel="noopener">最好使用好的旧ASCII名称</a>。</li><li>一些类库例如 <a href="https://github.com/jupyterhub/jupyterhub" target="_blank" rel="noopener">jupyterhub</a>（云端的jupyter），django和最新的ipython仅支持Python 3，因此对于您来说听起来无用的功能，对于您可能想要使用的库却很有用。</li></ul><h3 id="特定于数据科学的代码迁移问题（以及如何解决这些问题）"><a href="#特定于数据科学的代码迁移问题（以及如何解决这些问题）" class="headerlink" title="特定于数据科学的代码迁移问题（以及如何解决这些问题）"></a>特定于数据科学的代码迁移问题（以及如何解决这些问题）</h3><blockquote><ul><li>support for nested arguments <a href="https://www.python.org/dev/peps/pep-3113/" target="_blank" rel="noopener">was dropped</a></li><li><p>对于嵌套参数的支持<a href="https://www.python.org/dev/peps/pep-3113/" target="_blank" rel="noopener">已被删除</a>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">map(lambda x, (y, z): x, z, dict.items())</span><br></pre></td></tr></table></figure><p>However, it is still perfectly working with different comprehensions:</p></li></ul></blockquote><p>但是，它仍然完全适用于不同的（列表）解析：<br>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;x:z <span class="keyword">for</span> x, (y, z) <span class="keyword">in</span> d.items()&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p> In general, comprehensions are also better ‘translatable’ between Python 2 and 3.</p></blockquote><p>一般来说，Python 2和Python 3之间的解析也是有着更好的“可翻译性”。</p><blockquote><ul><li><code>map()</code>, <code>.keys()</code>, <code>.values()</code>, <code>.items()</code>, etc. return iterators, not lists. Main problems with iterators are:<ul><li>no trivial slicing</li><li>can’t be iterated twice</li></ul></li></ul></blockquote><ul><li><code>map()</code>， <code>.keys()</code>， <code>.values()</code>， <code>.items()</code>等等返回的是迭代器（iterators），而不是列表（lists）。迭代器的主要问题如下：<ul><li>没有细小的切片</li><li>不能迭代两次</li></ul></li></ul><blockquote><p> Almost all of the problems are resolved by converting result to list.</p></blockquote><p>将结果转换为列表几乎可以解决所有问题。</p><blockquote><ul><li>see <a href="https://eev.ee/blog/2016/07/31/python-faq-how-do-i-port-to-python-3/" target="_blank" rel="noopener">Python FAQ: How do I port to Python 3?</a> when in trouble.</li></ul></blockquote><ul><li>当你遇到问题时请参见<a href="https://eev.ee/blog/2016/07/31/python-faq-how-do-i-port-to-python-3/" target="_blank" rel="noopener">Python FAQ: How do I port to Python 3?</a>。</li></ul><h3 id="使用python教授机器学习和数据科学的主要问题"><a href="#使用python教授机器学习和数据科学的主要问题" class="headerlink" title="使用python教授机器学习和数据科学的主要问题"></a>使用python教授机器学习和数据科学的主要问题</h3><blockquote><p>Course authors should spend time in the first lectures to explain what is an iterator,<br>why it can’t be sliced / concatenated / multiplied / iterated twice like a string (and how to deal with it).</p></blockquote><p>课程讲解者应该花时间在第一讲中解释什么是迭代器，<br>为什么它不能像字符串一样被分割/连接/相乘/重复两次（以及如何处理它）。</p><blockquote><p>I think most course authors would be happy to avoid these details, but now it is hardly possible.</p></blockquote><p>我认为大多数课程讲解者曾经都乐于避开这些细节，但现在几乎不可能（再避开了）。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><blockquote><p>Python 2 and Python 3 have co-existed for almost 10 years, but we <em>should</em> move to Python 3.</p></blockquote><p>虽然Python 2 和 Python 3 已经共存了十年有余，但是我们<em>应该</em>要过渡到Python 3 了。</p><blockquote><p>Research and production code should become a bit shorter, more readable, and significantly safer after moving to Python 3-only codebase.</p></blockquote><p>在转向使用唯一的 Python 3 代码库之后，研究和生产的代码将会变得更剪短，更有可读性，以及明显是更加安全的。</p><blockquote><p>Right now most libraries support both Python versions.<br>And I can’t wait for the bright moment when packages drop support for Python 2 and enjoy new language features.</p></blockquote><p>目前大部分类库都会支持两个Python版本，我已等不及要使用新的语言特性了，也同样期待依赖包舍弃对 Python 2 支持这一光明时刻的到来。</p><blockquote><p>Following migrations are promised to be smoother: <a href="https://snarky.ca/why-python-3-exists/" target="_blank" rel="noopener">“we will never do this kind of backwards-incompatible change again”</a></p></blockquote><p>以后的(版本)迁移会更加顺利：<a href="https://snarky.ca/why-python-3-exists/" target="_blank" rel="noopener">我们再也不会做这种不向后兼容的变化了</a>。</p><h3 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h3><ul><li><a href="http://sebastianraschka.com/Articles/2014_python_2_3_key_diff.html" target="_blank" rel="noopener">Key differences between Python 2.7 and Python 3.x</a></li><li><a href="https://eev.ee/blog/2016/07/31/python-faq-how-do-i-port-to-python-3/" target="_blank" rel="noopener">Python FAQ: How do I port to Python 3?</a></li><li><a href="http://www.asmeurer.com/python3-presentation/slides.html" target="_blank" rel="noopener">10 awesome features of Python that you can’t use because you refuse to upgrade to Python 3</a></li><li><a href="http://pyvideo.org/pycon-us-2013/python-33-trust-me-its-better-than-27.html" target="_blank" rel="noopener">Trust me, python 3.3 is better than 2.7 (video)</a></li><li><a href="http://python-3-for-scientists.readthedocs.io/en/latest/" target="_blank" rel="noopener">Python 3 for scientists</a></li></ul><h3 id="版权声明"><a href="#版权声明" class="headerlink" title="版权声明"></a>版权声明</h3><p>This text was published by <a href="https://arogozhnikov.github.io/about/" target="_blank" rel="noopener">Alex Rogozhnikov</a> under <a href="https://creativecommons.org/licenses/by-sa/3.0/" target="_blank" rel="noopener">CC BY-SA 3.0 License</a> (excluding images)</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Migrating-to-Python-3-with-pleasure&quot;&gt;&lt;a href=&quot;#Migrating-to-Python-3-with-pleasure&quot; class=&quot;headerlink&quot; title=&quot;Migrating to Python 3 with pleasure&quot;&gt;&lt;/a&gt;Migrating to Python 3 with pleasure&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Migrating to Python 3 with pleasure&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python" scheme="https://jacksonleon.gitee.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://jacksonleon.gitee.io/tags/Python/"/>
    
      <category term="Reproduce" scheme="https://jacksonleon.gitee.io/tags/Reproduce/"/>
    
  </entry>
  
  <entry>
    <title>Commit messages guide</title>
    <link href="https://jacksonleon.gitee.io/posts/271955539.html"/>
    <id>https://jacksonleon.gitee.io/posts/271955539.html</id>
    <published>2019-05-04T01:09:27.000Z</published>
    <updated>2019-05-04T01:09:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Commit-messages-guide"><a href="#Commit-messages-guide" class="headerlink" title="Commit messages guide"></a>Commit messages guide</h1><div class="note warning"><p>To be translated</p></div><p><a href="https://saythanks.io/to/RomuloOliveira" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg" alt="Say Thanks!"></a></p><p>A guide to understanding the importance of commit messages and how to write them well.</p><p>It may help you to learn what a commit is, why it is important to write good messages, best practices and some tips to plan and (re)write a good commit history.</p><a id="more"></a><h2 id="Available-languages"><a href="#Available-languages" class="headerlink" title="Available languages"></a>Available languages</h2><ul><li><a href="README.md">English</a></li><li><a href="README_pt-BR.md">Português</a></li><li><a href="README_de-DE.md">Deutsch</a></li><li><a href="README_es-AR.md">Español</a></li><li><a href="README_it-IT.md">Italiano</a></li><li><a href="README_ru-RU.md">Russian</a></li><li><a href="README_ko-KR.md">Korean</a></li></ul><h2 id="What-is-a-“commit”"><a href="#What-is-a-“commit”" class="headerlink" title="What is a “commit”?"></a>What is a “commit”?</h2><p>In simple terms, a commit is a <em>snapshot</em> of your local files, written in your local repository.<br>Contrary to what some people think, <a href="https://git-scm.com/book/eo/v1/Ekkomenci-Git-Basics#Snapshots,-Not-Differences" target="_blank" rel="noopener">git doesn’t store only the difference between the files, it stores a full version of all files</a>.<br>For files that didn’t change from one commit to another, git stores just a link to the previous identical file that is already stored.</p><p>The image below shows how git stores data over time, in which each “Version” is a commit:</p><p><img src="https://i.stack.imgur.com/AQ5TG.png" alt></p><h2 id="Why-are-commit-messages-important"><a href="#Why-are-commit-messages-important" class="headerlink" title="Why are commit messages important?"></a>Why are commit messages important?</h2><ul><li>To speed up and streamline code reviews</li><li>To help in the understanding of a change</li><li>To explain “the whys” that cannot be described only with code</li><li>To help future maintainers figure out why and how changes were made, making troubleshooting and debugging easier</li></ul><p>To maximize those outcomes, we can use some good practices and standards described in the next section.</p><h2 id="Good-practices"><a href="#Good-practices" class="headerlink" title="Good practices"></a>Good practices</h2><p>These are some practices collected from my experiences, internet articles, and other guides. If you have others (or disagree with some) feel free to open a Pull Request and contribute.</p><h3 id="Use-imperative-form"><a href="#Use-imperative-form" class="headerlink" title="Use imperative form"></a>Use imperative form</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Good</span><br><span class="line">Use InventoryBackendPool to retrieve inventory backend</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Bad</span><br><span class="line">Used InventoryBackendPool to retrieve inventory backend</span><br></pre></td></tr></table></figure><p><em>But why use the imperative form?</em></p><p>A commit message describes what the referenced change actually <strong>does</strong>, its effects, not what was done.</p><p><a href="https://chris.beams.io/posts/git-commit/" target="_blank" rel="noopener">This excellent article from Chris Beams</a> gives us a simple sentence that can be used to help us write better commit messages in imperative form:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">If applied, this commit will &lt;commit message&gt;</span><br></pre></td></tr></table></figure><p>Examples:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Good</span><br><span class="line">If applied, this commit will use InventoryBackendPool to retrieve inventory backend</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Bad</span><br><span class="line">If applied, this commit will used InventoryBackendPool to retrieve inventory backend</span><br></pre></td></tr></table></figure><h3 id="Capitalize-the-first-letter"><a href="#Capitalize-the-first-letter" class="headerlink" title="Capitalize the first letter"></a>Capitalize the first letter</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Good</span><br><span class="line">Add `use` method to Credit model</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Bad</span><br><span class="line">add `use` method to Credit model</span><br></pre></td></tr></table></figure><p>The reason that the first letter should be capitalized is to follow the grammar rule of using capital letters at the beginning of sentences.</p><p>The use of this practice may vary from person to person, team to team, or even from language to language.<br>Capitalized or not, an important point is to stick to a single standard and follow it.</p><h3 id="Try-to-communicate-what-the-change-does-without-having-to-look-at-the-source-code"><a href="#Try-to-communicate-what-the-change-does-without-having-to-look-at-the-source-code" class="headerlink" title="Try to communicate what the change does without having to look at the source code"></a>Try to communicate what the change does without having to look at the source code</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Good</span><br><span class="line">Add `use` method to Credit model</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Bad</span><br><span class="line">Add `use` method</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Good</span><br><span class="line">Increase left padding between textbox and layout frame</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Bad</span><br><span class="line">Adjust css</span><br></pre></td></tr></table></figure><p>It is useful in many scenarios (e.g. multiple commits, several changes and refactors) to help reviewers understand what the committer was thinking.</p><h3 id="Use-the-message-body-to-explain-“why”-“for-what”-“how”-and-additional-details"><a href="#Use-the-message-body-to-explain-“why”-“for-what”-“how”-and-additional-details" class="headerlink" title="Use the message body to explain “why”, “for what”, “how” and additional details"></a>Use the message body to explain “why”, “for what”, “how” and additional details</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Good</span><br><span class="line">Fix method name of InventoryBackend child classes</span><br><span class="line"></span><br><span class="line">Classes derived from InventoryBackend were not</span><br><span class="line">respecting the base class interface.</span><br><span class="line"></span><br><span class="line">It worked because the cart was calling the backend implementation</span><br><span class="line">incorrectly.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Good</span><br><span class="line">Serialize and deserialize credits to json in Cart</span><br><span class="line"></span><br><span class="line">Convert the Credit instances to dict for two main reasons:</span><br><span class="line"></span><br><span class="line">  - Pickle relies on file path for classes and we do not want to break up</span><br><span class="line">    everything if a refactor is needed</span><br><span class="line">  - Dict and built-in types are pickleable by default</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Good</span><br><span class="line">Add `use` method to Credit</span><br><span class="line"></span><br><span class="line">Change from namedtuple to class because we need to</span><br><span class="line">setup a new attribute (in_use_amount) with a new value</span><br></pre></td></tr></table></figure><p>The subject and the body of the messages are separated by a blank line.<br>Additional blank lines are considered as a part of the message body.</p><p>Characters like <code>-</code>, <code>*</code> and ` are elements that improve readability.</p><h3 id="Avoid-generic-messages-or-messages-without-any-context"><a href="#Avoid-generic-messages-or-messages-without-any-context" class="headerlink" title="Avoid generic messages or messages without any context"></a>Avoid generic messages or messages without any context</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Bad</span><br><span class="line">Fix this</span><br><span class="line"></span><br><span class="line">Fix stuff</span><br><span class="line"></span><br><span class="line">It should work now</span><br><span class="line"></span><br><span class="line">Change stuff</span><br><span class="line"></span><br><span class="line">Adjust css</span><br></pre></td></tr></table></figure><h3 id="Limit-the-number-of-characters"><a href="#Limit-the-number-of-characters" class="headerlink" title="Limit the number of characters"></a>Limit the number of characters</h3><p><a href="https://git-scm.com/book/en/v2/Distributed-Git-Contributing-to-a-Project#_commit_guidelines" target="_blank" rel="noopener">It’s recommended</a> to use a maximum of 50 characters for the subject and 72 for the body.</p><h3 id="Keep-language-consistency"><a href="#Keep-language-consistency" class="headerlink" title="Keep language consistency"></a>Keep language consistency</h3><p>For project owners: Choose a language and write all commit messages using that language. Ideally, it should match the code comments, default translation locale (for localized projects), etc.</p><p>For contributors: Write your commit messages using the same language as the existing commit history.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Good</span><br><span class="line">ababab Add `use` method to Credit model</span><br><span class="line">efefef Use InventoryBackendPool to retrieve inventory backend</span><br><span class="line">bebebe Fix method name of InventoryBackend child classes</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Good (Portuguese example)</span><br><span class="line">ababab Adiciona o método `use` ao model Credit</span><br><span class="line">efefef Usa o InventoryBackendPool para recuperar o backend de estoque</span><br><span class="line">bebebe Corrige nome de método na classe InventoryBackend</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Bad (mixes English and Portuguese)</span><br><span class="line">ababab Usa o InventoryBackendPool para recuperar o backend de estoque</span><br><span class="line">efefef Add `use` method to Credit model</span><br><span class="line">cdcdcd Agora vai</span><br></pre></td></tr></table></figure><h3 id="Template"><a href="#Template" class="headerlink" title="Template"></a>Template</h3><p>This is a template, <a href="http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html" target="_blank" rel="noopener">written originally by Tim Pope</a>, which appears in the <a href="https://git-scm.com/book/en/v2/Distributed-Git-Contributing-to-a-Project" target="_blank" rel="noopener"><em>Pro Git Book</em></a>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Summarize changes in around 50 characters or less</span><br><span class="line"></span><br><span class="line">More detailed explanatory text, if necessary. Wrap it to about 72</span><br><span class="line">characters or so. In some contexts, the first line is treated as the</span><br><span class="line">subject of the commit and the rest of the text as the body. The</span><br><span class="line">blank line separating the summary from the body is critical (unless</span><br><span class="line">you omit the body entirely); various tools like `log`, `shortlog`</span><br><span class="line">and `rebase` can get confused if you run the two together.</span><br><span class="line"></span><br><span class="line">Explain the problem that this commit is solving. Focus on why you</span><br><span class="line">are making this change as opposed to how (the code explains that).</span><br><span class="line">Are there side effects or other unintuitive consequences of this</span><br><span class="line">change? Here&apos;s the place to explain them.</span><br><span class="line"></span><br><span class="line">Further paragraphs come after blank lines.</span><br><span class="line"></span><br><span class="line"> - Bullet points are okay, too</span><br><span class="line"></span><br><span class="line"> - Typically a hyphen or asterisk is used for the bullet, preceded</span><br><span class="line">   by a single space, with blank lines in between, but conventions</span><br><span class="line">   vary here</span><br><span class="line"></span><br><span class="line">If you use an issue tracker, put references to them at the bottom,</span><br><span class="line">like this:</span><br><span class="line"></span><br><span class="line">Resolves: #123</span><br><span class="line">See also: #456, #789</span><br></pre></td></tr></table></figure><h2 id="Rebase-vs-Merge"><a href="#Rebase-vs-Merge" class="headerlink" title="Rebase vs. Merge"></a>Rebase vs. Merge</h2><p>This section is a <strong>TL;DR</strong> of Atlassian’s excellent tutorial, <a href="https://www.atlassian.com/git/tutorials/merging-vs-rebasing" target="_blank" rel="noopener">“Merging vs. Rebasing”</a>.</p><p><img src="https://wac-cdn.atlassian.com/dam/jcr:01b0b04e-64f3-4659-af21-c4d86bc7cb0b/01.svg?cdnVersion=hq" alt></p><h3 id="Rebase"><a href="#Rebase" class="headerlink" title="Rebase"></a>Rebase</h3><p><strong>TL;DR:</strong> Applies your branch commits, one by one, upon the base branch, generating a new tree.</p><p><img src="https://wac-cdn.atlassian.com/dam/jcr:5b153a22-38be-40d0-aec8-5f2fffc771e5/03.svg?cdnVersion=hq" alt></p><h3 id="Merge"><a href="#Merge" class="headerlink" title="Merge"></a>Merge</h3><p><strong>TL;DR:</strong> Creates a new commit, called (appropriately) a <em>merge commit</em>, with the differences between the two branches.</p><p><img src="https://wac-cdn.atlassian.com/dam/jcr:e229fef6-2c2f-4a4f-b270-e1e1baa94055/02.svg?cdnVersion=hq" alt></p><h3 id="Why-do-some-people-prefer-to-rebase-over-merge"><a href="#Why-do-some-people-prefer-to-rebase-over-merge" class="headerlink" title="Why do some people prefer to rebase over merge?"></a>Why do some people prefer to rebase over merge?</h3><p>I particularly prefer to rebase over merge. The reasons include:</p><ul><li>It generates a “clean” history, without unnecessary merge commits</li><li><em>What you see is what you get</em>, i.e., in a code review all changes come from a specific and entitled commit, avoiding changes hidden in merge commits</li><li>More merges are resolved by the committer, and every merge change is in a commit with a proper message<ul><li>It’s unusual to dig in and review merge commits, so avoiding them ensures all changes have a commit where they belong</li></ul></li></ul><h3 id="When-to-squash"><a href="#When-to-squash" class="headerlink" title="When to squash"></a>When to squash</h3><p>“Squashing” is the process of taking a series of commits and condensing them into a single commit.</p><p>It’s useful in several situations, e.g.:</p><ul><li>Reducing commits with little or no context (typo corrections, formatting, forgotten stuff)</li><li>Joining separate changes that make more sense when applied together</li><li>Rewriting <em>work in progress</em> commits</li></ul><h3 id="When-to-avoid-rebase-or-squash"><a href="#When-to-avoid-rebase-or-squash" class="headerlink" title="When to avoid rebase or squash?"></a>When to avoid rebase or squash?</h3><p>Avoid rebase and squash in public commits or in shared branches where multiple people work on.<br>Rebase and squash rewrite history and overwrite existing commits, doing it on commits that are on shared branches (i.e., commits pushed to a remote repository or that comes from others branches) can cause confusion and people may lose their changes (both locally and remotely) because of divergent trees and conflicts.</p><h2 id="Useful-git-commands"><a href="#Useful-git-commands" class="headerlink" title="Useful git commands"></a>Useful git commands</h2><h3 id="rebase-i"><a href="#rebase-i" class="headerlink" title="rebase -i"></a>rebase -i</h3><p>Use it to squash commits, edit messages, rewrite/delete/reorder commits, etc.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">pick 002a7cc Improve description and update document title</span><br><span class="line">pick 897f66d Add contributing section</span><br><span class="line">pick e9549cf Add a section of Available languages</span><br><span class="line">pick ec003aa Add &quot;What is a commit&quot; section&quot;</span><br><span class="line">pick bbe5361 Add source referencing as a point of help wanted</span><br><span class="line">pick b71115e Add a section explaining the importance of commit messages</span><br><span class="line">pick 669bf2b Add &quot;Good practices&quot; section</span><br><span class="line">pick d8340d7 Add capitalization of first letter practice</span><br><span class="line">pick 925f42b Add a practice to encourage good descriptions</span><br><span class="line">pick be05171 Add a section showing good uses of message body</span><br><span class="line">pick d115bb8 Add generic messages and column limit sections</span><br><span class="line">pick 1693840 Add a section about language consistency</span><br><span class="line">pick 80c5f47 Add commit message template</span><br><span class="line">pick 8827962 Fix triple &quot;m&quot; typo</span><br><span class="line">pick 9b81c72 Add &quot;Rebase vs Merge&quot; section</span><br><span class="line"></span><br><span class="line"># Rebase 9e6dc75..9b81c72 onto 9e6dc75 (15 commands)</span><br><span class="line">#</span><br><span class="line"># Commands:</span><br><span class="line"># p, pick = use commit</span><br><span class="line"># r, reword = use commit, but edit the commit message</span><br><span class="line"># e, edit = use commit, but stop for amending</span><br><span class="line"># s, squash = use commit, but meld into the previous commit</span><br><span class="line"># f, fixup = like &quot;squash&quot;, but discard this commit&apos;s log message</span><br><span class="line"># x, exec = run command (the rest of the line) using shell</span><br><span class="line"># d, drop = remove commit</span><br><span class="line">#</span><br><span class="line"># These lines can be re-ordered; they are executed from top to bottom.</span><br><span class="line">#</span><br><span class="line"># If you remove a line here THAT COMMIT WILL BE LOST.</span><br><span class="line">#</span><br><span class="line"># However, if you remove everything, the rebase will be aborted.</span><br><span class="line">#</span><br><span class="line"># Note that empty commits are commented out</span><br></pre></td></tr></table></figure><h4 id="fixup"><a href="#fixup" class="headerlink" title="fixup"></a>fixup</h4><p>Use it to clean up commits easily and without needing a more complex rebase.<br><a href="http://fle.github.io/git-tip-keep-your-branch-clean-with-fixup-and-autosquash.html" target="_blank" rel="noopener">This article</a> has very good examples of how and when to do it.</p><h3 id="cherry-pick"><a href="#cherry-pick" class="headerlink" title="cherry-pick"></a>cherry-pick</h3><p>It is very useful to apply that commit you made on the wrong branch, without the need to code it again.</p><p>Example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git cherry-pick 790ab21</span><br><span class="line">[master 094d820] Fix English grammar in Contributing</span><br><span class="line"> Date: Sun Feb 25 23:14:23 2018 -0300</span><br><span class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br></pre></td></tr></table></figure><h3 id="add-checkout-reset-—patch-p"><a href="#add-checkout-reset-—patch-p" class="headerlink" title="add/checkout/reset [—patch | -p]"></a>add/checkout/reset [—patch | -p]</h3><p>Let’s say we have the following diff:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">diff --git a/README.md b/README.md</span><br><span class="line">index 7b45277..6b1993c 100644</span><br><span class="line"><span class="comment">--- a/README.md</span></span><br><span class="line"><span class="comment">+++ b/README.md</span></span><br><span class="line">@@ -186,10 +186,13 @@ bebebe Corrige nome de método na classe InventoryBackend</span><br><span class="line"> ``</span><br><span class="line"> # Bad (mixes English and Portuguese)</span><br><span class="line"> ababab Usa o InventoryBackendPool para recuperar o backend de estoque</span><br><span class="line"><span class="deletion">-efefef Add `use` method to Credit model</span></span><br><span class="line"> cdcdcd Agora vai</span><br><span class="line"> ``</span><br><span class="line"></span><br><span class="line"><span class="addition">+### Template</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+This is a template, [written originally by Tim Pope](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html), which appears in the [_Pro Git Book_](https://git-scm.com/book/en/v2/Distributed-Git-Contributing-to-a-Project).</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"> ## Contributing</span><br><span class="line"></span><br><span class="line"> Any kind of help would be appreciated. Example of topics that you can help me with:</span><br><span class="line">@@ -202,3 +205,4 @@ Any kind of help would be appreciated. Example of topics that you can help me wi</span><br><span class="line"></span><br><span class="line"> - [How to Write a Git Commit Message](https://chris.beams.io/posts/git-commit/)</span><br><span class="line"> - [Pro Git Book - Commit guidelines](https://git-scm.com/book/en/v2/Distributed-Git-Contributing-to-a-Project#_commit_guidelines)</span><br><span class="line"><span class="addition">+- [A Note About Git Commit Messages](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html)</span></span><br></pre></td></tr></table></figure><p>We can use <code>git add -p</code> to add only the patches we want to, without the need to change the code that is already written.<br>It’s useful to split a big change into smaller commits or to reset/checkout specific changes.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Stage this hunk [y,n,q,a,d,/,j,J,g,s,e,?]? s</span><br><span class="line">Split into 2 hunks.</span><br></pre></td></tr></table></figure><h4 id="hunk-1"><a href="#hunk-1" class="headerlink" title="hunk 1"></a>hunk 1</h4><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@@ -186,7 +186,6 @@</span></span><br><span class="line"> ``</span><br><span class="line"> # Bad (mixes English and Portuguese)</span><br><span class="line"> ababab Usa o InventoryBackendPool para recuperar o backend de estoque</span><br><span class="line"><span class="deletion">-efefef Add `use` method to Credit model</span></span><br><span class="line"> cdcdcd Agora vai</span><br><span class="line"> ``</span><br><span class="line"></span><br><span class="line">Stage this hunk [y,n,q,a,d,/,j,J,g,e,?]?</span><br></pre></td></tr></table></figure><h4 id="hunk-2"><a href="#hunk-2" class="headerlink" title="hunk 2"></a>hunk 2</h4><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@@ -190,6 +189,10 @@</span></span><br><span class="line"> ``</span><br><span class="line"> cdcdcd Agora vai</span><br><span class="line"> ``</span><br><span class="line"></span><br><span class="line"><span class="addition">+### Template</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"><span class="addition">+This is a template, [written originally by Tim Pope](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html), which appears in the [_Pro Git Book_](https://git-scm.com/book/en/v2/Distributed-Git-Contributing-to-a-Project).</span></span><br><span class="line"><span class="addition">+</span></span><br><span class="line"> ## Contributing</span><br><span class="line"></span><br><span class="line"> Any kind of help would be appreciated. Example of topics that you can help me with:</span><br><span class="line">Stage this hunk [y,n,q,a,d,/,K,j,J,g,e,?]?</span><br></pre></td></tr></table></figure><h4 id="hunk-3"><a href="#hunk-3" class="headerlink" title="hunk 3"></a>hunk 3</h4><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@@ -202,3 +205,4 @@ Any kind of help would be appreciated. Example of topics that you can help me wi</span><br><span class="line"></span><br><span class="line"> - [How to Write a Git Commit Message](https://chris.beams.io/posts/git-commit/)</span><br><span class="line"> - [Pro Git Book - Commit guidelines](https://git-scm.com/book/en/v2/Distributed-Git-Contributing-to-a-Project#_commit_guidelines)</span><br><span class="line"><span class="addition">+- [A Note About Git Commit Messages](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html)</span></span><br></pre></td></tr></table></figure><h2 id="Other-interesting-stuff"><a href="#Other-interesting-stuff" class="headerlink" title="Other interesting stuff"></a>Other interesting stuff</h2><ul><li><a href="https://whatthecommit.com/" target="_blank" rel="noopener">https://whatthecommit.com/</a></li><li><a href="https://gitmoji.carloscuesta.me/" target="_blank" rel="noopener">https://gitmoji.carloscuesta.me/</a></li></ul><h2 id="Like-it"><a href="#Like-it" class="headerlink" title="Like it?"></a>Like it?</h2><p><a href="https://saythanks.io/to/RomuloOliveira" target="_blank" rel="noopener">Say thanks!</a></p><h2 id="Contributing"><a href="#Contributing" class="headerlink" title="Contributing"></a>Contributing</h2><p>Any kind of help would be appreciated. Example of topics that you can help me with:</p><ul><li>Grammar and spelling corrections</li><li>Translation to other languages</li><li>Improvement of source referencing</li><li>Incorrect or incomplete information</li></ul><h2 id="Inspirations-sources-and-further-reading"><a href="#Inspirations-sources-and-further-reading" class="headerlink" title="Inspirations, sources and further reading"></a>Inspirations, sources and further reading</h2><ul><li><a href="https://chris.beams.io/posts/git-commit/" target="_blank" rel="noopener">How to Write a Git Commit Message</a></li><li><a href="https://git-scm.com/book/en/v2/Distributed-Git-Contributing-to-a-Project#_commit_guidelines" target="_blank" rel="noopener">Pro Git Book - Commit guidelines</a></li><li><a href="https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html" target="_blank" rel="noopener">A Note About Git Commit Messages</a></li><li><a href="https://www.atlassian.com/git/tutorials/merging-vs-rebasing" target="_blank" rel="noopener">Merging vs. Rebasing</a></li><li><a href="https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History" target="_blank" rel="noopener">Pro Git Book - Rewriting History</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Commit-messages-guide&quot;&gt;&lt;a href=&quot;#Commit-messages-guide&quot; class=&quot;headerlink&quot; title=&quot;Commit messages guide&quot;&gt;&lt;/a&gt;Commit messages guide&lt;/h1&gt;&lt;div class=&quot;note warning&quot;&gt;&lt;p&gt;To be translated&lt;/p&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://saythanks.io/to/RomuloOliveira&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg&quot; alt=&quot;Say Thanks!&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A guide to understanding the importance of commit messages and how to write them well.&lt;/p&gt;
&lt;p&gt;It may help you to learn what a commit is, why it is important to write good messages, best practices and some tips to plan and (re)write a good commit history.&lt;/p&gt;
    
    </summary>
    
      <category term="Git" scheme="https://jacksonleon.gitee.io/categories/Git/"/>
    
    
      <category term="Git" scheme="https://jacksonleon.gitee.io/tags/Git/"/>
    
      <category term="Reproduce" scheme="https://jacksonleon.gitee.io/tags/Reproduce/"/>
    
  </entry>
  
  <entry>
    <title>使用Requests模拟post请求自动构建Gitee pages服务</title>
    <link href="https://jacksonleon.gitee.io/posts/3364879403.html"/>
    <id>https://jacksonleon.gitee.io/posts/3364879403.html</id>
    <published>2019-05-01T06:57:54.000Z</published>
    <updated>2019-05-01T06:57:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用Requests模拟post请求自动构建Gitee-pages服务"><a href="#使用Requests模拟post请求自动构建Gitee-pages服务" class="headerlink" title="使用Requests模拟post请求自动构建Gitee pages服务"></a>使用Requests模拟post请求自动构建Gitee pages服务</h1><blockquote><p>Github pages国内速度堪忧，所以有一段时间把Coding.net和Gitee作为备用网址，之后腾讯和Coding.net合作后pages服务就非常不稳定，有一段时间根本进不去，忘记是从什么时候开始Gitee pages免费版就不再支持推送后自动部署Pages服务，这样我的博客就只剩下满满的GitHub pages了。但是既然免费版也可以更新pages，只不过需要到网页上点个按钮，那么我们也可以使用python模拟post请求实现推送后自动部署。</p><p>一起来造轮子吧！</p></blockquote><a id="more"></a><p>（满满的资本家气息……</p><p><img src="https://i.loli.net/2019/05/01/5cc949aba4f60.png" alt="image-20190501150207893"></p><p>先用Chrome抓取一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /Username/Username/pages/rebuild HTTP/1.1</span><br><span class="line">Host: gitee.com</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Content-Length: 47</span><br><span class="line">Origin: https://gitee.com</span><br><span class="line">X-CSRF-Token: ***********************</span><br><span class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.108 Safari/537.36</span><br><span class="line">Content-Type: application/x-www-form-urlencoded; charset=UTF-8</span><br><span class="line">Accept: */*</span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">DNT: 1</span><br><span class="line">Referer: https://gitee.com/Username/Username/pages</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class="line">Cookie: cookies</span><br></pre></td></tr></table></figure><p><code>post</code>请求，那么先看<code>Content-Type</code>，是<code>application/x-www-form-urlencoded</code>，注意一共有四种形式，不能混淆。那么我们就可以用对应的进行模拟</p><p>上代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'https://gitee.com/Username/Username/pages/rebuild'</span></span><br><span class="line">data = &#123;&#125;</span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">'Content-Type'</span>:</span><br><span class="line">    <span class="string">'application/x-www-form-urlencoded'</span>,</span><br><span class="line">    <span class="string">'Referer'</span>:</span><br><span class="line">    <span class="string">'https://gitee.com/Username/Username/pages'</span>,</span><br><span class="line">    <span class="string">'X-CSRF-Token'</span>:</span><br><span class="line">    <span class="string">'***********************'</span>,</span><br><span class="line">    <span class="string">'User-Agent'</span>:</span><br><span class="line">    <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.108 Safari/537.36'</span>,</span><br><span class="line">    <span class="string">'X-Requested-With'</span>:</span><br><span class="line">    <span class="string">'XMLHttpRequest'</span>,</span><br><span class="line">    <span class="string">'Cookie'</span>:</span><br><span class="line">    <span class="string">'cookies'</span></span><br><span class="line">&#125;</span><br><span class="line">r = requests.post(url, headers=header)</span><br></pre></td></tr></table></figure><p>See,it’s so easy!</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用Requests模拟post请求自动构建Gitee-pages服务&quot;&gt;&lt;a href=&quot;#使用Requests模拟post请求自动构建Gitee-pages服务&quot; class=&quot;headerlink&quot; title=&quot;使用Requests模拟post请求自动构建Gitee pages服务&quot;&gt;&lt;/a&gt;使用Requests模拟post请求自动构建Gitee pages服务&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Github pages国内速度堪忧，所以有一段时间把Coding.net和Gitee作为备用网址，之后腾讯和Coding.net合作后pages服务就非常不稳定，有一段时间根本进不去，忘记是从什么时候开始Gitee pages免费版就不再支持推送后自动部署Pages服务，这样我的博客就只剩下满满的GitHub pages了。但是既然免费版也可以更新pages，只不过需要到网页上点个按钮，那么我们也可以使用python模拟post请求实现推送后自动部署。&lt;/p&gt;
&lt;p&gt;一起来造轮子吧！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Blog" scheme="https://jacksonleon.gitee.io/categories/Blog/"/>
    
    
      <category term="Blog" scheme="https://jacksonleon.gitee.io/tags/Blog/"/>
    
      <category term="Python" scheme="https://jacksonleon.gitee.io/tags/Python/"/>
    
      <category term="Requests" scheme="https://jacksonleon.gitee.io/tags/Requests/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 图床更改及博客推送</title>
    <link href="https://jacksonleon.gitee.io/posts/1145527125.html"/>
    <id>https://jacksonleon.gitee.io/posts/1145527125.html</id>
    <published>2019-05-01T02:43:45.000Z</published>
    <updated>2019-05-01T02:43:45.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown-图床更改及博客推送"><a href="#Markdown-图床更改及博客推送" class="headerlink" title="Markdown 图床更改及博客推送"></a>Markdown 图床更改及博客推送</h1><blockquote><p>由于2019年4月份新浪图床开启了防盗链功能（不确定），部署到pages服务的图片失效，为了防止图片资源丢失，需要在本地留一份备份，但是本地的图片在线博客无法显示，所以还是需要重新找一个目前可以使用的图床以及图床工具。</p></blockquote><a id="more"></a><h2 id="图床选择"><a href="#图床选择" class="headerlink" title="图床选择"></a>图床选择</h2><ul><li><p>七牛云存储由于需要上传身份验证，个人比较敏感，所以不考虑这个选项</p></li><li><p>腾讯云cos只有7个月的免费时间，在线博客本来就是白嫖的，也没多少人看，我大部分时间还是看本地文档，所以也不考虑</p></li><li><p>阿里云oss与腾讯云类似，而且更贵</p></li><li>SM.MS，V2EX网友提供维护，不限制流量，不限制公网域名，只有上传文件频率限制，只是比较担心什么时候会停止维护，毕竟没有收入来源，要是大佬钱多那就当我没说</li></ul><p>我这里选择的是SM.MS图床，虽然有点担心后续维护，但是对于目前来说，这个算是最优解了。</p><p>SM.MS提供了API，一小时内可以上传100张图片，这个频率一般人达不到吧，除非你是想把这个当成云盘存你的照片，不过傻子才会把私人照片上传到图床啊，艳照门是怎么来的啊！小伙子/小姑娘们！</p><h2 id="图床工具"><a href="#图床工具" class="headerlink" title="图床工具"></a>图床工具</h2><p>目前来说mac端的图床工具做的比较好的就是ipic了，但是这货免费版只支持新浪，新浪呢又开启了防盗链，付费版呢也不支持SM.MS</p><p>然后我就想通过Alfred workflow来作为图床工具，自动获取剪切板的图片，然后利用API转换成链接，放到剪切板里，我就又找了半天，又是ruby，又是PHP，又是python，不知道哪里出了问题怎么都不成功，气！</p><p>索性我就自己写了一个轮子，把原先markdown文件里的新浪图床链接下载成图片，再用API转成SMMS链接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlretrieve</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">"Accept"</span>:</span><br><span class="line">    <span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3"</span>,</span><br><span class="line">    <span class="string">"Accept-Encoding"</span>:</span><br><span class="line">    <span class="string">"gzip, deflate"</span>,</span><br><span class="line">    <span class="string">"Accept-Language"</span>:</span><br><span class="line">    <span class="string">"zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7"</span>,</span><br><span class="line">    <span class="string">"Cache-Control"</span>:</span><br><span class="line">    <span class="string">"max-age=0"</span>,</span><br><span class="line">    <span class="string">"DNT"</span>:</span><br><span class="line">    <span class="string">"1"</span>,</span><br><span class="line">    <span class="string">"Host"</span>:</span><br><span class="line">    <span class="string">"ws1.sinaimg.cn"</span>,</span><br><span class="line">    <span class="string">"If-Modified-Since"</span>:</span><br><span class="line">    <span class="string">"Mon, 08 Jul 2013 18:06:40 GMT"</span>,</span><br><span class="line">    <span class="string">"Proxy-Connection"</span>:</span><br><span class="line">    <span class="string">"keep-alive"</span>,</span><br><span class="line">    <span class="string">"Upgrade-Insecure-Requests"</span>:</span><br><span class="line">    <span class="string">"1"</span>,</span><br><span class="line">    <span class="string">"User-Agent"</span>:</span><br><span class="line">    <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.108 Safari/537.36"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># find markdown files in filesPath</span></span><br><span class="line"><span class="comment"># list files</span></span><br><span class="line"><span class="comment"># get the whole files path</span></span><br><span class="line"><span class="comment"># decide the files are md file or not</span></span><br><span class="line"><span class="comment"># return markdown files list</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_MD</span><span class="params">(filesPath)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(filesPath):</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    filesList = os.listdir(filesPath)</span><br><span class="line">    MDFileList = []</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> filesList:</span><br><span class="line">        filePath = os.path.join(filesPath, file)</span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(filePath) <span class="keyword">and</span> os.path.splitext(filePath)[<span class="number">1</span>] == <span class="string">'.md'</span>:</span><br><span class="line">            MDFileList.append(filePath)</span><br><span class="line">    <span class="keyword">return</span> MDFileList</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># download pics through url</span></span><br><span class="line"><span class="comment"># generate files' name in filespath</span></span><br><span class="line"><span class="comment"># get pics' content</span></span><br><span class="line"><span class="comment"># write the content to file</span></span><br><span class="line"><span class="comment"># return saved pic path</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">downloadPic</span><span class="params">(link, savePath)</span>:</span></span><br><span class="line">    picPath = savePath + link.split(<span class="string">'.'</span>)[<span class="number">1</span>] + str(<span class="number">1</span>) + <span class="string">'.'</span> + link.split(</span><br><span class="line">        <span class="string">'.'</span>)[<span class="number">-1</span>]</span><br><span class="line">    pic_html = requests.get(link, stream=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">with</span> open(picPath, <span class="string">'wb'</span>) <span class="keyword">as</span> pic:</span><br><span class="line">        pic.write(pic_html.content)</span><br><span class="line">    <span class="comment"># urlretrieve(link, picPath)</span></span><br><span class="line">    <span class="keyword">return</span> picPath</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># upload pics using sm.ms</span></span><br><span class="line"><span class="comment"># using sm.ms api</span></span><br><span class="line"><span class="comment"># return cloud path</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">smmsUpload</span><span class="params">(imgOriginPath)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        smmsUrl = <span class="string">''</span></span><br><span class="line">        data = requests.post(</span><br><span class="line">            smmsUrl,</span><br><span class="line">            files=&#123;</span><br><span class="line">                <span class="string">'smfile'</span>: open(imgOriginPath, <span class="string">'rb'</span>),</span><br><span class="line">                <span class="string">'format'</span>: <span class="string">'json'</span></span><br><span class="line">            &#125;)</span><br><span class="line">        img_new_url = json.loads(data.text)</span><br><span class="line">        cloud_path = img_new_url[<span class="string">'data'</span>][<span class="string">'url'</span>]</span><br><span class="line">        <span class="keyword">return</span> (cloud_path)</span><br><span class="line">    <span class="keyword">except</span> BaseException <span class="keyword">as</span> err:</span><br><span class="line">        print(<span class="string">"error in smms\n&#123;&#125;"</span>.format(err))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># rewrite markdown files</span></span><br><span class="line"><span class="comment"># save files</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">MDRewrite</span><span class="params">(MDFilePath, MDContent)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(MDFilePath, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> md:</span><br><span class="line">        md.write(MDContent)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># change pic blocks from sinaimg to smms</span></span><br><span class="line"><span class="comment"># using re to find sinaimg urls</span></span><br><span class="line"><span class="comment"># download pic from sinaimg</span></span><br><span class="line"><span class="comment"># upload pics to sm.ms and get cloud url</span></span><br><span class="line"><span class="comment"># rewrite markdown files content and save</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">picBlockParser</span><span class="params">(MDFilePath)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        picUrl_re = re.compile(<span class="string">''</span>)</span><br><span class="line">        <span class="keyword">with</span> open(MDFilePath) <span class="keyword">as</span> md:</span><br><span class="line">            MDContent = md.read()</span><br><span class="line">            picUrl = picUrl_re.findall(MDContent)</span><br><span class="line">            <span class="keyword">if</span> len(picUrl) &gt; <span class="number">0</span>:</span><br><span class="line">                print(MDFilePath)</span><br><span class="line">                <span class="comment"># print(len(picUrl))</span></span><br><span class="line">                <span class="comment"># print(picUrl)</span></span><br><span class="line">                <span class="keyword">for</span> Url <span class="keyword">in</span> picUrl:</span><br><span class="line">                    picPath = downloadPic(Url,<span class="string">'pic/'</span>)</span><br><span class="line">                    print(Url)</span><br><span class="line">                    smmsUrl = smmsUpload(picPath)</span><br><span class="line">                    print(smmsUrl)</span><br><span class="line">                    MDContent = MDContent.replace(Url, smmsUrl)</span><br><span class="line">                MDRewrite(MDFilePath, MDContent)</span><br><span class="line">                print(MDFilePath + <span class="string">'替换成功'</span>)</span><br><span class="line">    <span class="keyword">except</span> BaseException <span class="keyword">as</span> err:</span><br><span class="line">        print(<span class="string">"&#123;&#125;"</span>.format(err))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="keyword">for</span> page <span class="keyword">in</span> find_MD(<span class="string">'/_posts'</span>):</span><br><span class="line">        picBlockList = picBlockParser(page)</span><br></pre></td></tr></table></figure><h2 id="博客推送"><a href="#博客推送" class="headerlink" title="博客推送"></a>博客推送</h2><p>由于图床工具使用python来实现，那么就在推送之前将markdown中的本地图片地址，转化成smms链接，再进行推送，这样以后更改图床比较方便，只需要更改API实现方式就👌。</p><p>具体实现方式与上述代码类似，在此不在赘述。</p><p>放几张美盾和钢铁侠的海报测试一下。</p><p><img src="https://i.loli.net/2019/05/01/5cc9193977d28.jpg" alt="Captain America- The First Avenger-1"></p><p><img src="https://i.loli.net/2019/05/01/5cc91650afbb3.jpg" alt="Captain America- The First Avenger-2"></p><p><img src="https://i.loli.net/2019/05/01/5cc916f86a377.jpg" alt="Iron Man"></p><p><img src="https://i.loli.net/2019/05/01/5cc9193a75b6d.jpg" alt="Marvel&#39;s The Avengers-1"></p><p><img src="https://i.loli.net/2019/05/01/5cc9193e75cc9.jpg" alt="Avengers- Age of Ultron"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Markdown-图床更改及博客推送&quot;&gt;&lt;a href=&quot;#Markdown-图床更改及博客推送&quot; class=&quot;headerlink&quot; title=&quot;Markdown 图床更改及博客推送&quot;&gt;&lt;/a&gt;Markdown 图床更改及博客推送&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;由于2019年4月份新浪图床开启了防盗链功能（不确定），部署到pages服务的图片失效，为了防止图片资源丢失，需要在本地留一份备份，但是本地的图片在线博客无法显示，所以还是需要重新找一个目前可以使用的图床以及图床工具。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Blog" scheme="https://jacksonleon.gitee.io/categories/Blog/"/>
    
    
      <category term="Blog" scheme="https://jacksonleon.gitee.io/tags/Blog/"/>
    
      <category term="Picture Bed" scheme="https://jacksonleon.gitee.io/tags/Picture-Bed/"/>
    
  </entry>
  
  <entry>
    <title>Pytorch Style Guide</title>
    <link href="https://jacksonleon.gitee.io/posts/3514606856.html"/>
    <id>https://jacksonleon.gitee.io/posts/3514606856.html</id>
    <published>2019-05-01T01:03:11.000Z</published>
    <updated>2019-05-01T01:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Pytorch-Style-Guide"><a href="#Pytorch-Style-Guide" class="headerlink" title="Pytorch Style Guide"></a>Pytorch Style Guide</h1><div class="note warning"><p>To be translated</p></div><blockquote><p>This is not an official style guide for PyTorch. This document summarizes best practices from more than a year of experience with deep learning using the PyTorch framework. Note that the learnings we share come mostly from a research and startup perspective.</p><p>This is an open project and other collaborators are highly welcomed to edit and improve the document.</p><p>You will find three main parts of this doc. First, a quick recap of best practices in Python, followed by some tips and recommendations using PyTorch. Finally, we share some insights and experiences using other frameworks which helped us generally improve our workflow.</p></blockquote><a id="more"></a><h2 id="We-recommend-using-Python-3-6"><a href="#We-recommend-using-Python-3-6" class="headerlink" title="We recommend using Python 3.6+"></a>We recommend using Python 3.6+</h2><p>From our experience we recommend using Python 3.6+ because of the following features which became very handy for clean and simple code:</p><ul><li><a href="https://medium.com/@ageitgey/learn-how-to-use-static-type-checking-in-python-3-6-in-10-minutes-12c86d72677b" target="_blank" rel="noopener">Support for typing since Python 3.6.</a></li><li><a href="https://realpython.com/python-f-strings/" target="_blank" rel="noopener">Support of f strings since Python 3.6</a></li></ul><h2 id="Python-Styleguide-recap"><a href="#Python-Styleguide-recap" class="headerlink" title="Python Styleguide recap"></a>Python Styleguide recap</h2><p>We try to follow the Google Styleguide for Python.<br>Please refer to the well-documented  <a href="https://github.com/google/styleguide/blob/gh-pages/pyguide.md" target="_blank" rel="noopener">style guide on python code provided by Google</a>.</p><p>We provide here a summary of the most commonly used rules:</p><h3 id="Naming-Conventions"><a href="#Naming-Conventions" class="headerlink" title="Naming Conventions"></a>Naming Conventions</h3><p><em>From 3.16.4</em></p><div class="table-container"><table><thead><tr><th>Type</th><th>Convention</th><th>Example</th></tr></thead><tbody><tr><td>Packages &amp; Modules</td><td>lower_with_under</td><td>from <strong>prefetch_generator</strong> import BackgroundGenerator</td></tr><tr><td>Classes</td><td>CapWords</td><td>class <strong>DataLoader</strong></td></tr><tr><td>Constants</td><td>CAPS_WITH_UNDER</td><td><strong>BATCH_SIZE=16</strong></td></tr><tr><td>Instances</td><td>lower_with_under</td><td><strong>dataset</strong> = Dataset</td></tr><tr><td>Methods &amp; Functions</td><td>lower_with_under()</td><td>def <strong>visualize_tensor()</strong></td></tr><tr><td>Variables</td><td>lower_with_under</td><td><strong>background_color=’Blue’</strong></td></tr></tbody></table></div><h2 id="IDEs"><a href="#IDEs" class="headerlink" title="IDEs"></a>IDEs</h2><h3 id="Code-Editors"><a href="#Code-Editors" class="headerlink" title="Code Editors"></a>Code Editors</h3><p>In general, we recommend the use of an IDE such as visual studio code or PyCharm. Whereas VS Code provides syntax highlighting and autocompletion in a relatively lightweight editor PyCharm has lots of advanced features for working with remote clusters.</p><h4 id="Setting-up-PyCharm-to-work-with-a-Remote-Machine"><a href="#Setting-up-PyCharm-to-work-with-a-Remote-Machine" class="headerlink" title="Setting up PyCharm to work with a Remote Machine"></a>Setting up PyCharm to work with a Remote Machine</h4><ol><li>Login to your remote machine (AWS, Google etc.)</li><li>Create a new folder and a new virtual environment</li><li>In Pycharm (professional edition) in the project settings setup a remote interpreter</li><li>Configure the remote python interpreter (path to venv on AWS, Google etc.)</li><li>Configure the mapping of the code from your local machine to the remote machine</li></ol><p>If set up properly this allows you to do the following:</p><ul><li>Code on your local computer (notebook, desktop) wherever you want (offline, online)</li><li>Sync local code with your remote machine</li><li>Additional packages will be installed automatically on a remote machine</li><li>You don’t need any dataset on your local machine</li><li>Run the code and debug on the remote machine as if it would be your local machine running the code</li></ul><h2 id="Jupyter-Notebook-vs-Python-Scripts"><a href="#Jupyter-Notebook-vs-Python-Scripts" class="headerlink" title="Jupyter Notebook vs Python Scripts"></a>Jupyter Notebook vs Python Scripts</h2><p>In general, we recommend to use jupyter notebooks for initial exploration/ playing around with new models and code.<br>Python scripts should be used as soon as you want to train the model on a bigger dataset where also reproducibility is more important.</p><p><strong>Our recommended workflow:</strong></p><ol><li>Start with a jupyter notebook</li><li>Explore the data and models</li><li>Build your classes/ methods inside cells of the notebook</li><li>Move your code to python scripts</li><li>Train/ deploy on server</li></ol><div class="table-container"><table><thead><tr><th><strong>Jupyter Notebook</strong></th><th><strong>Python Scripts</strong></th></tr></thead><tbody><tr><td>+ Exploration</td><td>+ Running longer jobs without interruption</td></tr><tr><td>+ Debugging</td><td>+ Easy to track changes with git</td></tr><tr><td>- Can become a huge file</td><td>- Debugging mostly means rerunning the whole script</td></tr><tr><td>- Can be interrupted (don’t use for long training)</td><td></td></tr><tr><td>- Prone to errors and become a mess</td></tr></tbody></table></div><h2 id="Libraries"><a href="#Libraries" class="headerlink" title="Libraries"></a>Libraries</h2><p>Commonly used libraries:</p><div class="table-container"><table><thead><tr><th>Name</th><th>Description</th><th>Used for</th></tr></thead><tbody><tr><td><a href="https://pytorch.org/" target="_blank" rel="noopener">torch</a></td><td>Base Framework for working with neural networks</td><td>creating tensors, networks and training them using backprop</td></tr><tr><td><a href="https://pytorch.org/docs/stable/torchvision" target="_blank" rel="noopener">torchvision</a></td><td>todo</td><td>data preprocessing, augmentation, postprocessing</td></tr><tr><td><a href="https://pillow.readthedocs.io/en/stable/" target="_blank" rel="noopener">Pillow (PIL)</a></td><td>Python Imaging Library</td><td>Loading images and storing them</td></tr><tr><td><a href="https://www.numpy.org/" target="_blank" rel="noopener">Numpy</a></td><td>Package for scientific computing with Python</td><td>Data preprocessing &amp; postprocessing</td></tr><tr><td><a href="https://pypi.org/project/prefetch_generator/" target="_blank" rel="noopener">prefetch_generator</a></td><td>Library for background processing</td><td>Loading next batch in background during computation</td></tr><tr><td><a href="https://github.com/tqdm/tqdm" target="_blank" rel="noopener">tqdm</a></td><td>Progress bar</td><td>Progress during training of each epoch</td></tr><tr><td><a href="https://github.com/sksq96/pytorch-summary" target="_blank" rel="noopener">torchsummary</a></td><td>Keras summary for PyTorch</td><td>Displays network, it’s parameters and sizes at each layer</td></tr><tr><td><a href="https://github.com/lanpa/tensorboardX" target="_blank" rel="noopener">tensorboardx</a></td><td>Tensorboard without tensorflow</td><td>Logging experiments and showing them in tensorboard</td></tr></tbody></table></div><h2 id="File-Organization"><a href="#File-Organization" class="headerlink" title="File Organization"></a>File Organization</h2><p>Don’t put all layers and models into the same file. A best practice is to separate the final networks into a separate file (<em>networks.py</em>) and keep the layers, losses, and ops in respective files (<em>layers.py</em>, <em>losses.py</em>, <em>ops.py</em>). The finished model (composed of one or multiple networks) should be reference in a file with its name (e.g. <em>yolov3.py</em>, <em>DCGAN.py</em>)</p><p>The main routine, respective the train and test scripts should only import from the file having the model’s name.</p><h2 id="Building-a-Neural-Network-in-PyTorch"><a href="#Building-a-Neural-Network-in-PyTorch" class="headerlink" title="Building a Neural Network in PyTorch"></a>Building a Neural Network in PyTorch</h2><p>We recommend breaking up the network into its smaller reusable pieces. A network is a <strong>nn.Module</strong> consisting of operations or other <strong>nn.Module</strong>s as building blocks. Loss functions are also <strong>nn.Module</strong> and can, therefore, be directly integrated into the network.</p><p>A class inheriting from <strong>nn.Module</strong> must have a <em>forward</em> method implementing the forward pass of the respective layer or operation. </p><p>A <strong>nn.module</strong> can be used on input data using <strong>self.net(input)</strong>. This simply uses the <em><strong>call</strong>()</em> method of the object to feed the input through the module.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">output = self.net(input)</span><br></pre></td></tr></table></figure><h3 id="A-Simple-Network-in-PyTorch"><a href="#A-Simple-Network-in-PyTorch" class="headerlink" title="A Simple Network in PyTorch"></a>A Simple Network in PyTorch</h3><p>Use the following pattern for simple networks with a single input and single output:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConvBlock</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        super(ConvBlock, self).__init__()</span><br><span class="line">        block = [nn.Conv2d(...)]</span><br><span class="line">        block += [nn.ReLU()]</span><br><span class="line">        block += [nn.BatchNorm2d(...)]</span><br><span class="line">        self.block = nn.Sequential(*block)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.block(x)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SimpleNetwork</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, num_resnet_blocks=<span class="number">6</span>)</span>:</span></span><br><span class="line">        super(SimpleNetwork, self).__init__()</span><br><span class="line">        <span class="comment"># here we add the individual layers</span></span><br><span class="line">        layers = [ConvBlock(...)]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(num_resnet_blocks):</span><br><span class="line">            layers += [ResBlock(...)]</span><br><span class="line">        self.net = nn.Sequential(*layers)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.net(x)</span><br></pre></td></tr></table></figure></p><p>Note the following:</p><ul><li>We reuse simple, recurrent building blocks such as <em>ConvBlock</em> which consists of the same recurrent pattern of (convolution, activation, normalization) and put them into a separate nn.Module</li><li>We build up a list of desired layers and finally turn them into a model using <em>nn.Sequential()</em>. We use the * operator before the list object to unwrap it.</li><li>In the forward pass we just run the input through the model</li></ul><h3 id="A-Network-with-skip-connections-in-PyTorch"><a href="#A-Network-with-skip-connections-in-PyTorch" class="headerlink" title="A Network with skip connections in PyTorch"></a>A Network with skip connections in PyTorch</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ResnetBlock</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, dim, padding_type, norm_layer, use_dropout, use_bias)</span>:</span></span><br><span class="line">        super(ResnetBlock, self).__init__()</span><br><span class="line">        self.conv_block = self.build_conv_block(...)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">build_conv_block</span><span class="params">(self, ...)</span>:</span></span><br><span class="line">        conv_block = []</span><br><span class="line"></span><br><span class="line">        conv_block += [nn.Conv2d(...),</span><br><span class="line">                       norm_layer(...),</span><br><span class="line">                       nn.ReLU()]</span><br><span class="line">        <span class="keyword">if</span> use_dropout:</span><br><span class="line">            conv_block += [nn.Dropout(...)]</span><br><span class="line">            </span><br><span class="line">        conv_block += [nn.Conv2d(...),</span><br><span class="line">                       norm_layer(...)]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> nn.Sequential(*conv_block)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        out = x + self.conv_block(x)</span><br><span class="line">        <span class="keyword">return</span> out</span><br></pre></td></tr></table></figure><p>Here the skip connection of a <em>ResNet block</em> has been implemented directly in the forward pass. PyTorch allows for dynamic operations during the forward pass. </p><h3 id="A-Network-with-multiple-outputs-in-PyTorch"><a href="#A-Network-with-multiple-outputs-in-PyTorch" class="headerlink" title="A Network with multiple outputs in PyTorch"></a>A Network with multiple outputs in PyTorch</h3><p>For a network requiring multiple outputs, such as building a perceptual loss using a pretrained VGG network we use the following pattern:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Vgg19</span><span class="params">(torch.nn.Module)</span>:</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, requires_grad=False)</span>:</span></span><br><span class="line">    super(Vgg19, self).__init__()</span><br><span class="line">    vgg_pretrained_features = models.vgg19(pretrained=<span class="literal">True</span>).features</span><br><span class="line">    self.slice1 = torch.nn.Sequential()</span><br><span class="line">    self.slice2 = torch.nn.Sequential()</span><br><span class="line">    self.slice3 = torch.nn.Sequential()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">7</span>):</span><br><span class="line">        self.slice1.add_module(str(x), vgg_pretrained_features[x])</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">7</span>, <span class="number">21</span>):</span><br><span class="line">        self.slice2.add_module(str(x), vgg_pretrained_features[x])</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">21</span>, <span class="number">30</span>):</span><br><span class="line">        self.slice3.add_module(str(x), vgg_pretrained_features[x])</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> requires_grad:</span><br><span class="line">        <span class="keyword">for</span> param <span class="keyword">in</span> self.parameters():</span><br><span class="line">            param.requires_grad = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">    h_relu1 = self.slice1(x)</span><br><span class="line">    h_relu2 = self.slice2(h_relu1)        </span><br><span class="line">    h_relu3 = self.slice3(h_relu2)        </span><br><span class="line">    out = [h_relu1, h_relu2, h_relu3]</span><br><span class="line">    <span class="keyword">return</span> out</span><br></pre></td></tr></table></figure></p><p>Note here the following:</p><ul><li>We use a pretrained model provided by <em>torchvision</em>.</li><li>We split up the network into three slices. Each slice consists of layers from the pretrained model.</li><li>We <em>freeze</em> the network by setting <em>requires_grad = False</em></li><li>We return a list with the three outputs of our slices</li></ul><h2 id="Custom-Loss"><a href="#Custom-Loss" class="headerlink" title="Custom Loss"></a>Custom Loss</h2><p>Even if PyTorch already has a lot of of standard loss function it might be necessary sometimes to create your own loss function. For this, create a separate file <code>losses.py</code> and extend the <code>nn.Module</code> class to create your custom loss function:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomLoss</span><span class="params">(torch.nn.Module)</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        super(CustomLoss,self).__init__()</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self,x,y)</span>:</span></span><br><span class="line">        loss = torch.mean((x - y)**<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> loss</span><br></pre></td></tr></table></figure><h2 id="Recommended-code-structure-for-training-your-model"><a href="#Recommended-code-structure-for-training-your-model" class="headerlink" title="Recommended code structure for training your model"></a>Recommended code structure for training your model</h2><p>Note that we used the following patterns:</p><ul><li>We use <em>BackgroundGenerator</em> from <em>prefetch_generator</em> to load next batches in background</li><li>We use tqdm to monitor training progress and show the <em>compute efficiency</em>. This helps us find bottlenecks in our data loading pipeline.</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># import statements</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.utils <span class="keyword">import</span> data</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># set flags / seeds</span></span><br><span class="line">torch.backends.cudnn.benchmark = <span class="literal">True</span></span><br><span class="line">np.random.seed(<span class="number">1</span>)</span><br><span class="line">torch.manual_seed(<span class="number">1</span>)</span><br><span class="line">torch.cuda.manual_seed(<span class="number">1</span>)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># Start with main code</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># argparse for additional flags for experiment</span></span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">"Train a network for ..."</span>)</span><br><span class="line">    ...</span><br><span class="line">    opt = parser.parse_args() </span><br><span class="line">    </span><br><span class="line">    <span class="comment"># add code for datasets (we always use train and validation/ test set)</span></span><br><span class="line">    data_transforms = transforms.Compose([</span><br><span class="line">        transforms.Resize((opt.img_size, opt.img_size)),</span><br><span class="line">        transforms.RandomHorizontalFlip(),</span><br><span class="line">        transforms.ToTensor(),</span><br><span class="line">        transforms.Normalize((<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>), (<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>))</span><br><span class="line">    ])</span><br><span class="line">    </span><br><span class="line">    train_dataset = datasets.ImageFolder(</span><br><span class="line">        root=os.path.join(opt.path_to_data, <span class="string">"train"</span>),</span><br><span class="line">        transform=data_transforms)</span><br><span class="line">    train_data_loader = data.DataLoader(train_dataset, ...)</span><br><span class="line">    </span><br><span class="line">    test_dataset = datasets.ImageFolder(</span><br><span class="line">        root=os.path.join(opt.path_to_data, <span class="string">"test"</span>),</span><br><span class="line">        transform=data_transforms)</span><br><span class="line">    test_data_loader = data.DataLoader(test_dataset ...)</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># instantiate network (which has been imported from *networks.py*)</span></span><br><span class="line">    net = MyNetwork(...)</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># create losses (criterion in pytorch)</span></span><br><span class="line">    criterion_L1 = torch.nn.L1Loss()</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># if running on GPU and we want to use cuda move model there</span></span><br><span class="line">    use_cuda = torch.cuda.is_available()</span><br><span class="line">    <span class="keyword">if</span> use_cuda:</span><br><span class="line">        net = net.cuda()</span><br><span class="line">        ...</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># create optimizers</span></span><br><span class="line">    optim = torch.optim.Adam(net.parameters(), lr=opt.lr)</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># load checkpoint if needed/ wanted</span></span><br><span class="line">    start_n_iter = <span class="number">0</span></span><br><span class="line">    start_epoch = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> opt.resume:</span><br><span class="line">        ckpt = load_checkpoint(opt.path_to_checkpoint) <span class="comment"># custom method for loading last checkpoint</span></span><br><span class="line">        net.load_state_dict(ckpt[<span class="string">'net'</span>])</span><br><span class="line">        start_epoch = ckpt[<span class="string">'epoch'</span>]</span><br><span class="line">        start_n_iter = ckpt[<span class="string">'n_iter'</span>]</span><br><span class="line">        optim.load_state_dict(ckpt[<span class="string">'optim'</span>])</span><br><span class="line">        print(<span class="string">"last checkpoint restored"</span>)</span><br><span class="line">        ...</span><br><span class="line">        </span><br><span class="line">    <span class="comment"># if we want to run experiment on multiple GPUs we move the models there</span></span><br><span class="line">    net = torch.nn.DataParallel(net)</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># typically we use tensorboardX to keep track of experiments</span></span><br><span class="line">    writer = SummaryWriter(...)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># now we start the main loop</span></span><br><span class="line">    n_iter = start_n_iter</span><br><span class="line">    <span class="keyword">for</span> epoch <span class="keyword">in</span> range(start_epoch, opt.epochs):</span><br><span class="line">        <span class="comment"># set models to train mode</span></span><br><span class="line">        net.train()</span><br><span class="line">        ...</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># use prefetch_generator and tqdm for iterating through data</span></span><br><span class="line">        pbar = tqdm(enumerate(BackgroundGenerator(train_data_loader, ...)),</span><br><span class="line">                    total=len(train_data_loader))</span><br><span class="line">        start_time = time.time()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># for loop going through dataset</span></span><br><span class="line">        <span class="keyword">for</span> i, data <span class="keyword">in</span> pbar:</span><br><span class="line">            <span class="comment"># data preparation</span></span><br><span class="line">            img, label = data</span><br><span class="line">            <span class="keyword">if</span> use_cuda:</span><br><span class="line">                img = img.cuda()</span><br><span class="line">                label = label.cuda()</span><br><span class="line">            ...</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># It's very good practice to keep track of preparation time and computation time using tqdm to find any issues in your dataloader</span></span><br><span class="line">            prepare_time = start_time-time.time()</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># forward and backward pass</span></span><br><span class="line">            optim.zero_grad()</span><br><span class="line">            ...</span><br><span class="line">            loss.backward()</span><br><span class="line">            optim.step()</span><br><span class="line">            ...</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># udpate tensorboardX</span></span><br><span class="line">            writer.add_scalar(..., n_iter)</span><br><span class="line">            ...</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># compute computation time and *compute_efficiency*</span></span><br><span class="line">            process_time = start_time-time.time()-prepare_time</span><br><span class="line">            pbar.set_description(<span class="string">"Compute efficiency: &#123;:.2f&#125;, epoch: &#123;&#125;/&#123;&#125;:"</span>.format(</span><br><span class="line">                process_time/(process_time+prepare_time), epoch, opt.epochs))</span><br><span class="line">            start_time = time.time()</span><br><span class="line">            </span><br><span class="line">        <span class="comment"># maybe do a test pass every x epochs</span></span><br><span class="line">        <span class="keyword">if</span> epoch % x == x<span class="number">-1</span>:</span><br><span class="line">            <span class="comment"># bring models to evaluation mode</span></span><br><span class="line">            net.eval()</span><br><span class="line">            ...</span><br><span class="line">            <span class="comment">#do some tests</span></span><br><span class="line">            pbar = tqdm(enumerate(BackgroundGenerator(test_data_loader, ...)),</span><br><span class="line">                    total=len(test_data_loader)) </span><br><span class="line">            <span class="keyword">for</span> i, data <span class="keyword">in</span> pbar:</span><br><span class="line">                ...</span><br><span class="line">                </span><br><span class="line">            <span class="comment"># save checkpoint if needed</span></span><br><span class="line">            ...</span><br></pre></td></tr></table></figure><h2 id="Training-on-Multiple-GPUs-in-PyTorch"><a href="#Training-on-Multiple-GPUs-in-PyTorch" class="headerlink" title="Training on Multiple GPUs in PyTorch"></a>Training on Multiple GPUs in PyTorch</h2><p>There are two distinct patterns in PyTorch to use multiple GPUs for training.<br>From our experience both patterns are valid. The first one results however in nicer and less code. The second one seems to have a slight performance advantage due to less communication between the GPUs. <a href="https://discuss.pytorch.org/t/how-to-best-use-dataparallel-with-multiple-models/39289" target="_blank" rel="noopener">I asked a question in the official PyTorch forum about the two approaches here</a></p><h3 id="Split-up-the-batch-input-of-each-network"><a href="#Split-up-the-batch-input-of-each-network" class="headerlink" title="Split up the batch input of each network"></a>Split up the batch input of each network</h3><p>The most common one is to simply split up the batches of all <em>networks</em> to the individual GPUs. </p><blockquote><p>A model running on 1 GPU with batch size 64 would, therefore, run on 2 GPUs with each a batch size of 32. This can be done automatically by wrapping the model by <strong>nn.DataParallel(model)</strong>.</p></blockquote><h3 id="Pack-all-networks-in-a-super-network-and-split-up-input-batch"><a href="#Pack-all-networks-in-a-super-network-and-split-up-input-batch" class="headerlink" title="Pack all networks in a super network and split up input batch"></a>Pack all networks in a <em>super</em> network and split up input batch</h3><p>This pattern is less commonly used. A repository implemnting this approach is shown here in the <a href="https://github.com/NVIDIA/pix2pixHD" target="_blank" rel="noopener">pix2pixHD implementation by Nvidia</a></p><h2 id="Do’s-and-Don’t’s"><a href="#Do’s-and-Don’t’s" class="headerlink" title="Do’s and Don’t’s"></a>Do’s and Don’t’s</h2><h3 id="Avoid-Numpy-Code-in-the-forward-method-of-a-nn-Module"><a href="#Avoid-Numpy-Code-in-the-forward-method-of-a-nn-Module" class="headerlink" title="Avoid Numpy Code in the forward method of a nn.Module"></a>Avoid Numpy Code in the forward method of a nn.Module</h3><p>Numpy runs on the CPU and is slower than torch code. Since torch has been developed with being similar to numpy in mind most numpy functions are supported by PyTorch already.</p><h3 id="Separate-the-DataLoader-from-the-main-Code"><a href="#Separate-the-DataLoader-from-the-main-Code" class="headerlink" title="Separate the DataLoader from the main Code"></a>Separate the DataLoader from the main Code</h3><p>The data loading pipeline should be independent of your main training code. PyTorch uses background workers for loading the data more efficiently and without disturbing the main training process.</p><h3 id="Don’t-log-results-in-every-step"><a href="#Don’t-log-results-in-every-step" class="headerlink" title="Don’t log results in every step"></a>Don’t log results in every step</h3><p>Typically we train our models for thousands of steps. Therefore, it is enough to log loss and other results every n’th step to reduce the overhead. Especially, saving intermediary results as images can be costly during training.</p><h3 id="Use-Command-line-Arguments"><a href="#Use-Command-line-Arguments" class="headerlink" title="Use Command-line Arguments"></a>Use Command-line Arguments</h3><p>It’s very handy to use command-line arguments to set parameters during code execution (<em>batch size</em>, <em>learning rate</em>, etc). An easy way to keep track of the arguments for an experiment is by just printing the dictionary received from <em>parse_args</em>:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment"># saves arguments to config.txt file</span></span><br><span class="line">opt = parser.parse_args()</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"config.txt"</span>, <span class="string">"w"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(opt.__str__())</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><h3 id="Use-detach-to-free-tensors-from-the-graph-if-possible"><a href="#Use-detach-to-free-tensors-from-the-graph-if-possible" class="headerlink" title="Use .detach() to free tensors from the graph if possible"></a>Use <strong>.detach()</strong> to free tensors from the graph if possible</h3><p>PyTorch keeps track of of all operations involving tensors for automatic differentiation. Use <strong>.detach()</strong> to prevent recording of unnecessary operations.</p><h3 id="Use-item-for-printing-scalar-tensors"><a href="#Use-item-for-printing-scalar-tensors" class="headerlink" title="Use .item() for printing scalar tensors"></a>Use <strong>.item()</strong> for printing scalar tensors</h3><p>You can print variables directly, however it’s recommended to use <strong>variable.detach()</strong> or <strong>variable.item()</strong>. In earlier PyTorch versions &lt; 0.4 you have to use <strong>.data</strong> to access the tensor of a variable.</p><h3 id="Use-the-call-method-instead-of-forward-on-a-nn-Module"><a href="#Use-the-call-method-instead-of-forward-on-a-nn-Module" class="headerlink" title="Use the call method instead of forward on a nn.Module"></a>Use the call method instead of forward on a <strong>nn.Module</strong></h3><p>The two ways are not identical as pointed out in one of the issues <a href="https://github.com/IgorSusmelj/pytorch-styleguide/issues/3" target="_blank" rel="noopener">here</a>:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">output = self.net.forward(input)</span><br><span class="line"><span class="comment"># they are not equal!</span></span><br><span class="line">output = self.net(input)</span><br></pre></td></tr></table></figure></p><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><ol><li><p>How to keep my experiments reproducible?</p><blockquote><p>We recommend setting the following seeds at the beginning of your code:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">np.random.seed(<span class="number">1</span>)</span><br><span class="line">torch.manual_seed(<span class="number">1</span>)</span><br><span class="line">torch.cuda.manual_seed(<span class="number">1</span>)</span><br></pre></td></tr></table></figure></blockquote></li><li><p>How to improve training and inference speed further?</p><blockquote><p>On Nvidia GPUs you can add the following line at the beginning of our code. This will allow the cuda backend to optimize your graph during its first execution. However, be aware that if you change the network input/output tensor size the graph will be optimized each time a change occurs. This can lead to very slow runtime and out of memory errors. Only set this flag if your input and output have always the same shape. Usually, this results in an improvement of about 20%.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">torch.backends.cudnn.benchmark = <span class="literal">True</span></span><br></pre></td></tr></table></figure></blockquote></li><li><p>What is a good value for compute efficiency using your tqdm + prefetch_generator pattern?</p><blockquote><p>It depends on the machine used, the preprocessing pipeline and the network size. Running on a SSD on a 1080Ti GPU we see a compute efficiency of almost 1.0 which is an ideal scenario. If shallow (small) networks or a slow harddisk is used the number may drop to around 0.1-0.2 depending on your setup.</p></blockquote></li><li><p>How can I have a batch size &gt; 1 even though I don’t have enough memory?</p><blockquote><p>In PyTorch we can implement very easily virtual batch sizes. We just prevent the optimizer from making an update of the parameters and sum up the gradients for <em>batch_size</em> cycles.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment"># in the main loop</span></span><br><span class="line">out = net(input)</span><br><span class="line">loss = criterion(out, label)</span><br><span class="line"><span class="comment"># we just call backward to sum up gradients but don't perform step here</span></span><br><span class="line">loss.backward() </span><br><span class="line">total_loss += loss.item() / batch_size</span><br><span class="line"><span class="keyword">if</span> n_iter % batch_size == batch_size<span class="number">-1</span>:</span><br><span class="line">    <span class="comment"># here we perform out optimization step using a virtual batch size</span></span><br><span class="line">    optim.step()</span><br><span class="line">    optim.zero_grad()</span><br><span class="line">    print(<span class="string">'Total loss: '</span>, total_loss)</span><br><span class="line">    total_loss = <span class="number">0.0</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></blockquote></li><li><p>How can I adjust the learning rate during training?</p><blockquote><p>We can access the learning rate directly using the instantiated optimizer as shown here:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">for</span> param_group <span class="keyword">in</span> optim.param_groups:</span><br><span class="line">    old_lr = param_group[<span class="string">'lr'</span>]</span><br><span class="line">    new_lr = old_lr * <span class="number">0.1</span></span><br><span class="line">    param_group[<span class="string">'lr'</span>] = new_lr</span><br><span class="line">    print(<span class="string">'Updated lr from &#123;&#125; to &#123;&#125;'</span>.format(old_lr, new_lr))</span><br><span class="line">...</span><br></pre></td></tr></table></figure></blockquote></li><li><p>How to use a pretrained model as a loss (non backprop) during training</p><blockquote><p>If you want to use a pretrained model such as VGG to compute a loss but not train it (e.g. Perceptual loss in style-transfer/ GANs/ Auto-encoder) you can use the following pattern:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment"># instantiate the model</span></span><br><span class="line">pretrained_VGG = VGG19(...)</span><br><span class="line"></span><br><span class="line"><span class="comment"># disable gradients (prevent training)</span></span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> pretrained_VGG.parameters():  <span class="comment"># reset requires_grad</span></span><br><span class="line">    p.requires_grad = <span class="literal">False</span></span><br><span class="line">...</span><br><span class="line"><span class="comment"># you don't have to use the no_grad() namespace but can just run the model</span></span><br><span class="line"><span class="comment"># no gradients will be computed for the VGG model</span></span><br><span class="line">out_real = pretrained_VGG(input_a)</span><br><span class="line">out_fake = pretrained_VGG(input_b)</span><br><span class="line">loss = any_criterion(out_real, out_fake)</span><br><span class="line">...</span><br></pre></td></tr></table></figure></blockquote></li><li><p>Why do we use <em>.train()</em> and <em>.eval()</em> in PyTorch?</p><blockquote><p>Those methods are used to set layers such as <strong>BatchNorm2d</strong> or <strong>Dropout2d</strong> from training to inference mode. Every module which inherits from <strong>nn.Module</strong> has an attribute called <em>isTraining</em>. <strong>.eval()</strong> and <strong>.train()</strong> just simply sets this attribute to True/ False. For more information of how this method is implemented please have a look at <a href="https://pytorch.org/docs/stable/_modules/torch/nn/modules/module.html" target="_blank" rel="noopener">the module code in PyTorch</a></p></blockquote></li><li><p>My model uses lots of memory during Inference/ How to run a model properly for inference in PyTorch?</p><blockquote><p>Make sure that no gradients get computed and stored during your code execution. You can simply use the following pattern to assure that:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> torch.no_grad():</span><br><span class="line">    <span class="comment"># run model here</span></span><br><span class="line">    out_tensor = net(in_tensor)</span><br></pre></td></tr></table></figure></blockquote></li><li><p>How to fine-tune a pretrained model?</p><blockquote><p>In PyTorch you can freeze layers. This will prevent them from being updated during an optimization step.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># you can freeze whole modules using</span></span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> pretrained_VGG.parameters():  <span class="comment"># reset requires_grad</span></span><br><span class="line">    p.requires_grad = <span class="literal">False</span></span><br></pre></td></tr></table></figure></blockquote></li><li><p>When to use <strong>Variable(…)</strong>?</p><blockquote><p>Since PyTorch 0.4 <strong>Variable* and </strong>Tensor<strong> have been merged. We don’t have to explicitly create a </strong>Variable** object anymore.</p></blockquote></li><li>Is PyTorch on C++ faster then using Python?<blockquote><p>C++ version is about 10% faster</p></blockquote></li><li>Can TorchScript / JIT speed up my code?<blockquote><p>Todo…</p></blockquote></li><li>Is PyTorch code using <strong>cudnn.benchmark=True</strong> faster?<blockquote><p>From our experience you can gain about 20% speed-up. But the first time you run your model it takes quite some time to<br>build the optimized graph. In some cases (loops in forward pass, no fixed input shape, if/else in forward, etc.) this flag might<br>result in <em>out of memory</em> or other errors.</p></blockquote></li><li>How to use multiple GPUs for training?<blockquote><p>Todo…</p></blockquote></li><li>How does <strong>.detach()</strong> work in PyTorch?</li></ol><blockquote><p>If frees a tensor from a computation graph. A nice illustration is shown <a href="http://www.bnikolic.co.uk/blog/pytorch-detach.html" target="_blank" rel="noopener">here</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Pytorch-Style-Guide&quot;&gt;&lt;a href=&quot;#Pytorch-Style-Guide&quot; class=&quot;headerlink&quot; title=&quot;Pytorch Style Guide&quot;&gt;&lt;/a&gt;Pytorch Style Guide&lt;/h1&gt;&lt;div class=&quot;note warning&quot;&gt;&lt;p&gt;To be translated&lt;/p&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;This is not an official style guide for PyTorch. This document summarizes best practices from more than a year of experience with deep learning using the PyTorch framework. Note that the learnings we share come mostly from a research and startup perspective.&lt;/p&gt;
&lt;p&gt;This is an open project and other collaborators are highly welcomed to edit and improve the document.&lt;/p&gt;
&lt;p&gt;You will find three main parts of this doc. First, a quick recap of best practices in Python, followed by some tips and recommendations using PyTorch. Finally, we share some insights and experiences using other frameworks which helped us generally improve our workflow.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python" scheme="https://jacksonleon.gitee.io/categories/Python/"/>
    
      <category term="Style Guide" scheme="https://jacksonleon.gitee.io/categories/Python/Style-Guide/"/>
    
    
      <category term="Python" scheme="https://jacksonleon.gitee.io/tags/Python/"/>
    
      <category term="Reproduce" scheme="https://jacksonleon.gitee.io/tags/Reproduce/"/>
    
  </entry>
  
  <entry>
    <title>Google Python Style Guide</title>
    <link href="https://jacksonleon.gitee.io/posts/1894126926.html"/>
    <id>https://jacksonleon.gitee.io/posts/1894126926.html</id>
    <published>2019-04-30T12:37:51.000Z</published>
    <updated>2019-04-30T12:37:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Google-Python-Style-Guide"><a href="#Google-Python-Style-Guide" class="headerlink" title="Google Python Style Guide"></a>Google Python Style Guide</h1><div class="note warning"><p>To be translated</p></div><a id="more"></a><p><a id="background"></a></p><h2 id="1-Background"><a href="#1-Background" class="headerlink" title="1 Background"></a>1 Background</h2><p>Python is the main dynamic language used at Google. This style guide is a list<br>of <em>dos and don’ts</em> for Python programs.</p><p>To help you format code correctly, we’ve created a <a href="google_python_style.vim">settings file for<br>Vim</a>. For Emacs, the default settings should be fine.</p><p>Many teams use the <a href="https://github.com/google/yapf/" target="_blank" rel="noopener">yapf</a><br>auto-formatter to avoid arguing over formatting.</p><p><a id="s2-python-language-rules">&lt;/a&gt;<br><a id="python-language-rules"></a></a></p><h2 id="2-Python-Language-Rules"><a href="#2-Python-Language-Rules" class="headerlink" title="2 Python Language Rules"></a>2 Python Language Rules</h2><p><a id="s2.1-lint">&lt;/a&gt;<br><a id="lint"></a></a></p><h3 id="2-1-Lint"><a href="#2-1-Lint" class="headerlink" title="2.1 Lint"></a>2.1 Lint</h3><p>Run <code>pylint</code> over your code.</p><p><a id="s2.1.1-definition"></a></p><h4 id="2-1-1-Definition"><a href="#2-1-1-Definition" class="headerlink" title="2.1.1 Definition"></a>2.1.1 Definition</h4><p><code>pylint</code> is a tool for finding bugs and style problems in Python source<br>code. It finds problems that are typically caught by a compiler for less dynamic<br>languages like C and C++. Because of the dynamic nature of Python, some<br>warnings may be incorrect; however, spurious warnings should be fairly<br>infrequent.</p><p><a id="s2.1.2-pros"></a></p><h4 id="2-1-2-Pros"><a href="#2-1-2-Pros" class="headerlink" title="2.1.2 Pros"></a>2.1.2 Pros</h4><p>Catches easy-to-miss errors like typos, using-vars-before-assignment, etc.</p><p><a id="s2.1.3-cons"></a></p><h4 id="2-1-3-Cons"><a href="#2-1-3-Cons" class="headerlink" title="2.1.3 Cons"></a>2.1.3 Cons</h4><p><code>pylint</code> isn’t perfect. To take advantage of it, we’ll need to sometimes: a)<br>Write around it b) Suppress its warnings or c) Improve it.</p><p><a id="s2.1.4-decision"></a></p><h4 id="2-1-4-Decision"><a href="#2-1-4-Decision" class="headerlink" title="2.1.4 Decision"></a>2.1.4 Decision</h4><p>Make sure you run <code>pylint</code> on your code.</p><p>Suppress warnings if they are inappropriate so that other issues are not hidden.<br>To suppress warnings, you can set a line-level comment:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dict = <span class="string">'something awful'</span>  <span class="comment"># Bad Idea... pylint: disable=redefined-builtin</span></span><br></pre></td></tr></table></figure><p><code>pylint</code> warnings are each identified by symbolic name (<code>empty-docstring</code>)<br>Google-specific warnings start with <code>g-</code>.</p><p>If the reason for the suppression is not clear from the symbolic name, add an<br>explanation.</p><p>Suppressing in this way has the advantage that we can easily search for<br>suppressions and revisit them.</p><p>You can get a list of <code>pylint</code> warnings by doing:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pylint --list-msgs</span><br></pre></td></tr></table></figure><p>To get more information on a particular message, use:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pylint --help-msg=C6409</span><br></pre></td></tr></table></figure><p>Prefer <code>pylint: disable</code> to the deprecated older form <code>pylint: disable-msg</code>.</p><p>Unused argument warnings can be suppressed by deleting the variables at the<br>beginning of the function. Always include a comment explaining why you are<br>deleting it. “Unused.” is sufficient. For example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">viking_cafe_order</span><span class="params">(spam, beans, eggs=None)</span>:</span></span><br><span class="line">    <span class="keyword">del</span> beans, eggs  <span class="comment"># Unused by vikings.</span></span><br><span class="line">    <span class="keyword">return</span> spam + spam + spam</span><br></pre></td></tr></table></figure><p>Other common forms of suppressing this warning include using ‘<code>_</code>‘ as the<br>identifier for the unused argument, prefixing the argument name with<br>‘<code>unused_</code>‘, or assigning them to ‘<code>_</code>‘. These forms are allowed but no longer<br>encouraged. The first two break callers that pass arguments by name, while the<br>last does not enforce that the arguments are actually unused.</p><p><a id="s2.2-imports">&lt;/a&gt;<br><a id="imports"></a></a></p><h3 id="2-2-Imports"><a href="#2-2-Imports" class="headerlink" title="2.2 Imports"></a>2.2 Imports</h3><p>Use <code>import</code> statements for packages and modules only, not for individual<br>classes or functions. Note that there is an explicit exemption for imports from<br>the <a href="#typing-imports">typing module</a>.</p><p><a id="s2.2.1-definition"></a></p><h4 id="2-2-1-Definition"><a href="#2-2-1-Definition" class="headerlink" title="2.2.1 Definition"></a>2.2.1 Definition</h4><p>Reusability mechanism for sharing code from one module to another.</p><p><a id="s2.2.2-pros"></a></p><h4 id="2-2-2-Pros"><a href="#2-2-2-Pros" class="headerlink" title="2.2.2 Pros"></a>2.2.2 Pros</h4><p>The namespace management convention is simple. The source of each identifier is<br>indicated in a consistent way; <code>x.Obj</code> says that object <code>Obj</code> is defined in<br>module <code>x</code>.</p><p><a id="s2.2.3-cons"></a></p><h4 id="2-2-3-Cons"><a href="#2-2-3-Cons" class="headerlink" title="2.2.3 Cons"></a>2.2.3 Cons</h4><p>Module names can still collide. Some module names are inconveniently long.</p><p><a id="s2.2.4-decision"></a></p><h4 id="2-2-4-Decision"><a href="#2-2-4-Decision" class="headerlink" title="2.2.4 Decision"></a>2.2.4 Decision</h4><ul><li>Use <code>import x</code> for importing packages and modules.</li><li>Use <code>from x import y</code> where <code>x</code> is the package prefix and <code>y</code> is the module<br>name with no prefix.</li><li>Use <code>from x import y as z</code> if two modules named <code>y</code> are to be imported or if<br><code>y</code> is an inconveniently long name.</li><li>Use <code>import y as z</code> only when <code>z</code> is a standard abbreviation (e.g., <code>np</code> for<br><code>numpy</code>).</li></ul><p>For example the module <code>sound.effects.echo</code> may be imported as follows:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sound.effects <span class="keyword">import</span> echo</span><br><span class="line">...</span><br><span class="line">echo.EchoFilter(input, output, delay=<span class="number">0.7</span>, atten=<span class="number">4</span>)</span><br></pre></td></tr></table></figure><p>Do not use relative names in imports. Even if the module is in the same package,<br>use the full package name. This helps prevent unintentionally importing a<br>package twice.</p><p>Imports from the <a href="#typing-imports">typing module</a> are exempt from this rule.</p><p><a id="s2.3-packages">&lt;/a&gt;<br><a id="packages"></a></a></p><h3 id="2-3-Packages"><a href="#2-3-Packages" class="headerlink" title="2.3 Packages"></a>2.3 Packages</h3><p>Import each module using the full pathname location of the module.</p><p><a id="s2.3.1-pros"></a></p><h4 id="2-3-1-Pros"><a href="#2-3-1-Pros" class="headerlink" title="2.3.1 Pros"></a>2.3.1 Pros</h4><p>Avoids conflicts in module names or incorrect imports due to the module search<br>path not being what the author expected.  Makes it easier to find modules.</p><p><a id="S2.3.2-cons"></a></p><h4 id="2-3-2-Cons"><a href="#2-3-2-Cons" class="headerlink" title="2.3.2 Cons"></a>2.3.2 Cons</h4><p>Makes it harder to deploy code because you have to replicate the package<br>hierarchy.  Not really a problem with modern deployment mechanisms.</p><p><a id="s2.3.3-decision"></a></p><h4 id="2-3-3-Decision"><a href="#2-3-3-Decision" class="headerlink" title="2.3.3 Decision"></a>2.3.3 Decision</h4><p>All new code should import each module by its full package name.</p><p>Imports should be as follows:</p><p>Yes:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Reference absl.flags in code with the complete name (verbose).</span></span><br><span class="line"><span class="keyword">import</span> absl.flags</span><br><span class="line"><span class="keyword">from</span> doctor.who <span class="keyword">import</span> jodie</span><br><span class="line"></span><br><span class="line">FLAGS = absl.flags.FLAGS</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Reference flags in code with just the module name (common).</span></span><br><span class="line"><span class="keyword">from</span> absl <span class="keyword">import</span> flags</span><br><span class="line"><span class="keyword">from</span> doctor.who <span class="keyword">import</span> jodie</span><br><span class="line"></span><br><span class="line">FLAGS = flags.FLAGS</span><br></pre></td></tr></table></figure><p>No: <em>(assume this file lives in <code>doctor/who/</code> where <code>jodie.py</code> also exists)</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Unclear what module the author wanted and what will be imported.  The actual</span></span><br><span class="line"><span class="comment"># import behavior depends on external factors controlling sys.path.</span></span><br><span class="line"><span class="comment"># Which possible jodie module did the author intend to import?</span></span><br><span class="line"><span class="keyword">import</span> jodie</span><br></pre></td></tr></table></figure><p>The directory the main binary is located in should not be assumed to be in<br><code>sys.path</code> despite that happening in some environments.  This being the case,<br>code should assume that <code>import jodie</code> refers to a third party or top level<br>package named <code>jodie</code>, not a local <code>jodie.py</code>.</p><p><a id="s2.4-exceptions">&lt;/a&gt;<br><a id="exceptions"></a></a></p><h3 id="2-4-Exceptions"><a href="#2-4-Exceptions" class="headerlink" title="2.4 Exceptions"></a>2.4 Exceptions</h3><p>Exceptions are allowed but must be used carefully.</p><p><a id="s2.4.1-definition"></a></p><h4 id="2-4-1-Definition"><a href="#2-4-1-Definition" class="headerlink" title="2.4.1 Definition"></a>2.4.1 Definition</h4><p>Exceptions are a means of breaking out of the normal flow of control of a code<br>block to handle errors or other exceptional conditions.</p><p><a id="s2.4.2-pros"></a></p><h4 id="2-4-2-Pros"><a href="#2-4-2-Pros" class="headerlink" title="2.4.2 Pros"></a>2.4.2 Pros</h4><p>The control flow of normal operation code is not cluttered by error-handling<br>code. It also allows the control flow to skip multiple frames when a certain<br>condition occurs, e.g., returning from N nested functions in one step instead of<br>having to carry-through error codes.</p><p><a id="s2.4.3-cons"></a></p><h4 id="2-4-3-Cons"><a href="#2-4-3-Cons" class="headerlink" title="2.4.3 Cons"></a>2.4.3 Cons</h4><p>May cause the control flow to be confusing. Easy to miss error cases when making<br>library calls.</p><p><a id="s2.4.4-decision"></a></p><h4 id="2-4-4-Decision"><a href="#2-4-4-Decision" class="headerlink" title="2.4.4 Decision"></a>2.4.4 Decision</h4><p>Exceptions must follow certain conditions:</p><ul><li><p>Raise exceptions like this: <code>raise MyError(&#39;Error message&#39;)</code> or <code>raiseMyError()</code>. Do not use the two-argument form (<code>raise MyError, &#39;Errormessage&#39;</code>).</p></li><li><p>Make use of built-in exception classes when it makes sense. For example,<br>raise a <code>ValueError</code> if you were passed a negative number but were expecting<br>a positive one. Do not use <code>assert</code> statements for validating argument<br>values of a public API. <code>assert</code> is used to ensure internal correctness, not<br>to enforce correct usage nor to indicate that some unexpected event<br>occurred. If an exception is desired in the latter cases, use a raise<br>statement. For example:</p></li></ul><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Yes:</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">connect_to_next_port</span><span class="params">(self, minimum)</span>:</span></span><br><span class="line">    <span class="string">"""Connects to the next available port.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      minimum: A port value greater or equal to 1024.</span></span><br><span class="line"><span class="string">    Raises:</span></span><br><span class="line"><span class="string">      ValueError: If the minimum port specified is less than 1024.</span></span><br><span class="line"><span class="string">      ConnectionError: If no available port is found.</span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      The new minimum port.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">if</span> minimum &lt; <span class="number">1024</span>:</span><br><span class="line">      <span class="keyword">raise</span> ValueError(<span class="string">'Minimum port must be at least 1024, not %d.'</span> % (minimum,))</span><br><span class="line">    port = self._find_next_open_port(minimum)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> port:</span><br><span class="line">      <span class="keyword">raise</span> ConnectionError(<span class="string">'Could not connect to service on %d or higher.'</span> % (minimum,))</span><br><span class="line">    <span class="keyword">assert</span> port &gt;= minimum, <span class="string">'Unexpected port %d when minimum was %d.'</span> % (port, minimum)</span><br><span class="line">    <span class="keyword">return</span> port</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">No:</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">connect_to_next_port</span><span class="params">(self, minimum)</span>:</span></span><br><span class="line">    <span class="string">"""Connects to the next available port.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">      minimum: A port value greater or equal to 1024.</span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">      The new minimum port.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">assert</span> minimum &gt;= <span class="number">1024</span>, <span class="string">'Minimum port must be at least 1024.'</span></span><br><span class="line">    port = self._find_next_open_port(minimum)</span><br><span class="line">    <span class="keyword">assert</span> port <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">return</span> port</span><br></pre></td></tr></table></figure></code></pre><ul><li><p>Libraries or packages may define their own exceptions. When doing so they<br>must inherit from an existing exception class. Exception names should end in<br><code>Error</code> and should not introduce stutter (<code>foo.FooError</code>).</p></li><li><p>Never use catch-all <code>except:</code> statements, or catch <code>Exception</code> or<br><code>StandardError</code>, unless you are re-raising the exception or in the outermost<br>block in your thread (and printing an error message). Python is very<br>tolerant in this regard and <code>except:</code> will really catch everything including<br>misspelled names, sys.exit() calls, Ctrl+C interrupts, unittest failures and<br>all kinds of other exceptions that you simply don’t want to catch.</p></li><li><p>Minimize the amount of code in a <code>try</code>/<code>except</code> block. The larger the body<br>of the <code>try</code>, the more likely that an exception will be raised by a line of<br>code that you didn’t expect to raise an exception. In those cases, the<br><code>try</code>/<code>except</code> block hides a real error.</p></li><li><p>Use the <code>finally</code> clause to execute code whether or not an exception is<br>raised in the <code>try</code> block. This is often useful for cleanup, i.e., closing a<br>file.</p></li><li><p>When capturing an exception, use <code>as</code> rather than a comma. For example:</p></li></ul><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">  <span class="keyword">raise</span> Error()</span><br><span class="line"><span class="keyword">except</span> Error <span class="keyword">as</span> error:</span><br><span class="line">  <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></code></pre><p><a id="s2.5-global-variables">&lt;/a&gt;<br><a id="global-variables"></a></a></p><h3 id="2-5-Global-variables"><a href="#2-5-Global-variables" class="headerlink" title="2.5 Global variables"></a>2.5 Global variables</h3><p>Avoid global variables.</p><p><a id="s2.5.1-definition"></a></p><h4 id="2-5-1-Definition"><a href="#2-5-1-Definition" class="headerlink" title="2.5.1 Definition"></a>2.5.1 Definition</h4><p>Variables that are declared at the module level or as class attributes.</p><p><a id="s2.5.2-pros"></a></p><h4 id="2-5-2-Pros"><a href="#2-5-2-Pros" class="headerlink" title="2.5.2 Pros"></a>2.5.2 Pros</h4><p>Occasionally useful.</p><p><a id="s2.5.3-cons"></a></p><h4 id="2-5-3-Cons"><a href="#2-5-3-Cons" class="headerlink" title="2.5.3 Cons"></a>2.5.3 Cons</h4><p>Has the potential to change module behavior during the import, because<br>assignments to global variables are done when the module is first imported.</p><p><a id="s2.5.4-decision"></a></p><h4 id="2-5-4-Decision"><a href="#2-5-4-Decision" class="headerlink" title="2.5.4 Decision"></a>2.5.4 Decision</h4><p>Avoid global variables.</p><p>While they are technically variables, module-level constants are permitted and<br>encouraged. For example: <code>MAX_HOLY_HANDGRENADE_COUNT = 3</code>. Constants must be<br>named using all caps with underscores. See <a href="#s3.16-naming">Naming</a> below.</p><p>If needed, globals should be declared at the module level and made internal to<br>the module by prepending an <code>_</code> to the name. External access must be done<br>through public module-level functions. See <a href="#s3.16-naming">Naming</a> below.</p><p><a id="s2.6-nested">&lt;/a&gt;<br><a id="nested"></a></a></p><h3 id="2-6-Nested-Local-Inner-Classes-and-Functions"><a href="#2-6-Nested-Local-Inner-Classes-and-Functions" class="headerlink" title="2.6 Nested/Local/Inner Classes and Functions"></a>2.6 Nested/Local/Inner Classes and Functions</h3><p>Nested local functions or classes are fine when used to close over a local<br>variable. Inner classes are fine.</p><p><a id="s2.6.1-definition"></a></p><h4 id="2-6-1-Definition"><a href="#2-6-1-Definition" class="headerlink" title="2.6.1 Definition"></a>2.6.1 Definition</h4><p>A class can be defined inside of a method, function, or class. A function can be<br>defined inside a method or function. Nested functions have read-only access to<br>variables defined in enclosing scopes.</p><p><a id="s2.6.2-pros"></a></p><h4 id="2-6-2-Pros"><a href="#2-6-2-Pros" class="headerlink" title="2.6.2 Pros"></a>2.6.2 Pros</h4><p>Allows definition of utility classes and functions that are only used inside of<br>a very limited scope. Very<br><a href="http://www.google.com/url?sa=D&amp;q=http://en.wikipedia.org/wiki/Abstract_data_type" target="_blank" rel="noopener">ADT</a>-y.<br>Commonly used for implementing decorators.</p><p><a id="s2.6.3-cons"></a></p><h4 id="2-6-3-Cons"><a href="#2-6-3-Cons" class="headerlink" title="2.6.3 Cons"></a>2.6.3 Cons</h4><p>Instances of nested or local classes cannot be pickled. Nested functions and<br>classes cannot be directly tested. Nesting can make your outer function longer<br>and less readable.</p><p><a id="s2.6.4-decision"></a></p><h4 id="2-6-4-Decision"><a href="#2-6-4-Decision" class="headerlink" title="2.6.4 Decision"></a>2.6.4 Decision</h4><p>They are fine with some caveats. Avoid nested functions or classes except when<br>closing over a local value. Do not nest a function just to hide it from users<br>of a module. Instead, prefix its name with an _ at the module level so that it<br>can still be accessed by tests.</p><p><a id="list-comprehensions">&lt;/a&gt;<br><a id="s2.7-list_comprehensions"></a><br><a id="list_comprehensions"></a></a></p><h3 id="2-7-Comprehensions-amp-Generator-Expressions"><a href="#2-7-Comprehensions-amp-Generator-Expressions" class="headerlink" title="2.7 Comprehensions &amp; Generator Expressions"></a>2.7 Comprehensions &amp; Generator Expressions</h3><p>Okay to use for simple cases.</p><p><a id="s2.7.1-definition"></a></p><h4 id="2-7-1-Definition"><a href="#2-7-1-Definition" class="headerlink" title="2.7.1 Definition"></a>2.7.1 Definition</h4><p>List, Dict, and Set comprehensions as well as generator expressions provide a<br>concise and efficient way to create container types and iterators without<br>resorting to the use of traditional loops, <code>map()</code>, <code>filter()</code>, or <code>lambda</code>.</p><p><a id="s2.7.2-pros"></a></p><h4 id="2-7-2-Pros"><a href="#2-7-2-Pros" class="headerlink" title="2.7.2 Pros"></a>2.7.2 Pros</h4><p>Simple comprehensions can be clearer and simpler than other dict, list, or set<br>creation techniques. Generator expressions can be very efficient, since they<br>avoid the creation of a list entirely.</p><p><a id="s2.7.3-cons"></a></p><h4 id="2-7-3-Cons"><a href="#2-7-3-Cons" class="headerlink" title="2.7.3 Cons"></a>2.7.3 Cons</h4><p>Complicated comprehensions or generator expressions can be hard to read.</p><p><a id="s2.7.4-decision"></a></p><h4 id="2-7-4-Decision"><a href="#2-7-4-Decision" class="headerlink" title="2.7.4 Decision"></a>2.7.4 Decision</h4><p>Okay to use for simple cases. Each portion must fit on one line: mapping<br>expression, <code>for</code> clause, filter expression. Multiple <code>for</code> clauses or filter<br>expressions are not permitted. Use loops instead when things get more<br>complicated.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">Yes:</span><br><span class="line">  result = [mapping_expr <span class="keyword">for</span> value <span class="keyword">in</span> iterable <span class="keyword">if</span> filter_expr]</span><br><span class="line"></span><br><span class="line">  result = [&#123;<span class="string">'key'</span>: value&#125; <span class="keyword">for</span> value <span class="keyword">in</span> iterable</span><br><span class="line">            <span class="keyword">if</span> a_long_filter_expression(value)]</span><br><span class="line"></span><br><span class="line">  result = [complicated_transform(x)</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> iterable <span class="keyword">if</span> predicate(x)]</span><br><span class="line"></span><br><span class="line">  descriptive_name = [</span><br><span class="line">      transform(&#123;<span class="string">'key'</span>: key, <span class="string">'value'</span>: value&#125;, color=<span class="string">'black'</span>)</span><br><span class="line">      <span class="keyword">for</span> key, value <span class="keyword">in</span> generate_iterable(some_input)</span><br><span class="line">      <span class="keyword">if</span> complicated_condition_is_met(key, value)</span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line">  result = []</span><br><span class="line">  <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">      <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">          <span class="keyword">if</span> x * y &gt; <span class="number">10</span>:</span><br><span class="line">              result.append((x, y))</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;x: complicated_transform(x)</span><br><span class="line">          <span class="keyword">for</span> x <span class="keyword">in</span> long_generator_function(parameter)</span><br><span class="line">          <span class="keyword">if</span> x <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>&#125;</span><br><span class="line"></span><br><span class="line">  squares_generator = (x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">  unique_names = &#123;user.name <span class="keyword">for</span> user <span class="keyword">in</span> users <span class="keyword">if</span> user <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>&#125;</span><br><span class="line"></span><br><span class="line">  eat(jelly_bean <span class="keyword">for</span> jelly_bean <span class="keyword">in</span> jelly_beans</span><br><span class="line">      <span class="keyword">if</span> jelly_bean.color == <span class="string">'black'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">No:</span><br><span class="line">  result = [complicated_transform(</span><br><span class="line">                x, some_argument=x+<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> iterable <span class="keyword">if</span> predicate(x)]</span><br><span class="line"></span><br><span class="line">  result = [(x, y) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>) <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">5</span>) <span class="keyword">if</span> x * y &gt; <span class="number">10</span>]</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> ((x, y, z)</span><br><span class="line">          <span class="keyword">for</span> x <span class="keyword">in</span> xrange(<span class="number">5</span>)</span><br><span class="line">          <span class="keyword">for</span> y <span class="keyword">in</span> xrange(<span class="number">5</span>)</span><br><span class="line">          <span class="keyword">if</span> x != y</span><br><span class="line">          <span class="keyword">for</span> z <span class="keyword">in</span> xrange(<span class="number">5</span>)</span><br><span class="line">          <span class="keyword">if</span> y != z)</span><br></pre></td></tr></table></figure><p><a id="s2.8-default-iterators-and-operators">&lt;/a&gt;<br><a id="default-iterators-and-operators"></a></a></p><h3 id="2-8-Default-Iterators-and-Operators"><a href="#2-8-Default-Iterators-and-Operators" class="headerlink" title="2.8 Default Iterators and Operators"></a>2.8 Default Iterators and Operators</h3><p>Use default iterators and operators for types that support them, like lists,<br>dictionaries, and files.</p><p><a id="s2.8.1-definition"></a></p><h4 id="2-8-1-Definition"><a href="#2-8-1-Definition" class="headerlink" title="2.8.1 Definition"></a>2.8.1 Definition</h4><p>Container types, like dictionaries and lists, define default iterators and<br>membership test operators (“in” and “not in”).</p><p><a id="s2.8.2-pros"></a></p><h4 id="2-8-2-Pros"><a href="#2-8-2-Pros" class="headerlink" title="2.8.2 Pros"></a>2.8.2 Pros</h4><p>The default iterators and operators are simple and efficient. They express the<br>operation directly, without extra method calls. A function that uses default<br>operators is generic. It can be used with any type that supports the operation.</p><p><a id="s2.8.3-cons"></a></p><h4 id="2-8-3-Cons"><a href="#2-8-3-Cons" class="headerlink" title="2.8.3 Cons"></a>2.8.3 Cons</h4><p>You can’t tell the type of objects by reading the method names (e.g. has_key()<br>means a dictionary). This is also an advantage.</p><p><a id="s2.8.4-decision"></a></p><h4 id="2-8-4-Decision"><a href="#2-8-4-Decision" class="headerlink" title="2.8.4 Decision"></a>2.8.4 Decision</h4><p>Use default iterators and operators for types that support them, like lists,<br>dictionaries, and files. The built-in types define iterator methods, too. Prefer<br>these methods to methods that return lists, except that you should not mutate a<br>container while iterating over it. Never use Python 2 specific iteration<br>methods such as <code>dict.iter*()</code> unless necessary.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Yes:  <span class="keyword">for</span> key <span class="keyword">in</span> adict: ...</span><br><span class="line">      <span class="keyword">if</span> key <span class="keyword">not</span> <span class="keyword">in</span> adict: ...</span><br><span class="line">      <span class="keyword">if</span> obj <span class="keyword">in</span> alist: ...</span><br><span class="line">      <span class="keyword">for</span> line <span class="keyword">in</span> afile: ...</span><br><span class="line">      <span class="keyword">for</span> k, v <span class="keyword">in</span> adict.items(): ...</span><br><span class="line">      <span class="keyword">for</span> k, v <span class="keyword">in</span> six.iteritems(adict): ...</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">No:   <span class="keyword">for</span> key <span class="keyword">in</span> adict.keys(): ...</span><br><span class="line">      <span class="keyword">if</span> <span class="keyword">not</span> adict.has_key(key): ...</span><br><span class="line">      <span class="keyword">for</span> line <span class="keyword">in</span> afile.readlines(): ...</span><br><span class="line">      <span class="keyword">for</span> k, v <span class="keyword">in</span> dict.iteritems(): ...</span><br></pre></td></tr></table></figure><p><a id="s2.9-generators">&lt;/a&gt;<br><a id="generators"></a></a></p><h3 id="2-9-Generators"><a href="#2-9-Generators" class="headerlink" title="2.9 Generators"></a>2.9 Generators</h3><p>Use generators as needed.</p><p><a id="s2.9.1-definition"></a></p><h4 id="2-9-1-Definition"><a href="#2-9-1-Definition" class="headerlink" title="2.9.1 Definition"></a>2.9.1 Definition</h4><p>A generator function returns an iterator that yields a value each time it<br>executes a yield statement. After it yields a value, the runtime state of the<br>generator function is suspended until the next value is needed.</p><p><a id="s2.9.2-pros"></a></p><h4 id="2-9-2-Pros"><a href="#2-9-2-Pros" class="headerlink" title="2.9.2 Pros"></a>2.9.2 Pros</h4><p>Simpler code, because the state of local variables and control flow are<br>preserved for each call. A generator uses less memory than a function that<br>creates an entire list of values at once.</p><p><a id="s2.9.3-cons"></a></p><h4 id="2-9-3-Cons"><a href="#2-9-3-Cons" class="headerlink" title="2.9.3 Cons"></a>2.9.3 Cons</h4><p>None.</p><p><a id="s2.9.4-decision"></a></p><h4 id="2-9-4-Decision"><a href="#2-9-4-Decision" class="headerlink" title="2.9.4 Decision"></a>2.9.4 Decision</h4><p>Fine. Use “Yields:” rather than “Returns:” in the docstring for generator<br>functions.</p><p><a id="s2.10-lambda-functions">&lt;/a&gt;<br><a id="lambda-functions"></a></a></p><h3 id="2-10-Lambda-Functions"><a href="#2-10-Lambda-Functions" class="headerlink" title="2.10 Lambda Functions"></a>2.10 Lambda Functions</h3><p>Okay for one-liners.</p><p><a id="s2.10.1-definition"></a></p><h4 id="2-10-1-Definition"><a href="#2-10-1-Definition" class="headerlink" title="2.10.1 Definition"></a>2.10.1 Definition</h4><p>Lambdas define anonymous functions in an expression, as opposed to a statement.<br>They are often used to define callbacks or operators for higher-order functions<br>like <code>map()</code> and <code>filter()</code>.</p><p><a id="s2.10.2-pros"></a></p><h4 id="2-10-2-Pros"><a href="#2-10-2-Pros" class="headerlink" title="2.10.2 Pros"></a>2.10.2 Pros</h4><p>Convenient.</p><p><a id="s2.10.3-cons"></a></p><h4 id="2-10-3-Cons"><a href="#2-10-3-Cons" class="headerlink" title="2.10.3 Cons"></a>2.10.3 Cons</h4><p>Harder to read and debug than local functions. The lack of names means stack<br>traces are more difficult to understand. Expressiveness is limited because the<br>function may only contain an expression.</p><p><a id="s2.10.4-decision"></a></p><h4 id="2-10-4-Decision"><a href="#2-10-4-Decision" class="headerlink" title="2.10.4 Decision"></a>2.10.4 Decision</h4><p>Okay to use them for one-liners. If the code inside the lambda function is<br>longer than 60-80 chars, it’s probably better to define it as a regular <a href="#lexical-scoping">nested<br>function</a>.</p><p>For common operations like multiplication, use the functions from the <code>operator</code><br>module instead of lambda functions. For example, prefer <code>operator.mul</code> to<br><code>lambda x, y: x * y</code>.</p><p><a id="s2.11-conditional-expressions">&lt;/a&gt;<br><a id="conditional-expressions"></a></a></p><h3 id="2-11-Conditional-Expressions"><a href="#2-11-Conditional-Expressions" class="headerlink" title="2.11 Conditional Expressions"></a>2.11 Conditional Expressions</h3><p>Okay for one-liners.</p><p><a id="s2.11.1-definition"></a></p><h4 id="2-11-1-Definition"><a href="#2-11-1-Definition" class="headerlink" title="2.11.1 Definition"></a>2.11.1 Definition</h4><p>Conditional expressions (sometimes called a “ternary operator”) are mechanisms<br>that provide a shorter syntax for if statements. For example:<br><code>x = 1 if cond else 2</code>.</p><p><a id="s2.11.2-pros"></a></p><h4 id="2-11-2-Pros"><a href="#2-11-2-Pros" class="headerlink" title="2.11.2 Pros"></a>2.11.2 Pros</h4><p>Shorter and more convenient than an if statement.</p><p><a id="s2.11.3-cons"></a></p><h4 id="2-11-3-Cons"><a href="#2-11-3-Cons" class="headerlink" title="2.11.3 Cons"></a>2.11.3 Cons</h4><p>May be harder to read than an if statement. The condition may be difficult to<br>locate if the expression is long.</p><p><a id="s2.11.4-decision"></a></p><h4 id="2-11-4-Decision"><a href="#2-11-4-Decision" class="headerlink" title="2.11.4 Decision"></a>2.11.4 Decision</h4><p>Okay to use for one-liners. In other cases prefer to use a complete if<br>statement.</p><p><a id="s2.12-default-argument-values">&lt;/a&gt;<br><a id="default-argument-values"></a></a></p><h3 id="2-12-Default-Argument-Values"><a href="#2-12-Default-Argument-Values" class="headerlink" title="2.12 Default Argument Values"></a>2.12 Default Argument Values</h3><p>Okay in most cases.</p><p><a id="s2.12.1-definition"></a></p><h4 id="2-12-1-Definition"><a href="#2-12-1-Definition" class="headerlink" title="2.12.1 Definition"></a>2.12.1 Definition</h4><p>You can specify values for variables at the end of a function’s parameter list,<br>e.g., <code>def foo(a, b=0):</code>.  If <code>foo</code> is called with only one argument,<br><code>b</code> is set to 0. If it is called with two arguments, <code>b</code> has the value of the<br>second argument.</p><p><a id="s2.12.2-pros"></a></p><h4 id="2-12-2-Pros"><a href="#2-12-2-Pros" class="headerlink" title="2.12.2 Pros"></a>2.12.2 Pros</h4><p>Often you have a function that uses lots of default values, but-rarely-you want<br>to override the defaults. Default argument values provide an easy way to do<br>this, without having to define lots of functions for the rare exceptions. Also,<br>Python does not support overloaded methods/functions and default arguments are<br>an easy way of “faking” the overloading behavior.</p><p><a id="s2.12.3-cons"></a></p><h4 id="2-12-3-Cons"><a href="#2-12-3-Cons" class="headerlink" title="2.12.3 Cons"></a>2.12.3 Cons</h4><p>Default arguments are evaluated once at module load time. This may cause<br>problems if the argument is a mutable object such as a list or a dictionary. If<br>the function modifies the object (e.g., by appending an item to a list), the<br>default value is modified.</p><p><a id="s2.12.4-decision"></a></p><h4 id="2-12-4-Decision"><a href="#2-12-4-Decision" class="headerlink" title="2.12.4 Decision"></a>2.12.4 Decision</h4><p>Okay to use with the following caveat:</p><p>Do not use mutable objects as default values in the function or method<br>definition.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Yes: <span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(a, b=None)</span>:</span></span><br><span class="line">         <span class="keyword">if</span> b <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">             b = []</span><br><span class="line">Yes: <span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(a, b: Optional[Sequence] = None)</span>:</span></span><br><span class="line">         <span class="keyword">if</span> b <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">             b = []</span><br><span class="line">Yes: <span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(a, b: Sequence = <span class="params">()</span>)</span>:</span>  <span class="comment"># Empty tuple OK since tuples are immutable</span></span><br><span class="line">         ...</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">No:  <span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(a, b=[])</span>:</span></span><br><span class="line">         ...</span><br><span class="line">No:  <span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(a, b=time.time<span class="params">()</span>)</span>:</span>  <span class="comment"># The time the module was loaded???</span></span><br><span class="line">         ...</span><br><span class="line">No:  <span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(a, b=FLAGS.my_thing)</span>:</span>  <span class="comment"># sys.argv has not yet been parsed...</span></span><br><span class="line">         ...</span><br></pre></td></tr></table></figure><p><a id="s2.13-properties">&lt;/a&gt;<br><a id="properties"></a></a></p><h3 id="2-13-Properties"><a href="#2-13-Properties" class="headerlink" title="2.13 Properties"></a>2.13 Properties</h3><p>Use properties for accessing or setting data where you would normally have used<br>simple, lightweight accessor or setter methods.</p><p><a id="s2.13.1-definition"></a></p><h4 id="2-13-1-Definition"><a href="#2-13-1-Definition" class="headerlink" title="2.13.1 Definition"></a>2.13.1 Definition</h4><p>A way to wrap method calls for getting and setting an attribute as a standard<br>attribute access when the computation is lightweight.</p><p><a id="s2.13.2-pros"></a></p><h4 id="2-13-2-Pros"><a href="#2-13-2-Pros" class="headerlink" title="2.13.2 Pros"></a>2.13.2 Pros</h4><p>Readability is increased by eliminating explicit get and set method calls for<br>simple attribute access. Allows calculations to be lazy. Considered the Pythonic<br>way to maintain the interface of a class. In terms of performance, allowing<br>properties bypasses needing trivial accessor methods when a direct variable<br>access is reasonable. This also allows accessor methods to be added in the<br>future without breaking the interface.</p><p><a id="s2.13.3-cons"></a></p><h4 id="2-13-3-Cons"><a href="#2-13-3-Cons" class="headerlink" title="2.13.3 Cons"></a>2.13.3 Cons</h4><p>Must inherit from <code>object</code> in Python 2. Can hide side-effects much like operator<br>overloading. Can be confusing for subclasses.</p><p><a id="s2.13.4-decision"></a></p><h4 id="2-13-4-Decision"><a href="#2-13-4-Decision" class="headerlink" title="2.13.4 Decision"></a>2.13.4 Decision</h4><p>Use properties in new code to access or set data where you would normally have<br>used simple, lightweight accessor or setter methods. Properties should be<br>created with the <code>@property</code> <a href="#s2.17-function-and-method-decorators">decorator</a>.</p><p>Inheritance with properties can be non-obvious if the property itself is not<br>overridden. Thus one must make sure that accessor methods are called indirectly<br>to ensure methods overridden in subclasses are called by the property (using the<br>Template Method DP).</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">Yes: <span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">     <span class="class"><span class="keyword">class</span> <span class="title">Square</span><span class="params">(object)</span>:</span></span><br><span class="line">         <span class="string">"""A square with two properties: a writable area and a read-only perimeter.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">         To use:</span></span><br><span class="line"><span class="string">         &gt;&gt;&gt; sq = Square(3)</span></span><br><span class="line"><span class="string">         &gt;&gt;&gt; sq.area</span></span><br><span class="line"><span class="string">         9</span></span><br><span class="line"><span class="string">         &gt;&gt;&gt; sq.perimeter</span></span><br><span class="line"><span class="string">         12</span></span><br><span class="line"><span class="string">         &gt;&gt;&gt; sq.area = 16</span></span><br><span class="line"><span class="string">         &gt;&gt;&gt; sq.side</span></span><br><span class="line"><span class="string">         4</span></span><br><span class="line"><span class="string">         &gt;&gt;&gt; sq.perimeter</span></span><br><span class="line"><span class="string">         16</span></span><br><span class="line"><span class="string">         """</span></span><br><span class="line"></span><br><span class="line">         <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, side)</span>:</span></span><br><span class="line">             self.side = side</span><br><span class="line"></span><br><span class="line"><span class="meta">         @property</span></span><br><span class="line">         <span class="function"><span class="keyword">def</span> <span class="title">area</span><span class="params">(self)</span>:</span></span><br><span class="line">             <span class="string">"""Gets or sets the area of the square."""</span></span><br><span class="line">             <span class="keyword">return</span> self._get_area()</span><br><span class="line"></span><br><span class="line"><span class="meta">         @area.setter</span></span><br><span class="line">         <span class="function"><span class="keyword">def</span> <span class="title">area</span><span class="params">(self, area)</span>:</span></span><br><span class="line">             <span class="keyword">return</span> self._set_area(area)</span><br><span class="line"></span><br><span class="line">         <span class="function"><span class="keyword">def</span> <span class="title">_get_area</span><span class="params">(self)</span>:</span></span><br><span class="line">             <span class="string">"""Indirect accessor to calculate the 'area' property."""</span></span><br><span class="line">             <span class="keyword">return</span> self.side ** <span class="number">2</span></span><br><span class="line"></span><br><span class="line">         <span class="function"><span class="keyword">def</span> <span class="title">_set_area</span><span class="params">(self, area)</span>:</span></span><br><span class="line">             <span class="string">"""Indirect setter to set the 'area' property."""</span></span><br><span class="line">             self.side = math.sqrt(area)</span><br><span class="line"></span><br><span class="line"><span class="meta">         @property</span></span><br><span class="line">         <span class="function"><span class="keyword">def</span> <span class="title">perimeter</span><span class="params">(self)</span>:</span></span><br><span class="line">             <span class="keyword">return</span> self.side * <span class="number">4</span></span><br></pre></td></tr></table></figure><p><a id="s2.14-truefalse-evaluations">&lt;/a&gt;<br><a id="truefalse-evaluations"></a></a></p><h3 id="2-14-True-False-evaluations"><a href="#2-14-True-False-evaluations" class="headerlink" title="2.14 True/False evaluations"></a>2.14 True/False evaluations</h3><p>Use the “implicit” false if at all possible.</p><p><a id="s2.14.1-definition"></a></p><h4 id="2-14-1-Definition"><a href="#2-14-1-Definition" class="headerlink" title="2.14.1 Definition"></a>2.14.1 Definition</h4><p>Python evaluates certain values as <code>False</code> when in a boolean context. A quick<br>“rule of thumb” is that all “empty” values are considered false, so<br><code>0, None, [], {}, &#39;&#39;</code> all evaluate as false in a boolean context.</p><p><a id="s2.14.2-pros"></a></p><h4 id="2-14-2-Pros"><a href="#2-14-2-Pros" class="headerlink" title="2.14.2 Pros"></a>2.14.2 Pros</h4><p>Conditions using Python booleans are easier to read and less error-prone. In<br>most cases, they’re also faster.</p><p><a id="s2.14.3-cons"></a></p><h4 id="2-14-3-Cons"><a href="#2-14-3-Cons" class="headerlink" title="2.14.3 Cons"></a>2.14.3 Cons</h4><p>May look strange to C/C++ developers.</p><p><a id="s2.14.4-decision"></a></p><h4 id="2-14-4-Decision"><a href="#2-14-4-Decision" class="headerlink" title="2.14.4 Decision"></a>2.14.4 Decision</h4><p>Use the “implicit” false if at all possible, e.g., <code>if foo:</code> rather than<br><code>if foo != []:</code>. There are a few caveats that you should keep in mind though:</p><ul><li><p>Never use <code>==</code> or <code>!=</code> to compare singletons like <code>None</code>. Use <code>is</code> or<br><code>is not</code>.</p></li><li><p>Beware of writing <code>if x:</code> when you really mean <code>if x is not None:</code>-e.g.,<br>when testing whether a variable or argument that defaults to <code>None</code> was set<br>to some other value. The other value might be a value that’s false in a<br>boolean context!</p></li><li><p>Never compare a boolean variable to <code>False</code> using <code>==</code>. Use <code>if not x:</code><br>instead. If you need to distinguish <code>False</code> from <code>None</code> then chain the<br>expressions, such as <code>if not x and x is not None:</code>.</p></li><li><p>For sequences (strings, lists, tuples), use the fact that empty sequences<br>are false, so <code>if seq:</code> and <code>if not seq:</code> are preferable to <code>if len(seq):</code><br>and <code>if not len(seq):</code> respectively.</p></li><li><p>When handling integers, implicit false may involve more risk than benefit<br>(i.e., accidentally handling <code>None</code> as 0). You may compare a value which is<br>known to be an integer (and is not the result of <code>len()</code>) against the<br>integer 0.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Yes: <span class="keyword">if</span> <span class="keyword">not</span> users:</span><br><span class="line">         print(<span class="string">'no users'</span>)</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> foo == <span class="number">0</span>:</span><br><span class="line">         self.handle_zero()</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> i % <span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line">         self.handle_multiple_of_ten()</span><br><span class="line"></span><br><span class="line">     <span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x=None)</span>:</span></span><br><span class="line">         <span class="keyword">if</span> x <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">             x = []</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">No:  <span class="keyword">if</span> len(users) == <span class="number">0</span>:</span><br><span class="line">         print(<span class="string">'no users'</span>)</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> foo <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">and</span> <span class="keyword">not</span> foo:</span><br><span class="line">         self.handle_zero()</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> <span class="keyword">not</span> i % <span class="number">10</span>:</span><br><span class="line">         self.handle_multiple_of_ten()</span><br><span class="line"></span><br><span class="line">     <span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x=None)</span>:</span></span><br><span class="line">         x = x <span class="keyword">or</span> []</span><br></pre></td></tr></table></figure></li><li><p>Note that <code>&#39;0&#39;</code> (i.e., <code>0</code> as string) evaluates to true.</p></li></ul><p><a id="s2.15-deprecated-language-features">&lt;/a&gt;<br><a id="deprecated-language-features"></a></a></p><h3 id="2-15-Deprecated-Language-Features"><a href="#2-15-Deprecated-Language-Features" class="headerlink" title="2.15 Deprecated Language Features"></a>2.15 Deprecated Language Features</h3><p>Use string methods instead of the <code>string</code> module where possible. Use function<br>call syntax instead of <code>apply</code>. Use list comprehensions and <code>for</code> loops instead<br>of <code>filter</code> and <code>map</code> when the function argument would have been an inlined<br>lambda anyway. Use <code>for</code> loops instead of <code>reduce</code>.</p><p><a id="s2.15.1-definition"></a></p><h4 id="2-15-1-Definition"><a href="#2-15-1-Definition" class="headerlink" title="2.15.1 Definition"></a>2.15.1 Definition</h4><p>Current versions of Python provide alternative constructs that people find<br>generally preferable.</p><p><a id="s2.15.2-decision"></a></p><h4 id="2-15-2-Decision"><a href="#2-15-2-Decision" class="headerlink" title="2.15.2 Decision"></a>2.15.2 Decision</h4><p>We do not use any Python version which does not support these features, so there<br>is no reason not to use the new styles.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Yes: words = foo.split(<span class="string">':'</span>)</span><br><span class="line"></span><br><span class="line">     [x[<span class="number">1</span>] <span class="keyword">for</span> x <span class="keyword">in</span> my_list <span class="keyword">if</span> x[<span class="number">2</span>] == <span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">     map(math.sqrt, data)    <span class="comment"># Ok. No inlined lambda expression.</span></span><br><span class="line"></span><br><span class="line">     fn(*args, **kwargs)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">No:  words = string.split(foo, <span class="string">':'</span>)</span><br><span class="line"></span><br><span class="line">     map(<span class="keyword">lambda</span> x: x[<span class="number">1</span>], filter(<span class="keyword">lambda</span> x: x[<span class="number">2</span>] == <span class="number">5</span>, my_list))</span><br><span class="line"></span><br><span class="line">     apply(fn, args, kwargs)</span><br></pre></td></tr></table></figure><p><a id="s2.16-lexical-scoping">&lt;/a&gt;<br><a id="lexical-scoping"></a></a></p><h3 id="2-16-Lexical-Scoping"><a href="#2-16-Lexical-Scoping" class="headerlink" title="2.16 Lexical Scoping"></a>2.16 Lexical Scoping</h3><p>Okay to use.</p><p><a id="s2.16.1-definition"></a></p><h4 id="2-16-1-Definition"><a href="#2-16-1-Definition" class="headerlink" title="2.16.1 Definition"></a>2.16.1 Definition</h4><p>A nested Python function can refer to variables defined in enclosing functions,<br>but can not assign to them. Variable bindings are resolved using lexical<br>scoping, that is, based on the static program text. Any assignment to a name in<br>a block will cause Python to treat all references to that name as a local<br>variable, even if the use precedes the assignment. If a global declaration<br>occurs, the name is treated as a global variable.</p><p>An example of the use of this feature is:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_adder</span><span class="params">(summand1)</span>:</span></span><br><span class="line">    <span class="string">"""Returns a function that adds numbers to a given number."""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">adder</span><span class="params">(summand2)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> summand1 + summand2</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> adder</span><br></pre></td></tr></table></figure><p><a id="s2.16.2-pros"></a></p><h4 id="2-16-2-Pros"><a href="#2-16-2-Pros" class="headerlink" title="2.16.2 Pros"></a>2.16.2 Pros</h4><p>Often results in clearer, more elegant code. Especially comforting to<br>experienced Lisp and Scheme (and Haskell and ML and …) programmers.</p><p><a id="s2.16.3-cons"></a></p><h4 id="2-16-3-Cons"><a href="#2-16-3-Cons" class="headerlink" title="2.16.3 Cons"></a>2.16.3 Cons</h4><p>Can lead to confusing bugs. Such as this example based on<br><a href="http://www.google.com/url?sa=D&amp;q=http://www.python.org/dev/peps/pep-0227/" target="_blank" rel="noopener">PEP-0227</a>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">4</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">bar</span><span class="params">()</span>:</span></span><br><span class="line">        print(i, end=<span class="string">''</span>)</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line">    <span class="comment"># A bunch of code here</span></span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> x:  <span class="comment"># Ah, i *is* local to foo, so this is what bar sees</span></span><br><span class="line">        print(i, end=<span class="string">''</span>)</span><br><span class="line">    bar()</span><br></pre></td></tr></table></figure><p>So <code>foo([1, 2, 3])</code> will print <code>1 2 3 3</code>, not <code>1 2 34</code>.</p><p><a id="s2.16.4-decision"></a></p><h4 id="2-16-4-Decision"><a href="#2-16-4-Decision" class="headerlink" title="2.16.4 Decision"></a>2.16.4 Decision</h4><p>Okay to use.</p><p><a id="s2.17-function-and-method-decorators">&lt;/a&gt;<br><a id="function-and-method-decorators"></a></a></p><h3 id="2-17-Function-and-Method-Decorators"><a href="#2-17-Function-and-Method-Decorators" class="headerlink" title="2.17 Function and Method Decorators"></a>2.17 Function and Method Decorators</h3><p>Use decorators judiciously when there is a clear advantage. Avoid<br><code>@staticmethod</code> and limit use of <code>@classmethod</code>.</p><p><a id="s2.17.1-definition"></a></p><h4 id="2-17-1-Definition"><a href="#2-17-1-Definition" class="headerlink" title="2.17.1 Definition"></a>2.17.1 Definition</h4><p><a href="https://docs.python.org/3/glossary.html#term-decorator" target="_blank" rel="noopener">Decorators for Functions and<br>Methods</a><br>(a.k.a “the <code>@</code> notation”). One common decorator is <code>@property</code>, used for<br>converting ordinary methods into dynamically computed attributes. However, the<br>decorator syntax allows for user-defined decorators as well. Specifically, for<br>some function <code>my_decorator</code>, this:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span><span class="params">(object)</span>:</span></span><br><span class="line"><span class="meta">    @my_decorator</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">method</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># method body ...</span></span><br></pre></td></tr></table></figure><p>is equivalent to:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">method</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># method body ...</span></span><br><span class="line">    method = my_decorator(method)</span><br></pre></td></tr></table></figure><p><a id="s2.17.2-pros"></a></p><h4 id="2-17-2-Pros"><a href="#2-17-2-Pros" class="headerlink" title="2.17.2 Pros"></a>2.17.2 Pros</h4><p>Elegantly specifies some transformation on a method; the transformation might<br>eliminate some repetitive code, enforce invariants, etc.</p><p><a id="s2.17.3-cons"></a></p><h4 id="2-17-3-Cons"><a href="#2-17-3-Cons" class="headerlink" title="2.17.3 Cons"></a>2.17.3 Cons</h4><p>Decorators can perform arbitrary operations on a function’s arguments or return<br>values, resulting in surprising implicit behavior. Additionally, decorators<br>execute at import time. Failures in decorator code are pretty much impossible to<br>recover from.</p><p><a id="s2.17.4-decision"></a></p><h4 id="2-17-4-Decision"><a href="#2-17-4-Decision" class="headerlink" title="2.17.4 Decision"></a>2.17.4 Decision</h4><p>Use decorators judiciously when there is a clear advantage. Decorators should<br>follow the same import and naming guidelines as functions. Decorator pydoc<br>should clearly state that the function is a decorator. Write unit tests for<br>decorators.</p><p>Avoid external dependencies in the decorator itself (e.g. don’t rely on files,<br>sockets, database connections, etc.), since they might not be available when the<br>decorator runs (at import time, perhaps from <code>pydoc</code> or other tools). A<br>decorator that is called with valid parameters should (as much as possible) be<br>guaranteed to succeed in all cases.</p><p>Decorators are a special case of “top level code” - see <a href="#s3.17-main">main</a> for<br>more discussion.</p><p>Never use <code>@staticmethod</code> unless forced to in order to integrate with an API<br>defined in an existing library. Write a module level function instead.</p><p>Use <code>@classmethod</code> only when writing a named constructor or a class-specific<br>routine that modifies necessary global state such as a process-wide cache.</p><p><a id="s2.18-threading">&lt;/a&gt;<br><a id="threading"></a></a></p><h3 id="2-18-Threading"><a href="#2-18-Threading" class="headerlink" title="2.18 Threading"></a>2.18 Threading</h3><p>Do not rely on the atomicity of built-in types.</p><p>While Python’s built-in data types such as dictionaries appear to have atomic<br>operations, there are corner cases where they aren’t atomic (e.g. if <code>__hash__</code><br>or <code>__eq__</code> are implemented as Python methods) and their atomicity should not be<br>relied upon. Neither should you rely on atomic variable assignment (since this<br>in turn depends on dictionaries).</p><p>Use the Queue module’s <code>Queue</code> data type as the preferred way to communicate<br>data between threads. Otherwise, use the threading module and its locking<br>primitives. Learn about the proper use of condition variables so you can use<br><code>threading.Condition</code> instead of using lower-level locks.</p><p><a id="s2.19-power-features">&lt;/a&gt;<br><a id="power-features"></a></a></p><h3 id="2-19-Power-Features"><a href="#2-19-Power-Features" class="headerlink" title="2.19 Power Features"></a>2.19 Power Features</h3><p>Avoid these features.</p><p><a id="s2.19.1-definition"></a></p><h4 id="2-19-1-Definition"><a href="#2-19-1-Definition" class="headerlink" title="2.19.1 Definition"></a>2.19.1 Definition</h4><p>Python is an extremely flexible language and gives you many fancy features such<br>as custom metaclasses, access to bytecode, on-the-fly compilation, dynamic<br>inheritance, object reparenting, import hacks, reflection (e.g. some uses of<br><code>getattr()</code>), modification of system internals, etc.</p><p><a id="s2.19.2-pros"></a></p><h4 id="2-19-2-Pros"><a href="#2-19-2-Pros" class="headerlink" title="2.19.2 Pros"></a>2.19.2 Pros</h4><p>These are powerful language features. They can make your code more compact.</p><p><a id="s2.19.3-cons"></a></p><h4 id="2-19-3-Cons"><a href="#2-19-3-Cons" class="headerlink" title="2.19.3 Cons"></a>2.19.3 Cons</h4><p>It’s very tempting to use these “cool” features when they’re not absolutely<br>necessary. It’s harder to read, understand, and debug code that’s using unusual<br>features underneath. It doesn’t seem that way at first (to the original author),<br>but when revisiting the code, it tends to be more difficult than code that is<br>longer but is straightforward.</p><p><a id="s2.19.4-decision"></a></p><h4 id="2-19-4-Decision"><a href="#2-19-4-Decision" class="headerlink" title="2.19.4 Decision"></a>2.19.4 Decision</h4><p>Avoid these features in your code.</p><p>Standard library modules and classes that internally use these features are okay<br>to use (for example, <code>abc.ABCMeta</code>, <code>collections.namedtuple</code>, <code>dataclasses</code>,<br>and <code>enum</code>).</p><p><a id="s2.20-modern-python">&lt;/a&gt;<br><a id="modern-python"></a></a></p><h3 id="2-20-Modern-Python-Python-3-and-from-future-imports"><a href="#2-20-Modern-Python-Python-3-and-from-future-imports" class="headerlink" title="2.20 Modern Python: Python 3 and from __future__ imports"></a>2.20 Modern Python: Python 3 and from __future__ imports</h3><p>Python 3 is here! While not every project is ready to<br>use it yet, all code should be written to be 3 compatible (and tested under<br>3 when possible).</p><p><a id="s2.20.1-definition"></a></p><h4 id="2-20-1-Definition"><a href="#2-20-1-Definition" class="headerlink" title="2.20.1 Definition"></a>2.20.1 Definition</h4><p>Python 3 is a significant change in the Python language. While existing code is<br>often written with 2.7 in mind, there are some simple things to do to make code<br>more explicit about its intentions and thus better prepared for use under Python<br>3 without modification.</p><p><a id="s2.20.2-pros"></a></p><h4 id="2-20-2-Pros"><a href="#2-20-2-Pros" class="headerlink" title="2.20.2 Pros"></a>2.20.2 Pros</h4><p>Code written with Python 3 in mind is more explicit and easier to get running<br>under Python 3 once all of the dependencies of your project are ready.</p><p><a id="s2.20.3-cons"></a></p><h4 id="2-20-3-Cons"><a href="#2-20-3-Cons" class="headerlink" title="2.20.3 Cons"></a>2.20.3 Cons</h4><p>Some people find the additional boilerplate to be ugly. It’s unusual to add<br>imports to a module that doesn’t actually require the features added by the<br>import.</p><p><a id="s2.20.4-decision"></a></p><h4 id="2-20-4-Decision"><a href="#2-20-4-Decision" class="headerlink" title="2.20.4 Decision"></a>2.20.4 Decision</h4><h5 id="from-future-imports"><a href="#from-future-imports" class="headerlink" title="from __future__ imports"></a>from __future__ imports</h5><p>Use of <code>from __future__ import</code> statements is encouraged. All new code should<br>contain the following and existing code should be updated to be compatible when<br>possible:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> absolute_import</span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> division</span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br></pre></td></tr></table></figure><p>If you are not already familiar with those, read up on each here: <a href="https://www.python.org/dev/peps/pep-0328/" target="_blank" rel="noopener">absolute<br>imports</a>, <a href="https://www.python.org/dev/peps/pep-0238/" target="_blank" rel="noopener">new <code>/</code> division<br>behavior</a>, and <a href="https://www.python.org/dev/peps/pep-3105/" target="_blank" rel="noopener">the print<br>function</a>.</p><p>Please don’t omit or remove these imports, even if they’re not currently used<br>in the module. It is better to always have the future imports in all files<br>so that they are not forgotten during later edits when someone starts using<br>such a feature.</p><p>There are other <code>from __future__</code> import statements. Use them as you see fit. We<br>do not include <code>unicode_literals</code> in our recommendations as it is not a clear<br>win due to implicit default codec conversion consequences it introduces in many<br>places within Python 2.7. Most code is better off with explicit use of <code>b&#39;&#39;</code> and<br><code>u&#39;&#39;</code> bytes and unicode string literals as necessary.</p><h5 id="The-six-future-or-past-libraries"><a href="#The-six-future-or-past-libraries" class="headerlink" title="The six, future, or past libraries."></a>The six, future, or past libraries.</h5><p>When your project needs to actively support use under both Python 2 and 3, use<br>of these libraries is encouraged as you see fit. They exist to make your code<br>cleaner and life easier.</p><p><a name="s2.21-typed-code">&lt;/a&gt;<br><a name="typed-code"></a></a></p><h3 id="2-21-Type-Annotated-Code"><a href="#2-21-Type-Annotated-Code" class="headerlink" title="2.21 Type Annotated Code"></a>2.21 Type Annotated Code</h3><p>You can annotate Python 3 code with type hints according to<br><a href="https://www.python.org/dev/peps/pep-0484/" target="_blank" rel="noopener">PEP-484</a>, and type-check the code at<br>build time with a type checking tool like<br><a href="https://github.com/google/pytype" target="_blank" rel="noopener">pytype</a>.</p><p>Type annotations can be in the source or in a <a href="https://www.python.org/dev/peps/pep-0484/#stub-files" target="_blank" rel="noopener">stub pyi<br>file</a>. Whenever possible,<br>annotations should be in the source. Use pyi files for third-party or extension<br>modules.</p><p><a id="s2.21.1-definition"></a></p><h4 id="2-21-1-Definition"><a href="#2-21-1-Definition" class="headerlink" title="2.21.1 Definition"></a>2.21.1 Definition</h4><p>Type annotations (or “type hints”) are for function or method arguments and<br>return values:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(a: int)</span> -&gt; List[int]:</span></span><br></pre></td></tr></table></figure><p>You can also declare the type of a variable using a special comment:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = SomeFunc()  <span class="comment"># type: SomeType</span></span><br></pre></td></tr></table></figure><p><a id="s2.21.2-pros"></a></p><h4 id="2-21-2-Pros"><a href="#2-21-2-Pros" class="headerlink" title="2.21.2 Pros"></a>2.21.2 Pros</h4><p>Type annotations improve the readability and maintainability of your code. The<br>type checker will convert many runtime errors to build-time errors, and reduce<br>your ability to use <a href="#power-features">Power Features</a>.</p><p><a id="s2.21.3-cons"></a></p><h4 id="2-21-3-Cons"><a href="#2-21-3-Cons" class="headerlink" title="2.21.3 Cons"></a>2.21.3 Cons</h4><p>You will have to keep the type declarations up to date. You might see type errors that you think are valid code. Use of a <a href="https://github.com/google/pytype" target="_blank" rel="noopener">type checker</a><br>may reduce your ability to use <a href="#power-features">Power Features</a>.</p><p><a id="s2.21.4-decision"></a></p><h4 id="2-21-4-Decision"><a href="#2-21-4-Decision" class="headerlink" title="2.21.4 Decision"></a>2.21.4 Decision</h4><p>This highly depends on the complexity of your project. Give it a try.</p><p><a id="s3-python-style-rules">&lt;/a&gt;<br><a id="python-style-rules"></a></a></p><h2 id="3-Python-Style-Rules"><a href="#3-Python-Style-Rules" class="headerlink" title="3 Python Style Rules"></a>3 Python Style Rules</h2><p><a id="s3.1-semicolons">&lt;/a&gt;<br><a id="semicolons"></a></a></p><h3 id="3-1-Semicolons"><a href="#3-1-Semicolons" class="headerlink" title="3.1 Semicolons"></a>3.1 Semicolons</h3><p>Do not terminate your lines with semicolons, and do not use semicolons to put<br>two statements on the same line.</p><p><a id="s3.2-line-length">&lt;/a&gt;<br><a id="line-length"></a></a></p><h3 id="3-2-Line-length"><a href="#3-2-Line-length" class="headerlink" title="3.2 Line length"></a>3.2 Line length</h3><p>Maximum line length is <em>80 characters</em>.</p><p>Exceptions:</p><ul><li>Long import statements.</li><li>URLs, pathnames, or long flags in comments.</li><li>Long string module level constants not containing whitespace that would be<br>inconvenient to split across lines such as URLs or pathnames.</li><li>Pylint disable comments. (e.g.: <code># pylint: disable=invalid-name</code>)</li></ul><p>Do not use backslash line continuation except for <code>with</code> statements requiring<br>three or more context managers.</p><p>Make use of Python’s <a href="http://docs.python.org/reference/lexical_analysis.html#implicit-line-joining" target="_blank" rel="noopener">implicit line joining inside parentheses, brackets and<br>braces</a>.<br>If necessary, you can add an extra pair of parentheses around an expression.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Yes: foo_bar(self, width, height, color=<span class="string">'black'</span>, design=<span class="literal">None</span>, x=<span class="string">'foo'</span>,</span><br><span class="line">             emphasis=<span class="literal">None</span>, highlight=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (width == <span class="number">0</span> <span class="keyword">and</span> height == <span class="number">0</span> <span class="keyword">and</span></span><br><span class="line">         color == <span class="string">'red'</span> <span class="keyword">and</span> emphasis == <span class="string">'strong'</span>):</span><br></pre></td></tr></table></figure><p>When a literal string won’t fit on a single line, use parentheses for implicit<br>line joining.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = (<span class="string">'This will build a very long long '</span></span><br><span class="line">     <span class="string">'long long long long long long string'</span>)</span><br></pre></td></tr></table></figure><p>Within comments, put long URLs on their own line if necessary.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Yes:  <span class="comment"># See details at</span></span><br><span class="line">      <span class="comment"># http://www.example.com/us/developer/documentation/api/content/v2.0/csv_file_name_extension_full_specification.html</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">No:  <span class="comment"># See details at</span></span><br><span class="line">     <span class="comment"># http://www.example.com/us/developer/documentation/api/content/\</span></span><br><span class="line">     <span class="comment"># v2.0/csv_file_name_extension_full_specification.html</span></span><br></pre></td></tr></table></figure><p>It is permissible to use backslash continuation when defining a <code>with</code> statement<br>whose expressions span three or more lines. For two lines of expressions, use a<br>nested <code>with</code> statement:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Yes:  <span class="keyword">with</span> very_long_first_expression_function() <span class="keyword">as</span> spam, \</span><br><span class="line">           very_long_second_expression_function() <span class="keyword">as</span> beans, \</span><br><span class="line">           third_thing() <span class="keyword">as</span> eggs:</span><br><span class="line">          place_order(eggs, beans, spam, beans)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">No:  <span class="keyword">with</span> VeryLongFirstExpressionFunction() <span class="keyword">as</span> spam, \</span><br><span class="line">          VeryLongSecondExpressionFunction() <span class="keyword">as</span> beans:</span><br><span class="line">       PlaceOrder(eggs, beans, spam, beans)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Yes:  <span class="keyword">with</span> very_long_first_expression_function() <span class="keyword">as</span> spam:</span><br><span class="line">          <span class="keyword">with</span> very_long_second_expression_function() <span class="keyword">as</span> beans:</span><br><span class="line">              place_order(beans, spam)</span><br></pre></td></tr></table></figure><p>Make note of the indentation of the elements in the line continuation examples<br>above; see the <a href="#s3.4-indentation">indentation</a> section for explanation.</p><p><a id="s3.3-parentheses">&lt;/a&gt;<br><a id="parentheses"></a></a></p><h3 id="3-3-Parentheses"><a href="#3-3-Parentheses" class="headerlink" title="3.3 Parentheses"></a>3.3 Parentheses</h3><p>Use parentheses sparingly.</p><p>It is fine, though not required, to use parentheses around tuples. Do not use<br>them in return statements or conditional statements unless using parentheses for<br>implied line continuation or to indicate a tuple.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Yes: <span class="keyword">if</span> foo:</span><br><span class="line">         bar()</span><br><span class="line">     <span class="keyword">while</span> x:</span><br><span class="line">         x = bar()</span><br><span class="line">     <span class="keyword">if</span> x <span class="keyword">and</span> y:</span><br><span class="line">         bar()</span><br><span class="line">     <span class="keyword">if</span> <span class="keyword">not</span> x:</span><br><span class="line">         bar()</span><br><span class="line">     <span class="comment"># For a 1 item tuple the ()s are more visually obvious than the comma.</span></span><br><span class="line">     onesie = (foo,)</span><br><span class="line">     <span class="keyword">return</span> foo</span><br><span class="line">     <span class="keyword">return</span> spam, beans</span><br><span class="line">     <span class="keyword">return</span> (spam, beans)</span><br><span class="line">     <span class="keyword">for</span> (x, y) <span class="keyword">in</span> dict.items(): ...</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">No:  <span class="keyword">if</span> (x):</span><br><span class="line">         bar()</span><br><span class="line">     <span class="keyword">if</span> <span class="keyword">not</span>(x):</span><br><span class="line">         bar()</span><br><span class="line">     <span class="keyword">return</span> (foo)</span><br></pre></td></tr></table></figure><p><a id="s3.4-indentation">&lt;/a&gt;<br><a id="indentation"></a></a></p><h3 id="3-4-Indentation"><a href="#3-4-Indentation" class="headerlink" title="3.4 Indentation"></a>3.4 Indentation</h3><p>Indent your code blocks with <em>4 spaces</em>.</p><p>Never use tabs or mix tabs and spaces. In cases of implied line continuation,<br>you should align wrapped elements either vertically, as per the examples in the<br><a href="#s3.2-line-length">line length</a> section; or using a hanging indent of 4 spaces,<br>in which case there should be nothing after the open parenthesis or bracket on<br>the first line.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Yes:   <span class="comment"># Aligned with opening delimiter</span></span><br><span class="line">       foo = long_function_name(var_one, var_two,</span><br><span class="line">                                var_three, var_four)</span><br><span class="line">       meal = (spam,</span><br><span class="line">               beans)</span><br><span class="line"></span><br><span class="line">       <span class="comment"># Aligned with opening delimiter in a dictionary</span></span><br><span class="line">       foo = &#123;</span><br><span class="line">           long_dictionary_key: value1 +</span><br><span class="line">                                value2,</span><br><span class="line">           ...</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment"># 4-space hanging indent; nothing on first line</span></span><br><span class="line">       foo = long_function_name(</span><br><span class="line">           var_one, var_two, var_three,</span><br><span class="line">           var_four)</span><br><span class="line">       meal = (</span><br><span class="line">           spam,</span><br><span class="line">           beans)</span><br><span class="line"></span><br><span class="line">       <span class="comment"># 4-space hanging indent in a dictionary</span></span><br><span class="line">       foo = &#123;</span><br><span class="line">           long_dictionary_key:</span><br><span class="line">               long_dictionary_value,</span><br><span class="line">           ...</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">No:    <span class="comment"># Stuff on first line forbidden</span></span><br><span class="line">       foo = long_function_name(var_one, var_two,</span><br><span class="line">           var_three, var_four)</span><br><span class="line">       meal = (spam,</span><br><span class="line">           beans)</span><br><span class="line"></span><br><span class="line">       <span class="comment"># 2-space hanging indent forbidden</span></span><br><span class="line">       foo = long_function_name(</span><br><span class="line">         var_one, var_two, var_three,</span><br><span class="line">         var_four)</span><br><span class="line"></span><br><span class="line">       <span class="comment"># No hanging indent in a dictionary</span></span><br><span class="line">       foo = &#123;</span><br><span class="line">           long_dictionary_key:</span><br><span class="line">           long_dictionary_value,</span><br><span class="line">           ...</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p><a id="s3.4.1-trailing_comma">&lt;/a&gt;<br><a id="trailing_comma"></a></a></p><h3 id="3-4-1-Trailing-commas-in-sequences-of-items"><a href="#3-4-1-Trailing-commas-in-sequences-of-items" class="headerlink" title="3.4.1 Trailing commas in sequences of items?"></a>3.4.1 Trailing commas in sequences of items?</h3><p>Trailing commas in sequences of items are recommended only when the closing<br>container token <code>]</code>, <code>)</code>, or <code>}</code> does not appear on the same line as the final<br>element. The presence of a trailing comma is also used as a hint to our Python<br>code auto-formatter <a href="https://pypi.org/project/yapf/" target="_blank" rel="noopener">YAPF</a> to direct it to auto-format the container<br>of items to one item per line when the <code>,</code> after the final element is present.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Yes:   golomb3 = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>]</span><br><span class="line">Yes:   golomb4 = [</span><br><span class="line">           <span class="number">0</span>,</span><br><span class="line">           <span class="number">1</span>,</span><br><span class="line">           <span class="number">4</span>,</span><br><span class="line">           <span class="number">6</span>,</span><br><span class="line">       ]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">No:    golomb4 = [</span><br><span class="line">           <span class="number">0</span>,</span><br><span class="line">           <span class="number">1</span>,</span><br><span class="line">           <span class="number">4</span>,</span><br><span class="line">           <span class="number">6</span></span><br><span class="line">       ]</span><br></pre></td></tr></table></figure><p><a id="s3.5-blank-lines">&lt;/a&gt;<br><a id="blank-lines"></a></a></p><h3 id="3-5-Blank-Lines"><a href="#3-5-Blank-Lines" class="headerlink" title="3.5 Blank Lines"></a>3.5 Blank Lines</h3><p>Two blank lines between top-level definitions, be they function or class<br>definitions. One blank line between method definitions and between the <code>class</code><br>line and the first method. No blank line following a <code>def</code> line. Use single<br>blank lines as you judge appropriate within functions or methods.</p><p><a id="s3.6-whitespace">&lt;/a&gt;<br><a id="whitespace"></a></a></p><h3 id="3-6-Whitespace"><a href="#3-6-Whitespace" class="headerlink" title="3.6 Whitespace"></a>3.6 Whitespace</h3><p>Follow standard typographic rules for the use of spaces around punctuation.</p><p>No whitespace inside parentheses, brackets or braces.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Yes: spam(ham[<span class="number">1</span>], &#123;eggs: <span class="number">2</span>&#125;, [])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">No:  spam( ham[ <span class="number">1</span> ], &#123; eggs: <span class="number">2</span> &#125;, [ ] )</span><br></pre></td></tr></table></figure><p>No whitespace before a comma, semicolon, or colon. Do use whitespace after a<br>comma, semicolon, or colon, except at the end of the line.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Yes: <span class="keyword">if</span> x == <span class="number">4</span>:</span><br><span class="line">         print(x, y)</span><br><span class="line">     x, y = y, x</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">No:  <span class="keyword">if</span> x == <span class="number">4</span> :</span><br><span class="line">         print(x , y)</span><br><span class="line">     x , y = y , x</span><br></pre></td></tr></table></figure><p>No whitespace before the open paren/bracket that starts an argument list,<br>indexing or slicing.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Yes: spam(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">No:  spam (<span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Yes: dict[<span class="string">'key'</span>] = list[index]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">No:  dict [<span class="string">'key'</span>] = list [index]</span><br></pre></td></tr></table></figure><p>Surround binary operators with a single space on either side for assignment<br>(<code>=</code>), comparisons (<code>==, &lt;, &gt;, !=, &lt;&gt;, &lt;=, &gt;=, in, not in, is, is not</code>), and<br>Booleans (<code>and, or, not</code>). Use your better judgment for the insertion of spaces<br>around arithmetic operators (<code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>//</code>, <code>%</code>, <code>**</code>, <code>@</code>).</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Yes: x == <span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">No:  x&lt;<span class="number">1</span></span><br></pre></td></tr></table></figure><p>Never use spaces around <code>=</code> when passing keyword arguments or defining a default<br>parameter value, with one exception: <a href="#typing-default-values">when a type annotation is<br>present</a>, <em>do</em> use spaces around the <code>=</code> for the default<br>parameter value.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Yes: <span class="function"><span class="keyword">def</span> <span class="title">complex</span><span class="params">(real, imag=<span class="number">0.0</span>)</span>:</span> <span class="keyword">return</span> Magic(r=real, i=imag)</span><br><span class="line">Yes: <span class="function"><span class="keyword">def</span> <span class="title">complex</span><span class="params">(real, imag: float = <span class="number">0.0</span>)</span>:</span> <span class="keyword">return</span> Magic(r=real, i=imag)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">No:  <span class="function"><span class="keyword">def</span> <span class="title">complex</span><span class="params">(real, imag = <span class="number">0.0</span>)</span>:</span> <span class="keyword">return</span> Magic(r = real, i = imag)</span><br><span class="line">No:  <span class="function"><span class="keyword">def</span> <span class="title">complex</span><span class="params">(real, imag: float=<span class="number">0.0</span>)</span>:</span> <span class="keyword">return</span> Magic(r = real, i = imag)</span><br></pre></td></tr></table></figure><p>Don’t use spaces to vertically align tokens on consecutive lines, since it<br>becomes a maintenance burden (applies to <code>:</code>, <code>#</code>, <code>=</code>, etc.):</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Yes:</span><br><span class="line">  foo = <span class="number">1000</span>  <span class="comment"># comment</span></span><br><span class="line">  long_name = <span class="number">2</span>  <span class="comment"># comment that should not be aligned</span></span><br><span class="line"></span><br><span class="line">  dictionary = &#123;</span><br><span class="line">      <span class="string">'foo'</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="string">'long_name'</span>: <span class="number">2</span>,</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">No:</span><br><span class="line">  foo       = <span class="number">1000</span>  <span class="comment"># comment</span></span><br><span class="line">  long_name = <span class="number">2</span>     <span class="comment"># comment that should not be aligned</span></span><br><span class="line"></span><br><span class="line">  dictionary = &#123;</span><br><span class="line">      <span class="string">'foo'</span>      : <span class="number">1</span>,</span><br><span class="line">      <span class="string">'long_name'</span>: <span class="number">2</span>,</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><a id="Python_Interpreter">&lt;/a&gt;<br><a id="s3.7-shebang-line"></a><br><a id="shebang-line"></a></a></p><h3 id="3-7-Shebang-Line"><a href="#3-7-Shebang-Line" class="headerlink" title="3.7 Shebang Line"></a>3.7 Shebang Line</h3><p>Most <code>.py</code> files do not need to start with a <code>#!</code> line. Start the main file of a<br>program with<br><code>#!/usr/bin/python</code> with an optional single digit <code>2</code> or <code>3</code> suffix per<br><a href="https://www.google.com/url?sa=D&amp;q=http://www.python.org/dev/peps/pep-0394/" target="_blank" rel="noopener">PEP-394</a>.</p><p>This line is used by the kernel to find the Python interpreter, but is ignored<br>by Python when importing modules. It is only necessary on a file that will be<br>executed directly.</p><p><a id="s3.8-comments">&lt;/a&gt;<br><a id="comments"></a></a></p><h3 id="3-8-Comments-and-Docstrings"><a href="#3-8-Comments-and-Docstrings" class="headerlink" title="3.8 Comments and Docstrings"></a>3.8 Comments and Docstrings</h3><p>Be sure to use the right style for module, function, method docstrings and<br>inline comments.</p><p><a id="s3.8.1-comments-in-doc-strings">&lt;/a&gt;<br><a id="comments-in-doc-strings"></a></a></p><h4 id="3-8-1-Docstrings"><a href="#3-8-1-Docstrings" class="headerlink" title="3.8.1 Docstrings"></a>3.8.1 Docstrings</h4><p>Python uses <em>docstrings</em> to document code. A docstring is a string that is the<br>first statement in a package, module, class or function. These strings can be<br>extracted automatically through the <code>__doc__</code> member of the object and are used<br>by <code>pydoc</code>.<br>(Try running <code>pydoc</code> on your module to see how it looks.) Always use the three<br>double-quote <code>&quot;&quot;&quot;</code> format for docstrings (per <a href="https://www.google.com/url?sa=D&amp;q=http://www.python.org/dev/peps/pep-0257/" target="_blank" rel="noopener">PEP<br>257</a>).<br>A docstring should be organized as a summary line (one physical line) terminated<br>by a period, question mark, or exclamation point, followed by a blank line,<br>followed by the rest of the docstring starting at the same cursor position as<br>the first quote of the first line. There are more formatting guidelines for<br>docstrings below.</p><p><a id="s3.8.2-comments-in-modules">&lt;/a&gt;<br><a id="comments-in-modules"></a></a></p><h4 id="3-8-2-Modules"><a href="#3-8-2-Modules" class="headerlink" title="3.8.2 Modules"></a>3.8.2 Modules</h4><p>Every file should contain license boilerplate. Choose the appropriate<br>boilerplate for the license used by the project (for example, Apache 2.0, BSD,<br>LGPL, GPL)</p><p><a id="s3.8.3-functions-and-methods">&lt;/a&gt;<br><a id="functions-and-methods"></a></a></p><h4 id="3-8-3-Functions-and-Methods"><a href="#3-8-3-Functions-and-Methods" class="headerlink" title="3.8.3 Functions and Methods"></a>3.8.3 Functions and Methods</h4><p>In this section, “function” means a method, function, or generator.</p><p>A function must have a docstring, unless it meets all of the following criteria:</p><ul><li>not externally visible</li><li>very short</li><li>obvious</li></ul><p>A docstring should give enough information to write a call to the function<br>without reading the function’s code. The docstring should be descriptive<br>(<code>&quot;&quot;&quot;Fetches rows from a Bigtable.&quot;&quot;&quot;</code>) rather than imperative<br>(<code>&quot;&quot;&quot;Fetch rows from a Bigtable.&quot;&quot;&quot;</code>). A docstring should describe the<br>function’s calling syntax and its semantics, not its implementation. For tricky<br>code, comments alongside the code are more appropriate than using docstrings.</p><p>A method that overrides a method from a base class may have a simple docstring<br>sending the reader to its overridden method’s docstring, such as <code>&quot;&quot;&quot;See baseclass.&quot;&quot;&quot;</code>. The rationale is that there is no need to repeat in many places<br>documentation that is already present in the base method’s docstring. However,<br>if the overriding method’s behavior is substantially different from the<br>overridden method, or details need to be provided (e.g., documenting additional<br>side effects), a docstring with at least those differences is required on the<br>overriding method.</p><p>Certain aspects of a function should be documented in special sections, listed<br>below. Each section begins with a heading line, which ends with a colon.<br>Sections should be indented two spaces, except for the heading.</p><p><a id="doc-function-args"></a><br><a href="#doc-function-args"><em>Args:</em></a><br>:   List each parameter by name. A description should follow the name, and be<br>separated by a colon and a space. If the description is too long to fit on a<br>single 80-character line, use a hanging indent of 2 or 4 spaces (be<br>consistent with the rest of the file).<br><br>The description should include required type(s) if the code does not contain<br>a corresponding type annotation.<br><br>If a function accepts <code>*foo</code> (variable length argument lists) and/or <code>**bar</code><br>(arbitrary keyword arguments), they should be listed as <code>*foo</code> and <code>**bar</code>.</p><p><a id="doc-function-returns"></a><br><a href="#doc-function-returns"><em>Returns:</em> (or <em>Yields:</em> for generators)</a><br>:   Describe the type and semantics of the return value. If the function only<br>returns None, this section is not required. It may also be omitted if the<br>docstring starts with Returns or Yields (e.g.<br><code>&quot;&quot;&quot;Returns row from Bigtable as a tuple of strings.&quot;&quot;&quot;</code>) and the opening<br>sentence is sufficient to describe return value.</p><p><a id="doc-function-raises"></a><br><a href="#doc-function-raises"><em>Raises:</em></a><br>:   List all exceptions that are relevant to the interface.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fetch_bigtable_rows</span><span class="params">(big_table, keys, other_silly_variable=None)</span>:</span></span><br><span class="line">    <span class="string">"""Fetches rows from a Bigtable.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Retrieves rows pertaining to the given keys from the Table instance</span></span><br><span class="line"><span class="string">    represented by big_table.  Silly things may happen if</span></span><br><span class="line"><span class="string">    other_silly_variable is not None.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        big_table: An open Bigtable Table instance.</span></span><br><span class="line"><span class="string">        keys: A sequence of strings representing the key of each table row</span></span><br><span class="line"><span class="string">            to fetch.</span></span><br><span class="line"><span class="string">        other_silly_variable: Another optional variable, that has a much</span></span><br><span class="line"><span class="string">            longer name than the other args, and which does nothing.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        A dict mapping keys to the corresponding table row data</span></span><br><span class="line"><span class="string">        fetched. Each row is represented as a tuple of strings. For</span></span><br><span class="line"><span class="string">        example:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &#123;'Serak': ('Rigel VII', 'Preparer'),</span></span><br><span class="line"><span class="string">         'Zim': ('Irk', 'Invader'),</span></span><br><span class="line"><span class="string">         'Lrrr': ('Omicron Persei 8', 'Emperor')&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        If a key from the keys argument is missing from the dictionary,</span></span><br><span class="line"><span class="string">        then that row was not found in the table.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Raises:</span></span><br><span class="line"><span class="string">        IOError: An error occurred accessing the bigtable.Table object.</span></span><br><span class="line"><span class="string">    """</span></span><br></pre></td></tr></table></figure><p><a id="s3.8.4-comments-in-classes">&lt;/a&gt;<br><a id="comments-in-classes"></a></a></p><h4 id="3-8-4-Classes"><a href="#3-8-4-Classes" class="headerlink" title="3.8.4 Classes"></a>3.8.4 Classes</h4><p>Classes should have a docstring below the class definition describing the class.<br>If your class has public attributes, they should be documented here in an<br><code>Attributes</code> section and follow the same formatting as a<br><a href="#doc-function-args">function’s <code>Args</code></a> section.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SampleClass</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""Summary of class here.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Longer class information....</span></span><br><span class="line"><span class="string">    Longer class information....</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Attributes:</span></span><br><span class="line"><span class="string">        likes_spam: A boolean indicating if we like SPAM or not.</span></span><br><span class="line"><span class="string">        eggs: An integer count of the eggs we have laid.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, likes_spam=False)</span>:</span></span><br><span class="line">        <span class="string">"""Inits SampleClass with blah."""</span></span><br><span class="line">        self.likes_spam = likes_spam</span><br><span class="line">        self.eggs = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">public_method</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""Performs operation blah."""</span></span><br></pre></td></tr></table></figure><p><a id="comments-in-block-and-inline">&lt;/a&gt;<br><a id="s3.8.5-comments-in-block-and-inline"></a></a></p><h4 id="3-8-5-Block-and-Inline-Comments"><a href="#3-8-5-Block-and-Inline-Comments" class="headerlink" title="3.8.5 Block and Inline Comments"></a>3.8.5 Block and Inline Comments</h4><p>The final place to have comments is in tricky parts of the code. If you’re going<br>to have to explain it at the next <a href="http://en.wikipedia.org/wiki/Code_review" target="_blank" rel="noopener">code<br>review</a>, you should comment it<br>now. Complicated operations get a few lines of comments before the operations<br>commence. Non-obvious ones get comments at the end of the line.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># We use a weighted dictionary search to find out where i is in</span></span><br><span class="line"><span class="comment"># the array.  We extrapolate position based on the largest num</span></span><br><span class="line"><span class="comment"># in the array and the array size and then do binary search to</span></span><br><span class="line"><span class="comment"># get the exact number.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> i &amp; (i<span class="number">-1</span>) == <span class="number">0</span>:  <span class="comment"># True if i is 0 or a power of 2.</span></span><br></pre></td></tr></table></figure><p>To improve legibility, these comments should be at least 2 spaces away from the<br>code.</p><p>On the other hand, never describe the code. Assume the person reading the code<br>knows Python (though not what you’re trying to do) better than you do.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># BAD COMMENT: Now go through the b array and make sure whenever i occurs</span></span><br><span class="line"><span class="comment"># the next element is i+1</span></span><br></pre></td></tr></table></figure><!-- The next section is copied from the C++ style guide. --><p><a id="s3.8.6-punctuation-spelling-and-grammar">&lt;/a&gt;<br><a id="punctuation-spelling-and-grammar"></a></a></p><h4 id="3-8-6-Punctuation-Spelling-and-Grammar"><a href="#3-8-6-Punctuation-Spelling-and-Grammar" class="headerlink" title="3.8.6 Punctuation, Spelling and Grammar"></a>3.8.6 Punctuation, Spelling and Grammar</h4><p>Pay attention to punctuation, spelling, and grammar; it is easier to read<br>well-written comments than badly written ones.</p><p>Comments should be as readable as narrative text, with proper capitalization and<br>punctuation. In many cases, complete sentences are more readable than sentence<br>fragments. Shorter comments, such as comments at the end of a line of code, can<br>sometimes be less formal, but you should be consistent with your style.</p><p>Although it can be frustrating to have a code reviewer point out that you are<br>using a comma when you should be using a semicolon, it is very important that<br>source code maintain a high level of clarity and readability. Proper<br>punctuation, spelling, and grammar help with that goal.</p><p><a id="s3.9-classes">&lt;/a&gt;<br><a id="classes"></a></a></p><h3 id="3-9-Classes"><a href="#3-9-Classes" class="headerlink" title="3.9 Classes"></a>3.9 Classes</h3><p>If a class inherits from no other base classes, explicitly inherit from<br><code>object</code>. This also applies to nested classes.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Yes: <span class="class"><span class="keyword">class</span> <span class="title">SampleClass</span><span class="params">(object)</span>:</span></span><br><span class="line">         <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="class"><span class="keyword">class</span> <span class="title">OuterClass</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">         <span class="class"><span class="keyword">class</span> <span class="title">InnerClass</span><span class="params">(object)</span>:</span></span><br><span class="line">             <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="class"><span class="keyword">class</span> <span class="title">ChildClass</span><span class="params">(ParentClass)</span>:</span></span><br><span class="line">         <span class="string">"""Explicitly inherits from another class already."""</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">No: <span class="class"><span class="keyword">class</span> <span class="title">SampleClass</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">OuterClass</span>:</span></span><br><span class="line"></span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">InnerClass</span>:</span></span><br><span class="line">            <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>Inheriting from <code>object</code> is needed to make properties work properly in Python 2<br>and can protect your code from potential incompatibility with Python 3. It also<br>defines special methods that implement the default semantics of objects<br>including <code>__new__</code>, <code>__init__</code>, <code>__delattr__</code>, <code>__getattribute__</code>,<br><code>__setattr__</code>, <code>__hash__</code>, <code>__repr__</code>, and <code>__str__</code>.</p><p><a id="s3.10-strings">&lt;/a&gt;<br><a id="strings"></a></a></p><h3 id="3-10-Strings"><a href="#3-10-Strings" class="headerlink" title="3.10 Strings"></a>3.10 Strings</h3><p>Use the <code>format</code> method or the <code>%</code> operator for formatting strings, even when<br>the parameters are all strings. Use your best judgement to decide between <code>+</code><br>and <code>%</code> (or <code>format</code>) though.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Yes: x = a + b</span><br><span class="line">     x = <span class="string">'%s, %s!'</span> % (imperative, expletive)</span><br><span class="line">     x = <span class="string">'&#123;&#125;, &#123;&#125;'</span>.format(first, second)</span><br><span class="line">     x = <span class="string">'name: %s; score: %d'</span> % (name, n)</span><br><span class="line">     x = <span class="string">'name: &#123;&#125;; score: &#123;&#125;'</span>.format(name, n)</span><br><span class="line">     x = <span class="string">f'name: <span class="subst">&#123;name&#125;</span>; score: <span class="subst">&#123;n&#125;</span>'</span>  <span class="comment"># Python 3.6+</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">No: x = <span class="string">'%s%s'</span> % (a, b)  <span class="comment"># use + in this case</span></span><br><span class="line">    x = <span class="string">'&#123;&#125;&#123;&#125;'</span>.format(a, b)  <span class="comment"># use + in this case</span></span><br><span class="line">    x = first + <span class="string">', '</span> + second</span><br><span class="line">    x = <span class="string">'name: '</span> + name + <span class="string">'; score: '</span> + str(n)</span><br></pre></td></tr></table></figure><p>Avoid using the <code>+</code> and <code>+=</code> operators to accumulate a string within a loop.<br>Since strings are immutable, this creates unnecessary temporary objects and<br>results in quadratic rather than linear running time. Instead, add each<br>substring to a list and <code>&#39;&#39;.join</code> the list after the loop terminates (or, write<br>each substring to a <code>io.BytesIO</code> buffer).</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Yes: items = [<span class="string">'&lt;table&gt;'</span>]</span><br><span class="line">     <span class="keyword">for</span> last_name, first_name <span class="keyword">in</span> employee_list:</span><br><span class="line">         items.append(<span class="string">'&lt;tr&gt;&lt;td&gt;%s, %s&lt;/td&gt;&lt;/tr&gt;'</span> % (last_name, first_name))</span><br><span class="line">     items.append(<span class="string">'&lt;/table&gt;'</span>)</span><br><span class="line">     employee_table = <span class="string">''</span>.join(items)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">No: employee_table = <span class="string">'&lt;table&gt;'</span></span><br><span class="line">    <span class="keyword">for</span> last_name, first_name <span class="keyword">in</span> employee_list:</span><br><span class="line">        employee_table += <span class="string">'&lt;tr&gt;&lt;td&gt;%s, %s&lt;/td&gt;&lt;/tr&gt;'</span> % (last_name, first_name)</span><br><span class="line">    employee_table += <span class="string">'&lt;/table&gt;'</span></span><br></pre></td></tr></table></figure><p>Be consistent with your choice of string quote character within a file. Pick <code>&#39;</code><br>or <code>&quot;</code> and stick with it. It is okay to use the other quote character on a<br>string to avoid the need to <code>\\</code> escape within the string. <code>gpylint</code> enforces<br>this.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Yes:</span><br><span class="line">  Python(<span class="string">'Why are you hiding your eyes?'</span>)</span><br><span class="line">  Gollum(<span class="string">"I'm scared of lint errors."</span>)</span><br><span class="line">  Narrator(<span class="string">'"Good!" thought a happy Python reviewer.'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">No:</span><br><span class="line">  Python(<span class="string">"Why are you hiding your eyes?"</span>)</span><br><span class="line">  Gollum(<span class="string">'The lint. It burns. It burns us.'</span>)</span><br><span class="line">  Gollum(<span class="string">"Always the great lint. Watching. Watching."</span>)</span><br></pre></td></tr></table></figure><p>Prefer <code>&quot;&quot;&quot;</code> for multi-line strings rather than <code>&#39;&#39;&#39;</code>. Projects may choose to<br>use <code>&#39;&#39;&#39;</code> for all non-docstring multi-line strings if and only if they also use<br><code>&#39;</code> for regular strings. Docstrings must use <code>&quot;&quot;&quot;</code> regardless. Note that it is<br>often cleaner to use implicit line joining since multi-line strings do not flow<br>with the indentation of the rest of the program:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Yes:</span><br><span class="line">print(<span class="string">"This is much nicer.\n"</span></span><br><span class="line">      <span class="string">"Do it this way.\n"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  No:</span><br><span class="line">    print(<span class="string">"""This is pretty ugly.</span></span><br><span class="line"><span class="string">Don't do this.</span></span><br><span class="line"><span class="string">"""</span>)</span><br></pre></td></tr></table></figure><p><a id="s3.11-files-and-sockets">&lt;/a&gt;<br><a id="files-and-sockets"></a></a></p><h3 id="3-11-Files-and-Sockets"><a href="#3-11-Files-and-Sockets" class="headerlink" title="3.11 Files and Sockets"></a>3.11 Files and Sockets</h3><p>Explicitly close files and sockets when done with them.</p><p>Leaving files, sockets or other file-like objects open unnecessarily has many<br>downsides:</p><ul><li>They may consume limited system resources, such as file descriptors. Code<br>that deals with many such objects may exhaust those resources unnecessarily<br>if they’re not returned to the system promptly after use.</li><li>Holding files open may prevent other actions such as moving or deleting<br>them.</li><li>Files and sockets that are shared throughout a program may inadvertently be<br>read from or written to after logically being closed. If they are actually<br>closed, attempts to read or write from them will throw exceptions, making<br>the problem known sooner.</li></ul><p>Furthermore, while files and sockets are automatically closed when the file<br>object is destructed, tying the lifetime of the file object to the state of the<br>file is poor practice:</p><ul><li>There are no guarantees as to when the runtime will actually run the file’s<br>destructor. Different Python implementations use different memory management<br>techniques, such as delayed Garbage Collection, which may increase the<br>object’s lifetime arbitrarily and indefinitely.</li><li>Unexpected references to the file, e.g. in globals or exception tracebacks,<br>may keep it around longer than intended.</li></ul><p>The preferred way to manage files is using the <a href="http://docs.python.org/reference/compound_stmts.html#the-with-statement" target="_blank" rel="noopener">“with”<br>statement</a>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">"hello.txt"</span>) <span class="keyword">as</span> hello_file:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> hello_file:</span><br><span class="line">        print(line)</span><br></pre></td></tr></table></figure><p>For file-like objects that do not support the “with” statement, use<br><code>contextlib.closing()</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> contextlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> contextlib.closing(urllib.urlopen(<span class="string">"http://www.python.org/"</span>)) <span class="keyword">as</span> front_page:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> front_page:</span><br><span class="line">        print(line)</span><br></pre></td></tr></table></figure><p><a id="s3.12-todo-comments">&lt;/a&gt;<br><a id="todo-comments"></a></a></p><h3 id="3-12-TODO-Comments"><a href="#3-12-TODO-Comments" class="headerlink" title="3.12 TODO Comments"></a>3.12 TODO Comments</h3><p>Use <code>TODO</code> comments for code that is temporary, a short-term solution, or<br>good-enough but not perfect.</p><p>A <code>TODO</code> comment begins with the string <code>TODO</code> in all caps and a parenthesized<br>name, e-mail address, or other identifier<br>of the person or issue with the best context about the problem. This is followed<br>by an explanation of what there is to do.</p><p>The purpose is to have a consistent <code>TODO</code> format that can be searched to find<br>out how to get more details. A <code>TODO</code> is not a commitment that the person<br>referenced will fix the problem. Thus when you create a<br><code>TODO</code>, it is almost always your name<br>that is given.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># TODO(kl@gmail.com): Use a "*" here for string repetition.</span></span><br><span class="line"><span class="comment"># TODO(Zeke) Change this to use relations.</span></span><br></pre></td></tr></table></figure><p>If your <code>TODO</code> is of the form “At a future date do something” make sure that you<br>either include a very specific date (“Fix by November 2009”) or a very specific<br>event (“Remove this code when all clients can handle XML responses.”).</p><p><a id="s3.13-imports-formatting">&lt;/a&gt;<br><a id="imports-formatting"></a></a></p><h3 id="3-13-Imports-formatting"><a href="#3-13-Imports-formatting" class="headerlink" title="3.13 Imports formatting"></a>3.13 Imports formatting</h3><p>Imports should be on separate lines.</p><p>E.g.:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Yes: <span class="keyword">import</span> os</span><br><span class="line">     <span class="keyword">import</span> sys</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">No:  <span class="keyword">import</span> os, sys</span><br></pre></td></tr></table></figure><p>Imports are always put at the top of the file, just after any module comments<br>and docstrings and before module globals and constants. Imports should be<br>grouped from most generic to least generic:</p><ol><li><p>Python standard library imports. For example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br></pre></td></tr></table></figure></li><li><p><a href="https://pypi.org/" target="_blank" rel="noopener">third-party</a><br>module or package imports. For example:</p></li></ol><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br></pre></td></tr></table></figure></code></pre><ol><li>Code repository<br>sub-package imports. For example:</li></ol><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> otherproject.ai <span class="keyword">import</span> mind</span><br></pre></td></tr></table></figure></code></pre><ol><li><strong>Deprecated:</strong> application-specific imports that are part of the same<br>top level<br>sub-package as this file. For example:</li></ol><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> myproject.backend.hgwells <span class="keyword">import</span> time_machine</span><br></pre></td></tr></table></figure>You may find older Google Python Style code doing this, but it is no longerrequired.  **New code is encouraged not to bother with this.**  Simplytreat application-specific sub-package imports the same as othersub-package imports.</code></pre><p>Within each grouping, imports should be sorted lexicographically, ignoring case,<br>according to each module’s full package path. Code may optionally place a blank<br>line between import sections.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"><span class="keyword">import</span> queue</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> absl <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> absl <span class="keyword">import</span> flags</span><br><span class="line"><span class="keyword">import</span> bs4</span><br><span class="line"><span class="keyword">import</span> cryptography</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> book.genres <span class="keyword">import</span> scifi</span><br><span class="line"><span class="keyword">from</span> myproject.backend.hgwells <span class="keyword">import</span> time_machine</span><br><span class="line"><span class="keyword">from</span> myproject.backend.state_machine <span class="keyword">import</span> main_loop</span><br><span class="line"><span class="keyword">from</span> otherproject.ai <span class="keyword">import</span> body</span><br><span class="line"><span class="keyword">from</span> otherproject.ai <span class="keyword">import</span> mind</span><br><span class="line"><span class="keyword">from</span> otherproject.ai <span class="keyword">import</span> soul</span><br><span class="line"></span><br><span class="line"><span class="comment"># Older style code may have these imports down here instead:</span></span><br><span class="line"><span class="comment">#from myproject.backend.hgwells import time_machine</span></span><br><span class="line"><span class="comment">#from myproject.backend.state_machine import main_loop</span></span><br></pre></td></tr></table></figure><p><a id="s3.14-statements">&lt;/a&gt;<br><a id="statements"></a></a></p><h3 id="3-14-Statements"><a href="#3-14-Statements" class="headerlink" title="3.14 Statements"></a>3.14 Statements</h3><p>Generally only one statement per line.</p><p>However, you may put the result of a test on the same line as the test only if<br>the entire statement fits on one line. In particular, you can never do so with<br><code>try</code>/<code>except</code> since the <code>try</code> and <code>except</code> can’t both fit on the same line, and<br>you can only do so with an <code>if</code> if there is no <code>else</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Yes:</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> foo: bar(foo)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">No:</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> foo: bar(foo)</span><br><span class="line">  <span class="keyword">else</span>:   baz(foo)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span>:               bar(foo)</span><br><span class="line">  <span class="keyword">except</span> ValueError: baz(foo)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span>:</span><br><span class="line">      bar(foo)</span><br><span class="line">  <span class="keyword">except</span> ValueError: baz(foo)</span><br></pre></td></tr></table></figure><p><a id="s3.15-access-control">&lt;/a&gt;<br><a id="access-control"></a></a></p><h3 id="3-15-Access-Control"><a href="#3-15-Access-Control" class="headerlink" title="3.15 Access Control"></a>3.15 Access Control</h3><p>If an accessor function would be trivial, you should use public variables<br>instead of accessor functions to avoid the extra cost of function calls in<br>Python. When more functionality is added you can use <code>property</code> to keep the<br>syntax consistent.</p><p>On the other hand, if access is more complex, or the cost of accessing the<br>variable is significant, you should use function calls (following the<br><a href="#s3.16-naming">Naming</a> guidelines) such as <code>get_foo()</code> and<br><code>set_foo()</code>. If the past behavior allowed access through a property, do not<br>bind the new accessor functions to the property. Any code still attempting to<br>access the variable by the old method should break visibly so they are made<br>aware of the change in complexity.</p><p><a id="s3.16-naming">&lt;/a&gt;<br><a id="naming"></a></a></p><h3 id="3-16-Naming"><a href="#3-16-Naming" class="headerlink" title="3.16 Naming"></a>3.16 Naming</h3><p><code>module_name</code>,<br><code>package_name</code>,<br><code>ClassName</code>,<br><code>method_name</code>,<br><code>ExceptionName</code>,<br><code>function_name</code>,<br><code>GLOBAL_CONSTANT_NAME</code>,<br><code>global_var_name</code>,<br><code>instance_var_name</code>,<br><code>function_parameter_name</code>,<br><code>local_var_name</code>.</p><p>Function names, variable names, and filenames should be descriptive; eschew<br>abbreviation. In particular, do not use abbreviations that are ambiguous or<br>unfamiliar to readers outside your project, and do not abbreviate by deleting<br>letters within a word.</p><p>Always use a <code>.py</code> filename extension. Never use dashes.</p><p><a id="s3.16.1-names-to-avoid">&lt;/a&gt;<br><a id="names-to-avoid"></a></a></p><h4 id="3-16-1-Names-to-Avoid"><a href="#3-16-1-Names-to-Avoid" class="headerlink" title="3.16.1 Names to Avoid"></a>3.16.1 Names to Avoid</h4><ul><li>single character names except for counters or iterators. You may use “e” as<br>an exception identifier in try/except statements.</li><li>dashes (<code>-</code>) in any package/module name</li><li><code>__double_leading_and_trailing_underscore__</code> names (reserved by Python)</li></ul><p><a id="s3.16.2-naming-conventions">&lt;/a&gt;<br><a id="naming-conventions"></a></a></p><h4 id="3-16-2-Naming-Convention"><a href="#3-16-2-Naming-Convention" class="headerlink" title="3.16.2 Naming Convention"></a>3.16.2 Naming Convention</h4><ul><li><p>“Internal” means internal to a module, or protected or private within a<br>class.</p></li><li><p>Prepending a single underscore (<code>_</code>) has some support for protecting module<br>variables and functions (not included with <code>from module import *</code>). While<br>prepending a double underscore (<code>__</code> aka “dunder”) to an instance variable<br>or method effectively makes the variable or method private to its class<br>(using name mangling) we discourage its use as it impacts readability and<br>testability and isn’t <em>really</em> private.</p></li><li><p>Place related classes and top-level functions together in a<br>module.<br>Unlike Java, there is no need to limit yourself to one class per module.</p></li><li><p>Use CapWords for class names, but lower_with_under.py for module names.<br>Although there are some old modules named CapWords.py, this is now<br>discouraged because it’s confusing when the module happens to be named after<br>a class. (“wait — did I write <code>import StringIO</code> or <code>from StringIO importStringIO</code>?”)</p></li><li><p>Underscores may appear in <em>unittest</em> method names starting with <code>test</code> to<br>separate logical components of the name, even if those components use<br>CapWords. One possible pattern is <code>test&lt;MethodUnderTest&gt;_&lt;state&gt;</code>; for<br>example <code>testPop_EmptyStack</code> is okay. There is no One Correct Way to name<br>test methods.</p></li></ul><p><a id="s3.16.3-file-naming">&lt;/a&gt;<br><a id="file-naming"></a></a></p><h4 id="3-16-3-File-Naming"><a href="#3-16-3-File-Naming" class="headerlink" title="3.16.3 File Naming"></a>3.16.3 File Naming</h4><p>Python filenames must have a <code>.py</code> extension and must not contain dashes (<code>-</code>).<br>This allows them to be imported and unittested. If you want an executable to be<br>accessible without the extension, use a symbolic link or a simple bash wrapper<br>containing <code>exec &quot;$0.py&quot; &quot;$@&quot;</code>.</p><p><a id="s3.16.4-guidelines-derived-from-guidos-recommendations">&lt;/a&gt;<br><a id="guidelines-derived-from-guidos-recommendations"></a></a></p><h4 id="3-16-4-Guidelines-derived-from-Guido’s-Recommendations"><a href="#3-16-4-Guidelines-derived-from-Guido’s-Recommendations" class="headerlink" title="3.16.4 Guidelines derived from Guido’s Recommendations"></a>3.16.4 Guidelines derived from Guido’s Recommendations</h4><table rules="all" border="1" summary="Guidelines from Guido's Recommendations" cellspacing="2" cellpadding="2">  <tr>    <th>Type</th>    <th>Public</th>    <th>Internal</th>  </tr>  <tr>    <td>Packages</td>    <td><code>lower_with_under</code></td>    <td></td>  </tr>  <tr>    <td>Modules</td>    <td><code>lower_with_under</code></td>    <td><code>_lower_with_under</code></td>  </tr>  <tr>    <td>Classes</td>    <td><code>CapWords</code></td>    <td><code>_CapWords</code></td>  </tr>  <tr>    <td>Exceptions</td>    <td><code>CapWords</code></td>    <td></td>  </tr>  <tr>    <td>Functions</td>    <td><code>lower_with_under()</code></td>    <td><code>_lower_with_under()</code></td>  </tr>  <tr>    <td>Global/Class Constants</td>    <td><code>CAPS_WITH_UNDER</code></td>    <td><code>_CAPS_WITH_UNDER</code></td>  </tr>  <tr>    <td>Global/Class Variables</td>    <td><code>lower_with_under</code></td>    <td><code>_lower_with_under</code></td>  </tr>  <tr>    <td>Instance Variables</td>    <td><code>lower_with_under</code></td>    <td><code>_lower_with_under</code> (protected)</td>  </tr>  <tr>    <td>Method Names</td>    <td><code>lower_with_under()</code></td>    <td><code>_lower_with_under()</code> (protected)</td>  </tr>  <tr>    <td>Function/Method Parameters</td>    <td><code>lower_with_under</code></td>    <td></td>  </tr>  <tr>    <td>Local Variables</td>    <td><code>lower_with_under</code></td>    <td></td>  </tr></table><p>While Python supports making things private by using a leading double underscore<br><code>__</code> (aka. “dunder”) prefix on a name, this is discouraged. Prefer the use of a<br>single underscore. They are easier to type, read, and to access from small<br>unittests. Lint warnings take care of invalid access to protected members.</p><p><a id="s3.17-main">&lt;/a&gt;<br><a id="main"></a></a></p><h3 id="3-17-Main"><a href="#3-17-Main" class="headerlink" title="3.17 Main"></a>3.17 Main</h3><p>Even a file meant to be used as an executable should be importable and a mere<br>import should not have the side effect of executing the program’s main<br>functionality. The main functionality should be in a <code>main()</code> function.</p><p>In Python, <code>pydoc</code> as well as unit tests require modules to be importable. Your<br>code should always check <code>if __name__ == &#39;__main__&#39;</code> before executing your main<br>program so that the main program is not executed when the module is imported.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>All code at the top level will be executed when the module is imported. Be<br>careful not to call functions, create objects, or perform other operations that<br>should not be executed when the file is being <code>pydoc</code>ed.</p><p><a id="s3.18-function-length">&lt;/a&gt;<br><a id="function-length"></a></a></p><h3 id="3-18-Function-length"><a href="#3-18-Function-length" class="headerlink" title="3.18 Function length"></a>3.18 Function length</h3><p>Prefer small and focused functions.</p><p>We recognize that long functions are sometimes appropriate, so no hard limit is<br>placed on function length. If a function exceeds about 40 lines, think about<br>whether it can be broken up without harming the structure of the program.</p><p>Even if your long function works perfectly now, someone modifying it in a few<br>months may add new behavior. This could result in bugs that are hard to find.<br>Keeping your functions short and simple makes it easier for other people to read<br>and modify your code.</p><p>You could find long and complicated functions when working with<br>some code. Do not be intimidated by modifying existing code: if working with such<br>a function proves to be difficult, you find that errors are hard to debug, or<br>you want to use a piece of it in several different contexts, consider breaking<br>up the function into smaller and more manageable pieces.</p><p><a id="s3.19-type-annotations">&lt;/a&gt;<br><a id="type-annotations"></a></a></p><h3 id="3-19-Type-Annotations"><a href="#3-19-Type-Annotations" class="headerlink" title="3.19 Type Annotations"></a>3.19 Type Annotations</h3><p><a id="typing-general">&lt;/a&gt;<br><a id="s3.19.1-general"></a></a></p><h4 id="3-19-1-General-Rules"><a href="#3-19-1-General-Rules" class="headerlink" title="3.19.1 General Rules"></a>3.19.1 General Rules</h4><ul><li>Familiarize yourself with <a href="https://www.python.org/dev/peps/pep-0484/" target="_blank" rel="noopener">PEP-484</a>.</li><li>In methods, only annotate <code>self</code>, or <code>cls</code> if it is necessary for proper type<br>information. e.g., <code>@classmethod def create(cls: Type[T]) -&gt; T: return cls()</code></li><li>If any other variable or a returned type should not be expressed, use <code>Any</code>.</li><li>You are not required to annotate all the functions in a module.<ul><li>At least annotate your public APIs.</li><li>Use judgment to get to a good balance between safety and clarity on the<br>one hand, and flexibility on the other.</li><li>Annotate code that is prone to type-related errors (previous bugs or<br>complexity).</li><li>Annotate code that is hard to understand.</li><li>Annotate code as it becomes stable from a types perspective. In many<br>cases, you can annotate all the functions in mature code without losing<br>too much flexibility.</li></ul></li></ul><p><a id="s3.19.2-line-breaking">&lt;/a&gt;<br><a id="typing-line-breaking"></a></a></p><h4 id="3-19-2-Line-Breaking"><a href="#3-19-2-Line-Breaking" class="headerlink" title="3.19.2 Line Breaking"></a>3.19.2 Line Breaking</h4><p>Try to follow the existing <a href="#indentation">indentation</a> rules.</p><p>After annotating, many function signatures will become “one parameter per line”.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_method</span><span class="params">(self,</span></span></span><br><span class="line"><span class="function"><span class="params">              first_var: int,</span></span></span><br><span class="line"><span class="function"><span class="params">              second_var: Foo,</span></span></span><br><span class="line"><span class="function"><span class="params">              third_var: Optional[Bar])</span> -&gt; int:</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p>Always prefer breaking between variables, and not for example between variable<br>names and type annotations. However, if everything fits on the same line,<br>go for it.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_method</span><span class="params">(self, first_var: int)</span> -&gt; int:</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p>If the combination of the function name, the last parameter, and the return type<br>is too long, indent by 4 in a new line.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_method</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    self, first_var: int)</span> -&gt; Tuple[MyLongType1, MyLongType1]:</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p>When the return type does not fit on the same line as the last parameter, the<br>preferred way is to indent the parameters by 4 on a new line and align the<br>closing parenthesis with the def.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Yes:</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_method</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    self, **kw_args: Optional[MyLongType]</span></span></span><br><span class="line"><span class="function"><span class="params">)</span> -&gt; Dict[OtherLongType, MyLongType]:</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p><code>pylint</code> allows you to move the closing parenthesis to a new line and align<br>with the opening one, but this is less readable.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">No:</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_method</span><span class="params">(self,</span></span></span><br><span class="line"><span class="function"><span class="params">              **kw_args: Optional[MyLongType]</span></span></span><br><span class="line"><span class="function"><span class="params">             )</span> -&gt; Dict[OtherLongType, MyLongType]:</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p>As in the examples above, prefer not to break types. However, sometimes they are<br>too long to be on a single line (try to keep sub-types unbroken).</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_method</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    self,</span></span></span><br><span class="line"><span class="function"><span class="params">    first_var: Tuple[List[MyLongType1],</span></span></span><br><span class="line"><span class="function"><span class="params">                     List[MyLongType2]],</span></span></span><br><span class="line"><span class="function"><span class="params">    second_var: List[Dict[</span></span></span><br><span class="line"><span class="function"><span class="params">        MyLongType3, MyLongType4]])</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p>If a single name and type is too long, consider using an<br><a href="#typing-aliases">alias</a> for the type. The last resort is to break after the<br>colon and indent by 4.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Yes:</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_function</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    long_variable_name:</span></span></span><br><span class="line"><span class="function"><span class="params">        long_module_name.LongTypeName,</span></span></span><br><span class="line"><span class="function"><span class="params">)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">No:</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_function</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    long_variable_name: long_module_name.</span></span></span><br><span class="line"><span class="function"><span class="params">        LongTypeName,</span></span></span><br><span class="line"><span class="function"><span class="params">)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p><a id="s3.19.3-forward-declarations">&lt;/a&gt;<br><a id="typing-forward-declarations"></a></a></p><h4 id="3-19-3-Forward-Declarations"><a href="#3-19-3-Forward-Declarations" class="headerlink" title="3.19.3 Forward Declarations"></a>3.19.3 Forward Declarations</h4><p>If you need to use a class name from the same module that is not yet defined —<br>for example, if you need the class inside the class declaration, or if you use a<br>class that is defined below — use a string for the class name.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,</span></span></span><br><span class="line"><span class="function"><span class="params">               stack: List[<span class="string">"MyClass"</span>])</span> -&gt; <span class="keyword">None</span>:</span></span><br></pre></td></tr></table></figure><p><a id="s3.19.4-default-values">&lt;/a&gt;<br><a id="typing-default-values"></a></a></p><h4 id="3-19-4-Default-Values"><a href="#3-19-4-Default-Values" class="headerlink" title="3.19.4 Default Values"></a>3.19.4 Default Values</h4><p>As per<br><a href="https://www.python.org/dev/peps/pep-0008/#other-recommendations" target="_blank" rel="noopener">PEP-008</a>, use<br>spaces around the <code>=</code> <em>only</em> for arguments that have both a type annotation and<br>a default value.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Yes:</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(a: int = <span class="number">0</span>)</span> -&gt; int:</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">No:</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(a:int=<span class="number">0</span>)</span> -&gt; int:</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p><a id="s3.19.5-none-type">&lt;/a&gt;<br><a id="none-type"></a></a></p><h4 id="3-19-5-NoneType"><a href="#3-19-5-NoneType" class="headerlink" title="3.19.5 NoneType"></a>3.19.5 NoneType</h4><p>In the Python type system, <code>NoneType</code> is a “first class” type, and for typing<br>purposes, <code>None</code> is an alias for <code>NoneType</code>. If an argument can be <code>None</code>, it<br>has to be declared! You can use <code>Union</code>, but if there is only one other type,<br>use <code>Optional</code>.</p><p>Use explicit <code>Optional</code> instead of implicit <code>Optional</code>. Earlier versions of PEP<br>484 allowed <code>a: Text = None</code> to be interpretted as <code>a: Optional[Text] = None</code>,<br>but that is no longer the preferred behavior.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Yes:</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(a: Optional[Text], b: Optional[Text] = None)</span> -&gt; Text:</span></span><br><span class="line">  ...</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">multiple_nullable_union</span><span class="params">(a: Union[None, Text, int])</span> -&gt; Text</span></span><br><span class="line"><span class="function">  ...</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">No:</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nullable_union</span><span class="params">(a: Union[None, Text])</span> -&gt; Text:</span></span><br><span class="line">  ...</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">implicit_optional</span><span class="params">(a: Text = None)</span> -&gt; Text:</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p><a id="s3.19.6-aliases">&lt;/a&gt;<br><a id="typing-aliases"></a></a></p><h4 id="3-19-6-Type-Aliases"><a href="#3-19-6-Type-Aliases" class="headerlink" title="3.19.6 Type Aliases"></a>3.19.6 Type Aliases</h4><p>You can declare aliases of complex types. The name of an alias should be<br>CapWorded. If the alias is used only in this module, it should be<br>_Private.</p><p>For example, if the name of module together with the type is too long:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">_ShortName = module_with_long_name.TypeWithLongName</span><br><span class="line">ComplexMap = Mapping[Text, List[Tuple[int, int]]]</span><br></pre></td></tr></table></figure><p>Other examples are complex nested types and multiple return variables from a<br>function (as a tuple).</p><p><a id="s3.19.7-ignore">&lt;/a&gt;<br><a id="typing-ignore"></a></a></p><h4 id="3-19-7-Ignoring-Types"><a href="#3-19-7-Ignoring-Types" class="headerlink" title="3.19.7 Ignoring Types"></a>3.19.7 Ignoring Types</h4><p>You can disable type checking on a line with the special comment<br><code># type: ignore</code>.</p><p><code>pytype</code> has a disable option for specific errors (similar to lint):</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pytype: disable=attribute-error</span></span><br></pre></td></tr></table></figure><p><a id="s3.19.8-comments">&lt;/a&gt;<br><a id="typing-comments"></a></a></p><h4 id="3-19-8-Typing-internal-variables"><a href="#3-19-8-Typing-internal-variables" class="headerlink" title="3.19.8 Typing internal variables"></a>3.19.8 Typing internal variables</h4><p>If an internal variable has a type that is hard or impossible to infer, you can<br>supply it as a special comment:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = SomeUndecoratedFunction()  <span class="comment"># type: Foo</span></span><br></pre></td></tr></table></figure><p><a id="s3.19.9-tuples">&lt;/a&gt;<br><a id="typing-tuples"></a></a></p><h4 id="3-19-9-Tuples-vs-Lists"><a href="#3-19-9-Tuples-vs-Lists" class="headerlink" title="3.19.9 Tuples vs Lists"></a>3.19.9 Tuples vs Lists</h4><p>Unlike Lists, which can only have a single type, Tuples can have either a single<br>repeated type or a set number of elements with different types. The latter is<br>commonly used as return type from a function.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]  <span class="comment"># type: List[int]</span></span><br><span class="line">b = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)  <span class="comment"># type: Tuple[int, ...]</span></span><br><span class="line">c = (<span class="number">1</span>, <span class="string">"2"</span>, <span class="number">3.5</span>)  <span class="comment"># type: Tuple[int, Text, float]</span></span><br></pre></td></tr></table></figure><p><a id="s3.19.10-type-var">&lt;/a&gt;<br><a id="typing-type-var"></a></a></p><h4 id="3-19-10-TypeVar"><a href="#3-19-10-TypeVar" class="headerlink" title="3.19.10 TypeVar"></a>3.19.10 TypeVar</h4><p>The Python type system has<br><a href="https://www.python.org/dev/peps/pep-0484/#generics" target="_blank" rel="noopener">generics</a>. The factory<br>function <code>TypeVar</code> is a common way to use them.</p><p>Example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> List, TypeVar</span><br><span class="line">T = TypeVar(<span class="string">"T"</span>)</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">next</span><span class="params">(l: List[T])</span> -&gt; T:</span></span><br><span class="line">  <span class="keyword">return</span> l.pop()</span><br></pre></td></tr></table></figure><p>A TypeVar can be constrained:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AddableType = TypeVar(<span class="string">"AddableType"</span>, int, float, Text)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a: AddableType, b: AddableType)</span> -&gt; AddableType:</span></span><br><span class="line">  <span class="keyword">return</span> a + b</span><br></pre></td></tr></table></figure><p>A common predefined type variable in the <code>typing</code> module is <code>AnyStr</code>. Use it for<br>multiple annotations that can be <code>bytes</code> or <code>unicode</code> and must all be the same<br>type.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> AnyStr</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_length</span><span class="params">(x: AnyStr)</span> -&gt; AnyStr:</span></span><br><span class="line">  <span class="keyword">if</span> len(x) &lt;= <span class="number">42</span>:</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line">  <span class="keyword">raise</span> ValueError()</span><br></pre></td></tr></table></figure><p><a id="s3.19.11-strings">&lt;/a&gt;<br><a id="typing-strings"></a></a></p><h4 id="3-19-11-String-types"><a href="#3-19-11-String-types" class="headerlink" title="3.19.11 String types"></a>3.19.11 String types</h4><p>The proper type for annotating strings depends on what versions of Python the<br>code is intended for.</p><p>For Python 3 only code, prefer to use <code>str</code>. <code>Text</code> is also acceptable. Be<br>consistent in using one or the other.</p><p>For Python 2 compatible code, use <code>Text</code>. In some rare cases, <code>str</code> may make<br>sense; typically to aid compatiblity when the return types aren’t the same<br>between the two Python versions. Avoid using <code>unicode</code>: it doesn’t exist in<br>Python 3.</p><p>The reason this discreprency exists is because <code>str</code> means different things<br>depending on the Python version.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">No:</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">py2_code</span><span class="params">(x: str)</span> -&gt; unicode:</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p>For code that deals with binary data, use <code>bytes</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deals_with_binary_data</span><span class="params">(x: bytes)</span> -&gt; bytes:</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p>For Python 2 compatible code that processes text data (<code>str</code> or <code>unicode</code> in<br>Python 2, <code>str</code> in Python 3), use <code>Text</code>. For Python 3 only code that process<br>text data, prefer <code>str</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> Text</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">py2_compatible</span><span class="params">(x: Text)</span> -&gt; Text:</span></span><br><span class="line">  ...</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">py3_only</span><span class="params">(x: str)</span> -&gt; str:</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p>If the type can be either bytes or text, use <code>Union</code>, with the appropriate text<br>type.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> Text, Union</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">py2_compatible</span><span class="params">(x: Union[bytes, Text])</span> -&gt; Union[bytes, Text]:</span></span><br><span class="line">  ...</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">py3_only</span><span class="params">(x: Union[bytes, str])</span> -&gt; Union[bytes, str]:</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p>If all the string types of a function are always the same, for example if the<br>return type is the same as the argument type in the code above, use<br><a href="#typing-type-var">AnyStr</a>.</p><p>Writing it like this will simplify the process of porting the code to Python 3.</p><p><a id="s3.19.12-imports">&lt;/a&gt;<br><a id="typing-imports"></a></a></p><h4 id="3-19-12-Imports-For-Typing"><a href="#3-19-12-Imports-For-Typing" class="headerlink" title="3.19.12 Imports For Typing"></a>3.19.12 Imports For Typing</h4><p>For classes from the <code>typing</code> module, always import the class itself. You are<br>explicitly allowed to import multiple specific classes on one line from the<br><code>typing</code> module. Ex:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> Any, Dict, Optional</span><br></pre></td></tr></table></figure><p>Given that this way of importing from <code>typing</code> adds items to the local<br>namespace, any names in <code>typing</code> should be treated similarly to keywords, and<br>not be defined in your Python code, typed or not. If there is a collision<br>between a type and an existing name in a module, import it using<br><code>import x as y</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> Any <span class="keyword">as</span> AnyType</span><br></pre></td></tr></table></figure><p><a id="s3.19.13-conditional-imports">&lt;/a&gt;<br><a id="typing-conditional-imports"></a></a></p><h4 id="3-19-13-Conditional-Imports"><a href="#3-19-13-Conditional-Imports" class="headerlink" title="3.19.13 Conditional Imports"></a>3.19.13 Conditional Imports</h4><p>Use conditional imports only in exceptional cases where the additional imports<br>needed for type checking must be avoided at runtime. This pattern is<br>discouraged; alternatives such as refactoring the code to allow top level<br>imports should be preferred.</p><p>Imports that are needed only for type annotations can be placed within an<br><code>if TYPE_CHECKING:</code> block.</p><ul><li>Conditionally imported types need to be referenced as strings, to be<br>forward compatible with Python 3.6 where the annotation expressions are<br>actually evaluated.</li><li>Only entities that are used solely for typing should be defined here; this<br>includes aliases. Otherwise it will be a runtime error, as the module will<br>not be imported at runtime.</li><li>The block should be right after all the normal imports.</li><li>There should be no empty lines in the typing imports list.</li><li>Sort this list as if it were a regular imports list.</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> typing</span><br><span class="line"><span class="keyword">if</span> typing.TYPE_CHECKING:</span><br><span class="line">  <span class="keyword">import</span> sketch</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x: <span class="string">"sketch.Sketch"</span>)</span>:</span> ...</span><br></pre></td></tr></table></figure><p><a id="s3.19.14-circular-deps">&lt;/a&gt;<br><a id="typing-circular-deps"></a></a></p><h4 id="3-19-14-Circular-Dependencies"><a href="#3-19-14-Circular-Dependencies" class="headerlink" title="3.19.14 Circular Dependencies"></a>3.19.14 Circular Dependencies</h4><p>Circular dependencies that are caused by typing are code smells. Such code is a<br>good candidate for refactoring. Although technically it is possible to keep<br>circular dependencies, the <a href="#typing-build-deps">build system</a> will not let you<br>do so because each module has to depend on the other.</p><p>Replace modules that create circular dependency imports with <code>Any</code>. Set an<br><a href="#typing-aliases">alias</a> with a meaningful name, and use the real type name from<br>this module (any attribute of Any is Any). Alias definitions should be separated<br>from the last import by one line.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> Any</span><br><span class="line"></span><br><span class="line">some_mod = Any  <span class="comment"># some_mod.py imports this module.</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_method</span><span class="params">(self, var: some_mod.SomeType)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p><a id="typing-generics">&lt;/a&gt;<br><a id="s3.19.15-generics"></a></a></p><h4 id="3-19-15-Generics"><a href="#3-19-15-Generics" class="headerlink" title="3.19.15 Generics"></a>3.19.15 Generics</h4><p>When annotating, prefer to specify type parameters for generic types; otherwise,<br><a href="https://www.python.org/dev/peps/pep-0484/#the-any-type" target="_blank" rel="noopener">the generics’ parameters will be assumed to be <code>Any</code></a>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_names</span><span class="params">(employee_ids: List[int])</span> -&gt; Dict[int, Any]:</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># These are both interpreted as get_names(employee_ids: List[Any]) -&gt; Dict[Any, Any]</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_names</span><span class="params">(employee_ids: list)</span> -&gt; Dict:</span></span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_names</span><span class="params">(employee_ids: List)</span> -&gt; Dict:</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p>If the best type parameter for a generic is <code>Any</code>, make it explicit, but<br>remember that in many cases <a href="#typing-type-var"><code>TypeVar</code></a> might be more<br>appropriate:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_names</span><span class="params">(employee_ids: List[Any])</span> -&gt; Dict[Any, Text]:</span></span><br><span class="line">  <span class="string">"""Returns a mapping from employee ID to employee name for given IDs."""</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">T = TypeVar(<span class="string">'T'</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_names</span><span class="params">(employee_ids: List[T])</span> -&gt; Dict[T, Text]:</span></span><br><span class="line">  <span class="string">"""Returns a mapping from employee ID to employee name for given IDs."""</span></span><br></pre></td></tr></table></figure><h2 id="4-Parting-Words"><a href="#4-Parting-Words" class="headerlink" title="4 Parting Words"></a>4 Parting Words</h2><p><em>BE CONSISTENT</em>.</p><p>If you’re editing code, take a few minutes to look at the code around you and<br>determine its style. If they use spaces around all their arithmetic operators,<br>you should too. If their comments have little boxes of hash marks around them,<br>make your comments have little boxes of hash marks around them too.</p><p>The point of having style guidelines is to have a common vocabulary of coding so<br>people can concentrate on what you’re saying rather than on how you’re saying<br>it. We present global style rules here so people know the vocabulary, but local<br>style is also important. If code you add to a file looks drastically different<br>from the existing code around it, it throws readers out of their rhythm when<br>they go to read it. Avoid this.</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Google-Python-Style-Guide&quot;&gt;&lt;a href=&quot;#Google-Python-Style-Guide&quot; class=&quot;headerlink&quot; title=&quot;Google Python Style Guide&quot;&gt;&lt;/a&gt;Google Python Style Guide&lt;/h1&gt;&lt;div class=&quot;note warning&quot;&gt;&lt;p&gt;To be translated&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Python" scheme="https://jacksonleon.gitee.io/categories/Python/"/>
    
      <category term="Style Guide" scheme="https://jacksonleon.gitee.io/categories/Python/Style-Guide/"/>
    
    
      <category term="Python" scheme="https://jacksonleon.gitee.io/tags/Python/"/>
    
      <category term="Reproduce" scheme="https://jacksonleon.gitee.io/tags/Reproduce/"/>
    
  </entry>
  
  <entry>
    <title>「吴恩达机器学习」（三）</title>
    <link href="https://jacksonleon.gitee.io/posts/2218408717.html"/>
    <id>https://jacksonleon.gitee.io/posts/2218408717.html</id>
    <published>2019-04-19T03:16:05.000Z</published>
    <updated>2019-04-19T03:16:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="「吴恩达机器学习」（三）"><a href="#「吴恩达机器学习」（三）" class="headerlink" title="「吴恩达机器学习」（三）"></a>「吴恩达机器学习」（三）</h1><ul><li>逻辑回归</li></ul><a id="more"></a><h2 id="逻辑回归-Logistic-Regression"><a href="#逻辑回归-Logistic-Regression" class="headerlink" title="逻辑回归(Logistic Regression)"></a>逻辑回归(Logistic Regression)</h2><h3 id="分类问题"><a href="#分类问题" class="headerlink" title="分类问题"></a>分类问题</h3><p>在分类问题中，你要预测的变量 $y$ 是离散的值，我们将学习一种叫做逻辑回归 (<strong>Logistic Regression</strong>) 的算法，这是目前最流行使用最广泛的一种学习算法。</p><p>在分类问题中，我们尝试预测的是结果是否属于某一个类（例如正确或错误）。分类问题的例子有：判断一封电子邮件是否是垃圾邮件；判断一次金融交易是否是欺诈；之前我们也谈到了肿瘤分类问题的例子，区别一个肿瘤是恶性的还是良性的。</p><p><img src="https://i.loli.net/2019/04/30/5cc831f59ef6e.jpg" alt="image-20190419113034539"></p><p>这个算法的性质是：它的输出值永远在0到 1 之间。</p><p>顺便说一下，逻辑回归算法是分类算法，我们将它作为分类算法使用。有时候可能因为这个算法的名字中出现了“回归”使你感到困惑，但逻辑回归算法实际上是一种分类算法，它适用于标签 $y$ 取值离散的情况，如：1 0 0 1。</p><h3 id="假说表示"><a href="#假说表示" class="headerlink" title="假说表示"></a>假说表示</h3><p>逻辑回归模型</p><p>$h<em>{\theta}=g(\theta^Tx)$ &amp; $g(z)=\frac{1}{1+e^{-z} }$ =&gt; $h</em>{\theta}=\frac{1}{1+e^{-\theta^Tx} }$</p><p>对模型的理解： $g(z)=\frac{1}{1+e^{-z} }$。</p><p>$h<em>\theta (x)$的作用是，对于给定的输入变量，根据选择的参数计算输出变量=1的可能性（<strong>estimated probablity</strong>）即$h</em>\theta(x)=P( y=1|x;\theta )$ 例如，如果对于给定的$x$，通过已经确定的参数计算得出$h_\theta (x)=0.7$，则表示有70%的几率$y$为正向类，相应地$y$为负向类的几率为1-0.7=0.3。</p><h3 id="判定边界"><a href="#判定边界" class="headerlink" title="判定边界"></a>判定边界</h3><p><img src="https://i.loli.net/2019/04/30/5cc831fb61317.jpg" alt="image-20190419114449018"></p><p>e.g. $h_{\theta}=g(\theta_0+\theta_1x_1+\theta_2x_2)$,其中$\theta=\left[\begin{matrix} -3 &amp; 1 &amp; 1\end{matrix}\right]^T$</p><p><img src="https://i.loli.net/2019/04/30/5cc832010ab1b.jpg" alt="image-20190419115043852"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;「吴恩达机器学习」（三）&quot;&gt;&lt;a href=&quot;#「吴恩达机器学习」（三）&quot; class=&quot;headerlink&quot; title=&quot;「吴恩达机器学习」（三）&quot;&gt;&lt;/a&gt;「吴恩达机器学习」（三）&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;逻辑回归&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://jacksonleon.gitee.io/categories/Machine-Learning/"/>
    
      <category term="Andrew NG" scheme="https://jacksonleon.gitee.io/categories/Machine-Learning/Andrew-NG/"/>
    
    
      <category term="Machine Learning" scheme="https://jacksonleon.gitee.io/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>「吴恩达机器学习」（二）</title>
    <link href="https://jacksonleon.gitee.io/posts/3374618719.html"/>
    <id>https://jacksonleon.gitee.io/posts/3374618719.html</id>
    <published>2019-04-12T10:46:34.000Z</published>
    <updated>2019-04-12T10:46:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="「吴恩达机器学习」（二）"><a href="#「吴恩达机器学习」（二）" class="headerlink" title="「吴恩达机器学习」（二）"></a>「吴恩达机器学习」（二）</h1><ul><li>多变量线性回归</li></ul><a id="more"></a><h2 id="多变量线性回归"><a href="#多变量线性回归" class="headerlink" title="多变量线性回归"></a>多变量线性回归</h2><h3 id="多维特征"><a href="#多维特征" class="headerlink" title="多维特征"></a>多维特征</h3><p>目前为止，我们探讨了单变量/特征的回归模型，现在我们对房价模型增加更多的特征，例如房间数楼层等，构成一个含有多个变量的模型，模型中的特征为$( x_1,x_2,…,x_n )$。</p><p>增添更多特征后，我们引入一系列新的注释：</p><p>$n$ 代表特征的数量</p><p>$x^{( i )}$代表第 $i$ 个训练实例，是特征矩阵中的第$i$行，是一个<strong>向量</strong>（<strong>vector</strong>）。</p><p>比方说，上图的</p><p>${x}^{(2)}\text{=}\begin{bmatrix} 1416\ 3\ 2\ 40 \end{bmatrix}$，</p><p>${x}_{j}^{( i )}$代表特征矩阵中第 $i$ 行的第 $j$ 个特征，也就是第 $i$ 个训练实例的第 $j$ 个特征。</p><p>如上图的$x<em>{2}^{( 2 )}=3,x</em>{3}^{( 2 )}=2$，</p><p>支持多变量的假设 $h$ 表示为：$h_{\theta}( x )=\theta_0+\theta_1x_1+\theta_2x_2+…+\theta_nx_n$，</p><p>这个公式中有$n+1$个参数和$n$个变量，为了使得公式能够简化一些，引入$x<em>{0}=1$，则公式转化为：$h</em>{\theta} ( x )=\theta_0x_0+\theta_1x_1+\theta_2x_2+…+\theta_nx_n$</p><p>此时模型中的参数是一个$n+1$维的向量，任何一个训练实例也都是$n+1$维的向量，特征矩阵$X$的维度是 $m*(n+1)$。 因此公式可以简化为：$h_{\theta} ( x )=\theta^TX$，其中上标$T$代表矩阵转置。</p><p><img src="https://i.loli.net/2019/04/30/5cc8333c010e8.jpg" alt="image-20190416161948044"></p><h3 id="多变量梯度下降"><a href="#多变量梯度下降" class="headerlink" title="多变量梯度下降"></a>多变量梯度下降</h3><p>如何利用梯度下降处理多元线性回归</p><p>与单变量线性回归类似，在多变量线性回归中，我们也构建一个代价函数，则这个代价函数是所有建模误差的平方和，即：</p><script type="math/tex; mode=display">J(\theta_0,\theta_1,...,\theta_n)=\frac{1}{2m}\sum\limits_{i=1}^m(h_{\theta}(x^{(i)})-y^{(i)})^2</script><p><img src="https://i.loli.net/2019/04/30/5cc833427cf84.jpg" alt="image-20190416170724732"></p><h3 id="梯度下降法实践1-特征缩放"><a href="#梯度下降法实践1-特征缩放" class="headerlink" title="梯度下降法实践1-特征缩放"></a>梯度下降法实践1-特征缩放</h3><p>以房价问题为例，假设我们使用两个特征，房屋的尺寸和房间的数量，尺寸的值为 0-2000平方英尺，而房间数量的值则是0-5，以两个参数分别为横纵坐标，绘制代价函数的等高线图能，看出图像会显得很扁，梯度下降算法需要非常多次的迭代才能收敛。</p><p><img src="https://i.loli.net/2019/04/30/5cc8334a1afa2.jpg" alt="image-20190416193334095"></p><p>解决的方法是尝试将所有特征的尺度都尽量缩放到-1到1之间。</p><p>最简单的方法是令：$x_n=\frac{x_n-\mu_n}{S_n}$，其中 $\mu_n$是平均值，$S_n$是标准差。</p><p>使用特征缩放可以使梯度下降的速度变得很快，让梯度下降收敛所需的循环次数更少。</p><h3 id="梯度下降法实践2-学习率"><a href="#梯度下降法实践2-学习率" class="headerlink" title="梯度下降法实践2-学习率"></a>梯度下降法实践2-学习率</h3><ul><li>如何确定梯度下降是否正确</li><li>如何选取学习率$\alpha$</li></ul><p>代价函数应该在每次循环后降低，表明梯度下降正确</p><p>梯度下降算法收敛所需要的迭代次数根据模型的不同而不同，我们不能提前预知，我们可以绘制迭代次数和代价函数的图表来观测算法在何时趋于收敛。</p><p><img src="https://i.loli.net/2019/04/30/5cc833577a8da.jpg" alt="image-20190416194946523"></p><p>梯度下降算法的每次迭代受到学习率的影响，如果学习率$\alpha$过小，则达到收敛所需的迭代次数会非常高；如果学习率$\alpha$过大，每次迭代可能不会减小代价函数，可能会越过局部最小值导致无法收敛。</p><p>通常可以考虑尝试这些学习率（2倍递增）：</p><script type="math/tex; mode=display">\alpha=0.001，0.03，0.01，0.1，0.3，1，3，10</script><h3 id="特征和多项式回归"><a href="#特征和多项式回归" class="headerlink" title="特征和多项式回归"></a>特征和多项式回归</h3><p><img src="https://i.loli.net/2019/04/30/5cc8335dc9fe1.jpg" alt="image-20190417103501105"></p><p>$x<em>1=frontage$（临街宽度），$x_2=depth$（纵向深度），$x=frontage*depth=area$（面积），则： $h</em>{\theta}(x)=\theta<em>0+\theta_1x$。 线性回归并不适用于所有数据，有时我们需要曲线来适应我们的数据，比如一个二次方模型：$h</em>{\theta}(x)=\theta<em>0+\theta_1x_1+\theta_2x_x^2$ 或者三次方模型： $h</em>{\theta}(x)=\theta_0+\theta_1x_1+\theta_2x_2^2+\theta_3x_3^3$。</p><p>通常我们需要先观察数据然后再决定准备尝试怎样的模型。 另外，我们可以令：</p><p>$x_2=x_2^2,x_3=x_3^3$，从而将模型转化为线性回归模型。</p><p>根据函数图形特性，我们还可以使：</p><p>$h_{\theta}(x)=\theta_0+\theta_1(size)+\theta_2(size)^2$</p><p>或者:</p><p>$h_{\theta}(x)=\theta_0+\theta_1(size)+\theta_2\sqrt{size}$</p><p><img src="https://i.loli.net/2019/04/30/5cc83362cf28c.jpg" alt="image-20190417104451937"></p><p>注：如果我们采用多项式回归模型，在运行梯度下降算法前，特征缩放非常有必要。</p><h3 id="正规方程"><a href="#正规方程" class="headerlink" title="正规方程"></a>正规方程</h3><p>到目前为止，我们都在使用梯度下降算法，但是对于某些线性回归问题，正规方程方法是更好的解决方案。提供了一种求$\theta$的解析求法，所以与其使用迭代法求解，我们可以一次性求解$\theta$的最优值。</p><p>直观的理解：</p><p>对向量中的每一个变量求偏导，当等于0的时候求其变量值，这样就能得到一组向量。</p><p>正规方程不需要进行归一化，但是梯度下降时需要的。</p><p><img src="https://i.loli.net/2019/04/30/5cc83368d1fff.jpg" alt="image-20190417112743188"></p><script type="math/tex; mode=display">\theta=(X^TX)^{-1}X^Ty</script><p>梯度下降与正规方程的比较：</p><div class="table-container"><table><thead><tr><th>梯度下降</th><th>正规方程</th></tr></thead><tbody><tr><td>需要选择学习率$\alpha$</td><td>不需要</td></tr><tr><td>需要多次迭代</td><td>一次运算得出</td></tr><tr><td>适用于各种类型的模型</td><td>只适用于线性模型，不适合逻辑回归模型等其他模型</td></tr><tr><td>当特征数量$n$大时也能较好适用</td><td>需要计算$( X^TX )^{-1}$ 如果特征数量n较大则运算代价大，因为矩阵逆的计算时间复杂度为$O(n^3)$，通常来说当$n$小于10000 时还是可以接受的</td></tr></tbody></table></div><p>总结一下，只要特征变量的数目并不大，标准方程是一个很好的计算参数$\theta $的替代方法。具体地说，只要特征变量数量小于一万，我通常使用标准方程法，而不使用梯度下降法。</p><p>随着我们要讲的学习算法越来越复杂，例如，当我们讲到分类算法，像逻辑回归算法，我们会看到，实际上对于那些算法，并不能使用标准方程法。对于那些更复杂的学习算法，我们将不得不仍然使用梯度下降法。因此，梯度下降法是一个非常有用的算法，可以用在有大量特征变量的线性回归问题。或者我们以后在课程中，会讲到的一些其他的算法，因为标准方程法不适合或者不能用在它们上。但对于这个特定的线性回归模型，标准方程法是一个比梯度下降法更快的替代算法。所以，根据具体的问题，以及你的特征变量的数量，这两种算法都是值得学习的。</p><h3 id="正规方程及不可逆性（可选）"><a href="#正规方程及不可逆性（可选）" class="headerlink" title="正规方程及不可逆性（可选）"></a>正规方程及不可逆性（可选）</h3><p>正规方程 ( <strong>normal equation</strong> )，以及它们的不可逆性。 </p><p>有些同学曾经问过我，当计算 $\theta$=<code>inv(X&#39;X ) X&#39;y</code> ，那对于矩阵$X’X$的结果是不可逆的情况咋办呢? 如果你懂一点线性代数的知识，你或许会知道，有些矩阵可逆，而有些矩阵不可逆。我们称那些不可逆矩阵为奇异或退化矩阵。</p><p>首先，看特征值里是否有一些多余的特征，像这些$x_1$和$x_2$是线性相关的，互为线性函数。同时，当有一些多余的特征时，可以删除这两个重复特征里的其中一个，无须两个特征同时保留，将解决不可逆性的问题。因此，首先应该通过观察所有特征检查是否有多余的特征，如果有多余的就删除掉，直到他们不再是多余的为止，如果特征数量实在太多，我会删除些 用较少的特征来反映尽可能多内容，否则我会考虑使用正规化方法。</p><p><strong>$\theta =( X^TX )^{-1}X^Ty$ 的推导过程：</strong></p><p>$J(\theta)=\frac{1}{2m}\sum\limits<em>{i=1}^{m}(h</em>{\theta}(x^{(i)})-y^{(i)})^2$<br>其中：$h_{\theta}( x )=\theta^TX=\theta_0x_0+\theta_1x_1+\theta_2x_2+…+\theta_nx_n$</p><p>将向量表达形式转为矩阵表达形式，则有$J(\theta )=\frac{1}{2}( X\theta -y)^2$ ，其中$X$为$m$行$n+1$列的矩阵（$m$为样本个数，$n$为特征个数），$\theta$为$n+1$行1列的矩阵，$y$为$m$行1列的矩阵，对$J(\theta )$进行如下变换</p><script type="math/tex; mode=display">J(\theta )=\frac{1}{2}( X\theta -y)^T( X\theta -y )\\=\frac{1}{2}( \theta^TX^T-y^T)(X\theta -y )\\=\frac{1}{2}(\theta^TX^TX\theta -\theta^TX^Ty-y^TX\theta -y^Ty )</script><p>接下来对$J(\theta )$偏导，需要用到以下几个矩阵的求导法则:</p><script type="math/tex; mode=display">\frac{dAB}{dB}=A^T\\\frac{dX^TAX}{dX}=2AX</script><p>所以有:</p><script type="math/tex; mode=display">\frac{\partial J( \theta )}{\partial \theta }=\frac{1}{2}(2X^TX\theta -X^Ty -(y^TX )^T-0 )\\=\frac{1}{2}(2X^TX\theta -X^Ty -X^Ty -0\\=X^TX\theta -X^Ty</script><p>令$\frac{\partial J( \theta )}{\partial \theta }=0$,</p><p>则有$\theta =( X^TX )^{-1}X^Ty$</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;「吴恩达机器学习」（二）&quot;&gt;&lt;a href=&quot;#「吴恩达机器学习」（二）&quot; class=&quot;headerlink&quot; title=&quot;「吴恩达机器学习」（二）&quot;&gt;&lt;/a&gt;「吴恩达机器学习」（二）&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;多变量线性回归&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://jacksonleon.gitee.io/categories/Machine-Learning/"/>
    
      <category term="Andrew NG" scheme="https://jacksonleon.gitee.io/categories/Machine-Learning/Andrew-NG/"/>
    
    
      <category term="Machine Learning" scheme="https://jacksonleon.gitee.io/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>「吴恩达机器学习」（一）</title>
    <link href="https://jacksonleon.gitee.io/posts/4168189520.html"/>
    <id>https://jacksonleon.gitee.io/posts/4168189520.html</id>
    <published>2019-04-05T09:03:30.000Z</published>
    <updated>2019-04-05T09:03:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="「吴恩达机器学习」（一）"><a href="#「吴恩达机器学习」（一）" class="headerlink" title="「吴恩达机器学习」（一）"></a>「吴恩达机器学习」（一）</h1><ul><li>什么是机器学习？</li><li>什么是监督学习算法？</li><li>什么是非监督学习算法？</li><li>什么是单变量线性回归？</li><li>线性代数知识点回顾</li></ul><a id="more"></a><h2 id="什么是机器学习？"><a href="#什么是机器学习？" class="headerlink" title="什么是机器学习？"></a>什么是机器学习？</h2><ul><li><p>Arthur Samuel(1959)</p><p>编程使计算机自己和自己玩10^1000跳棋游戏</p></li></ul><p><img src="https://i.loli.net/2019/04/30/5cc834f312e50.jpg" alt></p><ul><li><p>Tom Mitchell(1998)</p><p>计算机程序从经验E中学习任务T，并用度量P来衡量性能。条件是它由P定义的关于T的性能随着经验E而提高。</p><p>经验E=自己玩10^1000次跳棋</p><p>任务T=玩跳棋</p><p>性能度量P=与<strong>新</strong>对手玩跳棋时赢的概率</p></li></ul><p><img src="https://i.loli.net/2019/04/30/5cc8323ea501d.jpg" alt="image-20190406171015837"></p><ul><li>邮件系统学习标记垃圾邮件</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc83246c6fb6.jpg" alt="image-20190406171657536"></p><ul><li><p>学习算法</p><ul><li>supervised learning<ul><li>我们教计算机如何做一件事情</li><li>给标准答案</li></ul></li><li>unsupervised learning<ul><li>计算机自己学习</li></ul></li><li>others<ul><li>reinforcement learning</li><li>recommender systems</li></ul></li></ul></li><li><p>对应用学习算法的实用性建议（木匠）</p><p>如何去使用这些工具（机器学习算法）</p></li></ul><h2 id="监督学习"><a href="#监督学习" class="headerlink" title="监督学习"></a>监督学习</h2><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><ul><li><p>predict housing prices</p><p><img src="https://i.loli.net/2019/04/30/5cc8324f7daff.jpg" alt="image-20190406201909053"></p><ul><li>直线拟合</li><li>二次函数或者二次多项式</li></ul><p>监督学习指的就是我们给学习算法一个数据集。这个数据集由“正确答案”组成。在房价的例子中，我们给了一系列房子的数据，我们给定数据集中每个样本的正确价格，即它们实际的售价然后运用学习算法，算出更多的正确答案。比如你朋友那个新房子的价格。用术语来讲，这叫做<strong>回归问题</strong>。我们试着推测出一个连续值的结果，即房子的价格。</p><p>一般房子的价格会记到美分，所以房价实际上是一系列离散的值，但是我们通常又把房价看成实数，看成是标量，所以又把它看成一个连续的数值。</p></li><li><p>breast cancer</p><p><img src="https://i.loli.net/2019/04/30/5cc8325695ce7.jpg" alt="image-20190406202851738"></p><p>​    Malignant or benign？-&gt;(0,1)</p><p>​    这类机器学习的问题就在于，你能否估算出肿瘤是恶性的或是良性的概率。用术语来讲，这是一个分类问题。</p><p>​    分类指的是，我们试着推测出离散的输出值：0或1良性或恶性，而事实上在分类问题中，输出可能不止两个值。比如说可能有三种乳腺癌，所以你希望预测离散输出0、1、2、3。0 代表良性，这也是分类问题，属于多分类问题。可以用另外一种形式来表示（O表示malignant，X表示bengin）。</p><ul><li><p>多特征输入</p><p><img src="https://i.loli.net/2019/04/30/5cc8326024fa1.jpg" alt="image-20190406203620654"></p><p>例如年龄、tumor大小、malignant or bengin……</p><p>良性区域or恶性区域</p><p>如何处理这些无穷多数量的特征？如何存储？你电脑的内存肯定不够用。<strong>我们以后会讲一个算法，叫支持向量机，里面有一个巧妙的数学技巧，能让计算机处理无限多个特征。</strong>想象一下，我没有写下这两种和右边的三种特征，而是在一个无限长的列表里面，一直写一直写不停的写，写下无限多个特征，事实上，我们能用算法来处理它们。</p></li></ul></li></ul><h3 id="测验"><a href="#测验" class="headerlink" title="测验"></a>测验</h3><p>现在来个小测验：假设你经营着一家公司，你想开发学习算法来处理这两个问题：</p><ol><li>你有一大批同样的货物，想象一下，你有上千件一模一样的货物等待出售，这时你想预测接下来的三个月能卖多少件？</li><li>你有许多客户，这时你想写一个软件来检验每一个用户的账户。对于每一个账户，你要判断它们是否曾经被盗过？</li></ol><p>那这两个问题，它们属于分类问题、还是回归问题?</p><p>问题一是一个回归问题，因为你知道，如果我有数千件货物，我会把它看成一个实数，一个连续的值。因此卖出的物品数，也是一个连续的值。</p><p>问题二是一个分类问题，因为我会把预测的值，<strong>用 0 来表示账户未被盗，用 1 表示账户曾经被盗过</strong>。所以我们根据账号是否被盗过，把它们定为0 或 1，然后用算法推测一个账号是 0 还是 1，因为只有少数的离散值，所以我把它归为分类问题。</p><p>以上就是监督学习的内容。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这节课我们介绍了监督学习。其基本思想是，我们数据集中的每个样本都有相应的“正确答案”。再根据这些样本作出预测，就像房子和肿瘤的例子中做的那样。我们还介绍了回归问题，即通过回归来推出一个连续的输出，之后我们介绍了分类问题，其目标是推出一组离散的结果。</p><h2 id="无监督学习"><a href="#无监督学习" class="headerlink" title="无监督学习"></a>无监督学习</h2><p><img src="https://i.loli.net/2019/04/30/5cc83263b63bf.jpg" alt="image-20190406205004602"></p><p><img src="https://i.loli.net/2019/04/30/5cc83268ac8aa.jpg" alt="image-20190406205023673"></p><p>在无监督学习中，我们已知的数据。看上去有点不一样，不同于监督学习的数据的样子，即无监督学习中没有任何的标签或者是有相同的标签或者就是没标签。所以我们已知数据集，却不知如何处理，也未告知每个数据点是什么。别的都不知道，就是一个数据集。你能从数据中找到某种结构吗？</p><p>针对数据集，无监督学习就能判断出数据有两个不同的聚集簇。这是一个，那是另一个，二者不同。是的，无监督学习算法可能会把这些数据分成两个不同的簇。所以叫做聚类算法。</p><ul><li>聚类应用</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc8326e8d92a.jpg" alt="image-20190406205247834"></p><p>谷歌新闻每天都在，收集非常多，非常多的网络的新闻内容。它再将这些新闻分组，组成有关联的新闻。所以谷歌新闻做的就是搜索非常多的新闻事件，自动地把它们聚类到一起。所以，这些新闻事件全是同一主题的，所以显示到一起。</p><p><img src="https://i.loli.net/2019/04/30/5cc8327321c37.jpg" alt="image-20190406205624859"></p><ul><li><p>Cocktail party problem</p><p><img src="https://i.loli.net/2019/04/30/5cc832792a760.jpg" alt="image-20190406210053078"></p><p><img src="https://i.loli.net/2019/04/30/5cc8327cf19b3.jpg" alt="image-20190406210112864"></p></li></ul><h2 id="单变量线性回归"><a href="#单变量线性回归" class="headerlink" title="单变量线性回归"></a>单变量线性回归</h2><p>Linear Regression with One Variable</p><h3 id="模型表示"><a href="#模型表示" class="headerlink" title="模型表示"></a>模型表示</h3><p><img src="https://i.loli.net/2019/04/30/5cc83283692bf.jpg" alt="image-20190406211745719"></p><p><img src="https://i.loli.net/2019/04/30/5cc83288e5014.jpg" alt="image-20190406212146531"></p><p>一种可能的表达方式为：</p><p>$h<em>\theta \left( x \right)=\theta</em>{0} + \theta_{1}x$</p><p>因为只含有一个特征/输入变量，因此这样的问题叫作单变量线性回归问题。</p><h3 id="代价函数"><a href="#代价函数" class="headerlink" title="代价函数"></a>代价函数</h3><p>我们将定义代价函数的概念，这有助于我们弄清楚如何把最有可能的直线与我们的数据相拟合。</p><p><img src="https://i.loli.net/2019/04/30/5cc8328faf434.jpg" alt="image-20190406214055225"></p><p>在线性回归中我们有一个像这样的训练集，$m$代表了训练样本的数量，比如 $m = 47$。而我们的假设函数，也就是用来进行预测的函数，是这样的线性函数形式：$h<em>\theta \left( x \right)=\theta</em>{0}+\theta_{1}x$。</p><p>接下来我们会引入一些术语我们现在要做的便是为我们的模型选择合适的<strong>参数</strong>（<strong>parameters</strong>）$\theta<em>{0}$ 和 $\theta</em>{1}$，在房价问题这个例子中便是直线的斜率和在$y$ 轴上的截距。</p><p>我们选择的参数决定了我们得到的直线相对于我们的训练集的准确程度，模型所预测的值与训练集中实际值之间的差距（下图中蓝线所指）就是<strong>建模误差</strong>（<strong>modeling error</strong>）。</p><p>我们的目标便是选择出可以使得建模误差的平方和能够最小的模型参数。 即使得代价函数 </p><script type="math/tex; mode=display">J \left( \theta_0, \theta_1 \right) = \frac{1}{2m}\sum\limits_{i=1}^m \left( h_{\theta}(x^{(i)})-y^{(i)} \right)^{2}</script><p>最小。(平方误差函数)</p><p>还有其他代价函数，不过平方误差函数对于线性回归是比较合理的。</p><p>我们绘制一个等高线图，三个坐标分别为$\theta<em>{0}$和$\theta</em>{1}$ 和$J(\theta<em>{0}, \theta</em>{1})$：</p><p><img src="https://github.com/fengdu78/Coursera-ML-AndrewNg-Notes/raw/master/images/27ee0db04705fb20fab4574bb03064ab.png" alt="img"></p><h3 id="代价函数的直观理解（一）"><a href="#代价函数的直观理解（一）" class="headerlink" title="代价函数的直观理解（一）"></a>代价函数的直观理解（一）</h3><p>在上一个视频中，我们给了代价函数一个数学上的定义。在这个视频里，让我们通过一些例子来获取一些直观的感受，看看代价函数到底是在干什么。</p><p><img src="https://i.loli.net/2019/04/30/5cc8329450cff.jpg" alt></p><p>简化函数，先假设截距为0，计算简单的情况。</p><p><img src="https://i.loli.net/2019/04/30/5cc8329ad7de3.jpg" alt></p><p>当$\theta_1$改变时（$\theta_1=0,0.5,1,1.5,2,2.5…$），计算$J(\theta_1)$的函数图像。对于每一个$\theta_1$都有一个对应的$J(\theta_1)$，那么我们就可以画出来$J(\theta_1)$的函数图像，也就是代价函数的函数图像。为了找到一个最拟合数据的函数，需要改变$\theta_1$的值，从而使代价函数最小，也就是当$\theta_1=1$时可以拟合得到出((1,1),(2,2),(3,3))的函数。</p><h3 id="代价函数的直观理解（二）"><a href="#代价函数的直观理解（二）" class="headerlink" title="代价函数的直观理解（二）"></a>代价函数的直观理解（二）</h3><p>前提：熟悉等高线图的绘制</p><p><img src="https://i.loli.net/2019/04/30/5cc832a1a86c0.jpg" alt></p><p>代价函数的样子，<strong>等高线图可以更好的体现出函数图像上的点之间的关系</strong>，则可以看出在三维空间中存在一个使得$J(\theta<em>{0}, \theta</em>{1})$最小的点（<em>碗底</em>）。</p><p><img src="https://i.loli.net/2019/04/30/5cc832a82a742.jpg" alt></p><p>通过这些图形，我希望你能更好地理解这些代价函数$ J$所表达的值是什么样的，它们对应的假设是什么样的，以及什么样的假设对应的点，更接近于代价函数$J$的最小值。</p><p>当然，我们真正需要的是一种有效的算法，能够自动地找出这些使代价函数$J$取最小值的参数$\theta<em>{0}$和$\theta</em>{1}$来。</p><p>我们也不希望编个程序把这些点画出来，然后人工的方法来读出这些点的数值，这很明显不是一个好办法。我们会遇到更复杂、更高维度、更多参数的情况，而这些情况是很难画出图的，因此更无法将其可视化，因此我们真正需要的是编写程序来找出这些最小化代价函数的$\theta<em>{0}$和$\theta</em>{1}$的值。</p><h3 id="梯度下降"><a href="#梯度下降" class="headerlink" title="梯度下降"></a>梯度下降</h3><p>梯度下降背后的思想是：开始时我们随机选择一个参数的组合$\left( \theta_0,\theta_1,……,\theta_n \right)$，计算代价函数，然后我们寻找下一个能让代价函数值下降最多的参数组合。我们持续这么做直到找到一个局部最小值（<strong>local minimum</strong>），因为我们并没有尝试完所有的参数组合，所以不能确定我们得到的局部最小值是否便是全局最小值（<strong>global minimum</strong>），选择不同的初始参数组合，可能会找到不同的局部最小值。</p><p>梯度下降是一个用来求函数最小值的算法，我们将使用梯度下降算法来求出代价函数$J(\theta<em>{0}, \theta</em>{1})$ 的最小值。</p><p><img src="https://i.loli.net/2019/04/30/5cc832b389486.jpg" alt></p><p>对$\theta<em>0$,$\theta_1$进行一些初步猜想，他们是多少并不重要，将他们全部设为0，我们不停的一点点改变$\theta_0$,$\theta_1$试图使$J(\theta</em>{0}, \theta_{1})$最小或者使局部最小值。</p><p><img src="https://i.loli.net/2019/04/30/5cc832c0a103a.jpg" alt></p><p><img src="https://i.loli.net/2019/04/30/5cc832ca74768.jpg" alt></p><p>想象一下你正站立在山的这一点上，站立在你想象的公园这座红色山上，在梯度下降算法中，我们要做的就是旋转360度，看看我们的周围，并问自己要在某个方向上，用小碎步尽快下山。这些小碎步需要朝什么方向？如果我们站在山坡上的这一点，你看一下周围，你会发现最佳的下山方向，你再看看周围，然后再一次想想，我应该从什么方向迈着小碎步下山？然后你按照自己的判断又迈出一步，重复上面的步骤，从这个新的点，你环顾四周，并决定从什么方向将会最快下山，然后又迈进了一小步，并依此类推，直到你接近局部最低点的位置。</p><p><strong>不同的起点，最终获得的局部最低点可能是不同的</strong>。</p><p>批量梯度下降（<strong>batch gradient descent</strong>）算法的公式为：</p><p><img src="https://i.loli.net/2019/04/30/5cc832ce153c2.jpg" alt></p><p>我们使用$:=$表示赋值，$=$表示判断为真的声明。</p><p>其中$\alpha$是学习率（<strong>learning rate</strong>），它决定了我们沿着能让代价函数下降程度最大的方向向下迈出的步子有多大，在批量梯度下降中，我们每一次都<strong>同时</strong>让<strong>所有的参数减去学习速率乘以代价函数的导数</strong>，同时更新$\theta_0$,$\theta_1$。</p><p><img src="https://i.loli.net/2019/04/30/5cc832d48a96d.jpg" alt></p><p>在梯度下降算法中，还有一个更微妙的问题，梯度下降中，我们要更新$\theta_0$和$\theta_1$ ，当 $j=0$ 和$j=1$时，会产生更新，所以你将更新$J\left( \theta_0 \right)$和$J\left( \theta_1 \right)$。实现梯度下降算法的微妙之处是，在这个表达式中，如果你要更新这个等式，你需要<strong>同时更新$\theta_0$和$\theta_1$</strong>，我的意思是在这个等式中，我们要这样更新：</p><p>$\theta_0$:= $\theta_0$ ，并更新$\theta_1$:= $\theta_1$。</p><p>实现方法是：你应该计算公式右边的部分，通过那一部分计算出$\theta_0$和$\theta_1$的值，然后同时更新$\theta_0$和$\theta_1$。在梯度下降算法中，这是正确实现同时更新的方法。我不打算解释为什么你需要同时更新，同时更新是梯度下降中的一种常用方法。我们之后会讲到，同步更新是更自然的实现方法。当人们谈到梯度下降时，他们的意思就是同步更新。</p><p>在接下来的视频中，我们要进入这个微分项的细节之中。我已经写了出来但没有真正定义，如果你已经修过微积分课程，如果你熟悉偏导数和导数，这其实就是这个微分项：</p><script type="math/tex; mode=display">\alpha \frac{\partial }{\partial \theta_0}J(\theta_0,\theta_1)</script><script type="math/tex; mode=display">\alpha \frac{\partial }{\partial \theta_1}J(\theta_0,\theta_1)</script><p>如果你不熟悉微积分，不用担心，即使你之前没有看过微积分，或者没有接触过偏导数，在接下来的视频中，你会得到一切你需要知道，如何计算这个微分项的知识。</p><h3 id="梯度下降的直观理解"><a href="#梯度下降的直观理解" class="headerlink" title="梯度下降的直观理解"></a>梯度下降的直观理解</h3><p><img src="https://i.loli.net/2019/04/30/5cc832d8987ff.jpg" alt="image-20190411163204029"></p><p>梯度下降就是为了找到代价函数梯度最小的位置，也就是极小值，每次都要使$\theta$越来越接近0。</p><p>$\alpha$作为学习率，是每次梯度下降的步长，太小容易导致梯度下降太慢，太大容易导致梯度下降错过最小值，可能无法收敛，甚至分散。</p><p><img src="https://i.loli.net/2019/04/30/5cc832dd6ab33.jpg" alt="image-20190411164605244"></p><p>随着我接近最低点，我的导数越来越接近零，所以，梯度下降一步后，新的导数的改变会变小一点点。所以<strong>我们即使用固定的学习率$\alpha$，我们也可以最终收敛到局部最小值。</strong></p><p>在梯度下降法中，当我们接近局部最低点时，梯度下降法会自动采取更小的幅度，这是因为当我们接近局部最低点时，很显然在局部最低时导数等于零，所以当我们接近局部最低时，导数值会自动变得越来越小，所以梯度下降将自动采取较小的幅度，这就是梯度下降的做法。所以实际上没有必要再另外减小$\alpha$。</p><p>这就是梯度下降算法，你可以用它来最小化任何代价函数$J$，不只是线性回归中的代价函数$J$。</p><h3 id="梯度下降的线性回归"><a href="#梯度下降的线性回归" class="headerlink" title="梯度下降的线性回归"></a>梯度下降的线性回归</h3><p>在以前的视频中我们谈到关于梯度下降算法，梯度下降是很常用的算法。在这段视频中，我们要将梯度下降和代价函数结合。我们将用到此算法，并将其应用于具体的拟合直线的线性回归算法里。</p><p><img src="https://i.loli.net/2019/04/30/5cc832e211dd3.jpg" alt="image-20190411170353256"></p><script type="math/tex; mode=display">\frac{\partial}{\partial \theta_j}J(\theta_0,\theta_1)=\frac{\partial}{\partial \theta_j} \frac{1}{2m}\sum\limits_{i=1}^m(h_{\theta}(x^{(i)})-y^{(i)})^2\\=\frac{\partial}{\partial \theta_j}J(\theta_0,\theta_1)=\frac{\partial}{\partial \theta_j} \frac{1}{2m}\sum\limits_{i=1}^m(\theta_0+\theta_1x^{(i)}-y^{(i)})^2</script><p>也就是对于$j$取$0,1$时：</p><script type="math/tex; mode=display">j=0:\frac{\partial}{\partial \theta_0}J(\theta_0,\theta_1)=\frac{1}{m}\sum\limits_{i=1}^m(h_{\theta}(x^{(i)})-y^{(i)})</script><script type="math/tex; mode=display">j=1:\frac{\partial}{\partial \theta_1}J(\theta_0,\theta_1)=\frac{1}{m}\sum\limits_{i=1}^m(h_{\theta}(x^{(i)})-y^{(i)})x^{(i)}</script><p>我们可以把梯度下降算法写成下面这个样子：</p><p><img src="https://i.loli.net/2019/04/30/5cc832e73a42e.jpg" alt="image-20190411172420834"></p><p>我们刚刚使用的算法，有时也称为批量梯度下降。实际上，在机器学习中，通常不太会给算法起名字，但这个名字”<strong>批量梯度下降</strong>”，指的是在梯度下降的每一步中，我们都用到了所有的训练样本，在梯度下降中，在计算微分求导项时，我们需要进行求和运算，所以，在每一个单独的梯度下降中，我们最终都要计算这样一个东西，这个项需要对所有$m$个训练样本求和。因此，批量梯度下降法这个名字说明了我们需要考虑所有这一”批”训练样本，而事实上，有时也有其他类型的梯度下降法，不是这种”批量”型的，不考虑整个的训练集，而是每次只关注训练集中的一些小的子集。</p><p>如果你之前学过线性代数，有些同学之前可能已经学过高等线性代数，你应该知道有一种计算代价函数$J$最小值的数值解法，不需要梯度下降这种迭代算法。在后面的课程中，我们也会谈到这个方法，它可以在不需要多步梯度下降的情况下，也能解出代价函数$J$的最小值，这是另一种称为正规方程(<strong>normal equations</strong>)的方法。实际上在数据量较大的情况下，梯度下降法比正规方程要更适用一些。</p><h3 id="What’s-next"><a href="#What’s-next" class="headerlink" title="What’s next"></a>What’s next</h3><p>在接下来的一组视频中，我会对线性代数进行一个快速的复习回顾。</p><p>通过它们，你可以实现和使用更强大的线性回归模型。事实上，线性代数不仅仅在线性回归中应用广泛，它其中的矩阵和向量将有助于帮助我们实现之后更多的机器学习模型，并在计算上更有效率。正是因为这些矩阵和向量提供了一种有效的方式来组织大量的数据，特别是当我们处理巨大的训练集时，如果你不熟悉线性代数，如果你觉得线性代数看上去是一个复杂、可怕的概念，特别是对于之前从未接触过它的人，不必担心，事实上，为了实现机器学习算法，我们只需要一些非常非常基础的线性代数知识。通过接下来几个视频，你可以很快地学会所有你需要了解的线性代数知识。具体来说，为了帮助你判断是否有需要学习接下来的一组视频，我会讨论什么是矩阵和向量，谈谈如何加、减 、乘矩阵和向量，讨论逆矩阵和转置矩阵的概念。</p><h2 id="线性代数回顾-Linear-Algebra-Review"><a href="#线性代数回顾-Linear-Algebra-Review" class="headerlink" title="线性代数回顾(Linear Algebra Review)"></a>线性代数回顾(Linear Algebra Review)</h2><h3 id="矩阵和向量"><a href="#矩阵和向量" class="headerlink" title="矩阵和向量"></a>矩阵和向量</h3><p>矩阵：二维数组、向量：一维数组</p><p>矩阵的维数即行数×列数</p><p>矩阵元素（矩阵项）：</p><script type="math/tex; mode=display">A=\left[\begin{matrix}1402 & 191 \\ 1371 & 821 \\ 949 & 1437 \\ 147 & 1448\end{matrix}\right]</script><p>$A_{ij}$指第$i$行，第$j$列的元素。</p><p>向量是一种特殊的矩阵，只有一列，讲义中的向量一般都是列向量，如： </p><script type="math/tex; mode=display">y=\left[ \begin{matrix} 460 \\ 232 \\ 315 \\ 178 \end{matrix} \right]</script><p>为<strong>四维</strong>列向量（4×1）。</p><p>一般我们默认使用1索引：</p><p><img src="https://i.loli.net/2019/04/30/5cc8331283f50.jpg" alt="image-20190411225117460"></p><p>大写字母我们一般用来表示矩阵，例如矩阵$A$，小写字母用来表示数字。</p><h3 id="加法和标量乘法"><a href="#加法和标量乘法" class="headerlink" title="加法和标量乘法"></a>加法和标量乘法</h3><p>矩阵的加法：行列数相等的可以加。</p><p>例如：</p><script type="math/tex; mode=display">\left[\begin{matrix}1&0 \\ 2&5 \\ 3&1\end{matrix}\right]+\left[\begin{matrix}4&0.5 \\ 2&5 \\ 0&1\end{matrix}\right]=\left[\begin{matrix}5&0.5 \\ 4&10 \\ 3&2\end{matrix}\right]</script><p>矩阵的乘法：每个元素都要乘</p><p>例如：</p><script type="math/tex; mode=display">3\times\left[\begin{matrix}1&0 \\ 2&5 \\ 3&1\end{matrix}\right]=\left[\begin{matrix}3&0 \\ 6&15 \\ 9&3\end{matrix}\right]=\left[\begin{matrix}1&0 \\ 2&5 \\ 3&1\end{matrix}\right]\times3</script><script type="math/tex; mode=display">\left[\begin{matrix}4&0\\6&3\end{matrix}\right]/4=\frac{1}{4}\times\left[\begin{matrix}4&0\\6&3\end{matrix}\right]=\left[\begin{matrix}1&0\\\frac{3}{2}&\frac{3}{4}\end{matrix}\right]</script><h3 id="矩阵向量乘法"><a href="#矩阵向量乘法" class="headerlink" title="矩阵向量乘法"></a>矩阵向量乘法</h3><p>矩阵和向量的乘法如下：$m×n$的矩阵乘以$n×1$的向量，得到的是$m×1$的向量</p><script type="math/tex; mode=display">\left[\begin{matrix}1&3\\4&0\\2&1\end{matrix}\right]\left[\begin{matrix}1\\5\end{matrix}\right]=\left[\begin{matrix}16\\4\\7\end{matrix}\right]</script><h3 id="矩阵乘法"><a href="#矩阵乘法" class="headerlink" title="矩阵乘法"></a>矩阵乘法</h3><p>矩阵乘法：</p><p>$m×n$矩阵乘以$n×o$矩阵，变成$m×o$矩阵。</p><p><img src="https://i.loli.net/2019/04/30/5cc83318dd20a.jpg" alt="image-20190412182704551"></p><h3 id="矩阵乘法的性质"><a href="#矩阵乘法的性质" class="headerlink" title="矩阵乘法的性质"></a>矩阵乘法的性质</h3><p>矩阵的乘法不满足交换律：$A×B≠B×A$</p><p>矩阵的乘法满足结合律。即：$A×(B×C)=(A×B)×C$</p><p>单位矩阵：在矩阵的乘法中，有一种矩阵起着特殊的作用，如同数的乘法中的1,我们称这种矩阵为单位矩阵．它是个方阵，一般用 $I$ 或者 $E$ 表示，本讲义都用 $I$ 代表单位矩阵，从左上角到右下角的对角线（称为主对角线）上的元素均为1以外全都为0。如：</p><p>$AA^{-1}=A^{-1} A=I$</p><p>对于单位矩阵，有$A\cdot I=I\cdot A=A$</p><h3 id="矩阵逆、转置"><a href="#矩阵逆、转置" class="headerlink" title="矩阵逆、转置"></a>矩阵逆、转置</h3><p>矩阵的逆：如矩阵$A$是一个$m×m$矩阵（方阵），如果有逆矩阵，则：$AA^{-1}=A^{-1}A=I$</p><p>矩阵的转置：设$A$为$m×n$阶矩阵（即$m$行$n$列），第$i $行$j $列的元素是$a(i,j)$，即：$A=a(i,j)$</p><p>定义$A$的转置为这样一个$n×m$阶矩阵$B$，满足$B=a(j,i)$，即 $b (i,j)=a(j,i)$（$B$的第$i$行第$j$列元素是$A$的第$j$行第$i$列元素），记$A^T=B$。(有些书记为A’=B）</p><p>直观来看，将$A$的所有元素绕着一条从第1行第1列元素出发的右下方45度的射线作镜面反转，即得到$A$的转置。</p><p>例：</p><script type="math/tex; mode=display">\left| \begin{matrix} a& b \\ c& d \\ e& f \end{matrix} \right|^{T}=\left|\begin{matrix} a& c & e \\ b& d & f \end{matrix} \right|</script><p>矩阵的转置基本性质:</p><script type="math/tex; mode=display">\left( A\pm B \right)^{T}=A^T\pm B^T\\ \left( A\times B \right)^{T}=B^{T}\times A^{T}\\\left( A^T \right)^{T}=A \\ \left( KA \right)^{T}=KA^{T}</script><p><strong>matlab</strong>中矩阵转置：直接打一撇，<code>x=y&#39;</code>。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;「吴恩达机器学习」（一）&quot;&gt;&lt;a href=&quot;#「吴恩达机器学习」（一）&quot; class=&quot;headerlink&quot; title=&quot;「吴恩达机器学习」（一）&quot;&gt;&lt;/a&gt;「吴恩达机器学习」（一）&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;什么是机器学习？&lt;/li&gt;
&lt;li&gt;什么是监督学习算法？&lt;/li&gt;
&lt;li&gt;什么是非监督学习算法？&lt;/li&gt;
&lt;li&gt;什么是单变量线性回归？&lt;/li&gt;
&lt;li&gt;线性代数知识点回顾&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://jacksonleon.gitee.io/categories/Machine-Learning/"/>
    
      <category term="Andrew NG" scheme="https://jacksonleon.gitee.io/categories/Machine-Learning/Andrew-NG/"/>
    
    
      <category term="Machine Learning" scheme="https://jacksonleon.gitee.io/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>LaTeX Note</title>
    <link href="https://jacksonleon.gitee.io/posts/1260497769.html"/>
    <id>https://jacksonleon.gitee.io/posts/1260497769.html</id>
    <published>2019-03-19T12:27:25.000Z</published>
    <updated>2019-03-19T12:27:25.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LaTeX-Note"><a href="#LaTeX-Note" class="headerlink" title="$\LaTeX{}$ Note"></a>$\LaTeX{}$ Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>LaTeX Note</p></blockquote><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h3><p>MacTex 安装包非常大，而且自带了很多图形应用。但是我更喜欢用命令行，而且MacTex 还有 no-gui 版本，省去安装各种缺少的包。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">brew cask install mactex-no-gui</span><br><span class="line"><span class="comment"># 添加到环境变量</span></span><br><span class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/texlive/2018/bin/x86_64-darwin:<span class="variable">$PATH</span></span><br><span class="line"><span class="comment"># 换源</span></span><br><span class="line">sudo tlmgr update --self --repository http://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/tlnet</span><br><span class="line">sudo tlmgr install latexmk --repository http://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/tlnet</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xelatex test.tex</span><br></pre></td></tr></table></figure><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><h3 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h3><ul><li><p>二元运算符</p><p>| 符号             |        公式        | 符号        | 公式          |<br>| ———————— | ———————— | —————- | ——————- |<br>| $\triangleleft$  | <code>\triangleleft</code>  | $\times$    | <code>\times</code>    |<br>| $\bigtriangleup$ | <code>\bigtriangleup</code> | $\div$      | <code>\div</code>      |<br>| $\bullet$        |    <code>\bullet</code>     | $\cdot$     | <code>\cdot</code>     |<br>| $\ast$           |      <code>\ast</code>      | $\otimes$   | <code>\otimes</code>   |<br>| $\circ$          |     <code>\circ</code>      | $\setminus$ | <code>\setminus</code> |</p></li></ul><ul><li><p>矩阵</p><script type="math/tex; mode=display">A=\left[\begin{matrix}1402 & 191 \\ 1371 & 821 \\ 949 & 1437 \\ 147 & 1448\end{matrix}\right]</script></li><li><p>数学公式</p><script type="math/tex; mode=display">\frac{\partial}{\partial \theta_j}J(\theta_0,\theta_1)=\frac{\partial}{\partial \theta_j} \frac{1}{2m}\sum\limits_{i=1}^m(h_{\theta}(x^{(i)})-y^{(i)})^2\\=\frac{\partial}{\partial \theta_j}J(\theta_0,\theta_1)=\frac{\partial}{\partial \theta_j} \frac{1}{2m}\sum\limits_{i=1}^m(\theta_0+\theta_1x^{(i)}-y^{(i)})^2</script></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LaTeX-Note&quot;&gt;&lt;a href=&quot;#LaTeX-Note&quot; class=&quot;headerlink&quot; title=&quot;$\LaTeX{}$ Note&quot;&gt;&lt;/a&gt;$\LaTeX{}$ Note&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;LaTeX Note&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="LaTeX" scheme="https://jacksonleon.gitee.io/categories/LaTeX/"/>
    
    
      <category term="LaTeX" scheme="https://jacksonleon.gitee.io/tags/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title>「SMTC」0007.py</title>
    <link href="https://jacksonleon.gitee.io/posts/4089488553.html"/>
    <id>https://jacksonleon.gitee.io/posts/4089488553.html</id>
    <published>2019-02-05T03:51:54.000Z</published>
    <updated>2019-02-05T03:51:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="「SMTC」0007-py"><a href="#「SMTC」0007-py" class="headerlink" title="「SMTC」0007.py"></a>「SMTC」0007.py</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>Show me the code 第0007题 Python版</p><a href="/posts/724513738.html" title="完整题目">完整题目</a></blockquote><a id="more"></a><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p><strong>第 0007 题：</strong> 有个目录，里面是你自己写过的程序，统计一下你写过多少行代码。包括空行和注释，但是要分别列出来。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>遍历文件夹下的文件</li><li>获取后缀名，找到py文件</li><li>遍历文件的每一行</li><li>如果是空的则说明是空行</li><li>用正则匹配<code>#</code>注释符号</li><li>统计行数输出</li></ol><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_code</span><span class="params">(filesPath)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(filesPath):</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="comment"># 正则匹配#</span></span><br><span class="line">    exp_re = re.compile(<span class="string">'^#.*'</span>)</span><br><span class="line">    fileList = os.listdir(filesPath)</span><br><span class="line">    print(<span class="string">'&#123;0&#125;\t&#123;1&#125;\t&#123;2&#125;\t&#123;3&#125;'</span>.format(<span class="string">'fileName'</span>,</span><br><span class="line">                                      <span class="string">'all_lines'</span>, <span class="string">'space_lines'</span>, <span class="string">'exp_lines'</span>))</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> fileList:</span><br><span class="line">        filePath = os.path.join(filesPath, file)</span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(filePath) <span class="keyword">and</span> os.path.splitext(filePath)[<span class="number">1</span>] == <span class="string">'.py'</span>:</span><br><span class="line">            <span class="keyword">with</span> open(filePath) <span class="keyword">as</span> code:</span><br><span class="line">                all_lines = <span class="number">0</span></span><br><span class="line">                space_lines = <span class="number">0</span></span><br><span class="line">                exp_lines = <span class="number">0</span></span><br><span class="line">                <span class="keyword">for</span> line <span class="keyword">in</span> code.readlines():</span><br><span class="line">                    all_lines += <span class="number">1</span></span><br><span class="line">                    <span class="comment"># 空行</span></span><br><span class="line">                    <span class="keyword">if</span> line.strip() == <span class="string">''</span>:</span><br><span class="line">                        space_lines += <span class="number">1</span></span><br><span class="line">                    <span class="comment"># 注释</span></span><br><span class="line">                    exp = exp_re.findall(line.strip())</span><br><span class="line">                    <span class="keyword">if</span> exp:</span><br><span class="line">                        exp_lines += <span class="number">1</span></span><br><span class="line">            print(<span class="string">'&#123;0&#125;\t\t&#123;1&#125;\t\t&#123;2&#125;\t\t&#123;3&#125;'</span>.format(</span><br><span class="line">                file, all_lines, space_lines, exp_lines))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    parse_code(<span class="string">'./SMTC'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;「SMTC」0007-py&quot;&gt;&lt;a href=&quot;#「SMTC」0007-py&quot; class=&quot;headerlink&quot; title=&quot;「SMTC」0007.py&quot;&gt;&lt;/a&gt;「SMTC」0007.py&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Show me the code 第0007题 Python版&lt;/p&gt;
&lt;a href=&quot;/posts/724513738.html&quot; title=&quot;完整题目&quot;&gt;完整题目&lt;/a&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python" scheme="https://jacksonleon.gitee.io/categories/Python/"/>
    
      <category term="SMTC" scheme="https://jacksonleon.gitee.io/categories/Python/SMTC/"/>
    
    
      <category term="Python" scheme="https://jacksonleon.gitee.io/tags/Python/"/>
    
      <category term="SMTC" scheme="https://jacksonleon.gitee.io/tags/SMTC/"/>
    
  </entry>
  
  <entry>
    <title>「Her」</title>
    <link href="https://jacksonleon.gitee.io/posts/800396456.html"/>
    <id>https://jacksonleon.gitee.io/posts/800396456.html</id>
    <published>2019-02-04T14:41:56.000Z</published>
    <updated>2019-02-04T14:41:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="「Her」"><a href="#「Her」" class="headerlink" title="「Her」"></a><center>「Her」</center></h1><a id="more"></a><div class="note primary">            <p>新的一年，宝贝儿我们一起加油哦！</p>          </div><p><img src="https://raw.githubusercontent.com/JacksonLeon/pics/master/4.jpg" alt="4"></p><p><img src="https://raw.githubusercontent.com/JacksonLeon/pics/master/IMG_20190105_164827-COLLAGE.jpg" alt="4"></p><p><img src="https://raw.githubusercontent.com/JacksonLeon/pics/master/IMG_20190109_123220.jpg" alt="4"></p><p><img src="https://raw.githubusercontent.com/JacksonLeon/pics/master/IMG_20190109_123240.jpg" alt="4"></p><p><img src="https://raw.githubusercontent.com/JacksonLeon/pics/master/IMG_20190108_164244-COLLAGE.jpg" alt="4"></p><p><img src="https://raw.githubusercontent.com/JacksonLeon/pics/master/5.jpg" alt="4"></p><p><img src="https://raw.githubusercontent.com/JacksonLeon/pics/master/6.jpg" alt="4"></p><p><img src="https://raw.githubusercontent.com/JacksonLeon/pics/master/11.jpg" alt="4"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;「Her」&quot;&gt;&lt;a href=&quot;#「Her」&quot; class=&quot;headerlink&quot; title=&quot;「Her」&quot;&gt;&lt;/a&gt;&lt;center&gt;「Her」&lt;/center&gt;&lt;/h1&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2019猪年快乐</title>
    <link href="https://jacksonleon.gitee.io/posts/1470630020.html"/>
    <id>https://jacksonleon.gitee.io/posts/1470630020.html</id>
    <published>2019-02-04T13:31:12.000Z</published>
    <updated>2019-02-04T13:31:12.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2019㊗️大家🐷年大吉！"><a href="#2019㊗️大家🐷年大吉！" class="headerlink" title="**2019㊗️大家🐷年大吉！**"></a><center>**2019㊗️大家🐷年大吉！**</center></h1><a id="more"></a><p><img src="https://i.loli.net/2019/04/30/5cc83208169b1.jpg" alt="pig_text"></p><p><a href="https://github.com/JacksonLeon/pic2text" target="_blank" rel="noopener">附上代码，欢迎Fork</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;2019㊗️大家🐷年大吉！&quot;&gt;&lt;a href=&quot;#2019㊗️大家🐷年大吉！&quot; class=&quot;headerlink&quot; title=&quot;**2019㊗️大家🐷年大吉！**&quot;&gt;&lt;/a&gt;&lt;center&gt;**2019㊗️大家🐷年大吉！**&lt;/center&gt;&lt;/h1&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>「SMTC」0006.py</title>
    <link href="https://jacksonleon.gitee.io/posts/1266467788.html"/>
    <id>https://jacksonleon.gitee.io/posts/1266467788.html</id>
    <published>2019-02-04T08:07:30.000Z</published>
    <updated>2019-02-04T08:07:33.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="「SMTC」0006-py"><a href="#「SMTC」0006-py" class="headerlink" title="「SMTC」0006.py"></a>「SMTC」0006.py</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>Show me the code 第0006题 Python版</p><a href="/posts/724513738.html" title="完整题目">完整题目</a></blockquote><a id="more"></a><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p><strong>第 0006 题：</strong> 你有一个目录，放了你一个月的日记，都是 txt，为了避免分词的问题，假设内容都是英文，请统计出你认为每篇日记最重要的词。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>首先英文可以避免分词的问题，中文可能就需要引入终止词</li><li>需要对日记进行清洗，去除掉标点符号等</li><li>对于每篇日记最重要的词，应该是除了正常使用的代词外的词频最高的名词或者形容词</li><li>这就可以用到第0004题中的Solution</li></ol><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GetTF</span><span class="params">(filesPath)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(filesPath):</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    files=os.listdir(filesPath)</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        filePath=os.path.join(filesPath,file)</span><br><span class="line">        <span class="comment"># 判断是否为文件且文件后缀名是否为.txt</span></span><br><span class="line">        <span class="comment"># 去除其他文件的影响</span></span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(filePath) <span class="keyword">and</span> os.path.splitext(filePath)[<span class="number">1</span>]==<span class="string">'.txt'</span>:</span><br><span class="line">            <span class="keyword">with</span> open(filePath) <span class="keyword">as</span> text:</span><br><span class="line">                content=text.read()</span><br><span class="line">                <span class="comment"># 去除标点符号</span></span><br><span class="line">                <span class="keyword">for</span> char <span class="keyword">in</span> <span class="string">'-.,\n'</span>:</span><br><span class="line">                    content=content.replace(char, <span class="string">' '</span>)</span><br><span class="line">                content=content.lower()</span><br><span class="line">                wordList=content.split()</span><br><span class="line">                wordDic=&#123;&#125;</span><br><span class="line">                <span class="comment"># 去除无用词</span></span><br><span class="line">                exceptWord=[<span class="string">'the'</span>,<span class="string">'a'</span>,<span class="string">'to'</span>,<span class="string">'and'</span>,<span class="string">'of'</span>]</span><br><span class="line">                <span class="keyword">for</span> word <span class="keyword">in</span> wordList:</span><br><span class="line">                    <span class="keyword">if</span> word <span class="keyword">in</span> exceptWord:</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">if</span> word <span class="keyword">in</span> wordDic:</span><br><span class="line">                        wordDic[word]+=<span class="number">1</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        wordDic[word]=<span class="number">1</span></span><br><span class="line">                <span class="comment"># 倒序排序</span></span><br><span class="line">                res=sorted(wordDic.items(),key=<span class="keyword">lambda</span> t: t[<span class="number">1</span>],reverse=<span class="literal">True</span>)</span><br><span class="line">                print(<span class="string">"the most important word in &#123;0&#125; is &#123;1&#125;"</span>.format(filePath,res[<span class="number">0</span>][<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    GetTF(<span class="string">'/Users/lau/Documents/Coding/Python/SMTC/source/0006'</span>)</span><br></pre></td></tr></table></figure><p><strong>Result：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">the most important word in /Users/lau/Documents/Coding/Python/SMTC/source/0006/3.txt is language</span><br><span class="line">the most important word in /Users/lau/Documents/Coding/Python/SMTC/source/0006/2.txt is based</span><br><span class="line">the most important word in /Users/lau/Documents/Coding/Python/SMTC/source/0006/1.txt is programming</span><br></pre></td></tr></table></figure><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><ol><li><p><code>os.path.splitext(path)</code></p><p>Split the pathname <em>path</em> into a pair <code>(root, ext)</code> such that <code>root + ext == path</code>, and <em>ext</em> is empty or begins with a period and contains at most one period. Leading periods on the basename are ignored; <code>splitext(&#39;.cshrc&#39;)</code> returns<code>(&#39;.cshrc&#39;, &#39;&#39;)</code>.</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;「SMTC」0006-py&quot;&gt;&lt;a href=&quot;#「SMTC」0006-py&quot; class=&quot;headerlink&quot; title=&quot;「SMTC」0006.py&quot;&gt;&lt;/a&gt;「SMTC」0006.py&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Show me the code 第0006题 Python版&lt;/p&gt;
&lt;a href=&quot;/posts/724513738.html&quot; title=&quot;完整题目&quot;&gt;完整题目&lt;/a&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python" scheme="https://jacksonleon.gitee.io/categories/Python/"/>
    
      <category term="SMTC" scheme="https://jacksonleon.gitee.io/categories/Python/SMTC/"/>
    
    
      <category term="Python" scheme="https://jacksonleon.gitee.io/tags/Python/"/>
    
      <category term="SMTC" scheme="https://jacksonleon.gitee.io/tags/SMTC/"/>
    
  </entry>
  
  <entry>
    <title>Python Library</title>
    <link href="https://jacksonleon.gitee.io/posts/3101691907.html"/>
    <id>https://jacksonleon.gitee.io/posts/3101691907.html</id>
    <published>2019-01-29T14:42:51.000Z</published>
    <updated>2019-02-04T08:07:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python-Library"><a href="#Python-Library" class="headerlink" title="Python Library"></a>Python Library</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>汇总使用过的Python库</p><p>简单记一下模块功能以及函数原型</p></blockquote><a id="more"></a><h2 id="Pillow"><a href="#Pillow" class="headerlink" title="Pillow"></a>Pillow</h2><p><a href="https://pillow.readthedocs.io/en/stable/" target="_blank" rel="noopener">官方文档</a></p><ol><li><p><code>Image</code>Module</p><blockquote><p>Open, rotate, and display an image (using the default viewer)</p></blockquote><p><code>PIL.Image.open(fp, mode=&#39;r’)</code><a href="https://pillow.readthedocs.io/en/stable/_modules/PIL/Image.html#open" target="_blank" rel="noopener">[source]</a></p><p>Opens and identifies the given image file.</p><p>This is a lazy operation; this function identifies the file, but the file remains open and the actual image data is not read from the file until you try to process the data (or call the <a href="https://pillow.readthedocs.io/en/stable/reference/Image.html#PIL.Image.Image.load" target="_blank" rel="noopener"><code>load()</code></a>method). See <a href="https://pillow.readthedocs.io/en/stable/reference/Image.html#PIL.Image.new" target="_blank" rel="noopener"><code>new()</code></a>. See <a href="https://pillow.readthedocs.io/en/stable/reference/open_files.html#file-handling" target="_blank" rel="noopener">File Handling in Pillow</a>.</p><p>| Parameters: | <strong>fp</strong> – A filename (string), pathlib.Path object or a file object. The file object must implement <code>read()</code>, <code>seek()</code>, and <code>tell()</code> methods, and be opened in binary mode.<strong>mode</strong> – The mode. If given, this argument must be “r”. |<br>| —————- | —————————————————————————————— |<br>| Returns:    | An <a href="https://pillow.readthedocs.io/en/stable/reference/Image.html#PIL.Image.Image" target="_blank" rel="noopener"><code>Image</code></a> object. |<br>| Raises:     | <strong>IOError</strong> – If the file cannot be found, or the image cannot be opened and identified. |</p></li><li><p><code>ImageDraw</code>Module</p><blockquote><p>The <code>ImageDraw</code> module provides simple 2D graphics for <a href="https://pillow.readthedocs.io/en/stable/reference/Image.html#PIL.Image.Image" target="_blank" rel="noopener"><code>Image</code></a> objects. You can use this module to create new images, annotate or retouch existing images, and to generate graphics on the fly for web use.</p></blockquote><p>class<code>PIL.ImageDraw.Draw(im, mode=None)</code></p><p>Creates an object that can be used to draw in the given image.</p><p>Note that the image will be modified in place.</p><p>Parameters:  </p><ul><li><p><strong>im</strong> </p></li><li><p>The image to draw in.<strong>mode</strong> – Optional mode to use for color values. For RGB images, this argument can be RGB or RGBA (to blend the drawing into the image). For all other modes, this argument must be the same as the image mode. If omitted, the mode defaults to the mode of the image.</p></li></ul><p><code>PIL.ImageDraw.ImageDraw.text(xy, text, fill=None, font=None, anchor=None, spacing=0, align=&quot;left&quot;, direction=None, features=None)</code></p><p>Draws the string at the given position.</p><ul><li><p><strong>xy</strong> – Top left corner of the text.</p></li><li><p><strong>text</strong> – Text to be drawn. If it contains any newline characters, the text is passed on to multiline_text()</p></li><li><p><strong>fill</strong> – Color to use for the text.</p></li><li><p><strong>font</strong> – An <code>ImageFont</code> instance.</p></li><li><p><strong>spacing</strong> – If the text is passed on to multiline_text(), the number of pixels between lines.</p></li><li><p><strong>align</strong> – If the text is passed on to multiline_text(), “left”, “center” or “right”.</p></li><li><p>direction </p><p>Direction of the text. It can be ‘rtl’ (right to left), ‘ltr’ (left to right) or ‘ttb’ (top to bottom). Requires libraqm.</p><p><em>New in version 4.2.0.</em></p></li><li><p>features</p><p>A list of OpenType font features to be used during text layout. This is usually used to turn on optional font features that are not enabled by default, for example ‘dlig’ or ‘ss01’, but can be also used to turn off default font features for example ‘-liga’ to disable ligatures or ‘-kern’ to disable kerning. To get all supported features, see<a href="https://docs.microsoft.com/en-us/typography/opentype/spec/featurelist" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/typography/opentype/spec/featurelist</a>Requires libraqm.</p><p><em>New in version 4.2.0.</em></p></li></ul></li><li><p><code>ImageFont</code>Module</p><blockquote><p>The <code>ImageFont</code> module defines a class with the same name. Instances of this class store bitmap fonts, and are used with the <code>PIL.ImageDraw.Draw.text()</code> method.</p></blockquote><p><code>PIL.ImageFont.truetype(font=None, size=10, index=0, encoding=&#39;&#39;, layout_engine=None)</code></p><p>Load a TrueType or OpenType font from a file or file-like object, and create a font object. This function loads a font object from the given file or file-like object, and creates a font object for a font of the given size.</p><p>This function requires the _imagingft service.</p><ul><li><strong>font</strong> – A filename or file-like object containing a TrueType font. Under Windows, if the file is not found in this filename, the loader also looks in Windows <code>fonts/</code>directory.</li><li><strong>size</strong> – The requested size, in points.</li><li><strong>index</strong> – Which font face to load (default is first available face).</li><li><strong>encoding</strong> – Which font encoding to use (default is Unicode). Common encodings are “unic” (Unicode), “symb” (Microsoft Symbol), “ADOB” (Adobe Standard), “ADBE” (Adobe Expert), and “armn” (Apple Roman). See the FreeType documentation for more information.</li><li><strong>layout_engine</strong> – Which layout engine to use, if available:ImageFont.LAYOUT_BASIC or ImageFont.LAYOUT_RAQM.</li></ul><h2 id="collections"><a href="#collections" class="headerlink" title="collections"></a><a href="https://docs.python.org/2/library/collections.html#module-collections" target="_blank" rel="noopener"><code>collections</code></a></h2></li><li><p><a href="https://docs.python.org/2/library/collections.html#collections.Counter" target="_blank" rel="noopener"><code>Counter</code></a></p><blockquote><p>A counter tool is provided to support convenient and rapid tallies. For example:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; # Tally occurrences of words in a list</span><br><span class="line">&gt;&gt;&gt; cnt = Counter()</span><br><span class="line">&gt;&gt;&gt; for word in [&apos;red&apos;, &apos;blue&apos;, &apos;red&apos;, &apos;green&apos;, &apos;blue&apos;, &apos;blue&apos;]:</span><br><span class="line">...     cnt[word] += 1</span><br><span class="line">&gt;&gt;&gt; cnt</span><br><span class="line">Counter(&#123;&apos;blue&apos;: 3, &apos;red&apos;: 2, &apos;green&apos;: 1&#125;)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; # Find the ten most common words in Hamlet</span><br><span class="line">&gt;&gt;&gt; import re</span><br><span class="line">&gt;&gt;&gt; words = re.findall(r&apos;\w+&apos;, open(&apos;hamlet.txt&apos;).read().lower())</span><br><span class="line">&gt;&gt;&gt; Counter(words).most_common(10)</span><br><span class="line">[(&apos;the&apos;, 1143), (&apos;and&apos;, 966), (&apos;to&apos;, 762), (&apos;of&apos;, 669), (&apos;i&apos;, 631),</span><br><span class="line"> (&apos;you&apos;, 554),  (&apos;a&apos;, 546), (&apos;my&apos;, 514), (&apos;hamlet&apos;, 471), (&apos;in&apos;, 451)]</span><br></pre></td></tr></table></figure><ul><li><p><code>most_common</code>([<em>n</em>])</p><p>Return a list of the <em>n</em> most common elements and their counts from the most common to the least. If <em>n</em> is omitted or <code>None</code>, <a href="https://docs.python.org/2/library/collections.html#collections.Counter.most_common" target="_blank" rel="noopener"><code>most_common()</code></a> returns <em>all</em> elements in the counter. Elements with equal counts are ordered arbitrarily:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; Counter(&apos;abracadabra&apos;).most_common(3)</span><br><span class="line">[(&apos;a&apos;, 5), (&apos;r&apos;, 2), (&apos;b&apos;, 2)]</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="re"><a href="#re" class="headerlink" title="re"></a>re</h2><h2 id="bs4"><a href="#bs4" class="headerlink" title="bs4"></a>bs4</h2><h3 id="BeautifulSoup"><a href="#BeautifulSoup" class="headerlink" title="BeautifulSoup"></a>BeautifulSoup</h3><p>使用BeautifulSoup解析这段代码,能够得到一个 <code>BeautifulSoup</code> 的对象,并能按照标准的缩进格式的结构输出:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html_doc, <span class="string">'html.parser'</span>)</span><br><span class="line"></span><br><span class="line">print(soup.prettify())</span><br></pre></td></tr></table></figure><p>几个简单的浏览结构化数据的方法:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">soup.title</span><br><span class="line"><span class="comment"># &lt;title&gt;The Dormouse's story&lt;/title&gt;</span></span><br><span class="line"></span><br><span class="line">soup.title.name</span><br><span class="line"><span class="comment"># u'title'</span></span><br><span class="line"></span><br><span class="line">soup.title.string</span><br><span class="line"><span class="comment"># u'The Dormouse's story'</span></span><br><span class="line"></span><br><span class="line">soup.title.parent.name</span><br><span class="line"><span class="comment"># u'head'</span></span><br><span class="line"></span><br><span class="line">soup.p</span><br><span class="line"><span class="comment"># &lt;p class="title"&gt;&lt;b&gt;The Dormouse's story&lt;/b&gt;&lt;/p&gt;</span></span><br><span class="line"></span><br><span class="line">soup.p[<span class="string">'class'</span>]</span><br><span class="line"><span class="comment"># u'title'</span></span><br><span class="line"></span><br><span class="line">soup.a</span><br><span class="line"><span class="comment"># &lt;a class="sister" href="http://example.com/elsie" id="link1"&gt;Elsie&lt;/a&gt;</span></span><br><span class="line"></span><br><span class="line">soup.find_all(<span class="string">'a'</span>)</span><br><span class="line"><span class="comment"># [&lt;a class="sister" href="http://example.com/elsie" id="link1"&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class="sister" href="http://example.com/lacie" id="link2"&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class="sister" href="http://example.com/tillie" id="link3"&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.find(id=<span class="string">"link3"</span>)</span><br><span class="line"><span class="comment"># &lt;a class="sister" href="http://example.com/tillie" id="link3"&gt;Tillie&lt;/a&gt;</span></span><br></pre></td></tr></table></figure><p>从文档中找到所有<a>标签的链接:</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> link <span class="keyword">in</span> soup.find_all(<span class="string">'a'</span>):</span><br><span class="line">    print(link.get(<span class="string">'href'</span>))</span><br><span class="line">    <span class="comment"># http://example.com/elsie</span></span><br><span class="line">    <span class="comment"># http://example.com/lacie</span></span><br><span class="line">    <span class="comment"># http://example.com/tillie</span></span><br></pre></td></tr></table></figure><p>从文档中获取所有文字内容:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(soup.get_text())</span><br></pre></td></tr></table></figure><p>Beautiful Soup支持Python标准库中的HTML解析器,还支持一些第三方的解析器,其中一个是 <a href="http://lxml.de/" target="_blank" rel="noopener">lxml</a> .根据操作系统不同,可以选择下列方法来安装lxml:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install Python-lxml</span><br><span class="line">$ easy_install lxml</span><br><span class="line">$ pip install lxml</span><br></pre></td></tr></table></figure><p>另一个可供选择的解析器是纯Python实现的 <a href="http://code.google.com/p/html5lib/" target="_blank" rel="noopener">html5lib</a> , html5lib的解析方式与浏览器相同,可以选择下列方法来安装html5lib:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install Python-html5lib</span><br><span class="line">$ easy_install html5lib</span><br><span class="line">$ pip install html5lib</span><br></pre></td></tr></table></figure><p>下表列出了主要的解析器,以及它们的优缺点:</p><div class="table-container"><table><thead><tr><th>解析器</th><th>使用方法</th><th>优势</th><th>劣势</th></tr></thead><tbody><tr><td>Python标准库</td><td><code>BeautifulSoup(markup,&quot;html.parser&quot;)</code></td><td>Python的内置标准库执行速度适中文档容错能力强</td><td>Python 2.7.3 or 3.2.2)前 的版本中文档容错能力差</td></tr><tr><td>lxml HTML 解析器</td><td><code>BeautifulSoup(markup,&quot;lxml&quot;)</code></td><td>速度快文档容错能力强</td><td>需要安装C语言库</td></tr><tr><td>lxml XML 解析器</td><td><code>BeautifulSoup(markup,[&quot;lxml-xml&quot;])</code> <code>BeautifulSoup(markup,&quot;xml&quot;)</code></td><td>速度快唯一支持XML的解析器</td><td>需要安装C语言库</td></tr><tr><td>html5lib</td><td><code>BeautifulSoup(markup,&quot;html5lib&quot;)</code></td><td>最好的容错性以浏览器的方式解析文档生成HTML5格式的文档</td><td>速度慢不依赖外部扩展</td></tr></tbody></table></div><h2 id="The-Worksheet-Class"><a href="#The-Worksheet-Class" class="headerlink" title="The Worksheet Class"></a>The Worksheet Class</h2><blockquote><p>The worksheet class represents an Excel worksheet. It handles operations such as writing data to cells or formatting worksheet layout.</p><p>A worksheet object isn’t instantiated directly. Instead a new worksheet is created by calling the <a href="https://xlsxwriter.readthedocs.io/workbook.html#add_worksheet" target="_blank" rel="noopener"><code>add_worksheet()</code></a> method from a <a href="https://xlsxwriter.readthedocs.io/workbook.html#Workbook" target="_blank" rel="noopener"><code>Workbook()</code></a> object:</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">workbook   = xlsxwriter.Workbook(<span class="string">'filename.xlsx'</span>)</span><br><span class="line"></span><br><span class="line">worksheet1 = workbook.add_worksheet()</span><br><span class="line">worksheet2 = workbook.add_worksheet()</span><br><span class="line"></span><br><span class="line">worksheet1.write(<span class="string">'A1'</span>, <span class="number">123</span>)</span><br><span class="line"></span><br><span class="line">workbook.close()</span><br></pre></td></tr></table></figure><ul><li><p><strong>worksheet.write()</strong></p><p><code>write</code>(<em>row</em>, <em>col</em>, <em>*args</em>)</p><p>Write generic data to a worksheet cell.</p><p>| Parameters: | <strong>row</strong> – The cell row (zero indexed).<strong>col</strong> – The cell column (zero indexed).<strong>*args</strong> – The additional args that are passed to the sub methods such as number, string and cell_format. |<br>| —————- | —————————————————————————————— |<br>| Returns:    | 0: Success.                                                  |<br>| Returns:    | -1: Row or column is out of worksheet bounds.                |<br>| Returns:    | Other values from the called write methods.                  |</p><p>Here are some examples:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">worksheet.write(<span class="number">0</span>, <span class="number">0</span>, <span class="string">'Hello'</span>)          <span class="comment"># write_string()</span></span><br><span class="line">worksheet.write(<span class="number">1</span>, <span class="number">0</span>, <span class="string">'World'</span>)          <span class="comment"># write_string()</span></span><br><span class="line">worksheet.write(<span class="number">2</span>, <span class="number">0</span>, <span class="number">2</span>)                <span class="comment"># write_number()</span></span><br><span class="line">worksheet.write(<span class="number">3</span>, <span class="number">0</span>, <span class="number">3.00001</span>)          <span class="comment"># write_number()</span></span><br><span class="line">worksheet.write(<span class="number">4</span>, <span class="number">0</span>, <span class="string">'=SIN(PI()/4)'</span>)   <span class="comment"># write_formula()</span></span><br><span class="line">worksheet.write(<span class="number">5</span>, <span class="number">0</span>, <span class="string">''</span>)               <span class="comment"># write_blank()</span></span><br><span class="line">worksheet.write(<span class="number">6</span>, <span class="number">0</span>, <span class="literal">None</span>)             <span class="comment"># write_blank()</span></span><br></pre></td></tr></table></figure><p><img src="https://xlsxwriter.readthedocs.io/_images/worksheet01.png" alt="_images/worksheet01.png"></p><p>Excel makes a distinction between data types such as strings, numbers, blanks, formulas and hyperlinks. To simplify the process of writing data to an XlsxWriter file the <code>write()</code> method acts as a general alias for several more specific methods:</p><ul><li><a href="https://xlsxwriter.readthedocs.io/worksheet.html#write_string" target="_blank" rel="noopener"><code>write_string()</code></a></li><li><a href="https://xlsxwriter.readthedocs.io/worksheet.html#write_number" target="_blank" rel="noopener"><code>write_number()</code></a></li><li><a href="https://xlsxwriter.readthedocs.io/worksheet.html#write_blank" target="_blank" rel="noopener"><code>write_blank()</code></a></li><li><a href="https://xlsxwriter.readthedocs.io/worksheet.html#write_formula" target="_blank" rel="noopener"><code>write_formula()</code></a></li><li><a href="https://xlsxwriter.readthedocs.io/worksheet.html#write_datetime" target="_blank" rel="noopener"><code>write_datetime()</code></a></li><li><a href="https://xlsxwriter.readthedocs.io/worksheet.html#write_boolean" target="_blank" rel="noopener"><code>write_boolean()</code></a></li><li><a href="https://xlsxwriter.readthedocs.io/worksheet.html#write_url" target="_blank" rel="noopener"><code>write_url()</code></a></li></ul></li></ul><h2 id="Enumerate"><a href="#Enumerate" class="headerlink" title="Enumerate"></a>Enumerate</h2><p>Enumerate is a built-in function of Python. Its usefulness can not be summarized in a single line. Yet most of the newcomers and even some advanced programmers are unaware of it. It allows us to loop over something and have an automatic counter. Here is an example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for counter, value in enumerate(some_list):</span><br><span class="line">    print(counter, value)</span><br></pre></td></tr></table></figure><p>And there is more! <code>enumerate</code> also accepts an optional argument which makes it even more useful.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">my_list = [&apos;apple&apos;, &apos;banana&apos;, &apos;grapes&apos;, &apos;pear&apos;]</span><br><span class="line">for c, value in enumerate(my_list, 1):</span><br><span class="line">    print(c, value)</span><br><span class="line"></span><br><span class="line"># Output:</span><br><span class="line"># 1 apple</span><br><span class="line"># 2 banana</span><br><span class="line"># 3 grapes</span><br><span class="line"># 4 pear</span><br></pre></td></tr></table></figure><p>The optional argument allows us to tell <code>enumerate</code> from where to start the index. You can also create tuples containing the index and list item using a list. Here is an example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">my_list = [<span class="string">'apple'</span>, <span class="string">'banana'</span>, <span class="string">'grapes'</span>, <span class="string">'pear'</span>]</span><br><span class="line">counter_list = list(enumerate(my_list, <span class="number">1</span>))</span><br><span class="line">print(counter_list)</span><br><span class="line"><span class="comment"># Output: [(1, 'apple'), (2, 'banana'), (3, 'grapes'), (4, 'pear')]</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Python-Library&quot;&gt;&lt;a href=&quot;#Python-Library&quot; class=&quot;headerlink&quot; title=&quot;Python Library&quot;&gt;&lt;/a&gt;Python Library&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;汇总使用过的Python库&lt;/p&gt;
&lt;p&gt;简单记一下模块功能以及函数原型&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python" scheme="https://jacksonleon.gitee.io/categories/Python/"/>
    
      <category term="Library" scheme="https://jacksonleon.gitee.io/categories/Python/Library/"/>
    
    
      <category term="Python" scheme="https://jacksonleon.gitee.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>「SMTC」0000.py</title>
    <link href="https://jacksonleon.gitee.io/posts/1847041040.html"/>
    <id>https://jacksonleon.gitee.io/posts/1847041040.html</id>
    <published>2019-01-29T13:09:32.000Z</published>
    <updated>2019-01-30T03:17:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="「SMTC」0000-py"><a href="#「SMTC」0000-py" class="headerlink" title="「SMTC」0000.py"></a>「SMTC」0000.py</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>Show me the code 第0000题 Python版</p><a href="/posts/724513738.html" title="完整题目">完整题目</a></blockquote><a id="more"></a><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>第 0000 题：将你的 QQ 头像（或者微博头像）右上角加上红色的数字，类似于微信未读信息数量那种提示效果。 类似于图中效果：</p><p><img src="https://camo.githubusercontent.com/d518d3929e4054ce2f9183b23e52908da7e5632d/687474703a2f2f692e696d6775722e636f6d2f736732646b75592e706e673f31" alt="头像"></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p><a href="https://pillow.readthedocs.io/en/4.0.x/reference/ImageDraw.html" target="_blank" rel="noopener">利用Pillow模块中提供的ImageDraw</a>在图片上画图形或者文字。</p><p>首先打开图片，使用<code>Image.open()</code>，在这之前需要导入<code>pillow</code>模块库，<code>import PIL</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Creates an object that can be used to draw in the given image.</span></span><br><span class="line"><span class="comment"># PIL.ImageDraw.Draw(im, mode=None)</span></span><br><span class="line">imgDraw = ImageDraw.Draw(image)</span><br></pre></td></tr></table></figure><p>设置填充字体以及颜色，获取图片大小，好设置填充位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 颜色</span></span><br><span class="line">fillColor = <span class="string">'#ff0000'</span></span><br><span class="line"><span class="comment"># 大小</span></span><br><span class="line">width, height = image.size</span><br><span class="line"><span class="comment"># 字体</span></span><br><span class="line">myFont = ImageFont.truetype(<span class="string">'/Library/Fonts/Tahoma.ttf'</span>, size=width//<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>接着<code>imgDraw.text((width-100, 0), &#39;hello&#39;, *fill*=fillColor, *font*=myFont)</code>，填充数字或者单词。</p><p>保存图片完成。</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> PIL</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageDraw</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageFont</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_num</span><span class="params">(imgName)</span>:</span></span><br><span class="line">    <span class="comment"># 打开图片</span></span><br><span class="line">    image = Image.open(imgName)</span><br><span class="line">    <span class="comment"># Creates an object that can be used to draw in the given image.</span></span><br><span class="line">    <span class="comment"># PIL.ImageDraw.Draw(im, mode=None)</span></span><br><span class="line">    imgDraw = ImageDraw.Draw(image)</span><br><span class="line">    <span class="comment"># 颜色</span></span><br><span class="line">    fillColor = <span class="string">'#ff0000'</span></span><br><span class="line">    <span class="comment"># 大小</span></span><br><span class="line">    width, height = image.size</span><br><span class="line">    <span class="comment"># 字体</span></span><br><span class="line">    <span class="comment"># 使用中文字体时才可以渲染中文</span></span><br><span class="line">    myFont = ImageFont.truetype(</span><br><span class="line">        <span class="string">'/Library/Fonts/Songti.ttc'</span>, size=width//<span class="number">10</span>)</span><br><span class="line">    imgDraw.text((width<span class="number">-100</span>, <span class="number">0</span>), <span class="string">u'你好'</span>, fill=fillColor, font=myFont)</span><br><span class="line">    <span class="comment"># image.show()</span></span><br><span class="line">    image.save(<span class="string">'/Users/lau/Documents/Coding/Python/SMTC/0000/result.jpg'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    add_num(<span class="string">'/Users/lau/Documents/Coding/Python/SMTC/0000/0000.jpeg'</span>)</span><br></pre></td></tr></table></figure><p><strong>原图</strong>：</p><p><img src="https://i.loli.net/2019/04/30/5cc831cf1b5f7.jpg" alt="0000"></p><p><strong>效果图</strong>：</p><p><img src="https://i.loli.net/2019/04/30/5cc831d7cc127.jpg" alt="result"></p><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><ol><li><p>ModuleNotFoundError: No module named ‘PIL’</p><p>由于pillow模块未安装，所以需要使用pip(3)安装</p><p><code>pip3 install Pillow</code></p></li><li><p><code>/usr/local/bin/python3 -m pip install -U pylint --user</code></p><p><a href="https://www.ibm.com/developerworks/cn/linux/l-cn-pylint/index.html" target="_blank" rel="noopener">Pylint 是什么</a></p></li><li><p>ImageDraw</p><p><a href="https://pillow.readthedocs.io/en/4.0.x/reference/ImageDraw.html" target="_blank" rel="noopener">官方文档</a></p></li><li><p>找不到图片</p><p>相对路径找不到时，试试绝对路径。</p></li><li><p>如果要加汉字呢？编码问题怎么解决？</p><ul><li>换个中文字体</li><li>指定utf-8<strong>编码</strong></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;「SMTC」0000-py&quot;&gt;&lt;a href=&quot;#「SMTC」0000-py&quot; class=&quot;headerlink&quot; title=&quot;「SMTC」0000.py&quot;&gt;&lt;/a&gt;「SMTC」0000.py&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Show me the code 第0000题 Python版&lt;/p&gt;
&lt;a href=&quot;/posts/724513738.html&quot; title=&quot;完整题目&quot;&gt;完整题目&lt;/a&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python" scheme="https://jacksonleon.gitee.io/categories/Python/"/>
    
      <category term="SMTC" scheme="https://jacksonleon.gitee.io/categories/Python/SMTC/"/>
    
    
      <category term="Python" scheme="https://jacksonleon.gitee.io/tags/Python/"/>
    
      <category term="SMTC" scheme="https://jacksonleon.gitee.io/tags/SMTC/"/>
    
  </entry>
  
  <entry>
    <title>Show Me The Code</title>
    <link href="https://jacksonleon.gitee.io/posts/724513738.html"/>
    <id>https://jacksonleon.gitee.io/posts/724513738.html</id>
    <published>2019-01-29T12:37:25.000Z</published>
    <updated>2019-01-29T14:58:44.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Show-Me-The-Code"><a href="#Show-Me-The-Code" class="headerlink" title="Show Me The Code"></a>Show Me The Code</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>Python 练习册，每天一个小程序</p><p>From<a href="https://github.com/Yixiaohan/show-me-the-code" target="_blank" rel="noopener"><strong>show me the code</strong></a></p></blockquote><a id="more"></a><blockquote><p>Talk is cheap. Show me the code.    —Linus Torvalds</p></blockquote><p><strong>第 0000 题：</strong> 将你的 QQ 头像（或者微博头像）右上角加上红色的数字，类似于微信未读信息数量那种提示效果。 类似于图中效果</p><p><img src="https://camo.githubusercontent.com/d518d3929e4054ce2f9183b23e52908da7e5632d/687474703a2f2f692e696d6775722e636f6d2f736732646b75592e706e673f31" alt="头像"></p><p><a href="/posts/1847041040.html">解答</a></p><p><strong>第 0001 题：</strong> 做为 Apple Store App 独立开发者，你要搞限时促销，为你的应用<strong>生成激活码</strong>（或者优惠券），使用 Python 如何生成 200 个激活码（或者优惠券）？</p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mysql.connector</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> mysql.connector</span><br><span class="line"></span><br><span class="line">forSelect = string.ascii_letters + string.digits</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_code</span><span class="params">(count, length)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(count):</span><br><span class="line">        Re = <span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> range(length):</span><br><span class="line">            Re += random.choice(forSelect)</span><br><span class="line">        <span class="keyword">yield</span> Re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_code</span><span class="params">()</span>:</span></span><br><span class="line">    conn = mysql.connector.connect(user=<span class="string">'root'</span>, password=<span class="string">'l'</span>, database=<span class="string">'test'</span>)</span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    codes = gen_code(<span class="number">200</span>, <span class="number">20</span>)</span><br><span class="line">    <span class="keyword">for</span> code <span class="keyword">in</span> codes:</span><br><span class="line">        cursor.execute(<span class="string">"INSERT INTO `code`(`code`) VALUES(%s)"</span>, params=[code])</span><br><span class="line">    conn.commit()</span><br><span class="line">    cursor.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    save_code()</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0002 题:</strong> 将 0001 题生成的 200 个激活码（或者优惠券）保存到 <strong>MySQL</strong> 关系型数据库中。</p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mysql.connector</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> mysql.connector</span><br><span class="line"></span><br><span class="line">forSelect = string.ascii_letters + string.digits</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_code</span><span class="params">(count, length)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(count):</span><br><span class="line">        Re = <span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> range(length):</span><br><span class="line">            Re += random.choice(forSelect)</span><br><span class="line">        <span class="keyword">yield</span> Re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_code</span><span class="params">()</span>:</span></span><br><span class="line">    conn = mysql.connector.connect(user=<span class="string">'root'</span>, password=<span class="string">'l'</span>, database=<span class="string">'test'</span>)</span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    codes = gen_code(<span class="number">200</span>, <span class="number">20</span>)</span><br><span class="line">    <span class="keyword">for</span> code <span class="keyword">in</span> codes:</span><br><span class="line">        cursor.execute(<span class="string">"INSERT INTO `code`(`code`) VALUES(%s)"</span>, params=[code])</span><br><span class="line">    conn.commit()</span><br><span class="line">    cursor.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    save_code()</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0003 题：</strong> 将 0001 题生成的 200 个激活码（或者优惠券）保存到 <strong>Redis</strong> 非关系型数据库中。</p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">forSelect = string.ascii_letters + string.digits</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_code</span><span class="params">(count, length)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(count):</span><br><span class="line">        Re = <span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> range(length):</span><br><span class="line">            Re += random.choice(forSelect)</span><br><span class="line">        <span class="keyword">yield</span> Re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_code</span><span class="params">()</span>:</span></span><br><span class="line">    r = redis.Redis(host=<span class="string">'127.0.0.1'</span>, port=<span class="string">'6379'</span>, password=<span class="string">'linyii'</span>)</span><br><span class="line">    codes = gen_code(<span class="number">200</span>, <span class="number">20</span>)</span><br><span class="line">    p = r.pipeline()</span><br><span class="line">    <span class="keyword">for</span> code <span class="keyword">in</span> codes:</span><br><span class="line">        p.sadd(<span class="string">'code'</span>, code)</span><br><span class="line">    p.execute()</span><br><span class="line">    <span class="keyword">return</span> r.scard(<span class="string">'code'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    save_code()</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0004 题：</strong> 任一个英文的纯文本文件，统计其中的单词出现的个数。</p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line">Text = <span class="string">"""</span></span><br><span class="line"><span class="string">bands which have connected them with another, and to assume among the powers of the earth, the separate and equal station to which the Laws of Nature and of Nature's God entitle them, a decent respect to the opinions of mankind requires that they should declare the causes which impel them to the separation.  We hold these truths to be</span></span><br><span class="line"><span class="string">self-evident, that all men are created equal, that they are endowed by their Creator with certain unalienable Rights, that among these are Life, Liberty and the pursuit of Happiness.--That to secure these rights, Governments are instituted among Men, deriving their just powers from the consent of the governed, --That whenever any Form of Government becomes destructive of these ends, it is the Right of the People to alter or to abolish it, and to institute new Government, laying its foundation on such principles and organizing its powers in such form, as to them shall seem most likely to effect their Safety and Happiness. """</span></span><br><span class="line"><span class="comment"># clean</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> <span class="string">'-.,\n'</span>:</span><br><span class="line">    Text = Text.replace(char, <span class="string">' '</span>)</span><br><span class="line">Text = Text.lower()</span><br><span class="line">word_list = Text.split()</span><br><span class="line"></span><br><span class="line"><span class="comment"># solution 1</span></span><br><span class="line">res = Counter(word_list).most_common()</span><br><span class="line"></span><br><span class="line"><span class="comment"># solution 2</span></span><br><span class="line"><span class="comment"># 使用字典，key-value，单词与个数一一对应</span></span><br><span class="line">d = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> word_list:</span><br><span class="line">    <span class="comment"># 找到个数然后+1，没有就默认0然后+1</span></span><br><span class="line">    <span class="comment"># dict.get(key, default = None)</span></span><br><span class="line">    <span class="comment"># key − This is the Key to be searched in the dictionary.</span></span><br><span class="line">    <span class="comment"># default − This is the Value to be returned in case key does not exist.</span></span><br><span class="line">    <span class="comment"># This method return a value for the given key. If key is not available, then returns default value None.</span></span><br><span class="line">    d[word] = d.get(word, <span class="number">0</span>)+<span class="number">1</span></span><br><span class="line"><span class="comment"># 使用列表为了排序</span></span><br><span class="line">word_freq = []</span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> d.items():</span><br><span class="line">    word_freq.append((value, key))</span><br><span class="line">word_freq.sort(reverse=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># solution 3</span></span><br><span class="line"><span class="comment"># 不使用get()方法</span></span><br><span class="line">d = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> word_list:</span><br><span class="line">    <span class="keyword">if</span> word <span class="keyword">not</span> <span class="keyword">in</span> d:</span><br><span class="line">        d[word] = <span class="number">0</span></span><br><span class="line">    d[word] += <span class="number">1</span></span><br><span class="line">word_freq = []</span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> d.items():</span><br><span class="line">    word_freq.append((value, key))</span><br><span class="line">word_freq.sort(reverse=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0005 题：</strong> 你有一个目录，装了很多照片，把它们的尺寸变成都不大于 iPhone5 分辨率的大小。</p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">path=<span class="string">'/Users/lau/Pictures'</span></span><br><span class="line">resPath=<span class="string">'/Users/lau/Desktop'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(resPath):</span><br><span class="line">    os.mkdir(resPath)</span><br><span class="line"><span class="keyword">for</span> fileName <span class="keyword">in</span> os.listdir(path):</span><br><span class="line">    <span class="comment"># mac系统会出现.DS_Store文件，会报错，所以简单的办法就是</span></span><br><span class="line">    <span class="comment"># 去这个文件夹删除隐藏文件</span></span><br><span class="line">    picPath=os.path.join(path,fileName)</span><br><span class="line">    print(picPath)</span><br><span class="line">    <span class="keyword">with</span> Image.open(picPath) <span class="keyword">as</span> im:</span><br><span class="line">        im.thumbnail((<span class="number">1366</span>,<span class="number">640</span>))</span><br><span class="line">        im.save(resPath+<span class="string">'/f_'</span>+fileName,<span class="string">'jpeg'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0006 题：</strong> 你有一个目录，放了你一个月的日记，都是 txt，为了避免分词的问题，假设内容都是英文，请统计出你认为每篇日记最重要的词。</p><p><a href="/posts/1266467788.html">解答</a></p><p><strong>第 0007 题：</strong> 有个目录，里面是你自己写过的程序，统计一下你写过多少行代码。包括空行和注释，但是要分别列出来。</p><p><a href="/posts/4089488553.html">解答</a></p><p><strong>第 0008 题：</strong> 一个HTML文件，找出里面的<strong>正文</strong>。</p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">html_body</span><span class="params">(filesPath)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(filesPath):</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    filesList = os.listdir(filesPath)</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> filesList:</span><br><span class="line">        filePath = os.path.join(filesPath, file)</span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(filePath) <span class="keyword">and</span> os.path.splitext(filePath)[<span class="number">1</span>] == <span class="string">'.html'</span>:</span><br><span class="line">            <span class="keyword">with</span> open(filePath) <span class="keyword">as</span> fileHtml:</span><br><span class="line">                text = BeautifulSoup(fileHtml, <span class="string">'lxml'</span>)</span><br><span class="line">                content = text.getText().strip(<span class="string">'\n'</span>)</span><br><span class="line">                print(content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    html_body(<span class="string">'./SMTC/source/0008'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0009 题：</strong> 一个HTML文件，找出里面的<strong>链接</strong>。</p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">html_link</span><span class="params">(filesPath)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(filesPath):</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    filesList = os.listdir(filesPath)</span><br><span class="line">    links = []</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> filesList:</span><br><span class="line">        filePath = os.path.join(filesPath, file)</span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(filePath) <span class="keyword">and</span> os.path.splitext(filePath)[<span class="number">1</span>] == <span class="string">'.html'</span>:</span><br><span class="line">            <span class="keyword">with</span> open(filePath) <span class="keyword">as</span> fileHtml:</span><br><span class="line">                text = BeautifulSoup(fileHtml, <span class="string">'lxml'</span>)</span><br><span class="line">                <span class="comment"># 找到a标签</span></span><br><span class="line">                <span class="keyword">for</span> link <span class="keyword">in</span> text.find_all(<span class="string">'a'</span>):</span><br><span class="line">                    <span class="comment"># 获取链接</span></span><br><span class="line">                    links.append(link.get(<span class="string">'href'</span>))</span><br><span class="line">    print(links)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    html_link(<span class="string">'./SMTC/source/0008'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0010 题：</strong> 使用 Python 生成类似于下图中的<strong>字母验证码图片</strong></p><p><img src="https://camo.githubusercontent.com/f80e7aa0d43b3685657b4d329f2809a28c82e12a/687474703a2f2f692e696d6775722e636f6d2f615668626567562e6a7067" alt="字母验证码"></p><ul><li><p><a href="http://stackoverflow.com/questions/2823316/generate-a-random-letter-in-python" target="_blank" rel="noopener">阅读资料</a></p></li><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 第 0010 题：使用 Python 生成类似于下图中的字母验证码图片</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageDraw, ImageFont, ImageFilter</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">randomLetter</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 大写字母65-90</span></span><br><span class="line">    <span class="comment"># 数字转字符</span></span><br><span class="line">    <span class="keyword">return</span> chr(random.randint(<span class="number">65</span>, <span class="number">90</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">randomColor</span><span class="params">(argc)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> argc == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> (random.randint(<span class="number">64</span>, <span class="number">255</span>), random.randint(<span class="number">64</span>, <span class="number">255</span>), random.randint(<span class="number">64</span>, <span class="number">255</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> (random.randint(<span class="number">0</span>, <span class="number">100</span>), random.randint(<span class="number">0</span>, <span class="number">100</span>), random.randint(<span class="number">0</span>, <span class="number">100</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_codepic</span><span class="params">(savePath)</span>:</span></span><br><span class="line">    width = <span class="number">60</span>*<span class="number">4</span></span><br><span class="line">    height = <span class="number">60</span></span><br><span class="line">    img = Image.new(<span class="string">'RGB'</span>, (width, height), (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">    <span class="comment"># 字体</span></span><br><span class="line">    font = ImageFont.truetype(</span><br><span class="line">        <span class="string">'/Library/Fonts/Songti.ttc'</span>, <span class="number">36</span>)</span><br><span class="line">    imgDraw = ImageDraw.Draw(img)</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(width):</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> range(height):</span><br><span class="line">            imgDraw.point((x, y), fill=randomColor(<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        imgDraw.text((<span class="number">60</span>*index+<span class="number">20</span>, <span class="number">5</span>), randomLetter(),</span><br><span class="line">                     font=font, fill=randomColor(<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">    img = img.filter(ImageFilter.BLUR)</span><br><span class="line">    img.save(savePath+<span class="string">'codepic.jpg'</span>, <span class="string">'JPEG'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    gen_codepic(<span class="string">'./SMTC/source/0010/'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0011 题：</strong> 敏感词文本文件 filtered_words.txt，里面的内容为以下内容，当用户输入敏感词语时，则打印出 Freedom，否则打印出 Human Rights。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">北京</span><br><span class="line">程序员</span><br><span class="line">公务员</span><br><span class="line">领导</span><br><span class="line">牛比</span><br><span class="line">牛逼</span><br><span class="line">你娘</span><br><span class="line">你妈</span><br><span class="line">love</span><br><span class="line">sex</span><br><span class="line">jiangge</span><br></pre></td></tr></table></figure><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 敏感词文本文件 filtered_words.txt，里面的内容为以下内容，当用户输入敏感词语时，则打印出 Freedom，否则打印出 Human Rights。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Freedom</span><span class="params">(filesPath)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(filesPath):</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    fileList=os.listdir(filesPath)</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> fileList:</span><br><span class="line">        filePath=os.path.join(filesPath,file)</span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(filePath) <span class="keyword">and</span> os.path.split(filePath)[<span class="number">1</span>]==<span class="string">'filtered_words.txt'</span>:</span><br><span class="line">            <span class="keyword">with</span> open(filePath) <span class="keyword">as</span> text:</span><br><span class="line">                text=text.read().split(<span class="string">'\n'</span>)</span><br><span class="line">                getInput=input(<span class="string">'input:'</span>)</span><br><span class="line">                <span class="keyword">if</span> getInput <span class="keyword">in</span> text:</span><br><span class="line">                    print(<span class="string">'Freedom'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    print(<span class="string">'Human Rights'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    Freedom(<span class="string">'./SMTC/source/0011'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0012 题：</strong> 敏感词文本文件 filtered_words.txt，里面的内容 和 0011题一样，当用户输入敏感词语，则用 星号 <em> 替换，例如当用户输入「北京是个好城市」，则变成「*</em>是个好城市」。</p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 敏感词文本文件 filtered_words.txt，里面的内容 和 0011题一样，当用户输入敏感词语，则用 星号 * 替换，例如当用户输入「北京是个好城市」，则变成「**是个好城市」。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Freedom</span><span class="params">(filePath)</span>:</span></span><br><span class="line">    word_filter = set()</span><br><span class="line">    <span class="keyword">with</span> open(filePath+<span class="string">'filtered_words.txt'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> f.readlines():</span><br><span class="line">            word_filter.add(word.strip())</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        s = input(<span class="string">'input:'</span>)</span><br><span class="line">        <span class="keyword">if</span> s == <span class="string">'exit'</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">for</span> w <span class="keyword">in</span> word_filter:</span><br><span class="line">            <span class="keyword">if</span> w <span class="keyword">in</span> s:</span><br><span class="line">                s = s.replace(w, <span class="string">'*'</span>*len(w))</span><br><span class="line">        print(s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    Freedom(<span class="string">'./SMTC/source/0011/'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0013 题：</strong> 用 Python 写一个爬图片的程序，爬 <a href="http://tieba.baidu.com/p/2166231880" target="_blank" rel="noopener">这个链接里的日本妹子图片 :-)</a></p><ul><li><p><a href="http://www.v2ex.com/t/61686" target="_blank" rel="noopener">参考代码</a></p></li><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 用 Python 写一个爬图片的程序，爬这个链接里的日本妹子图片(http://tieba.baidu.com/p/2166231880) :-)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">spy_pic</span><span class="params">(url, savePath, header)</span>:</span></span><br><span class="line">    response = requests.get(url, headers=header)</span><br><span class="line">    content = BeautifulSoup(response.content, <span class="string">'lxml'</span>)</span><br><span class="line">    img_tag = content.find_all(<span class="string">'img'</span>)</span><br><span class="line">    img_link = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> img_tag:</span><br><span class="line">        <span class="keyword">if</span> i.get(<span class="string">'pic_type'</span>) == <span class="string">'0'</span>:</span><br><span class="line">            img_link.append(i.get(<span class="string">'src'</span>))</span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(savePath):</span><br><span class="line">        os.mkdir(savePath)</span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> img_link:</span><br><span class="line">        pic_html = requests.get(link)</span><br><span class="line">        picPath = savePath+str(index+<span class="number">1</span>)+<span class="string">'.'</span>+link.split(<span class="string">'.'</span>)[<span class="number">-1</span>]</span><br><span class="line">        <span class="keyword">with</span> open(picPath, <span class="string">'wb'</span>) <span class="keyword">as</span> pic:</span><br><span class="line">            pic.write(pic_html.content)</span><br><span class="line">            pic.flush</span><br><span class="line">        pic.close()</span><br><span class="line">        print(<span class="string">'第&#123;0&#125;张图片抓取完成'</span>.format(index+<span class="number">1</span>))</span><br><span class="line">        index += <span class="number">1</span></span><br><span class="line">    print(<span class="string">'抓取完成！'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    reqHeader = &#123;</span><br><span class="line">        <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line">        <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7'</span>,</span><br><span class="line">        <span class="string">'Cookie'</span>: <span class="string">'TIEBA_USERTYPE=7b00a4223cb9934b1b9270ad; wise_device=0; bdshare_firstime=1549795215089; Hm_lvt_98b9d8c2fd6608d564bf2ac2ae642948=1549795215; Hm_lvt_287705c8d9e2073d13275b18dbd746dc=1549795216; Hm_lpvt_98b9d8c2fd6608d564bf2ac2ae642948=1549847500; Hm_lpvt_287705c8d9e2073d13275b18dbd746dc=1549847500; BAIDUID=48130036CAF55267908C2180103698DC:FG=1; cflag=13%3A3; BDUSS=HN6WUx-aGVQMGlNR0NlcEhCd0pjUkJVQXpBbWFxY3hYTjZNfmozdjV6RFlkb2hjQVFBQUFBJCQAAAAAAAAAAAEAAAAZhpwmbmljZWxpdXppAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjpYFzY6WBcO; TIEBAUID=35f770fc8e0ac33633210842; STOKEN=42c9d0d4dc2e420802cf269968ec38e4101a2a5d7f095a603f36b0261f413597'</span>,</span><br><span class="line">        <span class="string">'Host'</span>: <span class="string">'tieba.baidu.com'</span>,</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.96 Safari/537.36'</span></span><br><span class="line">    &#125;</span><br><span class="line">    spy_pic(<span class="string">'http://tieba.baidu.com/p/2166231880'</span>, <span class="string">'./SMTC/source/0013/'</span>, reqHeader</span><br><span class="line">            )</span><br></pre></td></tr></table></figure></li><li><p>效果展示</p><p><img src="https://i.loli.net/2019/04/30/5cc831e9f0ac2.jpg" alt="image-20190211164921861"><img src="https://i.loli.net/2019/04/30/5cc831f032016.jpg" alt="image-20190211164828843"></p></li><li><p><em>参考</em></p><p><a href="https://blog.csdn.net/IllegalName/article/details/77366508" target="_blank" rel="noopener">【Python爬虫系列】使用requests爬取图片</a></p><p><a href="https://jacksonleon.gitee.io/posts/247701255.html">小说爬虫</a></p></li></ul><p><strong>第 0014 题：</strong> 纯文本文件 student.txt为学生信息, 里面的内容（包括花括号）如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;1&quot;:[&quot;张三&quot;,150,120,100],</span><br><span class="line">&quot;2&quot;:[&quot;李四&quot;,90,99,95],</span><br><span class="line">&quot;3&quot;:[&quot;王五&quot;,60,66,68]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请将上述内容写到 student.xls 文件中，如下图所示：</p><p><img src="https://camo.githubusercontent.com/18dea9401449e4ca894d40d55134d9c28083280d/687474703a2f2f692e696d6775722e636f6d2f6e50446c706d652e6a7067" alt="student.xls"></p><ul><li><p><a href="http://www.cnblogs.com/skynet/archive/2013/05/06/3063245.html" target="_blank" rel="noopener">阅读资料</a> 腾讯游戏开发 XML 和 Excel 内容相互转换</p></li><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 纯文本文件 student.txt为学生信息, 里面的内容（包括花括号）如下所示</span></span><br><span class="line"><span class="keyword">from</span> xlwt <span class="keyword">import</span> Workbook</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xml2exl</span><span class="params">(filePath)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(filePath+<span class="string">'student.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> dic:</span><br><span class="line">        content = json.load(dic)</span><br><span class="line">        workbook = Workbook()</span><br><span class="line">        sheet = workbook.add_sheet(<span class="string">'student'</span>, cell_overwrite_ok=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># 输出元素序号</span></span><br><span class="line">        <span class="keyword">for</span> index, (key, values) <span class="keyword">in</span> enumerate(content.items()):</span><br><span class="line">            <span class="comment"># sheet.write(row, col, *args)</span></span><br><span class="line">            <span class="comment"># 输入第一列数据</span></span><br><span class="line">            sheet.write(index, <span class="number">0</span>, key)</span><br><span class="line">            <span class="keyword">for</span> i, value <span class="keyword">in</span> enumerate(values):</span><br><span class="line">                <span class="comment"># 输入每一行第二列开始的数据</span></span><br><span class="line">                sheet.write(index, i+<span class="number">1</span>, value)</span><br><span class="line">        workbook.save(filePath+<span class="string">'student.xls'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    xml2exl(<span class="string">'./SMTC/source/0014/'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0015 题：</strong>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;1&quot; : &quot;上海&quot;,</span><br><span class="line">    &quot;2&quot; : &quot;北京&quot;,</span><br><span class="line">    &quot;3&quot; : &quot;成都&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请将上述内容写到 city.xls 文件中，如下图所示：</p><p><img src="https://camo.githubusercontent.com/61120377319bfe5520c9d73f51776f923d6bd3b7/687474703a2f2f692e696d6775722e636f6d2f724f4862557a672e706e67" alt="city.xls"></p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 纯文本文件 city.txt为城市信息, 里面的内容（包括花括号）如下所示：</span></span><br><span class="line"><span class="keyword">from</span> xlwt <span class="keyword">import</span> Workbook</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xml2exl</span><span class="params">(filePath)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(filePath+<span class="string">'city.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        content = json.load(f)</span><br><span class="line">        workBook = Workbook()</span><br><span class="line">        sheet = workBook.add_sheet(<span class="string">'city'</span>, cell_overwrite_ok=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># enumerate可以分开词语</span></span><br><span class="line">        <span class="keyword">for</span> index, (key, value) <span class="keyword">in</span> enumerate(content.items()):</span><br><span class="line">            sheet.write(index, <span class="number">0</span>, key)</span><br><span class="line">            <span class="comment"># 与上一题不同的是</span></span><br><span class="line">            <span class="comment"># 这题中的value只有一列值</span></span><br><span class="line">            <span class="comment"># 不需要使用enumerate</span></span><br><span class="line">            sheet.write(index, <span class="number">1</span>, value)</span><br><span class="line">        workBook.save(filePath+<span class="string">'city.xls'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    xml2exl(<span class="string">'./SMTC/source/0015/'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0016 题：</strong> 纯文本文件 numbers.txt, 里面的内容（包括方括号）如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">[1, 82, 65535], </span><br><span class="line">[20, 90, 13],</span><br><span class="line">[26, 809, 1024]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>请将上述内容写到 numbers.xls 文件中，如下图所示：</p><p><img src="https://camo.githubusercontent.com/60da4d596289212b517547ddcc2408bfc9f39087/687474703a2f2f692e696d6775722e636f6d2f69757a305062762e706e67" alt="numbers.xls"></p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 纯文本文件 numbers.txt, 里面的内容（包括方括号）</span></span><br><span class="line"><span class="keyword">from</span> xlwt <span class="keyword">import</span> Workbook</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">json2xls</span><span class="params">(filePath)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(filePath+<span class="string">'numbers.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        content = json.load(f)</span><br><span class="line">        workbook = Workbook()</span><br><span class="line">        sheet = workbook.add_sheet(<span class="string">'numbers'</span>, cell_overwrite_ok=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">for</span> row, list <span class="keyword">in</span> enumerate(content):</span><br><span class="line">            <span class="keyword">for</span> col, value <span class="keyword">in</span> enumerate(list):</span><br><span class="line">                sheet.write(row, col, value)</span><br><span class="line">        workbook.save(filePath+<span class="string">'numbers.xls'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    json2xls(<span class="string">'./SMTC/source/0016/'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0017 题：</strong> 将 第 0014 题中的 student.xls 文件中的内容写到 student.xml 文件中，如</p><p>下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">&lt;students&gt;</span><br><span class="line">&lt;!-- </span><br><span class="line">学生信息表</span><br><span class="line">&quot;id&quot; : [名字, 数学, 语文, 英文]</span><br><span class="line">--&gt;</span><br><span class="line">&#123;</span><br><span class="line">&quot;1&quot; : [&quot;张三&quot;, 150, 120, 100],</span><br><span class="line">&quot;2&quot; : [&quot;李四&quot;, 90, 99, 95],</span><br><span class="line">&quot;3&quot; : [&quot;王五&quot;, 60, 66, 68]</span><br><span class="line">&#125;</span><br><span class="line">&lt;/students&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 将 第 0014 题中的 student.xls 文件中的内容写到 student.xml 文件中</span></span><br><span class="line"><span class="keyword">from</span> xml.dom.minidom <span class="keyword">import</span> Document</span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xls2xml</span><span class="params">(filePath)</span>:</span></span><br><span class="line">    doc = Document()</span><br><span class="line">    root = doc.createElement(<span class="string">'root'</span>)</span><br><span class="line">    doc.appendChild(root)</span><br><span class="line">    students = doc.createElement(<span class="string">'students'</span>)</span><br><span class="line">    root.appendChild(students)</span><br><span class="line">    comment = doc.createComment(<span class="string">'学生信息表\n\t\t"id" : [名字, 数学, 语文, 英文]\n\t\t'</span>)</span><br><span class="line">    students.appendChild(comment)</span><br><span class="line"></span><br><span class="line">    content = xlrd.open_workbook(filePath+<span class="string">'student.xls'</span>)</span><br><span class="line">    sheet = content.sheet_by_index(<span class="number">0</span>)</span><br><span class="line">    nrows = sheet.nrows</span><br><span class="line">    sheet_content = dict()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(nrows):</span><br><span class="line">        sheet_content[str(sheet.cell(i, <span class="number">0</span>).value)] = sheet.row_values(i)[<span class="number">1</span>:]</span><br><span class="line">    students.appendChild(doc.createTextNode(str(sheet_content)))</span><br><span class="line">    <span class="keyword">with</span> open(filePath+<span class="string">'student.xml'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> student_xml:</span><br><span class="line">        student_xml.write(doc.toprettyxml())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    xls2xml(<span class="string">'./SMTC/source/0014/'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0018 题：</strong> 将 第 0015 题中的 city.xls 文件中的内容写到 city.xml 文件中，如下 所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xmlversion=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">&lt;cities&gt;</span><br><span class="line">&lt;!-- </span><br><span class="line">城市信息</span><br><span class="line">--&gt;</span><br><span class="line">&#123;</span><br><span class="line">&quot;1&quot; : &quot;上海&quot;,</span><br><span class="line">&quot;2&quot; : &quot;北京&quot;,</span><br><span class="line">&quot;3&quot; : &quot;成都&quot;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/cities&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 将 第 0015 题中的 city.xls 文件中的内容写到 city.xml 文件中</span></span><br><span class="line"><span class="keyword">from</span> xml.dom.minidom <span class="keyword">import</span> Document</span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xls2xml</span><span class="params">(filePath)</span>:</span></span><br><span class="line">    doc = Document()</span><br><span class="line">    root = doc.createElement(<span class="string">'root'</span>)</span><br><span class="line">    doc.appendChild(root)</span><br><span class="line">    cities = doc.createElement(<span class="string">'cities'</span>)</span><br><span class="line">    root.appendChild(cities)</span><br><span class="line">    comment = doc.createComment(<span class="string">'\n\t\t城市信息\n\t\t'</span>)</span><br><span class="line">    cities.appendChild(comment)</span><br><span class="line"></span><br><span class="line">    content = xlrd.open_workbook(filePath+<span class="string">'city.xls'</span>, <span class="string">'r'</span>)</span><br><span class="line">    sheet = content.sheet_by_index(<span class="number">0</span>)</span><br><span class="line">    nrows = sheet.nrows</span><br><span class="line">    sheet_content = dict()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(nrows):</span><br><span class="line">        sheet_content[sheet.cell(i, <span class="number">0</span>).value] = sheet.row_values(i)[<span class="number">1</span>:]</span><br><span class="line">    cities.appendChild(doc.createTextNode(str(sheet_content)))</span><br><span class="line">    <span class="keyword">with</span> open(filePath+<span class="string">'city.xml'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(doc.toprettyxml())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    xls2xml(<span class="string">'./SMTC/source/0015/'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0019 题：</strong> 将 第 0016 题中的 numbers.xls 文件中的内容写到 numbers.xml 文件中，如下</p><p>所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">&lt;numbers&gt;</span><br><span class="line">&lt;!-- </span><br><span class="line">数字信息</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">[</span><br><span class="line">[1, 82, 65535],</span><br><span class="line">[20, 90, 13],</span><br><span class="line">[26, 809, 1024]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">&lt;/numbers&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 将 第 0016 题中的 numbers.xls 文件中的内容写到 numbers.xml 文件中</span></span><br><span class="line"><span class="keyword">from</span> xml.dom.minidom <span class="keyword">import</span> Document</span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xls2xml</span><span class="params">(filePath)</span>:</span></span><br><span class="line">    doc = Document()</span><br><span class="line">    root = doc.createElement(<span class="string">'root'</span>)</span><br><span class="line">    doc.appendChild(root)</span><br><span class="line">    numbers = doc.createElement(<span class="string">'numbers'</span>)</span><br><span class="line">    root.appendChild(numbers)</span><br><span class="line">    numbers.appendChild(doc.createComment(<span class="string">'\n\t\t数字信息\n\t\t'</span>))</span><br><span class="line"></span><br><span class="line">    content = xlrd.open_workbook(filePath+<span class="string">'numbers.xls'</span>)</span><br><span class="line">    sheet = content.sheet_by_index(<span class="number">0</span>)</span><br><span class="line">    nrows = sheet.nrows</span><br><span class="line">    sheet_list = list()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(nrows):</span><br><span class="line">        sheet_list.append(sheet.row_values(i))</span><br><span class="line">    numbers.appendChild(doc.createTextNode(str(sheet_list)))</span><br><span class="line">    <span class="keyword">with</span> open(filePath+<span class="string">'numbers.xml'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(doc.toprettyxml())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    xls2xml(<span class="string">'./SMTC/source/0016/'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0020 题：</strong> <a href="http://iservice.10010.com/index_.html" target="_blank" rel="noopener">登陆中国联通网上营业厅</a> 后选择「自助服务」 —&gt; 「详单查询」，然后选择你要查询的时间段，点击「查询」按钮，查询结果页面的最下方，点击「导出」，就会生成类似于 2014年10月01日～2014年10月31日通话详单.xls 文件。写代码，对每月通话时间做个统计。</p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2sec</span><span class="params">(str)</span>:</span></span><br><span class="line">    sec = <span class="number">0</span></span><br><span class="line">    time_re = re.compile(<span class="string">r'(\d+)(\D+)'</span>)</span><br><span class="line">    time_list = time_re.findall(str)</span><br><span class="line">    <span class="keyword">for</span> time_item <span class="keyword">in</span> time_list:</span><br><span class="line">        <span class="keyword">if</span> time_item[<span class="number">1</span>] == <span class="string">'秒'</span>:</span><br><span class="line">            sec += int(time_item[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">elif</span> time_item[<span class="number">1</span>] == <span class="string">'分'</span>:</span><br><span class="line">            sec += int(time_item[<span class="number">0</span>]) * <span class="number">60</span></span><br><span class="line">        <span class="keyword">elif</span> time_item[<span class="number">1</span>] == <span class="string">'小时'</span>:</span><br><span class="line">            sec += int(time_item[<span class="number">0</span>]) * <span class="number">3600</span></span><br><span class="line">    <span class="keyword">return</span> sec</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sec2str</span><span class="params">(sec)</span>:</span></span><br><span class="line">    h = sec // <span class="number">3600</span></span><br><span class="line">    m = sec % <span class="number">3600</span> // <span class="number">60</span></span><br><span class="line">    s = sec % <span class="number">60</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'%s小时%s分%s秒'</span> % (h, m, s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">minidata</span><span class="params">()</span>:</span></span><br><span class="line">    all_time = <span class="number">0</span>  <span class="comment"># 使用总时间（秒）</span></span><br><span class="line">    start_time = time.mktime(time.strptime(<span class="string">'2018-09-01'</span>, <span class="string">'%Y-%m-%d'</span>))</span><br><span class="line">    end_time = time.mktime(time.strptime(<span class="string">'2018-10-01'</span>, <span class="string">'%Y-%m-%d'</span>))</span><br><span class="line">    data = xlrd.open_workbook(<span class="string">'./SMTC/source/0020/2018年09月语音通信.xls'</span>)</span><br><span class="line">    table = data.sheet_by_index(<span class="number">0</span>)</span><br><span class="line">    nrows = table.nrows</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(nrows):</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        this_time = time.mktime(time.strptime(</span><br><span class="line">            table.row_values(i)[<span class="number">2</span>], <span class="string">'%Y-%m-%d %H:%M:%S'</span>))</span><br><span class="line">        <span class="keyword">if</span> this_time &gt;= start_time <span class="keyword">and</span> this_time &lt; end_time:</span><br><span class="line">            all_time += str2sec(table.row_values(i)[<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'总时间:'</span>+sec2str(all_time))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    minidata()</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0021 题：</strong> 通常，登陆某个网站或者 APP，需要使用用户名和密码。密码是如何加密后存储起来的呢？请使用 Python 对密码加密。</p><ul><li><p>阅读资料 <a href="http://zhuoqiang.me/password-storage-and-python-example.html" target="_blank" rel="noopener">用户密码的存储与 Python 示例</a></p></li><li><p>阅读资料 <a href="http://www.pythoncentral.io/hashing-strings-with-python/" target="_blank" rel="noopener">Hashing Strings with Python</a></p></li><li><p>阅读资料 <a href="http://stackoverflow.com/questions/2572099/pythons-safest-method-to-store-and-retrieve-passwords-from-a-database" target="_blank" rel="noopener">Python’s safest method to store and retrieve passwords from a database</a></p></li><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha256</span><br><span class="line"><span class="keyword">from</span> hmac <span class="keyword">import</span> HMAC</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt_passwd</span><span class="params">(password, salt=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> salt <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        salt = os.urandom(<span class="number">8</span>)</span><br><span class="line">    <span class="keyword">assert</span> <span class="number">8</span> == len(salt)</span><br><span class="line">    <span class="keyword">assert</span> isinstance(salt, bytes)</span><br><span class="line">    <span class="keyword">assert</span> isinstance(password, str)</span><br><span class="line">    <span class="keyword">if</span> isinstance(password, str):</span><br><span class="line">        password = password.encode(<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">assert</span> isinstance(password, bytes)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        password = HMAC(password, salt, sha256).digest()</span><br><span class="line">    <span class="comment"># print('password:', password)</span></span><br><span class="line">    <span class="keyword">return</span> salt+password</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">validate_passwd</span><span class="params">(hashed, input)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashed == encrypt_passwd(input, hashed[:<span class="number">8</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    hashed = encrypt_passwd(<span class="string">'123456'</span>)</span><br><span class="line">    print(validate_passwd(hashed, <span class="string">'123456'</span>))</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0022 题：</strong> iPhone 6、iPhone 6 Plus 早已上市开卖。请查看你写得 第 0005 题的代码是否可以复用。</p><p><strong>第 0023 题：</strong> 使用 Python 的 Web 框架，做一个 Web 版本 留言簿 应用。</p><p><a href="http://v2ex.com/t/151643#reply53" target="_blank" rel="noopener">阅读资料：Python 有哪些 Web 框架</a></p><ul><li><img src="https://camo.githubusercontent.com/cf9e3cc773f4b57747953428556db4c49b3d36c2/687474703a2f2f692e696d6775722e636f6d2f564979435a30692e6a7067" alt="留言簿参考"></li></ul><p><strong>第 0024 题：</strong> 使用 Python 的 Web 框架，做一个 Web 版本 TodoList 应用。</p><ul><li><img src="https://camo.githubusercontent.com/d6aaa1fd3e238860cb9ce736cc8bdae628117508/687474703a2f2f692e696d6775722e636f6d2f4e4566377a48702e6a7067" alt="SpringSide 版TodoList"></li></ul><p><strong>第 0025 题：</strong> 使用 Python 实现：对着电脑吼一声,自动打开浏览器中的默认网站。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">例如，对着笔记本电脑吼一声“百度”，浏览器自动打开百度首页。</span><br><span class="line"></span><br><span class="line">关键字：Speech to Text</span><br></pre></td></tr></table></figure><p>参考思路：<br>1：获取电脑录音—&gt;WAV文件 python record wav</p><p>2：录音文件—&gt;文本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">STT: Speech to Text</span><br><span class="line"></span><br><span class="line">STT API Google API</span><br></pre></td></tr></table></figure><p>3:文本—&gt;电脑命令</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Show-Me-The-Code&quot;&gt;&lt;a href=&quot;#Show-Me-The-Code&quot; class=&quot;headerlink&quot; title=&quot;Show Me The Code&quot;&gt;&lt;/a&gt;Show Me The Code&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Python 练习册，每天一个小程序&lt;/p&gt;
&lt;p&gt;From&lt;a href=&quot;https://github.com/Yixiaohan/show-me-the-code&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;show me the code&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Uncategoried" scheme="https://jacksonleon.gitee.io/categories/Uncategoried/"/>
    
    
  </entry>
  
  <entry>
    <title>Python Note</title>
    <link href="https://jacksonleon.gitee.io/posts/1999510617.html"/>
    <id>https://jacksonleon.gitee.io/posts/1999510617.html</id>
    <published>2019-01-25T13:14:50.000Z</published>
    <updated>2019-02-04T08:07:47.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><p> <a href="https://bop.mol.uno/" target="_blank" rel="noopener">「Python简明教程」</a>&amp;&amp; JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>Python个人笔记</p></blockquote><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>之所以，我们把Python，蟒蛇，作为此计算机语言的名字，是有其历史典故的：</p><p>Python语言的创始人，吉多·范罗苏姆（Guido van Rossum）在1989年圣诞节期间，在阿姆斯特丹，为了打发圣诞节的无趣，决心开发一个新的脚本解释程序，而在给自己新创造的计算机语言起名字的时候，由于其是，自于七十年代风靡全球的英国六人喜剧团体，巨蟒剧团（Monty Python）的忠实粉丝，所以，就把此计算机语言的名字叫做：Python。</p></blockquote><p>Python是一种脚本语言、解释性语言「无需编译源码，可直接运行」、交互性语言、面向对象的语言。</p><p><em>代码缩进决定了Python代码的逻辑关系，而不仅仅是为了好看</em></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>Mac下安装非常简单，一条命令：<code>brew install python3</code>，只不过有时候需要更新Homebrew，比较耗费时间。</p><p><img src="https://i.loli.net/2019/04/30/5cc8336c83eab.jpg" alt="image-20190125211920126"></p><p>如果你没有Homebrew，使用<code>/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</code>安装完成后，再安装Python。</p><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><ol><li><p><code>pip3 install</code>和<code>pip3 list</code> 出现问题</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Exception:</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"/usr/local/lib/python3.7/site-packages/pip/_vendor/pkg_resources/__init__.py"</span>, line 2584, <span class="keyword">in</span> version</span><br><span class="line">    <span class="built_in">return</span> self._version</span><br><span class="line">  File <span class="string">"/usr/local/lib/python3.7/site-packages/pip/_vendor/pkg_resources/__init__.py"</span>, line 2691, <span class="keyword">in</span> __getattr__</span><br><span class="line">    raise AttributeError(attr)</span><br><span class="line">AttributeError: _version</span><br><span class="line"></span><br><span class="line">During handling of the above exception, another exception occurred:</span><br><span class="line"></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"/usr/local/lib/python3.7/site-packages/pip/_internal/cli/base_command.py"</span>, line 179, <span class="keyword">in</span> main</span><br><span class="line">    status = self.run(options, args)</span><br><span class="line">  File <span class="string">"/usr/local/lib/python3.7/site-packages/pip/_internal/commands/list.py"</span>, line 148, <span class="keyword">in</span> run</span><br><span class="line">    self.output_package_listing(packages, options)</span><br><span class="line">  File <span class="string">"/usr/local/lib/python3.7/site-packages/pip/_internal/commands/list.py"</span>, line 205, <span class="keyword">in</span> output_package_listing</span><br><span class="line">    data, header = format_for_columns(packages, options)</span><br><span class="line">  File <span class="string">"/usr/local/lib/python3.7/site-packages/pip/_internal/commands/list.py"</span>, line 271, <span class="keyword">in</span> format_for_columns</span><br><span class="line">    row = [proj.project_name, proj.version]</span><br><span class="line">  File <span class="string">"/usr/local/lib/python3.7/site-packages/pip/_vendor/pkg_resources/__init__.py"</span>, line 2589, <span class="keyword">in</span> version</span><br><span class="line">    raise ValueError(tmpl % self.PKG_INFO, self)</span><br><span class="line">ValueError: (<span class="string">"Missing 'Version:' header and/or METADATA file"</span>, Unknown [unknown version] (/usr/<span class="built_in">local</span>/lib/python3.7/site-packages))</span><br></pre></td></tr></table></figure><p>解决方法：</p><blockquote><p>目前还不知道是因为什么原因引起的</p><p>不过找到了解决办法</p><p><a href="https://stackoverflow.com/questions/54410773/pip3-list-failed-completely-and-returing-error" target="_blank" rel="noopener">https://stackoverflow.com/questions/54410773/pip3-list-failed-completely-and-returing-error</a></p><p>This was pretty difficult to solve, but I thing the gest of it is that if there are any folders in <code>site-packages</code> which have a <code>-</code> at the beginning, they are causing it. </p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/lib/python3.7/site-packages</span><br><span class="line">rm -rf ./-ip-19.0.1.dist-info</span><br></pre></td></tr></table></figure></li></ol><ol><li><p><a href="https://stackoverflow.com/questions/7670303/purpose-of-usr-bin-python3" target="_blank" rel="noopener">Purpose of #!/usr/bin/python3</a></p><blockquote><p>Answer:</p><p><code>#!/usr/bin/python3</code> is a <strong>shebang line</strong>.</p><p>A shebang line defines where the interpreter is located. In this case, the <code>python3</code> interpreter is located in <code>/usr/bin/python3</code>. A shebang line could also be a <code>bash</code>, <code>ruby</code>, <code>perl</code> or any other scripting languages’ interpreter, for example: <code>#!/bin/bash</code>.</p><p>Without the shebang line, the operating system does not know it’s a python script, even if you set the execution flag on the script and run it like <code>./script.py</code>. To make the script run by default in python3, either invoke it as <code>python3 script.py</code> or set the shebang line.</p><p>You can use <code>#!/usr/bin/env python3</code> for portability across different systems in case they have the language interpreter installed in different locations.</p></blockquote></li><li><p><a href="https://stackoverflow.com/questions/5142418/what-is-the-use-of-assert-in-python" target="_blank" rel="noopener">What is the use of “assert” in Python?</a></p><p>The <code>assert</code> statement exists in almost every programming language. It helps detect problems early in your program, where the cause is clear, rather than later as a side-effect of some other operation.</p><p>When you do…</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">assert</span> condition</span><br></pre></td></tr></table></figure><p>you’re telling the program to test that condition, and immediately trigger an error if the condition is false.</p><p>In Python, it’s roughly equivalent to this:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> condition:</span><br><span class="line">    <span class="keyword">raise</span> AssertionError()</span><br></pre></td></tr></table></figure><p>Try it in the Python shell:</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">assert</span> <span class="literal">True</span> <span class="comment"># nothing happens</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">assert</span> <span class="literal">False</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">AssertionError</span><br></pre></td></tr></table></figure><p>Assertions can include an optional message, and you can disable them when running the interpreter.</p><p>To print a message if the assertion fails:</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">assert</span> <span class="literal">False</span>, <span class="string">"Oh no! This assertion failed!"</span></span><br></pre></td></tr></table></figure><p>Do <strong>not</strong> use parenthesis to call <code>assert</code> like a function. It is a statement. If you do <code>assert(condition, message)</code> you’ll be running the <code>assert</code> with a <code>(condition, message)</code> tuple as first parameter.</p><p>As for disabling them, when running <code>python</code> in optimized mode, where <code>__debug__</code> is <code>False</code>, assert statements will be ignored. Just pass the <code>-O</code> flag:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -O script.py</span><br></pre></td></tr></table></figure><p>See <a href="http://docs.python.org/reference/simple_stmts.html#assert" target="_blank" rel="noopener">here</a> for the relevant documentation.</p></li><li><p>You use <code>==</code> when comparing values and <code>is</code> when comparing identities.</p></li><li></li></ol><h2 id="提高效率"><a href="#提高效率" class="headerlink" title="提高效率"></a>提高效率</h2><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><h3 id="lambda"><a href="#lambda" class="headerlink" title="lambda"></a>lambda</h3><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="字符串与基本规则"><a href="#字符串与基本规则" class="headerlink" title="字符串与基本规则"></a>字符串与基本规则</h3><ol><li><p>字符串</p><p>单引号与双引号作用相同、三引号<code>‘’&#39;</code>/<code>“&quot;”</code>用来指定多行字符串。</p><p>更多用法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是一个字符串对象</span></span><br><span class="line">name = <span class="string">'Swaroop'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> name.startswith(<span class="string">'Swa'</span>):</span><br><span class="line">    print(<span class="string">'Yes, the string starts with "Swa"'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">'a'</span> <span class="keyword">in</span> name:</span><br><span class="line">    print(<span class="string">'Yes, it contains the string "a"'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> name.find(<span class="string">'war'</span>) != <span class="number">-1</span>:</span><br><span class="line">    print(<span class="string">'Yes, it contains the string "war"'</span>)</span><br><span class="line"></span><br><span class="line">delimiter = <span class="string">'_*_'</span></span><br><span class="line">mylist = [<span class="string">'Brazil'</span>, <span class="string">'Russia'</span>, <span class="string">'India'</span>, <span class="string">'China'</span>]</span><br><span class="line">print(delimiter.join(mylist))</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ python ds_str_methods.py</span><br><span class="line">Yes, the string starts with &quot;Swa&quot;</span><br><span class="line">Yes, it contains the string &quot;a&quot;</span><br><span class="line">Yes, it contains the string &quot;war&quot;</span><br><span class="line">Brazil_*_Russia_*_India_*_China</span><br></pre></td></tr></table></figure><p>格式化：<code>format()</code></p><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">20</span></span><br><span class="line">name = <span class="string">'Swaroop'</span></span><br><span class="line">print(<span class="string">'&#123;0&#125; was &#123;1&#125; years old when he wrote this book'</span>.format(name, age))</span><br><span class="line">print(<span class="string">'Why is &#123;0&#125; playing with that python?'</span>.format(name))</span><br><span class="line"><span class="comment"># 输出：</span></span><br><span class="line">Swaroop was <span class="number">20</span> years old when he wrote this book</span><br><span class="line">Why is Swaroop playing with that python?</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于浮点数 '0.333' 保留小数点(.)后三位</span></span><br><span class="line">print(<span class="string">'&#123;0:.3f&#125;'</span>.format(<span class="number">1.0</span>/<span class="number">3</span>))</span><br><span class="line"><span class="comment"># 使用下划线填充文本，并保持文字处于中间位置</span></span><br><span class="line"><span class="comment"># 使用 (^) 定义 '___hello___'字符串长度为 11</span></span><br><span class="line">print(<span class="string">'&#123;0:_^11&#125;'</span>.format(<span class="string">'hello'</span>))</span><br><span class="line"><span class="comment"># 基于关键词输出 'Swaroop wrote A Byte of Python'  </span></span><br><span class="line">print(<span class="string">'&#123;name&#125; wrote &#123;book&#125;'</span>.format(name=<span class="string">'Swaroop'</span>, book=<span class="string">'A Byte of Python'</span>))</span><br><span class="line"><span class="comment"># 输出：</span></span><br><span class="line"><span class="number">0.333</span></span><br><span class="line">___hello___</span><br><span class="line">Swaroop wrote A Byte of Python</span><br></pre></td></tr></table></figure></li><li><p><code>print()</code></p><p>由于我们正在讨论格式问题，就要注意 <code>print</code> 总是会以一个不可见的“新一行”字符（<code>\n</code>）结尾，因此重复调用 <code>print</code>将会在相互独立的一行中分别打印。为防止打印过程中出现这一换行符，你可以通过 <code>end</code>指定其应以空白结尾：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'a'</span>, end=<span class="string">''</span>)</span><br><span class="line">print(<span class="string">'b'</span>, end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p>输出结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ab</span><br></pre></td></tr></table></figure><p>或者你通过 <code>end</code> 指定以空格结尾：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'a'</span>, end=<span class="string">' '</span>)</span><br><span class="line">print(<span class="string">'b'</span>, end=<span class="string">' '</span>)</span><br><span class="line">print(<span class="string">'c'</span>)</span><br></pre></td></tr></table></figure><p>输出结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a b c</span><br></pre></td></tr></table></figure><p><code>end</code> 参数用在<code>print</code>函数中，目的是打印一行并允许下一次打印在同一行继续。这是一个让 <code>print</code> 能够不在打印的末尾打印出<code>\n</code>（新行换行符）符号的小窍门。</p></li><li><p>转义字符：<code>\</code></p><blockquote><p>以及：在一个字符串中，一个放置在末尾的反斜杠表示字符串将在下一行继续，但不会添加新的一行。</p><p>如果你需要指定一些未经过特殊处理的字符串，比如转义序列，那么你需要在字符串前增加 <code>r</code> 或 <code>R</code> 来指定一个<em>原始（Raw）</em>字符串。</p><p>在处理正则表达式时应全程使用原始字符串。否则，将会有大量 Backwhacking 需要处理。举例说明的话，反向引用可以通过 <code>&#39;\\1&#39;</code> 或 <code>r&#39;\1&#39;</code> 来实现。</p></blockquote></li><li><p>命名规则</p><p>变量是标识符的一个例子。<em>标识符（Identifiers）</em> 是为 <em>某些东西</em> 提供的给定名称。在你命名标识符时，你需要遵守以下规则：</p><ul><li>第一个字符必须是字母表中的字母（大写 ASCII 字符或小写 ASCII 字符或 Unicode 字符）或下划线（<code>_</code>）。</li><li>标识符的其它部分可以由字符（大写 ASCII 字符或小写 ASCII 字符或 Unicode 字符）、下划线（<code>_</code>）、数字（0~9）组成。</li><li>标识符名称区分大小写。例如，<code>myname</code> 和 <code>myName</code> 并<em>不</em>等同。要注意到前者是小写字母 <code>n</code> 而后者是大写字母 <code>N</code>。</li><li><em>有效</em> 的标识符名称可以是 <code>i</code> 或 <code>name_2_3</code> ，<em>无效</em> 的标识符名称可能是 <code>2things</code>，<code>this is spaced out</code>，<code>my-name</code> 和 <code>&gt;a1b2_c3</code>。</li></ul></li><li><p>缩进</p><blockquote><p>使用四个空格来缩进。这是来自 Python 语言官方的建议。好的编辑器会自动为你完成这一工作。请确保你在缩进中使用数量一致的空格，否则你的程序将不会运行，或引发不期望的行为。</p></blockquote></li></ol><h3 id="运算符与表达式"><a href="#运算符与表达式" class="headerlink" title="运算符与表达式"></a>运算符与表达式</h3><ol><li><p><strong>运算符</strong></p><ul><li><code>+</code>（加）<ul><li>两个对象相加。</li><li><code>3+5</code> 则输出 <code>8</code>。<code>&#39;a&#39; + &#39;b&#39;</code> 则输出 <code>&#39;ab&#39;</code>。</li></ul></li><li><code>-</code>（减）<ul><li>从一个数中减去另一个数，如果第一个操作数不存在，则假定为零。</li><li><code>-5.2</code> 将输出一个负数，<code>50 - 24</code> 输出 <code>26</code>。</li></ul></li><li><code>*</code>（乘）<ul><li>给出两个数的乘积，或返回字符串重复指定次数后的结果。</li><li><code>2 * 3</code> 输出 <code>6</code>。<code>&#39;la&#39; * 3</code> 输出 <code>&#39;lalala&#39;</code>。</li></ul></li><li><code>**</code> （乘方）<ul><li>返回 x 的 y 次方。</li><li><code>3 ** 4</code> 输出 <code>81</code> （即 <code>3 * 3 * 3 * 3</code>）。</li></ul></li><li><code>/</code> （除）<ul><li>x 除以 y</li><li><code>13 / 3</code> 输出 <code>4.333333333333333</code>。</li></ul></li><li><code>//</code> （整除）<ul><li>x 除以 y 并对结果<em>向下</em>取整至最接近的整数。</li><li><code>13 // 3</code> 输出 <code>4</code>。</li><li><code>-13 // 3</code> 输出 <code>-5</code>。</li></ul></li><li><code>%</code> （取模）<ul><li>返回除法运算后的余数。</li><li><code>13 % 3</code> 输出 <code>1</code>。<code>-25.5 % 2.25</code> 输出 <code>1.5</code>。</li></ul></li><li><code>&lt;&lt;</code> （左移）<ul><li>将数字的位向左移动指定的位数。（每个数字在内存中以二进制数表示，即 0 和1）</li><li><code>2 &lt;&lt; 2</code> 输出 <code>8</code>。 <code>2</code> 用二进制数表示为 <code>10</code>。</li><li>向左移 2 位会得到 <code>1000</code> 这一结果，表示十进制中的 <code>8</code>。</li></ul></li><li><code>&gt;&gt;</code> （右移）<ul><li>将数字的位向右移动指定的位数。</li><li><code>11 &gt;&gt; 1</code> 输出 <code>5</code>。</li><li><code>11</code> 在二进制中表示为 <code>1011</code>，右移一位后输出 <code>101</code> 这一结果，表示十进制中的 <code>5</code>。</li></ul></li><li><code>&amp;</code> （按位与）<ul><li>对数字进行按位与操作。</li><li><code>5 &amp; 3</code> 输出 <code>1</code>。</li></ul></li><li><code>|</code> （按位或）<ul><li>对数字进行按位或操作。</li><li><code>5 | 3</code> 输出 <code>7</code>。</li></ul></li><li><code>^</code>（按位异或）<ul><li>对数字进行按位异或操作。</li><li><code>5 ^ 3</code> 输出 <code>6</code>。</li></ul></li><li><code>~</code> （按位取反）<ul><li>x 的按位取反结果为 -(x+1)。</li><li><code>~5</code> 输出 <code>-6</code>。有关本例的更多细节可以参阅：<a href="http://stackoverflow.com/a/11810203" target="_blank" rel="noopener">http://stackoverflow.com/a/11810203</a> 。</li></ul></li><li><code>&lt;</code> （小于）<ul><li>返回 x 是否小于 y。所有的比较运算符返回的结果均为 <code>True</code> 或 <code>False</code>。请注意这些名称之中的大写字母。</li><li><code>5 &lt; 3</code> 输出 <code>False</code>，<code>3 &lt; 6</code> 输出 <code>True</code>。</li><li>比较可以任意组成组成链接：<code>3 &lt; 5 &lt; 7</code> 返回 <code>True</code>。</li></ul></li><li><code>&gt;</code> （大于）<ul><li>返回 x 是否大于 y。</li><li><code>5 &gt; 3</code> 返回 <code>True</code>。如果两个操作数均为数字，它们首先将会被转换至一种共同的类型。否则，它将总是返回 <code>False</code>。</li></ul></li><li><code>&lt;=</code> （小于等于）<ul><li>返回 x 是否小于或等于 y。</li><li><code>x = 3; y = 6; x&lt;=y</code> 返回 <code>True</code>。</li></ul></li><li><code>&gt;=</code> （大于等于）<ul><li>返回 x 是否大于或等于 y。</li><li><code>x = 4; y = 3; x&gt;=3</code> 返回 <code>True</code>。</li></ul></li><li><code>==</code> （等于）<ul><li>比较两个对象是否相等。</li><li><code>x = 2; y = 2; x == y</code> 返回 <code>True</code>。</li><li><code>x = &#39;str&#39;; y = &#39;stR&#39;; x == y</code> 返回 <code>False</code>。</li><li><code>x = &#39;str&#39;; y = &#39;str&#39;; x == y</code> 返回 <code>True</code>。</li></ul></li><li><code>!=</code> （不等于）<ul><li>比较两个对象是否不相等。</li><li><code>x = 2; y = 3; x != y</code> 返回 <code>True</code>。</li></ul></li><li><code>not</code> （布尔“非”）<ul><li>如果 x 是 <code>True</code>，则返回 <code>False</code>。如果 x 是 <code>False</code>，则返回 <code>True</code>。</li><li><code>x = True; not x</code> 返回 <code>False</code>。</li></ul></li><li><code>and</code> （布尔“与”）<ul><li>如果 x 是 <code>False</code>，则 <code>x and y</code> 返回 <code>False</code>，否则返回 y 的计算值。</li><li>当 x 是 <code>False</code> 时，<code>x = False; y = True; x and y</code> 将返回 <code>False</code>。在这一情境中，Python 将不会计算 y，因为它已经了解 and 表达式的左侧是 <code>False</code>，这意味着整个表达式都将是 <code>False</code> 而不会是别的值。这种情况被称作短路计算（Short-circuit Evaluation）。</li></ul></li><li><code>or</code>（布尔“或”）<ul><li>如果 x 是 <code>True</code>，则返回 <code>True</code>，否则它将返回 y 的计算值。</li><li><code>x = Ture; y = False; x or y</code> 将返回 <code>Ture</code>。在这里短路计算同样适用。</li></ul></li></ul></li><li><p>运算顺序</p><p>下面是从 <a href="http://docs.python.org/3/reference/expressions.html#operator-precedence" target="_blank" rel="noopener">Python 参考手册</a> 中引用而来。<strong>你最好使用圆括号操作符来对运算符与操作数进行分组，以更加明确地指定优先级。这也能使得程序更加可读</strong>。你可以阅读<a href="https://bop.mol.uno/08.op_exp.html#changing-order-of-evaluation" target="_blank" rel="noopener">改变运算顺序</a>来了解更多的细节。</p><ul><li><code>lambda</code>：Lambda 表达式</li><li><code>if - else</code> ：条件表达式</li><li><code>or</code>：布尔“或”</li><li><code>and</code>：布尔“与”</li><li><code>not x</code>：布尔“非”</li><li><code>in, not in, is, is not, &lt;, &lt;=, &gt;, &gt;=, !=, ==</code>：比较，包括成员资格测试（Membership Tests）和身份测试（Identity Tests）。</li><li><code>|</code>：按位或</li><li><code>^</code>：按位异或</li><li><code>&amp;</code>：按位与</li><li><code>&lt;&lt;, &gt;&gt;</code>：移动</li><li><code>+, -</code>：加与减</li><li><code>*, /, //, %</code>：乘、除、整除、取余</li><li><code>+x, -x, ~x</code>：正、负、按位取反</li><li><code>**</code>：求幂</li><li><code>x[index], x[index:index], x(arguments...), x.attribute</code>：下标、切片、调用、属性引用</li><li><code>(expressions...), [expressions...], {key: value...}, {expressions...}</code>：表示绑定或元组、表示列表、表示字典、表示集合</li></ul></li></ol><h3 id="控制语句"><a href="#控制语句" class="headerlink" title="控制语句"></a>控制语句</h3><ol><li><p><code>if</code>语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">number = <span class="number">23</span></span><br><span class="line">guess = int(input(<span class="string">'Enter an integer : '</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> guess == number:</span><br><span class="line">    <span class="comment"># 新块从这里开始</span></span><br><span class="line">    print(<span class="string">'Congratulations, you guessed it.'</span>)</span><br><span class="line">    print(<span class="string">'(but you do not win any prizes!)'</span>)</span><br><span class="line">    <span class="comment"># 新块在这里结束</span></span><br><span class="line"><span class="keyword">elif</span> guess &lt; number:</span><br><span class="line">    <span class="comment"># 另一代码块</span></span><br><span class="line">    print(<span class="string">'No, it is a little higher than that'</span>)</span><br><span class="line">    <span class="comment"># 你可以在此做任何你希望在该代码块内进行的事情</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'No, it is a little lower than that'</span>)</span><br><span class="line">    <span class="comment"># 你必须通过猜测一个大于（&gt;）设置数的数字来到达这里。</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'Done'</span>)</span><br><span class="line"><span class="comment"># 这最后一句语句将在</span></span><br><span class="line"><span class="comment"># if 语句执行完毕后执行。</span></span><br></pre></td></tr></table></figure></li><li><p><code>for</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">5</span>):</span><br><span class="line">    print(i)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'The for loop is over'</span>)</span><br></pre></td></tr></table></figure></li><li><p><code>while</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">number = <span class="number">23</span></span><br><span class="line">running = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> running:</span><br><span class="line">    guess = int(input(<span class="string">'Enter an integer : '</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> guess == number:</span><br><span class="line">        print(<span class="string">'Congratulations, you guessed it.'</span>)</span><br><span class="line">        <span class="comment"># 这将导致 while 循环中止</span></span><br><span class="line">        running = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">elif</span> guess &lt; number:</span><br><span class="line">        print(<span class="string">'No, it is a little higher than that.'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'No, it is a little lower than that.'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'The while loop is over.'</span>)</span><br><span class="line">    <span class="comment"># 在这里你可以做你想做的任何事</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'Done'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">Enter an integer : <span class="number">50</span></span><br><span class="line">No, it <span class="keyword">is</span> a little lower than that.</span><br><span class="line">Enter an integer : <span class="number">22</span></span><br><span class="line">No, it <span class="keyword">is</span> a little higher than that.</span><br><span class="line">Enter an integer : <span class="number">23</span></span><br><span class="line">Congratulations, you guessed it.</span><br><span class="line">The <span class="keyword">while</span> loop <span class="keyword">is</span> over.</span><br><span class="line">Done</span><br></pre></td></tr></table></figure></li><li><p><code>break</code></p><p><code>break</code> 语句用以<em>中断</em>（Break）循环语句，也就是中止循环语句的执行，即使循环条件没有变更为 <code>False</code>，或队列中的项目尚未完全迭代依旧如此。</p><p>有一点需要尤其注意，如果你 <em>中断</em> 了一个 <code>for</code> 或 <code>while</code> 循环，任何相应循环中的 <code>else</code> 块都将<em>不会</em>被执行。</p></li><li><p><code>continue</code></p><p><code>continue</code> 语句用以告诉 Python 跳过当前循环块中的剩余语句，并<em>继续</em>该循环的下一次迭代，同样能用于 <code>for</code> 循环。</p></li></ol><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">say_hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 该块属于这一函数</span></span><br><span class="line">    print(<span class="string">'hello world'</span>)</span><br><span class="line"><span class="comment"># 函数结束</span></span><br><span class="line"></span><br><span class="line">say_hello()  <span class="comment"># 调用函数</span></span><br><span class="line">say_hello()  <span class="comment"># 再次调用函数</span></span><br></pre></td></tr></table></figure><ol><li><p>参数</p><blockquote><p>在定义函数时给定的名称称作<em>“形参”（Parameters）</em>，在调用函数时你所提供给函数的值称作<em>“实参”（Arguments）</em>。</p></blockquote></li><li><p>局部变量</p><blockquote><p>当你在一个函数的定义中声明变量时，它们不会以任何方式与身处函数之外但具有相同名称的变量产生关系，也就是说，这些变量名只存在于函数这一<em>局部（Local）</em>。这被称为变量的<em>作用域（Scope）</em>。所有变量的作用域是它们被定义的块，从定义它们的名字的定义点开始。</p></blockquote></li><li><p>全局声明</p><p><code>global</code> 语句用以声明 <code>x</code> 是一个全局变量——因此，当我们在函数中为 <code>x</code> 进行赋值时，这一改动将影响到我们在主代码块中使用的 <code>x</code> 的值。</p><p>你可以在同一句 <code>global</code> 语句中指定不止一个的全局变量，例如 <code>global x, y, z</code>。</p></li></ol><h3 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h3><ol><li><p>模块的 <code>__name__</code></p><p>每个模块都有一个名称，而模块中的语句可以找到它们所处的模块的名称。这对于确定模块是独立运行的还是被导入进来运行的这一特定目的来说大为有用。正如先前所提到的，当模块第一次被导入时，它所包含的代码将被执行。我们可以通过这一特性来使模块以不同的方式运行，这取决于它是为自己所用还是从其它从的模块中导入而来。这可以通过使用模块的 <code>__name__</code> 属性来实现。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(<span class="string">'This program is being run by itself'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'I am being imported from another module'</span>)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ python module_using_name.py</span><br><span class="line">This program is being run by itself</span><br><span class="line"></span><br><span class="line">$ python</span><br><span class="line">&gt;&gt;&gt; import module_using_name</span><br><span class="line">I am being imported from another module</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure></li><li><p><strong>Python之蝉</strong></p><blockquote><p>Python 的一大指导原则是“明了胜过晦涩”。你可以通过在 Python 中运行 <code>import this</code> 来了解更多内容。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import this</span><br><span class="line">The Zen of Python, by Tim Peters</span><br><span class="line"></span><br><span class="line">Beautiful is better than ugly.</span><br><span class="line">Explicit is better than implicit.</span><br><span class="line">Simple is better than complex.</span><br><span class="line">Complex is better than complicated.</span><br><span class="line">Flat is better than nested.</span><br><span class="line">Sparse is better than dense.</span><br><span class="line">Readability counts.</span><br><span class="line">Special cases aren&apos;t special enough to break the rules.</span><br><span class="line">Although practicality beats purity.</span><br><span class="line">Errors should never pass silently.</span><br><span class="line">Unless explicitly silenced.</span><br><span class="line">In the face of ambiguity, refuse the temptation to guess.</span><br><span class="line">There should be one-- and preferably only one --obvious way to do it.</span><br><span class="line">Although that way may not be obvious at first unless you&apos;re Dutch.</span><br><span class="line">Now is better than never.</span><br><span class="line">Although never is often better than *right* now.</span><br><span class="line">If the implementation is hard to explain, it&apos;s a bad idea.</span><br><span class="line">If the implementation is easy to explain, it may be a good idea.</span><br><span class="line">Namespaces are one honking great idea -- let&apos;s do more of those!</span><br></pre></td></tr></table></figure></li></ol><h3 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h3><ol><li><p><code>list</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This is my shopping list</span></span><br><span class="line">shoplist = [<span class="string">'apple'</span>, <span class="string">'mango'</span>, <span class="string">'carrot'</span>, <span class="string">'banana'</span>]</span><br><span class="line"></span><br><span class="line">print(<span class="string">'I have'</span>, len(shoplist), <span class="string">'items to purchase.'</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'These items are:'</span>, end=<span class="string">' '</span>)</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> shoplist:</span><br><span class="line">    print(item, end=<span class="string">' '</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'\nI also have to buy rice.'</span>)</span><br><span class="line">shoplist.append(<span class="string">'rice'</span>)</span><br><span class="line">print(<span class="string">'My shopping list is now'</span>, shoplist)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'I will sort my list now'</span>)</span><br><span class="line">shoplist.sort()</span><br><span class="line">print(<span class="string">'Sorted shopping list is'</span>, shoplist)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'The first item I will buy is'</span>, shoplist[<span class="number">0</span>])</span><br><span class="line">olditem = shoplist[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">del</span> shoplist[<span class="number">0</span>]</span><br><span class="line">print(<span class="string">'I bought the'</span>, olditem)</span><br><span class="line">print(<span class="string">'My shopping list is now'</span>, shoplist)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ python ds_using_list.py</span><br><span class="line">I have 4 items to purchase.</span><br><span class="line">These items are: apple mango carrot banana</span><br><span class="line">I also have to buy rice.</span><br><span class="line">My shopping list is now [&apos;apple&apos;, &apos;mango&apos;, &apos;carrot&apos;, &apos;banana&apos;, &apos;rice&apos;]</span><br><span class="line">I will sort my list now</span><br><span class="line">Sorted shopping list is [&apos;apple&apos;, &apos;banana&apos;, &apos;carrot&apos;, &apos;mango&apos;, &apos;rice&apos;]</span><br><span class="line">The first item I will buy is apple</span><br><span class="line">I bought the apple</span><br><span class="line">My shopping list is now [&apos;banana&apos;, &apos;carrot&apos;, &apos;mango&apos;, &apos;rice&apos;]</span><br></pre></td></tr></table></figure><p>If you want access to the index of each element within the body of a loop, use the built-in <code>enumerate</code> function:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">animals = [<span class="string">'cat'</span>, <span class="string">'dog'</span>, <span class="string">'monkey'</span>]</span><br><span class="line"><span class="keyword">for</span> idx, animal <span class="keyword">in</span> enumerate(animals):</span><br><span class="line">    print(<span class="string">'#%d: %s'</span> % (idx + <span class="number">1</span>, animal))</span><br><span class="line"><span class="comment"># Prints "#1: cat", "#2: dog", "#3: monkey", each on its own line</span></span><br></pre></td></tr></table></figure></li><li><p>元组</p><p>元组（Tuple）用于将多个对象保存到一起。你可以将它们近似地看作列表，但是元组不能提供列表类能够提供给你的广泛的功能。<strong>元组的一大特征类似于字符串，它们是不可变的，也就是说，你不能编辑或更改元组</strong>。</p><p>元组通常用于保证某一语句或某一用户定义的函数可以安全地采用一组数值，意即元组内的数值不会改变。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 我会推荐你总是使用括号</span></span><br><span class="line"><span class="comment"># 来指明元组的开始与结束</span></span><br><span class="line"><span class="comment"># 尽管括号是一个可选选项。</span></span><br><span class="line"><span class="comment"># 明了胜过晦涩，显式优于隐式。</span></span><br><span class="line">zoo = (<span class="string">'python'</span>, <span class="string">'elephant'</span>, <span class="string">'penguin'</span>)</span><br><span class="line">print(<span class="string">'Number of animals in the zoo is'</span>, len(zoo))</span><br><span class="line"></span><br><span class="line">new_zoo = <span class="string">'monkey'</span>, <span class="string">'camel'</span>, zoo</span><br><span class="line">print(<span class="string">'Number of cages in the new zoo is'</span>, len(new_zoo))</span><br><span class="line">print(<span class="string">'All animals in new zoo are'</span>, new_zoo)</span><br><span class="line">print(<span class="string">'Animals brought from old zoo are'</span>, new_zoo[<span class="number">2</span>])</span><br><span class="line">print(<span class="string">'Last animal brought from old zoo is'</span>, new_zoo[<span class="number">2</span>][<span class="number">2</span>])</span><br><span class="line">print(<span class="string">'Number of animals in the new zoo is'</span>,</span><br><span class="line">      len(new_zoo)<span class="number">-1</span>+len(new_zoo[<span class="number">2</span>]))</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ python ds_using_tuple.py</span><br><span class="line">Number of animals in the zoo is 3</span><br><span class="line">Number of cages in the new zoo is 3</span><br><span class="line">All animals in new zoo are (&apos;monkey&apos;, &apos;camel&apos;, (&apos;python&apos;, &apos;elephant&apos;, &apos;penguin&apos;))</span><br><span class="line">Animals brought from old zoo are (&apos;python&apos;, &apos;elephant&apos;, &apos;penguin&apos;)</span><br><span class="line">Last animal brought from old zoo is penguin</span><br><span class="line">Number of animals in the new zoo is 5</span><br></pre></td></tr></table></figure></li><li><p>字典</p><p><strong>键值必须是唯一</strong>，你只能使用不可变的对象（如字符串）作为字典的键值，但是你可以使用可变或不可变的对象作为字典中的值。基本上这段话也可以翻译为你只能使用<strong>简单对象作为键值</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># “ab”是地址（Address）簿（Book）的缩写</span></span><br><span class="line"></span><br><span class="line">ab = &#123;</span><br><span class="line">    <span class="string">'Swaroop'</span>: <span class="string">'swaroop@swaroopch.com'</span>,</span><br><span class="line">    <span class="string">'Larry'</span>: <span class="string">'larry@wall.org'</span>,</span><br><span class="line">    <span class="string">'Matsumoto'</span>: <span class="string">'matz@ruby-lang.org'</span>,</span><br><span class="line">    <span class="string">'Spammer'</span>: <span class="string">'spammer@hotmail.com'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Swaroop's address is"</span>, ab[<span class="string">'Swaroop'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除一对键值—值配对</span></span><br><span class="line"><span class="keyword">del</span> ab[<span class="string">'Spammer'</span>]</span><br><span class="line"></span><br><span class="line">print(<span class="string">'\nThere are &#123;&#125; contacts in the address-book\n'</span>.format(len(ab)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> name, address <span class="keyword">in</span> ab.items():</span><br><span class="line">    print(<span class="string">'Contact &#123;&#125; at &#123;&#125;'</span>.format(name, address))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加一对键值—值配对</span></span><br><span class="line">ab[<span class="string">'Guido'</span>] = <span class="string">'guido@python.org'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">'Guido'</span> <span class="keyword">in</span> ab:</span><br><span class="line">    print(<span class="string">"\nGuido's address is"</span>, ab[<span class="string">'Guido'</span>])</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ python ds_using_dict.py</span><br><span class="line">Swaroop<span class="string">'s address is swaroop@swaroopch.com</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">There are 3 contacts in the address-book</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Contact Swaroop at swaroop@swaroopch.com</span></span><br><span class="line"><span class="string">Contact Matsumoto at matz@ruby-lang.org</span></span><br><span class="line"><span class="string">Contact Larry at larry@wall.org</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Guido'</span>s address <span class="keyword">is</span> guido@python.org</span><br></pre></td></tr></table></figure><p>A dictionary stores (key, value) pairs, similar to a <code>Map</code> in Java or an object in Javascript. You can use it like this:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;<span class="string">'cat'</span>: <span class="string">'cute'</span>, <span class="string">'dog'</span>: <span class="string">'furry'</span>&#125;  <span class="comment"># Create a new dictionary with some data</span></span><br><span class="line">print(d[<span class="string">'cat'</span>])       <span class="comment"># Get an entry from a dictionary; prints "cute"</span></span><br><span class="line">print(<span class="string">'cat'</span> <span class="keyword">in</span> d)     <span class="comment"># Check if a dictionary has a given key; prints "True"</span></span><br><span class="line">d[<span class="string">'fish'</span>] = <span class="string">'wet'</span>     <span class="comment"># Set an entry in a dictionary</span></span><br><span class="line">print(d[<span class="string">'fish'</span>])      <span class="comment"># Prints "wet"</span></span><br><span class="line"><span class="comment"># print(d['monkey'])  # KeyError: 'monkey' not a key of d</span></span><br><span class="line">print(d.get(<span class="string">'monkey'</span>, <span class="string">'N/A'</span>))  <span class="comment"># Get an element with a default; prints "N/A"</span></span><br><span class="line">print(d.get(<span class="string">'fish'</span>, <span class="string">'N/A'</span>))    <span class="comment"># Get an element with a default; prints "wet"</span></span><br><span class="line"><span class="keyword">del</span> d[<span class="string">'fish'</span>]         <span class="comment"># Remove an element from a dictionary</span></span><br><span class="line">print(d.get(<span class="string">'fish'</span>, <span class="string">'N/A'</span>)) <span class="comment"># "fish" is no longer a key; prints "N/A"</span></span><br></pre></td></tr></table></figure></li><li><p><strong>序列操作</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">shoplist = [<span class="string">'apple'</span>, <span class="string">'mango'</span>, <span class="string">'carrot'</span>, <span class="string">'banana'</span>]</span><br><span class="line">name = <span class="string">'swaroop'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Indexing or 'Subscription' operation #</span></span><br><span class="line"><span class="comment"># 索引或“下标（Subscription）”操作符 #</span></span><br><span class="line">print(<span class="string">'Item 0 is'</span>, shoplist[<span class="number">0</span>])</span><br><span class="line">print(<span class="string">'Item 1 is'</span>, shoplist[<span class="number">1</span>])</span><br><span class="line">print(<span class="string">'Item 2 is'</span>, shoplist[<span class="number">2</span>])</span><br><span class="line">print(<span class="string">'Item 3 is'</span>, shoplist[<span class="number">3</span>])</span><br><span class="line">print(<span class="string">'Item -1 is'</span>, shoplist[<span class="number">-1</span>])</span><br><span class="line">print(<span class="string">'Item -2 is'</span>, shoplist[<span class="number">-2</span>])</span><br><span class="line">print(<span class="string">'Character 0 is'</span>, name[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Slicing on a list #</span></span><br><span class="line">print(<span class="string">'Item 1 to 3 is'</span>, shoplist[<span class="number">1</span>:<span class="number">3</span>])</span><br><span class="line">print(<span class="string">'Item 2 to end is'</span>, shoplist[<span class="number">2</span>:])</span><br><span class="line">print(<span class="string">'Item 1 to -1 is'</span>, shoplist[<span class="number">1</span>:<span class="number">-1</span>])</span><br><span class="line">print(<span class="string">'Item start to end is'</span>, shoplist[:])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从某一字符串中切片 #</span></span><br><span class="line">print(<span class="string">'characters 1 to 3 is'</span>, name[<span class="number">1</span>:<span class="number">3</span>])</span><br><span class="line">print(<span class="string">'characters 2 to end is'</span>, name[<span class="number">2</span>:])</span><br><span class="line">print(<span class="string">'characters 1 to -1 is'</span>, name[<span class="number">1</span>:<span class="number">-1</span>])</span><br><span class="line">print(<span class="string">'characters start to end is'</span>, name[:])</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Item 0 is apple</span><br><span class="line">Item 1 is mango</span><br><span class="line">Item 2 is carrot</span><br><span class="line">Item 3 is banana</span><br><span class="line">Item -1 is banana</span><br><span class="line">Item -2 is carrot</span><br><span class="line">Character 0 is s</span><br><span class="line">Item 1 to 3 is [&apos;mango&apos;, &apos;carrot&apos;]</span><br><span class="line">Item 2 to end is [&apos;carrot&apos;, &apos;banana&apos;]</span><br><span class="line">Item 1 to -1 is [&apos;mango&apos;, &apos;carrot&apos;]</span><br><span class="line">Item start to end is [&apos;apple&apos;, &apos;mango&apos;, &apos;carrot&apos;, &apos;banana&apos;]</span><br><span class="line">characters 1 to 3 is wa</span><br><span class="line">characters 2 to end is aroop</span><br><span class="line">characters 1 to -1 is waroo</span><br><span class="line">characters start to end is swaroop</span><br></pre></td></tr></table></figure></li><li><p>集合</p><p>集合（Set）是简单对象的<strong><em>无序</em></strong>集合（Collection）。当集合中的项目存在与否比起次序或其出现次数更加重要时，我们就会使用集合。<strong>说明集合里的元素是不重复的。</strong></p><p>通过使用集合，你可以测试某些对象的资格或情况，检查它们是否是其它集合的子集，找到两个集合的交集，等等。</p></li><li><p><strong>引用</strong>——涉及到深拷贝浅拷贝的问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'Simple Assignment'</span>)</span><br><span class="line">shoplist = [<span class="string">'apple'</span>, <span class="string">'mango'</span>, <span class="string">'carrot'</span>, <span class="string">'banana'</span>]</span><br><span class="line"><span class="comment"># mylist 只是指向同一对象的另一种名称</span></span><br><span class="line">mylist = shoplist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 我购买了第一项项目，所以我将其从列表中删除</span></span><br><span class="line"><span class="keyword">del</span> shoplist[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">print(<span class="string">'shoplist is'</span>, shoplist)</span><br><span class="line">print(<span class="string">'mylist is'</span>, mylist)</span><br><span class="line"><span class="comment"># 注意到 shoplist 和 mylist 二者都</span></span><br><span class="line"><span class="comment"># 打印出了其中都没有 apple 的同样的列表，以此我们确认</span></span><br><span class="line"><span class="comment"># 它们指向的是同一个对象</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'Copy by making a full slice'</span>)</span><br><span class="line"><span class="comment"># 通过生成一份完整的切片制作一份列表的副本</span></span><br><span class="line">mylist = shoplist[:]</span><br><span class="line"><span class="comment"># 删除第一个项目</span></span><br><span class="line"><span class="keyword">del</span> mylist[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">print(<span class="string">'shoplist is'</span>, shoplist)</span><br><span class="line">print(<span class="string">'mylist is'</span>, mylist)</span><br><span class="line"><span class="comment"># 注意到现在两份列表已出现不同</span></span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ python ds_reference.py</span><br><span class="line">Simple Assignment</span><br><span class="line">shoplist is [&apos;mango&apos;, &apos;carrot&apos;, &apos;banana&apos;]</span><br><span class="line">mylist is [&apos;mango&apos;, &apos;carrot&apos;, &apos;banana&apos;]</span><br><span class="line">Copy by making a full slice</span><br><span class="line">shoplist is [&apos;mango&apos;, &apos;carrot&apos;, &apos;banana&apos;]</span><br><span class="line">mylist is [&apos;carrot&apos;, &apos;banana&apos;]</span><br></pre></td></tr></table></figure><blockquote><p>要记住列表的赋值语句<strong>不会</strong>创建一份副本。你必须使用切片操作来生成一份序列的副本。</p></blockquote></li></ol><h3 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h3><p>类与对象是面向对象编程的两个主要方面。一个<strong>类（Class）</strong>能够创建一种新的<em>类型（Type）</em>，其中<strong>对象（Object）</strong>就是类的<strong>实例（Instance）</strong>。可以这样来类比：你可以拥有类型 <code>int</code> 的变量，也就是说存储整数的变量是 <code>int</code> 类的实例（对象）。</p><p>对象可以使用<em>属于</em>它的普通变量来存储数据。这种从属于对象或类的变量叫作<strong>字段（Field）</strong>。对象还可以使用<em>属于</em>类的函数来实现某些功能，这种函数叫作类的<strong>方法（Method）</strong>。这两个术语很重要，它有助于我们区分函数与变量，哪些是独立的，哪些又是属于类或对象的。总之，字段与方法通称类的<strong>属性（Attribute）</strong>。</p><p>字段有两种类型——它们属于某一类的各个实例或对象，或是从属于某一类本身。它们被分别称作<strong>实例变量（Instance Variables）</strong>与<strong>类变量（Class Variables）</strong>。</p><p>通过 <code>class</code> 关键字可以创建一个类。这个类的字段与方法可以在缩进代码块中予以列出。</p><ol><li><p><code>self</code></p><p><strong>类方法与普通函数只有一种特定的区别</strong>——前者必须多加一个参数在参数列表开头，这个名字必须添加到参数列表的开头，但是你<em>不用</em>在你调用这个功能时为这个参数赋值，Python 会为它提供。这种特定的变量引用的是对象<em>本身</em>，按照惯例，它被赋予 <code>self</code> 这一名称。</p><blockquote><p>Python 中的 <code>self</code> 相当于 C++ 中的 <code>this</code> 指针以及 Java 与 C# 中的 <code>this</code> 引用。</p></blockquote></li><li><p><code>__init__</code></p><p><code>__init__</code> 方法会在类的对象被实例化（Instantiated）时<strong>立即运行</strong>。这一方法可以对任何你想进行操作的目标对象进行<em>初始化（Initialization）</em>操作。这里你要注意在 init 前后加上的双下划线。</p></li><li><p>类变量与对象变量</p><p>每个对象都通过 <code>self.__class__</code> 属性来引用它的类。</p><p>类方法与对象方法与变量是对应的，通过对应的变量引用。我们使用<a href="https://bop.mol.uno/18.more.html#decorator" target="_blank" rel="noopener">装饰器（Decorator）</a>将 <code>how_many</code> 方法标记为类方法。</p><blockquote><p>所有类成员（包括数据成员）都是<em>公开的</em>，并且 Python 中所有的方法都是<em>虚拟的（Virtual）</em>。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Robot</span>:</span></span><br><span class="line">    <span class="string">"""表示有一个带有名字的机器人。"""</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 一个类变量，用来计数机器人的数量</span></span><br><span class="line">    population = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        <span class="string">"""初始化数据"""</span></span><br><span class="line">        self.name = name</span><br><span class="line">        print(<span class="string">"(Initializing &#123;&#125;)"</span>.format(self.name))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 当有人被创建时，机器人</span></span><br><span class="line">        <span class="comment"># 将会增加人口数量</span></span><br><span class="line">        Robot.population += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">die</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""我挂了。"""</span></span><br><span class="line">        print(<span class="string">"&#123;&#125; is being destroyed!"</span>.format(self.name))</span><br><span class="line"></span><br><span class="line">        Robot.population -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> Robot.population == <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">"&#123;&#125; was the last one."</span>.format(self.name))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"There are still &#123;:d&#125; robots working."</span>.format(</span><br><span class="line">                Robot.population))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">say_hi</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""来自机器人的诚挚问候</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        没问题，你做得到。"""</span></span><br><span class="line">        print(<span class="string">"Greetings, my masters call me &#123;&#125;."</span>.format(self.name))</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">how_many</span><span class="params">(cls)</span>:</span></span><br><span class="line">        <span class="string">"""打印出当前的人口数量"""</span></span><br><span class="line">        print(<span class="string">"We have &#123;:d&#125; robots."</span>.format(cls.population))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">droid1 = Robot(<span class="string">"R2-D2"</span>)</span><br><span class="line">droid1.say_hi()</span><br><span class="line">Robot.how_many()</span><br><span class="line"></span><br><span class="line">droid2 = Robot(<span class="string">"C-3PO"</span>)</span><br><span class="line">droid2.say_hi()</span><br><span class="line">Robot.how_many()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"\nRobots can do some work here.\n"</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Robots have finished their work. So let's destroy them."</span>)</span><br><span class="line">droid1.die()</span><br><span class="line">droid2.die()</span><br><span class="line"></span><br><span class="line">Robot.how_many()</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ python oop_objvar.py</span><br><span class="line">(Initializing R2-D2)</span><br><span class="line">Greetings, my masters call me R2-D2.</span><br><span class="line">We have 1 robots.</span><br><span class="line">(Initializing C-3PO)</span><br><span class="line">Greetings, my masters call me C-3PO.</span><br><span class="line">We have 2 robots.</span><br><span class="line"></span><br><span class="line">Robots can do some work here.</span><br><span class="line"></span><br><span class="line">Robots have finished their work. So let&apos;s destroy them.</span><br><span class="line">R2-D2 is being destroyed!</span><br><span class="line">There are still 1 robots working.</span><br><span class="line">C-3PO is being destroyed!</span><br><span class="line">C-3PO was the last one.</span><br><span class="line">We have 0 robots.</span><br></pre></td></tr></table></figure></li><li><p>继承</p><p>面向对象编程的一大优点是对代码的<strong>重用（Reuse）</strong>，重用的一种实现方法就是通过<strong>继承（Inheritance）</strong>机制。继承最好是想象成在类之间实现<strong>类型与子类型（Type and Subtype）</strong>关系的工具。</p><p><code>SchoolMember</code> 类会被称作<strong>基类（Base Class）</strong>或是<strong>超类（Superclass）</strong>。<code>Teacher</code> 和 <code>Student</code> 类会被称作<strong>派生类（Derived Classes）</strong>或是<strong>子类（Subclass）</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SchoolMember</span>:</span></span><br><span class="line">    <span class="string">'''代表任何学校里的成员。'''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">        print(<span class="string">'(Initialized SchoolMember: &#123;&#125;)'</span>.format(self.name))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tell</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">'''告诉我有关我的细节。'''</span></span><br><span class="line">        print(<span class="string">'Name:"&#123;&#125;" Age:"&#123;&#125;"'</span>.format(self.name, self.age), end=<span class="string">" "</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span><span class="params">(SchoolMember)</span>:</span></span><br><span class="line">    <span class="string">'''代表一位老师。'''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age, salary)</span>:</span></span><br><span class="line">        SchoolMember.__init__(self, name, age)</span><br><span class="line">        self.salary = salary</span><br><span class="line">        print(<span class="string">'(Initialized Teacher: &#123;&#125;)'</span>.format(self.name))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tell</span><span class="params">(self)</span>:</span></span><br><span class="line">        SchoolMember.tell(self)</span><br><span class="line">        print(<span class="string">'Salary: "&#123;:d&#125;"'</span>.format(self.salary))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(SchoolMember)</span>:</span></span><br><span class="line">    <span class="string">'''代表一位学生。'''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age, marks)</span>:</span></span><br><span class="line">        SchoolMember.__init__(self, name, age)</span><br><span class="line">        self.marks = marks</span><br><span class="line">        print(<span class="string">'(Initialized Student: &#123;&#125;)'</span>.format(self.name))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tell</span><span class="params">(self)</span>:</span></span><br><span class="line">        SchoolMember.tell(self)</span><br><span class="line">        print(<span class="string">'Marks: "&#123;:d&#125;"'</span>.format(self.marks))</span><br><span class="line"></span><br><span class="line">t = Teacher(<span class="string">'Mrs. Shrividya'</span>, <span class="number">40</span>, <span class="number">30000</span>)</span><br><span class="line">s = Student(<span class="string">'Swaroop'</span>, <span class="number">25</span>, <span class="number">75</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印一行空白行</span></span><br><span class="line">print()</span><br><span class="line"></span><br><span class="line">members = [t, s]</span><br><span class="line"><span class="keyword">for</span> member <span class="keyword">in</span> members:</span><br><span class="line">    <span class="comment"># 对全体师生工作</span></span><br><span class="line">    member.tell()</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ python oop_subclass.py</span><br><span class="line">(Initialized SchoolMember: Mrs. Shrividya)</span><br><span class="line">(Initialized Teacher: Mrs. Shrividya)</span><br><span class="line">(Initialized SchoolMember: Swaroop)</span><br><span class="line">(Initialized Student: Swaroop)</span><br><span class="line"></span><br><span class="line">Name:&quot;Mrs. Shrividya&quot; Age:&quot;40&quot; Salary: &quot;30000&quot;</span><br><span class="line">Name:&quot;Swaroop&quot; Age:&quot;25&quot; Marks: &quot;75&quot;</span><br></pre></td></tr></table></figure><p>需要注意到的是：因为我们在 <code>Teacher</code> 和 <code>Student</code> 子类中定义了 <code>__init__</code> 方法，Python 不会自动调用基类 <code>SchoolMember</code> 的构造函数，你必须自己显式地调用它。</p><p>相反，如果我们<em>没有</em>在一个子类中定义一个 <code>__init__</code> 方法，Python 将会自动调用基类的构造函数。</p><p>当我们调用父类的方法时，子类可以看作是父类的实例。</p></li></ol><h3 id="输入与输出"><a href="#输入与输出" class="headerlink" title="输入与输出"></a>输入与输出</h3><ol><li><p>输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reverse</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> text[::<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_palindrome</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> text == reverse(text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">something = input(<span class="string">"Enter text: "</span>)</span><br><span class="line"><span class="keyword">if</span> is_palindrome(something):</span><br><span class="line">    print(<span class="string">"Yes, it is a palindrome"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"No, it is not a palindrome"</span>)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ python3 io_input.py</span><br><span class="line">Enter text: sir</span><br><span class="line">No, it is not a palindrome</span><br><span class="line"></span><br><span class="line">$ python3 io_input.py</span><br><span class="line">Enter text: madam</span><br><span class="line">Yes, it is a palindrome</span><br><span class="line"></span><br><span class="line">$ python3 io_input.py</span><br><span class="line">Enter text: racecar</span><br><span class="line">Yes, it is a palindrome</span><br></pre></td></tr></table></figure></li><li><p>文件</p><p>你可以通过创建一个属于 <code>file</code> 类的对象并适当使用它的 <code>read</code>、<code>readline</code>、<code>write</code> 方法来打开或使用文件，并对它们进行读取或写入。读取或写入文件的能力取决于你指定以何种方式打开文件。最后，当你完成了文件，你可以调用 <code>close</code> 方法来告诉 Python 我们已经完成了对该文件的使用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">poem = <span class="string">'''\</span></span><br><span class="line"><span class="string">Programming is fun</span></span><br><span class="line"><span class="string">When the work is done</span></span><br><span class="line"><span class="string">if you wanna make your work also fun:</span></span><br><span class="line"><span class="string">    use Python!</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开文件以编辑（'w'riting）</span></span><br><span class="line">f = open(<span class="string">'poem.txt'</span>, <span class="string">'w'</span>)</span><br><span class="line"><span class="comment"># 向文件中编写文本</span></span><br><span class="line">f.write(poem)</span><br><span class="line"><span class="comment"># 关闭文件</span></span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果没有特别指定，</span></span><br><span class="line"><span class="comment"># 将假定启用默认的阅读（'r'ead）模式</span></span><br><span class="line">f = open(<span class="string">'poem.txt'</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    line = f.readline()</span><br><span class="line">    <span class="comment"># 零长度指示 EOF</span></span><br><span class="line">    <span class="keyword">if</span> len(line) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># 每行（`line`）的末尾</span></span><br><span class="line">    <span class="comment"># 都已经有了换行符</span></span><br><span class="line">    <span class="comment">#因为它是从一个文件中进行读取的</span></span><br><span class="line">    print(line, end=<span class="string">''</span>)</span><br><span class="line"><span class="comment"># 关闭文件</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ python3 io_using_file.py</span><br><span class="line">Programming is fun</span><br><span class="line">When the work is done</span><br><span class="line">if you wanna make your work also fun:</span><br><span class="line">    use Python!</span><br></pre></td></tr></table></figure><p>我们使用内置的 <code>open</code> 函数并指定文件名以及我们所希望使用的打开模式来打开一个文件。打开模式可以是阅读模式（<code>&#39;r&#39;</code>），写入模式（<code>&#39;w&#39;</code>）和追加模式（<code>&#39;a&#39;</code>）。我们还可以选择是通过文本模式（<code>&#39;t&#39;</code>）还是二进制模式（<code>&#39;b&#39;</code>）来读取、写入或追加文本。实际上还有其它更多的模式可用，<code>help(open)</code> 会给你有关它们的更多细节。在默认情况下，<code>open()</code> 会将文件视作文本（<strong>t</strong>ext）文件，并以阅读（<strong>r</strong>ead）模式打开它。</p></li><li><p>Pickle</p><p>Python 提供了一个叫作 <code>Pickle</code> 的标准模块，通过它你可以将<em>任何</em>纯 Python 对象存储到一个文件中，并在稍后将其取回。这叫作<em>持久地（Persistently）</em>存储对象。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line"><span class="comment"># 我们存储相关对象的文件的名称</span></span><br><span class="line">shoplistfile = <span class="string">'shoplist.data'</span></span><br><span class="line"><span class="comment"># 需要购买的物品清单</span></span><br><span class="line">shoplist = [<span class="string">'apple'</span>, <span class="string">'mango'</span>, <span class="string">'carrot'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 准备写入文件</span></span><br><span class="line">f = open(shoplistfile, <span class="string">'wb'</span>)</span><br><span class="line"><span class="comment"># 转储对象至文件</span></span><br><span class="line">pickle.dump(shoplist, f)</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除 shoplist 变量</span></span><br><span class="line"><span class="keyword">del</span> shoplist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新打开存储文件</span></span><br><span class="line">f = open(shoplistfile, <span class="string">'rb'</span>)</span><br><span class="line"><span class="comment"># 从文件中载入对象</span></span><br><span class="line">storedlist = pickle.load(f)</span><br><span class="line">print(storedlist)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python io_pickle.py</span><br><span class="line">[&apos;apple&apos;, &apos;mango&apos;, &apos;carrot&apos;]</span><br></pre></td></tr></table></figure><p>要想将一个对象存储到一个文件中，我们首先需要通过 <code>open</code> 以写入（<strong>w</strong>rite）二进制（<strong>b</strong>inary）模式打开文件，然后调用 <code>pickle</code> 模块的 <code>dump</code> 函数。这一过程被称作<em>封装（Pickling）</em>。</p><p>接着，我们通过 <code>pickle</code> 模块的 <code>load</code> 函数接收返回的对象。这个过程被称作<em>拆封（Unpickling）</em>。</p></li><li><p><strong>Unicode</strong>——<strong>Important</strong></p><p>截止到现在，当我们编写或使用字符串、读取或写入某一文件时，我们用到的只是简单的英语字符。</p><blockquote><p>注意：如果你正在使用 Python 2，我们又希望能够读写其它非英语语言，我们需要使用 <code>unicode</code> 类型，它全都以字母 <code>u</code> 开头，例如 <code>u&quot;hello world&quot;</code>。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"hello world"</span></span><br><span class="line"><span class="string">'hello world'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(<span class="string">"hello world"</span>)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">str</span>'&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">u</span>"<span class="title">hello</span> <span class="title">world</span>"</span></span><br><span class="line"><span class="class">'<span class="title">hello</span> <span class="title">world</span>'</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">type</span><span class="params">(<span class="string">u"hello world"</span>)</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> '<span class="title">str</span>'&gt;</span></span><br></pre></td></tr></table></figure><p>当我们阅读或写入某一文件或当我们希望与互联网上的其它计算机通信时，我们需要将我们的 Unicode 字符串转换至一个能够被发送和接收的格式，这个格式叫作“UTF-8”。我们可以在这一格式下进行读取与写入，只需使用一个简单的关键字参数到我们的标准 <code>open</code> 函数中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"></span><br><span class="line">f = io.open(<span class="string">"abc.txt"</span>, <span class="string">"wt"</span>, encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">f.write(<span class="string">u"Imagine non-English language here"</span>)</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line">text = io.open(<span class="string">"abc.txt"</span>, encoding=<span class="string">"utf-8"</span>).read()</span><br><span class="line">print(text)</span><br></pre></td></tr></table></figure><p><strong>它是如何工作的</strong></p><p>现在你可以忽略 <code>import</code> 语句，我们会在<a href="https://bop.mol.uno/11.modules.html#modules" target="_blank" rel="noopener">模块章节</a>章节探讨有关它的更多细节。</p><p>每当我们诸如上面那番使用 Unicode 字面量编写一款程序时，我们必须确保 Python 程序已经被告知我们使用的是 UTF-8，因此我们必须将 <code># encoding=utf-8</code> 这一注释放置在我们程序的顶端。<a href="https://bop.mol.uno/15.io.html#fn_4" target="_blank" rel="noopener">4</a></p><p>我们使用 <code>io.open</code> 并提供了“编码（Encoding）”与“解码（Decoding）”参数来告诉 Python 我们正在使用 Unicode。</p><p>你可以阅读以下文章来了解有关这一话题的更多内容：</p><ul><li><a href="http://www.joelonsoftware.com/articles/Unicode.html" target="_blank" rel="noopener">“The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets”</a></li><li><a href="http://docs.python.org/3/howto/unicode.html" target="_blank" rel="noopener">Python Unicode Howto</a></li><li><a href="http://nedbatchelder.com/text/unipain.html" target="_blank" rel="noopener">Pragmatic Unicode talk by Nat Batchelder</a></li></ul></li></ol><h3 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h3><ol><li><p>处理异常</p><p>如果你的程序中出现了一些无效的语句该怎么办？Python 将会对此进行处理，<strong>举起（Raises）</strong><a href="https://bop.mol.uno/16.exceptions.html#fn_1" target="_blank" rel="noopener">1</a>它的小手来告诉你哪里出现了一个<strong>错误（Error）</strong>。</p><p>我们可以通过使用 <code>try..except</code> 来处理异常状况。一般来说我们会把通常的语句放在 try 代码块中，将我们的错误处理器代码放置在 except 代码块中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    text = input(<span class="string">'Enter something --&gt; '</span>)</span><br><span class="line"><span class="keyword">except</span> EOFError:</span><br><span class="line">    print(<span class="string">'Why did you do an EOF on me?'</span>)</span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">    print(<span class="string">'You cancelled the operation.'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'You entered &#123;&#125;'</span>.format(text))</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Press ctrl + d</span><br><span class="line">$ python exceptions_handle.py</span><br><span class="line">Enter something --&gt; Why did you do an EOF on me?</span><br><span class="line"></span><br><span class="line"># Press ctrl + c</span><br><span class="line">$ python exceptions_handle.py</span><br><span class="line">Enter something --&gt; ^CYou cancelled the operation.</span><br><span class="line"></span><br><span class="line">$ python exceptions_handle.py</span><br><span class="line">Enter something --&gt; No exceptions</span><br><span class="line">You entered No exceptions</span><br></pre></td></tr></table></figure></li><li><p>抛出异常</p><p>你可以通过 <code>raise</code> 语句来<em>引发</em>一次异常，具体方法是提供错误名或异常名以及要<em>抛出（Thrown）</em>异常的对象。</p><p>你能够引发的错误或异常必须是直接或间接从属于 <code>Exception</code>（异常） 类的派生类。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding=UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShortInputException</span><span class="params">(Exception)</span>:</span></span><br><span class="line">    <span class="string">'''一个由用户定义的异常类'''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, length, atleast)</span>:</span></span><br><span class="line">        Exception.__init__(self)</span><br><span class="line">        self.length = length</span><br><span class="line">        self.atleast = atleast</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    text = input(<span class="string">'Enter something --&gt; '</span>)</span><br><span class="line">    <span class="keyword">if</span> len(text) &lt; <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">raise</span> ShortInputException(len(text), <span class="number">3</span>)</span><br><span class="line">    <span class="comment"># 其他工作能在此处继续正常运行</span></span><br><span class="line"><span class="keyword">except</span> EOFError:</span><br><span class="line">    print(<span class="string">'Why did you do an EOF on me?'</span>)</span><br><span class="line"><span class="keyword">except</span> ShortInputException <span class="keyword">as</span> ex:</span><br><span class="line">    print((<span class="string">'ShortInputException: The input was '</span> +</span><br><span class="line">           <span class="string">'&#123;0&#125; long, expected at least &#123;1&#125;'</span>)</span><br><span class="line">          .format(ex.length, ex.atleast))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'No exception was raised.'</span>)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ python exceptions_raise.py</span><br><span class="line">Enter something --&gt; a</span><br><span class="line">ShortInputException: The input was 1 long, expected at least 3</span><br><span class="line"></span><br><span class="line">$ python exceptions_raise.py</span><br><span class="line">Enter something --&gt; abc</span><br><span class="line">No exception was raised.</span><br></pre></td></tr></table></figure><p><strong>假设你正在你的读取中读取一份文件。你应该如何确保文件对象被正确关闭，无论是否会发生异常？这可以通过 <code>finally</code> 块来完成。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">f = <span class="literal">None</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    f = open(<span class="string">"poem.txt"</span>)</span><br><span class="line">    <span class="comment"># 我们常用的文件阅读风格</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        line = f.readline()</span><br><span class="line">        <span class="keyword">if</span> len(line) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        print(line, end=<span class="string">''</span>)</span><br><span class="line">        sys.stdout.flush()</span><br><span class="line">        print(<span class="string">"Press ctrl+c now"</span>)</span><br><span class="line">        <span class="comment"># 为了确保它能运行一段时间</span></span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">except</span> IOError:</span><br><span class="line">    print(<span class="string">"Could not find file poem.txt"</span>)</span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">    print(<span class="string">"!! You cancelled the reading from the file."</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="keyword">if</span> f:</span><br><span class="line">        f.close()</span><br><span class="line">    print(<span class="string">"(Cleaning up: Closed the file)"</span>)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ python exceptions_finally.py</span><br><span class="line">Programming is fun</span><br><span class="line">Press ctrl+c now</span><br><span class="line">^C!! You cancelled the reading from the file.</span><br><span class="line">(Cleaning up: Closed the file)</span><br></pre></td></tr></table></figure></li><li><p><strong>with语句</strong></p><p>在 <code>try</code> 块中获取资源，然后在 <code>finally</code> 块中释放资源是一种常见的模式。因此，还有一个 <code>with</code> 语句使得这一过程可以以一种干净的姿态得以完成。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">"poem.txt"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">        print(line, end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p>程序输出的内容应与上一个案例所呈现的相同。本例的不同之处在于我们使用的是 <code>open</code> 函数与 <code>with</code> 语句——我们将关闭文件的操作交由 <code>with open</code> 来自动完成。</p><p>在幕后发生的事情是有一项 <code>with</code> 语句所使用的协议（Protocol）。它会获取由 <code>open</code> 语句返回的对象，在本案例中就是“thefile”。</p><p>它<em>总会</em>在代码块开始之前调用 <code>thefile.__enter__</code> 函数，<strong>并且<em>总会</em>在代码块执行完毕之后调用 thefile.<strong>exit</strong></strong>。</p></li></ol><h3 id="标准库"><a href="#标准库" class="headerlink" title="标准库"></a>标准库</h3><ol><li><p>日志模块</p><p>如果你想将一些调试（Debugging）信息或一些重要的信息储存在某个地方，以便你可以检查你的程序是否如你所期望那般运行，应该怎么做？你应该如何将这些信息“储存在某个地方”？这可以通过 <code>logging</code> 模块来实现。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> platform.platform().startswith(<span class="string">'Windows'</span>):</span><br><span class="line">    logging_file = os.path.join(os.getenv(<span class="string">'HOMEDRIVE'</span>),</span><br><span class="line">                                os.getenv(<span class="string">'HOMEPATH'</span>),</span><br><span class="line">                                <span class="string">'test.log'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    logging_file = os.path.join(os.getenv(<span class="string">'HOME'</span>),</span><br><span class="line">                                <span class="string">'test.log'</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Logging to"</span>, logging_file)</span><br><span class="line"></span><br><span class="line">logging.basicConfig(</span><br><span class="line">    level=logging.DEBUG,</span><br><span class="line">    format=<span class="string">'%(asctime)s : %(levelname)s : %(message)s'</span>,</span><br><span class="line">    filename=logging_file,</span><br><span class="line">    filemode=<span class="string">'w'</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">logging.debug(<span class="string">"Start of the program"</span>)</span><br><span class="line">logging.info(<span class="string">"Doing something"</span>)</span><br><span class="line">logging.warning(<span class="string">"Dying now"</span>)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ python stdlib_logging.py</span><br><span class="line">Logging to /Users/swa/test.log</span><br><span class="line"></span><br><span class="line">$ cat /Users/swa/test.log</span><br><span class="line">2014-03-29 09:27:36,660 : DEBUG : Start of the program</span><br><span class="line">2014-03-29 09:27:36,660 : INFO : Doing something</span><br><span class="line">2014-03-29 09:27:36,660 : WARNING : Dying now</span><br></pre></td></tr></table></figure><p>我们使用了三款标准库中的模块——<code>os</code> 模块用以和操作系统交互，<code>platform</code> 模块用以获取平台——操作系统——的信息，<code>logging</code> 模块用来<em>记录（Log）</em>信息。</p></li><li><p>Python每周模块</p><p>标准库中还有许多模块值得探索，例如一些<a href="http://docs.python.org/3/library/pdb.html" target="_blank" rel="noopener">用以调试（Debugging）的模块</a>， <a href="http://docs.python.org/3/library/argparse.html" target="_blank" rel="noopener">处理命令行选项的模块</a>，<a href="http://docs.python.org/3/library/re.html" target="_blank" rel="noopener">正则表达式（Regular Expressions）模块</a> 等等等等。</p><p>进一步探索标准库的最好方法是阅读由 Doug Hellmann 撰写的优秀的 <a href="http://pymotw.com/2/contents.html" target="_blank" rel="noopener">Python Module of the Week</a> 系列（你还可以阅读<a href="http://amzn.com/0321767349" target="_blank" rel="noopener">它的实体书</a>或是阅读 <a href="http://docs.python.org/3/" target="_blank" rel="noopener">Python 官方文档</a>）。</p></li></ol><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ol><li><p>Python 2 与 Python 3 的不同</p><p>请参阅：</p><ul><li><a href="http://pythonhosted.org/six/" target="_blank" rel="noopener">“Six” library</a></li><li><a href="http://lucumr.pocoo.org/2013/5/21/porting-to-python-3-redux/" target="_blank" rel="noopener">Porting to Python 3 Redux by Armin</a></li><li><a href="http://pydanny.com/experiences-with-django-python3.html" target="_blank" rel="noopener">Python 3 experience by PyDanny</a></li><li><a href="https://docs.djangoproject.com/en/dev/topics/python3/" target="_blank" rel="noopener">Official Django Guide to Porting to Python 3</a></li><li><a href="http://www.reddit.com/r/Python/comments/22ovb3/what_are_the_advantages_to_python_3x/" target="_blank" rel="noopener">Discussion on What are the advantages to python 3.x?</a></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Python&quot;&gt;&lt;a href=&quot;#Python&quot; class=&quot;headerlink&quot; title=&quot;Python&quot;&gt;&lt;/a&gt;Python&lt;/h1&gt;&lt;p&gt; &lt;a href=&quot;https://bop.mol.uno/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;「Python简明教程」&lt;/a&gt;&amp;amp;&amp;amp; JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Python个人笔记&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python" scheme="https://jacksonleon.gitee.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://jacksonleon.gitee.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Settings of iTerm2 on Mac</title>
    <link href="https://jacksonleon.gitee.io/posts/141487065.html"/>
    <id>https://jacksonleon.gitee.io/posts/141487065.html</id>
    <published>2019-01-24T05:35:42.000Z</published>
    <updated>2019-01-24T09:28:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mac终端iTerm-2配置"><a href="#Mac终端iTerm-2配置" class="headerlink" title="Mac终端iTerm 2配置"></a>Mac终端iTerm 2配置</h1><p>Author: 以乐之名 「from 简书」</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>完成配置后的iTerm 2具备功能：</p><ol><li>语法高亮</li><li>命令Tab补全</li><li>自动提示</li><li>Git相关功能</li></ol></blockquote><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li><p><strong>下载</strong><a href="https://link.jianshu.com/?t=http%3A%2F%2Fwww.iterm2.com%2F" target="_blank" rel="noopener"><strong>iTerm2</strong></a></p></li><li><p>解压后安装iTerm2并打开</p></li><li><p>设为Mac默认终端</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /bin/zsh</span><br><span class="line"><span class="comment"># 如果想修改回默认dash，同样使用chsh命令即可：</span></span><br><span class="line">chsh -s /bin/bash</span><br></pre></td></tr></table></figure></li></ol><h2 id="配置美化"><a href="#配置美化" class="headerlink" title="配置美化"></a>配置美化</h2><ol><li><p><strong>配色方案</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/altercation/solarized</span><br><span class="line"><span class="built_in">cd</span> solarized/iterm2-colors-solarized/</span><br><span class="line">open .</span><br></pre></td></tr></table></figure><p>在打开的finder窗口中，双击Solarized Dark.itermcolors和Solarized Light.itermcolors即可安装明暗两种配色，再次进入iTerm2 -&gt; Preferences -&gt; Profiles -&gt; Colors -&gt; Color Presets中根据个人喜好选择这两种配色中的一种即可：</p><p><img src="https://i.loli.net/2019/04/30/5cc8339b3decb.jpg" alt></p></li><li><p><strong>oh-my-zsh</strong></p><p>github：<a href="https://link.jianshu.com?t=https%3A%2F%2Fgithub.com%2Frobbyrussell%2Foh-my-zsh" target="_blank" rel="noopener">https://github.com/robbyrussell/oh-my-zsh</a></p><p>官方提供 curl 和 wget 两种安装方式</p><ul><li><p>curl 安装：</p><p> <code>sh -c ``&quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</code></p></li><li><p>wget安装：</p><p> <code>sh -c ``&quot;$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)&quot;</code></p></li></ul></li><li><p><strong>iTerm 2主题</strong></p><p>用vim编辑<code>~/.zshrc</code>，将zsh主题修改为“agnoster”，<code>ZSH_THEME=&quot;agnoster&quot;</code>，之后使用<code>command+Q</code>或<code>source ~/.zshrc</code>，是配置文件生效。</p><p><em>路径前缀的XX@XX太长，缩短：</em><br>编辑<code>~/.oh-my-zsh/themes/agnoster.zsh-theme</code>主体文件，将里面的<code>build_prompt</code>下的<code>prompt_context</code>字段在前面加<code>#</code>注释掉即可</p></li><li><p><strong>安装PowerLine</strong></p><p>powerline官网：<a href="http://powerline.readthedocs.io/en/latest/installation.html" target="_blank" rel="noopener">http://powerline.readthedocs….</a></p><p>安装powerline的方式依然简单，也只需要一条命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install powerline-status --user</span><br></pre></td></tr></table></figure><p>没有安装pip的同学可能会碰到<code>zsh: command not found: pip</code>，使用命令安装pip即可：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo easy_install pip</span><br></pre></td></tr></table></figure><p>安装后再次执行安装powerline的命令即可。</p></li><li><p><strong>安装PowerFonts</strong></p><p>安装字体库需要首先将项目git clone至本地，然后执行源码中的install.sh。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git clone</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/powerline/fonts.git --depth=1</span><br><span class="line"><span class="comment"># cd to folder</span></span><br><span class="line"><span class="built_in">cd</span> fonts</span><br><span class="line"><span class="comment"># run install shell</span></span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure><p>安装好字体库之后，我们来设置iTerm2的字体，具体的操作是iTerm2 -&gt; Preferences -&gt; Profiles -&gt; Text，在Font区域选中Change Font，然后找到Meslo LG字体。有L、M、S可选，看个人喜好：</p><p><img src="https://i.loli.net/2019/04/30/5cc833a14eb48.jpg" alt="image-20190124163806040"></p></li><li><p><strong>自动提示与命令补全</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.oh-my-zsh/custom/plugins</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/zsh-users/zsh-autosuggestions</span><br><span class="line">vim ~/.zshrc</span><br><span class="line"><span class="comment"># 加上plugins=(zsh-autosuggestions)</span></span><br></pre></td></tr></table></figure><p>PS：当你重新打开终端时可能看不到变化，可能你的字体颜色太淡了，我们把其改亮一些：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions`</span><br><span class="line">vim zsh-autosuggestions.zsh</span><br><span class="line"><span class="comment"># 修改内容</span></span><br><span class="line">ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE=<span class="string">'fg=10'</span></span><br><span class="line"><span class="built_in">source</span> zsh-autosuggestions.zsh</span><br></pre></td></tr></table></figure></li><li><p><strong>语法高亮效果</strong></p><p>这是oh my zsh的一个插件，安装方式与theme大同小异：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.oh-my-zsh/custom/plugins/</span><br><span class="line">git clone https://github.com/zsh-users/zsh-syntax-highlighting.git</span><br><span class="line">vi ~/.zshrc</span><br></pre></td></tr></table></figure><p>这时我们再次打开zshrc文件进行编辑。找到plugins，此时plugins中应该已经有了git，我们需要把高亮插件也加上：</p><p><img src="https://image-static.segmentfault.com/326/093/326093881-5b0511fccffcd_articlex" alt></p><p>请务必保证插件顺序，zsh-syntax-highlighting必须在最后一个。</p><p>然后在文件的最后一行添加：<code>source ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</code>并保存文件。</p><p>执行命令使刚才的修改生效：<code>source ~/.zshrc</code>。</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Mac终端iTerm-2配置&quot;&gt;&lt;a href=&quot;#Mac终端iTerm-2配置&quot; class=&quot;headerlink&quot; title=&quot;Mac终端iTerm 2配置&quot;&gt;&lt;/a&gt;Mac终端iTerm 2配置&lt;/h1&gt;&lt;p&gt;Author: 以乐之名 「from 简书」&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;完成配置后的iTerm 2具备功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;语法高亮&lt;/li&gt;
&lt;li&gt;命令Tab补全&lt;/li&gt;
&lt;li&gt;自动提示&lt;/li&gt;
&lt;li&gt;Git相关功能&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Macintosh" scheme="https://jacksonleon.gitee.io/categories/Macintosh/"/>
    
      <category term="Application" scheme="https://jacksonleon.gitee.io/categories/Macintosh/Application/"/>
    
      <category term="iTerm 2" scheme="https://jacksonleon.gitee.io/categories/Macintosh/Application/iTerm-2/"/>
    
    
      <category term="Macintosh" scheme="https://jacksonleon.gitee.io/tags/Macintosh/"/>
    
  </entry>
  
  <entry>
    <title>Homebrew for Mac</title>
    <link href="https://jacksonleon.gitee.io/posts/1430094892.html"/>
    <id>https://jacksonleon.gitee.io/posts/1430094892.html</id>
    <published>2019-01-23T13:31:23.000Z</published>
    <updated>2019-01-26T12:41:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Homebrew-for-Mac"><a href="#Homebrew-for-Mac" class="headerlink" title="Homebrew for Mac"></a>Homebrew for Mac</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p> Homebrew简介，安装与使用</p></blockquote><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://www.jianshu.com/p/bca8fc1ff3f0" target="_blank" rel="noopener">本文严重抄袭此文章</a></p><p><a href="https://brew.sh/index_zh-cn.html" target="_blank" rel="noopener">Homebrew 官方网站</a></p><p><code>Homebrew</code>是一个包管理器，用于安装<code>Apple</code>没有预装但你需要的<code>UNIX</code>工具。（比如著名的<code>wget</code>）。</p><p><code>Homebrew</code>会将软件包安装到独立目录(<code>/usr/local/Cellar</code>)，并将其文件软链接至<code>/usr/local</code>。</p><p><code>Homebrew</code>不会将文件安装到它本身目录之外，所以您可将<code>Homebrew</code>安装到任意位置。</p><p><code>Homebrew</code>使<code>macOS</code>更完整。使用<code>gem</code>来安装<code>gems</code>、用<code>brew</code>来安装那些依赖包。</p><blockquote><p><code>wget</code>是一个从网络上自动下载文件的自由工具，支持通过 <code>HTTP、HTTPS、FTP</code> 三个最常见的 <code>TCP/IP</code>协议下载，并可以使用<code>HTTP</code>代理。<code>&quot;wget&quot;</code> 这个名称来源于 <code>“World Wide Web”</code> 与 <code>“get”</code> 的结合。</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul><li><p>安装<code>XCode</code>或者<code>Command Line Tools for Xcode</code>。Xcode可以从AppStore里下载安装，<code>Command Line Tools for Xcode</code>需要在终端中输入以下代码运行安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-select --install</span><br></pre></td></tr></table></figure></li><li><p>安装Homebrew。将以下命令粘贴至终端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure><p>脚本会在执行前暂停，并说明将它将做什么。</p><blockquote><p>安装完成以后，需要运行<code>brew doctor</code>命令检测下是否有什么冲突的地方（如没有卸载<code>MacPorts</code>等等）</p><p><code>Homebrew</code>安装成功后，会自动创建目录<code>/usr/local/Cellar</code>来存放<code>Homebrew</code>安装的程序。</p></blockquote><p>移除Homebrew。将以下命令粘贴至终端 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall)&quot;</span><br></pre></td></tr></table></figure></li></ul><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">// 搜索包</span><br><span class="line">brew search mysql</span><br><span class="line"></span><br><span class="line">// 安装包</span><br><span class="line">brew install mysql</span><br><span class="line"></span><br><span class="line">// 查看包信息，比如目前的版本，依赖，安装后注意事项等</span><br><span class="line">brew info mysql</span><br><span class="line"></span><br><span class="line">// 卸载包</span><br><span class="line">brew uninstall wget</span><br><span class="line"></span><br><span class="line">// 显示已安装的包</span><br><span class="line">brew list</span><br><span class="line"></span><br><span class="line">// 查看brew的帮助</span><br><span class="line">brew –<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line">// 更新， 这会更新 Homebrew 自己</span><br><span class="line">brew update</span><br><span class="line"></span><br><span class="line">// 检查过时（是否有新版本），这会列出所有安装的包里，哪些可以升级</span><br><span class="line">brew outdated</span><br><span class="line">brew outdated mysql</span><br><span class="line"></span><br><span class="line">// 升级所有可以升级的软件们</span><br><span class="line">brew upgrade</span><br><span class="line">brew upgrade mysql</span><br><span class="line"></span><br><span class="line">// 清理不需要的版本极其安装包缓存</span><br><span class="line">brew cleanup</span><br><span class="line">brew cleanup mysql</span><br></pre></td></tr></table></figure><h2 id="扩展：Homebrew-Cask"><a href="#扩展：Homebrew-Cask" class="headerlink" title="扩展：Homebrew Cask"></a>扩展：Homebrew Cask</h2><p>你已经感受到了使用<code>Homebrew</code>安装命令行程序的便利。那么接下来，我们将通过<code>Homebrew Cask</code>优雅、简单、快速的安装和管理<code>OS X</code>图形界面程序，比如<code>Google Chrome</code>和<code>Dropbox</code>。</p><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install caskroom/cask/brew-cask</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>基本用法与<code>brew</code>相同，只不过在<code>brew</code>后面加了一个<code>cask</code>单词。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 安装软件</span><br><span class="line">brew cask install google-chrome</span><br><span class="line"></span><br><span class="line">// 卸载软件</span><br><span class="line">brew cask uninstall google-chrome</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>JDK 8 can be downloaded from <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">Oracle’s JDK Page</a>.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 安装Bazel</span><br><span class="line">brew install bazel</span><br><span class="line"></span><br><span class="line">// 查看Bazel版本</span><br><span class="line">bazel version</span><br><span class="line"></span><br><span class="line">// 提示需要安装java JDK</span><br></pre></td></tr></table></figure><p><strong>移除JAVA JDK</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -fr /Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin</span><br><span class="line">sudo rm -fr /Library/PreferencesPanes/JavaControlPanel.prefPane</span><br><span class="line">sudo rm -fr ~/Library/Application\ Support/Java</span><br><span class="line">sudo rm -rf /Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Homebrew-for-Mac&quot;&gt;&lt;a href=&quot;#Homebrew-for-Mac&quot; class=&quot;headerlink&quot; title=&quot;Homebrew for Mac&quot;&gt;&lt;/a&gt;Homebrew for Mac&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt; Homebrew简介，安装与使用&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Macintosh" scheme="https://jacksonleon.gitee.io/categories/Macintosh/"/>
    
      <category term="Application" scheme="https://jacksonleon.gitee.io/categories/Macintosh/Application/"/>
    
      <category term="Homebrew" scheme="https://jacksonleon.gitee.io/categories/Macintosh/Application/Homebrew/"/>
    
    
      <category term="Macintosh" scheme="https://jacksonleon.gitee.io/tags/Macintosh/"/>
    
  </entry>
  
  <entry>
    <title>Windows Note</title>
    <link href="https://jacksonleon.gitee.io/posts/4105617365.html"/>
    <id>https://jacksonleon.gitee.io/posts/4105617365.html</id>
    <published>2019-01-21T09:23:36.000Z</published>
    <updated>2019-01-25T12:37:49.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Windows-Note"><a href="#Windows-Note" class="headerlink" title="Windows Note"></a>Windows Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>此文用来记录平时使用Windows遇到的问题与心得.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="重装电脑"><a href="#重装电脑" class="headerlink" title="重装电脑"></a>重装电脑</h2><p><img src="https://i.loli.net/2019/04/30/5cc8337396b47.jpg" alt></p><ul><li><p>UWP </p><ul><li>网易云音乐</li><li>OneNote</li><li>QuickLook</li></ul></li><li><p>Applications </p><ul><li>Coding <ul><li></li><li>Intellij IDEA</li><li>Git</li><li>Notepad++</li><li>Java</li><li>Python3</li></ul></li><li>Office</li><li>Fun <ul><li>Tim</li><li>WeChat</li><li><a href="https://t1.daumcdn.net/potplayer/PotPlayer/Version/Latest/PotPlayerSetup64.exe" target="_blank" rel="noopener">PotPlayer</a></li><li>Chrome</li></ul></li><li>Tools <ul><li>7-zip</li><li>SSR </li><li>v2rayN</li><li>Notion</li><li>Picgo</li><li>IDM</li><li>迅雷</li><li>Pandownload</li><li>Rainmeter</li><li>Typora</li></ul></li></ul></li><li>Others<ul><li>Hexo Blog</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Windows-Note&quot;&gt;&lt;a href=&quot;#Windows-Note&quot; class=&quot;headerlink&quot; title=&quot;Windows Note&quot;&gt;&lt;/a&gt;Windows Note&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;此文用来记录平时使用Windows遇到的问题与心得.&lt;/p&gt;
&lt;p&gt;本文长期更新.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Windows" scheme="https://jacksonleon.gitee.io/categories/Windows/"/>
    
    
      <category term="Windows" scheme="https://jacksonleon.gitee.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>V2Ray Tutorial</title>
    <link href="https://jacksonleon.gitee.io/posts/4208935620.html"/>
    <id>https://jacksonleon.gitee.io/posts/4208935620.html</id>
    <published>2018-12-24T02:30:05.000Z</published>
    <updated>2018-12-24T15:07:24.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="V2Ray-Tutorial"><a href="#V2Ray-Tutorial" class="headerlink" title="V2Ray Tutorial"></a>V2Ray Tutorial</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>v2ray是一个代理平台，能够配置多种协议，有很多的玩法、用法（动态端口、mKCP、Mux等等）。更多的内容请查看<a href="https://www.v2ray.com/" target="_blank" rel="noopener">V2Ray官网</a>。</p></blockquote><a id="more"></a><h2 id="平台支持"><a href="#平台支持" class="headerlink" title="平台支持"></a>平台支持</h2><p>V2Ray 在以下平台中可用：</p><ul><li><p>Windows 7 及之后版本（x86 / amd64）；</p></li><li><p>Mac OS X 10.10 Yosemite 及之后版本（amd64）；</p></li><li>Linux 2.6.23 及之后版本（x86 / amd64 / arm / arm64 / mips64 / mips）；<ul><li>包括但不限于 Debian 7 / 8、Ubuntu 12.04 / 14.04 及后续版本、CentOS 6 / 7、Arch Linux；</li></ul></li><li>FreeBSD (x86 / amd64)；</li><li>OpenBSD (x86 / amd64)；</li><li>Dragonfly BSD (amd64)；</li></ul><h2 id="Windows平台"><a href="#Windows平台" class="headerlink" title="Windows平台"></a>Windows平台</h2><p>V2RayN 是 PC 平台一个对新手比较友好的 V2Ray GUI 客户端。</p><h3 id="下载V2Ray"><a href="#下载V2Ray" class="headerlink" title="下载V2Ray"></a>下载V2Ray</h3><ul><li><a href="https://github.com/v2ray/v2ray-core/releases" target="_blank" rel="noopener">Github Release</a></li><li><a href="https://www.v2ray.com/download/" target="_blank" rel="noopener">Github 分流</a></li><li><a href="https://github.com/v2ray/homebrew-v2ray" target="_blank" rel="noopener">Homebrew</a></li><li><a href="https://www.archlinux.org/packages/community/x86_64/v2ray/" target="_blank" rel="noopener">Arch Linux</a></li><li><a href="https://snapcraft.io/v2ray-core" target="_blank" rel="noopener">Snapcraft</a></li></ul><p>压缩包均为 zip 格式，找到对应平台的压缩包，下载解压。</p><h3 id="下载V2RayN"><a href="#下载V2RayN" class="headerlink" title="下载V2RayN"></a>下载V2RayN</h3><ul><li><a href="https://github.com/2dust/v2rayN/releases/latest" target="_blank" rel="noopener">Github Release</a></li></ul><p>解压，将解压出来的 v2rayN.exe 和 zh-Hans 文件夹全部复制到之前下载并解压出来的 v2ray-windows-xx 文件夹目录中。</p><h3 id="傻瓜式配置应用"><a href="#傻瓜式配置应用" class="headerlink" title="傻瓜式配置应用"></a>傻瓜式配置应用</h3><p>双击<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![](https://i.loli.net/2019/04/30/5cc8337eb9ec5.jpg)</span><br><span class="line"></span><br><span class="line">点击订阅-订阅设置，在url栏填写订阅地址，并选择确定。</span><br><span class="line"></span><br><span class="line">![](https://i.loli.net/2019/04/30/5cc8338623338.jpg)</span><br><span class="line"></span><br><span class="line">### 注意事项</span><br><span class="line"></span><br><span class="line">- 如果发生**应用占用CPU过高**，建议更换本地监听端口，在参数设置-基础设置中进行更改。</span><br><span class="line"></span><br><span class="line">更改后建议重启服务或者重启设备；</span><br><span class="line"></span><br><span class="line">- 连不上就换一个服务器试一试；</span><br><span class="line">- 客户端允许最多50个同时使用，月流量50G，仅供科学上网使用</span><br><span class="line">- **v2ray要求系统时间准确,如果连接不上,请检查系统的时间是否准确**；</span><br><span class="line">- 服务器模式</span><br><span class="line">  - 全局：全部流量走国外服务器</span><br><span class="line">  - PAC：跳过大陆IP，其他走国外服务器</span><br><span class="line">  - 直连：不走国外服务器</span><br><span class="line"></span><br><span class="line">![](https://i.loli.net/2019/04/30/5cc8338b028e0.jpg)</span><br><span class="line"></span><br><span class="line">### Enjoy it!</span><br><span class="line"></span><br><span class="line">![](https://i.loli.net/2019/04/30/5cc83390a7d28.jpg)</span><br><span class="line"></span><br><span class="line">## Mac平台</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- [GitHub](https://github.com/Cenmrev/V2RayX/releases)下载</span><br><span class="line">- 我是通过Homebrew-Cask直接安装</span><br></pre></td></tr></table></figure></p><p>  brew cask install v2rayx<br>  ```</p><ul><li>配置(我这里导入链接突然不起作用)</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc8339632975.jpg" alt="image-20181221165341210"></p><p>将自己的节点信息输入进去并保存,切换服务器,Load Core即可使用.</p><h2 id="Linux平台"><a href="#Linux平台" class="headerlink" title="Linux平台"></a>Linux平台</h2><p>配置较为复杂以及使用率较低，就不再赘述。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;V2Ray-Tutorial&quot;&gt;&lt;a href=&quot;#V2Ray-Tutorial&quot; class=&quot;headerlink&quot; title=&quot;V2Ray Tutorial&quot;&gt;&lt;/a&gt;V2Ray Tutorial&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;v2ray是一个代理平台，能够配置多种协议，有很多的玩法、用法（动态端口、mKCP、Mux等等）。更多的内容请查看&lt;a href=&quot;https://www.v2ray.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;V2Ray官网&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="V2Ray" scheme="https://jacksonleon.gitee.io/categories/V2Ray/"/>
    
    
      <category term="V2Ray" scheme="https://jacksonleon.gitee.io/tags/V2Ray/"/>
    
  </entry>
  
  <entry>
    <title>Macintosh Note</title>
    <link href="https://jacksonleon.gitee.io/posts/1565465933.html"/>
    <id>https://jacksonleon.gitee.io/posts/1565465933.html</id>
    <published>2018-12-21T07:32:06.000Z</published>
    <updated>2019-02-03T10:13:25.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Macintosh-Note"><a href="#Macintosh-Note" class="headerlink" title="Macintosh Note"></a>Macintosh Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>此文用来记录平时使用Mac遇到的问题与心得.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="系统快捷键"><a href="#系统快捷键" class="headerlink" title="系统快捷键"></a>系统快捷键</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 查看当前文件路径</span><br><span class="line">option+command+c = alt+win+c</span><br><span class="line"># 截图</span><br><span class="line">## 保存截图文件</span><br><span class="line">command+shift+3#全屏</span><br><span class="line">command+shift+4#自由</span><br><span class="line">## 不保存截图文件</span><br><span class="line">control+command+shift+3#全屏</span><br><span class="line">control+command+shift+4#自由</span><br></pre></td></tr></table></figure><h2 id="必备软件"><a href="#必备软件" class="headerlink" title="必备软件"></a>必备软件</h2><ol><li>Google Chrome</li><li>QQ</li><li>VS Code</li><li>iTerm 2</li><li>TickTick</li><li>V2RayX</li><li>LastPass</li><li>Typora</li><li>IntelliJ IDEA</li><li>WeChat</li><li><del>XMind Zen</del></li><li>The Unarchiver</li><li>Tuxera NTFS for Mac</li><li><del>Sequel Pro</del></li><li>iStat Menus</li><li><del>CleanMyMac X</del></li></ol><p><img src="https://i.loli.net/2019/04/30/5cc8321765aca.jpg" alt="image-20190226230916091"></p><h2 id="SSD开启TRIM支持"><a href="#SSD开启TRIM支持" class="headerlink" title="SSD开启TRIM支持"></a>SSD开启TRIM支持</h2><p>打开终端应用，并输入下面命令即可：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo trimforce <span class="built_in">enable</span></span><br></pre></td></tr></table></figure><p>可以在系统报告里查看是否开启：</p><p><img src="https://i.loli.net/2019/04/30/5cc8321e6371c.jpg" alt="image-20190422181807415"></p><h2 id="字体渲染次像素抗锯齿"><a href="#字体渲染次像素抗锯齿" class="headerlink" title="字体渲染次像素抗锯齿"></a>字体渲染次像素抗锯齿</h2><p>打开 【终端】应用，输入下面命令，全局启用 <strong>次像素抗锯齿</strong> 渲染：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO</span><br></pre></td></tr></table></figure><p>设置字体 <strong>次像素抗锯齿</strong> 级别 (类似 Linux 的 <code>hintstyle</code> 微调样式) 的命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults -currentHost write -globalDomain AppleFontSmoothing -int 3</span><br></pre></td></tr></table></figure><p>查看设置后的选项值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ defaults read -g CGFontRenderingFontSmoothingDisabled</span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">$ defaults -currentHost read -globalDomain AppleFontSmoothing</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>然后重新登录Mac账户后生效</p><p>修改完后 【系统偏好设置】—&gt; 【通用】最下面的 【使用平滑字体】选项：</p><p><img src="https://i.loli.net/2019/04/30/5cc83222d1c6d.jpg" alt="image-20190305225806700"></p><h2 id="iTerm-2"><a href="#iTerm-2" class="headerlink" title="iTerm 2"></a>iTerm 2</h2><h3 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h3><a href="/posts/141487065.html" title="详细设置请看这篇文章">详细设置请看这篇文章</a><ol><li><p>安装Homebrew</p><p><code>ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)”</code></p></li><li><p>首先下载 <a href="https://link.jianshu.com/?t=http%3A%2F%2Fwww.iterm2.com%2F" target="_blank" rel="noopener">iTerm 2</a></p></li><li><p>安装<a href="https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2Frobbyrussell%2Foh-my-zsh" target="_blank" rel="noopener">oh-my-zsh</a></p><p><code>curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh</code></p></li><li><p>安装<a href="https://link.jianshu.com/?t=http%3A%2F%2Fpowerline.readthedocs.org%2Fen%2Flatest%2Finstallation.html" target="_blank" rel="noopener">Powerline</a></p></li><li><p>使用agnoster主题</p><ol><li>下载<a href="https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2Ffcamblor%2Foh-my-zsh-agnoster-fcamblor" target="_blank" rel="noopener">agnoster</a>主题</li></ol><blockquote><p>到下载的工程里面运行install文件,主题将安装到<code>~/.oh-my-zsh/themes</code>目录下</p></blockquote><ol><li>设置该主题</li></ol><blockquote><p>进入<code>~/.zshrc</code>打开<code>.zshrc</code>文件，然后将<code>ZSH_THEME</code>后面的字段改为<code>agnoster</code>。<code>ZSH_THEME=&quot;agnoster&quot;</code>（agnoster即为要设置的主题）</p></blockquote></li><li><p>增加代码高亮效果</p><ol><li><p>cd到<code>.zshrc</code>所在目录</p></li><li><p>下载工程文件</p><p><code>git clone git://github.com/zsh-users/zsh-syntax-highlighting.git</code></p></li><li><p>打开<code>.zshrc</code>文件，在最后添加下面内容</p><p><code>source /.../zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</code></p></li><li><p>cd <code>~/.oh-my-zsh/custom/plugins</code></p></li><li><p>再次打开<code>.zshrc</code>文件，在最后面添加下面内容</p><p><code>plugins=(zsh-syntax-highlighting)</code></p></li></ol></li></ol><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ol><li><p>默认使用zsh: <code>chsh -s /bin/zsh</code></p></li><li><p>取消显示计算机名</p><blockquote><p>在~/.oh-my-zsh/themes路径下找到agnoster.zsh-theme文件，将里面的build_prompt下的prompt_context字段在注释掉即可。</p></blockquote></li><li><p>跳板机互传文件</p><blockquote><p>由于使用跳板机，所以这里需要使用lrzsz</p><p>注意lrzsz与expect连接方式不能共存，容易出现假死</p><p>如果需要免输入密码登录，建议使用sshpass方式进行连接远程服务器</p></blockquote><ul><li><p>安装lrzsz</p><p><code>brew install lrzsz</code></p></li><li><p>配置lrzsz</p><p>在/usr/local/bin 目录下创建两个文件<code>iterm2-recv-zmodem.sh</code>， <code>iterm2-send-zmodem.sh</code></p><ul><li><p>iterm2-recv-zmodem.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Author: Matt Mastracci (matthew@mastracci.com)</span></span><br><span class="line"><span class="comment"># AppleScript from http://stackoverflow.com/questions/4309087/cancel-button-on-osascript-in-a-bash-script</span></span><br><span class="line"><span class="comment"># licensed under cc-wiki with attribution required </span></span><br><span class="line"><span class="comment"># Remainder of script public domain</span></span><br><span class="line"></span><br><span class="line">osascript -e <span class="string">'tell application "iTerm2" to version'</span> &gt; /dev/null 2&gt;&amp;1 &amp;&amp; NAME=iTerm2 || NAME=iTerm</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$NAME</span> = <span class="string">"iTerm"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    FILE=`osascript -e <span class="string">'tell application "iTerm" to activate'</span> -e <span class="string">'tell application "iTerm" to set thefile to choose folder with prompt "Choose a folder to place received files in"'</span> -e <span class="string">"do shell script (\"echo \"&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\"\")"</span>`</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    FILE=`osascript -e <span class="string">'tell application "iTerm2" to activate'</span> -e <span class="string">'tell application "iTerm2" to set thefile to choose folder with prompt "Choose a folder to place received files in"'</span> -e <span class="string">"do shell script (\"echo \"&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\"\")"</span>`</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$FILE</span> = <span class="string">""</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> Cancelled.</span><br><span class="line">    <span class="comment"># Send ZModem cancel</span></span><br><span class="line">    <span class="built_in">echo</span> -e \\x18\\x18\\x18\\x18\\x18</span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> \<span class="comment"># Cancelled transfer</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="string">"<span class="variable">$FILE</span>"</span></span><br><span class="line">    /usr/<span class="built_in">local</span>/bin/rz -E -e -b</span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> \<span class="comment"># Sent \-\&gt; $FILE</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li><li><p>iterm2-send-zmodem.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Author: Matt Mastracci (matthew@mastracci.com)</span></span><br><span class="line"><span class="comment"># AppleScript from http://stackoverflow.com/questions/4309087/cancel-button-on-osascript-in-a-bash-script</span></span><br><span class="line"><span class="comment"># licensed under cc-wiki with attribution required </span></span><br><span class="line"><span class="comment"># Remainder of script public domain</span></span><br><span class="line"></span><br><span class="line">osascript -e <span class="string">'tell application "iTerm2" to version'</span> &gt; /dev/null 2&gt;&amp;1 &amp;&amp; NAME=iTerm2 || NAME=iTerm</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$NAME</span> = <span class="string">"iTerm"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    FILE=`osascript -e <span class="string">'tell application "iTerm" to activate'</span> -e <span class="string">'tell application "iTerm" to set thefile to choose file with prompt "Choose a file to send"'</span> -e <span class="string">"do shell script (\"echo \"&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\"\")"</span>`</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    FILE=`osascript -e <span class="string">'tell application "iTerm2" to activate'</span> -e <span class="string">'tell application "iTerm2" to set thefile to choose file with prompt "Choose a file to send"'</span> -e <span class="string">"do shell script (\"echo \"&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\"\")"</span>`</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$FILE</span> = <span class="string">""</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> Cancelled.</span><br><span class="line">    <span class="comment"># Send ZModem cancel</span></span><br><span class="line">    <span class="built_in">echo</span> -e \\x18\\x18\\x18\\x18\\x18</span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> \<span class="comment"># Cancelled transfer</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    /usr/<span class="built_in">local</span>/bin/sz <span class="string">"<span class="variable">$FILE</span>"</span> -e -b</span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> \<span class="comment"># Received $FILE</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li><li><p>将文件写好后保存好，使用如下命令添加权限</p><p><code>chmod a+x iterm2-*</code></p></li></ul></li><li><p>配置iTerm2</p><p>点击 iTerm2 的设置界面 Perference-&gt; Profiles -&gt; Default -&gt; Advanced -&gt; Triggers 的 Edit 按钮</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Regular expression: rz waiting to receive.\*\*B0100</span><br><span class="line">Action: Run Silent Coprocess</span><br><span class="line">Parameters: /usr/<span class="built_in">local</span>/bin/iterm2-send-zmodem.sh</span><br><span class="line"></span><br><span class="line">Regular expression: \*\*B00000000000000</span><br><span class="line">Action: Run Silent Coprocess</span><br><span class="line">Parameters: /usr/<span class="built_in">local</span>/bin/iterm2-recv-zmodem.sh</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h2><h3 id="偏好设置截图"><a href="#偏好设置截图" class="headerlink" title="偏好设置截图"></a><strong>偏好设置截图</strong></h3><p><img src="https://i.loli.net/2019/04/30/5cc8322929030.jpg" alt="image-20181221164616930"></p><p><img src="https://i.loli.net/2019/05/07/5cd18ea8b3ded.png" alt="image-20190507110619661"></p><p><img src="https://i.loli.net/2019/04/30/5cc832333a2bc.jpg" alt="image-20181221164658153"></p><p>「注」<del>iPic需要在App Store中提前下载好。</del>ipic已弃用。</p><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">标题：#</span><br><span class="line">最大标题：command + 1 或者：#</span><br><span class="line">大标题：command + 2 或者：##</span><br><span class="line">标准标题：command + 3 或者：###</span><br><span class="line">中标题：command + 4 或者：####</span><br><span class="line">小标题：command + 5 或者：#####</span><br><span class="line">插入表格：command + T</span><br><span class="line">插入代码：command + Alt +c </span><br><span class="line">行间公式 command + Alt + b</span><br><span class="line">段落：command + 0</span><br><span class="line">竖线: command + Alt +q</span><br><span class="line">有序列表（1.  2.）: 输入数字+“.”之后输入空格 或者：command + Alt + o   </span><br><span class="line">黑点标记: command + Alt + u  </span><br><span class="line">隔离线: shift + command +  -</span><br><span class="line">超链接：command + Alt + l</span><br><span class="line">插入链接：command +k</span><br><span class="line">下划线：command +u </span><br><span class="line">加粗：command +b</span><br><span class="line">搜索：command +f</span><br></pre></td></tr></table></figure><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p>使用<code>vue</code>主题，并且修改<code>Macintosh HD⁩ ▸ ⁨Users⁩ ▸ ⁨lau⁩ ▸ ⁨Library⁩ ▸ ⁨Application Support⁩ ▸ ⁨abnerworks.Typora⁩ ▸ ⁨themes⁩⁩ ▸ ⁨vue.css</code>，调整写作区显示宽度</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#write</span> &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">85%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10%</span>;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">5%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="V2RayX暂时弃用"><a href="#V2RayX暂时弃用" class="headerlink" title="V2RayX暂时弃用"></a><del>V2RayX暂时弃用</del></h2><ul><li><a href="https://github.com/Cenmrev/V2RayX/releases" target="_blank" rel="noopener">GitHub</a>下载</li><li><p>通过Homebrew-Cask直接安装</p><p><code>brew cask install v2rayx</code></p></li><li><p>配置</p></li></ul><p><img src="https://i.loli.net/2019/04/30/5cc83239bd94f.jpg" alt="image-20181221165341210"></p><p>将自己的节点信息输入进去并保存,切换服务器,Load Core即可使用.</p><h2 id="Sequel-Pro"><a href="#Sequel-Pro" class="headerlink" title="Sequel Pro"></a>Sequel Pro</h2><h3 id="配置自带格式化工具"><a href="#配置自带格式化工具" class="headerlink" title="配置自带格式化工具"></a>配置自带格式化工具</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"># check for empty STDIN</span><br><span class="line">SQL=$(cat)</span><br><span class="line">if [ -z "$SQL" ]; then</span><br><span class="line">echo "No SQL statements passed."</span><br><span class="line">exit $SP_BUNDLE_EXIT_SHOW_AS_TEXT_TOOLTIP</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># check if connected to the internet and if server is up</span><br><span class="line">connected=$(/sbin/ping -t 8 -c 1 -on www.dpriver.com 2&gt; /dev/null | grep '69\.5\.11\.169' | wc -l)</span><br><span class="line">if [ $connected -eq "0" ]; then</span><br><span class="line">echo "<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">red</span>&gt;</span>You are probably not connected to the internet or http://www.dpriver.com/ server is down.<span class="tag">&lt;/<span class="name">font</span>&gt;</span>"</span><br><span class="line">exit $SP_BUNDLE_EXIT_SHOW_AS_HTML_TOOLTIP</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># show info alert about sending the SQL statements to an online service</span><br><span class="line">if [ ! -e infoShowed ]; then</span><br><span class="line">touch infoShowed</span><br><span class="line">osascript -e 'tell app "Sequel Pro" to display dialog "This command will send the SQL statement(s) - unencrypted - to an online service (http://www.dpriver.com).  Please consider this before sending confidential data!\n\nThis message will only be displayed once." with icon caution' 2&gt; 1</span><br><span class="line">if [ `cat 1 | wc -c` -ne 0 ]; then</span><br><span class="line">rm -f 1</span><br><span class="line">exit $SP_BUNDLE_EXIT_NONE</span><br><span class="line">fi</span><br><span class="line">rm -f 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># send SQL to www.dpriver.com and replace the formatted SQL string in first responder; if a parser error occurred</span><br><span class="line"># show error message and try to jump to the error</span><br><span class="line">cat &lt;&lt;HTML</span><br><span class="line"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">"http://www.dpriver.com/pp/"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Connecting www.dpriver.com<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">lookForResult</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(<span class="built_in">document</span>.all.outputsql.value.length &gt; <span class="number">8</span>) &#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(<span class="built_in">document</span>.all.errorhint.style.display == <span class="string">"inline"</span>) &#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> errormes = <span class="built_in">document</span>.all.outputsql.value;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> re = <span class="regexp">/.*?\(\d+\s*,\s*(\d+)\).*/</span>;</span></span><br><span class="line">re.exec(errormes);</span><br><span class="line"><span class="javascript"><span class="keyword">var</span> pos = <span class="built_in">parseInt</span>(<span class="built_in">RegExp</span>.\$<span class="number">1</span>) - <span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">re = <span class="regexp">/.*?(\d+).*/</span>;</span></span><br><span class="line"><span class="javascript">re.exec(<span class="string">'$SP_SELECTED_TEXT_RANGE'</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> offset = <span class="built_in">parseInt</span>(<span class="built_in">RegExp</span>.\$<span class="number">1</span>);</span></span><br><span class="line">pos = pos + offset;</span><br><span class="line"><span class="javascript">alert(<span class="built_in">document</span>.all.outputsql.value);</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.system.setSelectedTextRange(pos+<span class="string">''</span>);</span></span><br><span class="line"><span class="javascript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> txt = <span class="built_in">document</span>.all.outputsql.value;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> len = txt.length;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.system.setSelectedTextRange(<span class="string">'$SP_SELECTED_TEXT_RANGE'</span>);</span></span><br><span class="line"><span class="javascript"> <span class="built_in">window</span>.system.insertText(txt.slice(<span class="number">0</span>,len<span class="number">-2</span>));</span></span><br><span class="line"> &#125;</span><br><span class="line"><span class="javascript"> <span class="built_in">window</span>.system.closeHTMLOutputWindow();</span></span><br><span class="line"><span class="javascript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">setTimeout(<span class="string">"lookForResult()"</span>,<span class="number">50</span>);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">waitForResult</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.system.suppressExceptionAlert();</span></span><br><span class="line"><span class="javascript">setTimeout(<span class="string">"lookForResult()"</span>,<span class="number">50</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"JavaScript"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"pp.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">'window.resizeTo(300,200);SQLFMT.format(document.all.sp_submit);waitForResult()'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"retvalues"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>Copyright &amp;copy; 2001-2010 Gudu Software<span class="tag">&lt;<span class="name">br</span>&gt;</span>All Rights Reserved<span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:support@dpriver.com"</span>&gt;</span>Contact US<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">right</span>&gt;</span>Please wait…<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"page-container-1"</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"SqlFmtForm"</span> <span class="attr">name</span>=<span class="string">"frm_sqlformat"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"/cgi-bin/ppserver"</span> <span class="attr">onsubmit</span>=<span class="string">"return false;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"secondpanel"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"sp_database"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"desc"</span> <span class="attr">style</span>=<span class="string">"display:inline;"</span>&gt;</span>Database<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"dbvendor"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"mysql"</span> <span class="attr">selected</span>&gt;</span>MySQL<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"desc"</span> <span class="attr">style</span>=<span class="string">"display:inline;padding:0 0 0px 40px; border:0px solid;"</span>&gt;</span>Output:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"outputfmt"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"SQL"</span> <span class="attr">selected</span>&gt;</span>SQL(Text)<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"sqlpanel"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"sp_inputsql"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span> =<span class="string">"inputsql"</span> <span class="attr">name</span>=<span class="string">"inputsql"</span> <span class="attr">cols</span>=<span class="string">"1"</span> <span class="attr">rows</span>=<span class="string">"1"</span> <span class="attr">wrap</span>=<span class="string">"off"</span>&gt;</span></span><br><span class="line">$SQL</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"sp_submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"btnformat"</span> <span class="attr">name</span>=<span class="string">"print"</span> <span class="attr">value</span>=<span class="string">"Format SQL"</span> <span class="attr">onclick</span>=<span class="string">"SQLFMT.format(this)"</span> <span class="attr">value</span>=<span class="string">"Format SQL"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span>(Time used: <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"timestamp"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">span</span>&gt;</span> seconds)<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"sp_submit"</span> <span class="attr">style</span>=<span class="string">"text-align:left;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">id</span>=<span class="string">"errorhint"</span> <span class="attr">class</span>=<span class="string">"desc"</span> <span class="attr">style</span>=<span class="string">"color:#DF0000 !important;display:none;"</span>&gt;</span></span><br><span class="line">Can't format input sql, make sure there is no syntax error and select correct database.</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span>OR Report a bug of this sql beautifier<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">"ioutputsql"</span> &gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"sp_outputsql"</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span> = <span class="string">"outputsql"</span> <span class="attr">name</span>=<span class="string">"outputsql"</span> <span class="attr">cols</span>=<span class="string">"80"</span> <span class="attr">rows</span>=<span class="string">"15"</span> <span class="attr">wrap</span>=<span class="string">"off"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"sp_errormsg"</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span></span><br><span class="line">Error message goes to here!</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"formatoptions"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"keywordcs"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Uppercase"</span> <span class="attr">selected</span> &gt;</span>Uppercase<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Lowercase"</span> &gt;</span>Lowercase<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"InitCap"</span> &gt;</span>InitCap<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Unchanged"</span> &gt;</span>Unchanged<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"identifiercs"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Uppercase"</span> &gt;</span>Uppercase<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Lowercase"</span> <span class="attr">selected</span> &gt;</span>Lowercase<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"InitCap"</span> &gt;</span>InitCap<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Unchanged"</span> &gt;</span>Unchanged<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"initcapeachword"</span> &gt;</span>Init cap each word<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"functioncs"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Uppercase"</span> &gt;</span>Uppercase<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Lowercase"</span> &gt;</span>Lowercase<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"InitCap"</span> <span class="attr">selected</span> &gt;</span>InitCap<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Unchanged"</span> &gt;</span>Unchanged<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"lnbrwithcomma"</span> <span class="attr">value</span>=<span class="string">"after"</span> <span class="attr">checked</span> &gt;</span> After</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"lnbrwithcomma"</span> <span class="attr">value</span>=<span class="string">"before"</span> &gt;</span> Before</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"lnbrwithcomma"</span> <span class="attr">value</span>= <span class="string">"beforewithspace"</span> &gt;</span> Before with space</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"liststyle"</span> <span class="attr">value</span>=<span class="string">"stack"</span> <span class="attr">checked</span>&gt;</span>Stacked</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"liststyle"</span> <span class="attr">value</span>=<span class="string">"nostack"</span>&gt;</span>Not Stacked</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"salign"</span> <span class="attr">value</span>=<span class="string">"sleft"</span> <span class="attr">checked</span>&gt;</span> Align left</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"salign"</span> <span class="attr">value</span>=<span class="string">"sright"</span> &gt;</span> Align right</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"andorunderwhere"</span> <span class="attr">value</span>=<span class="string">"yes"</span> <span class="attr">checked</span>&gt;</span> And/Or under Where</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"removelnbr"</span> <span class="attr">value</span>=<span class="string">"no"</span> <span class="attr">checked</span>&gt;</span> Remove Linebreak before beautify</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"trimquotechar"</span> <span class="attr">value</span>=<span class="string">"yes"</span>&gt;</span> Trim Quoted Char of Each Line quoted char of eachline: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"quotechar"</span> <span class="attr">value</span>= <span class="string">"&amp;#34"</span> <span class="attr">size</span> = <span class="string">5</span> &gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"compactmode"</span> <span class="attr">value</span>=<span class="string">"yes"</span>&gt;</span> Compact the output of sql output</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"maxlenincm"</span> <span class="attr">value</span>= <span class="string">"80"</span> <span class="attr">size</span> = <span class="string">5</span> &gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"clientid"</span> <span class="attr">value</span>=<span class="string">"dpriver-9094-8133-2031"</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">HTML</span><br></pre></td></tr></table></figure><h2 id="调整Launchpad图标大小"><a href="#调整Launchpad图标大小" class="headerlink" title="调整Launchpad图标大小"></a>调整Launchpad图标大小</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 调整每一列显示图标数量</span></span><br><span class="line">defaults write com.apple.dock springboard-rows -int 7</span><br><span class="line"><span class="comment"># 调整每一行显示图标数量</span></span><br><span class="line">defaults write com.apple.dock springboard-columns -int 12</span><br><span class="line"><span class="comment"># 由于修改了每一页显示图标数量，需要重启Launchpad</span></span><br><span class="line">defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock</span><br></pre></td></tr></table></figure><h2 id="VS-Code"><a href="#VS-Code" class="headerlink" title="VS Code"></a>VS Code</h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Macintosh-Note&quot;&gt;&lt;a href=&quot;#Macintosh-Note&quot; class=&quot;headerlink&quot; title=&quot;Macintosh Note&quot;&gt;&lt;/a&gt;Macintosh Note&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;此文用来记录平时使用Mac遇到的问题与心得.&lt;/p&gt;
&lt;p&gt;本文长期更新.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Macintosh" scheme="https://jacksonleon.gitee.io/categories/Macintosh/"/>
    
    
      <category term="Macintosh" scheme="https://jacksonleon.gitee.io/tags/Macintosh/"/>
    
  </entry>
  
  <entry>
    <title>Maven Tutorial</title>
    <link href="https://jacksonleon.gitee.io/posts/159979374.html"/>
    <id>https://jacksonleon.gitee.io/posts/159979374.html</id>
    <published>2018-12-20T09:34:56.000Z</published>
    <updated>2018-12-24T15:07:13.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Maven-Tutorial"><a href="#Maven-Tutorial" class="headerlink" title="Maven Tutorial"></a>Maven Tutorial</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>Maven是一个非常有用的依赖管理工具，Maven一个很重要的作用是用来管理Jar包的.</p><ul><li>通过maven工程可以直接从maven仓库下载需要的jar包到本地，不用再需要从外部添加，maven仓库可以是网上的镜像地址，也可以是公司内部的仓库；</li><li>通过maven可以实现对java 工程的同意管理和规范化使用；</li></ul><p>本文主要介绍Maven的配置过程.</p></blockquote><a id="more"></a><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="下载Maven"><a href="#下载Maven" class="headerlink" title="下载Maven"></a>下载Maven</h3><p><a href="https://maven.apache.org/download.cgi" target="_blank" rel="noopener">官网下载Maven</a>后, 解压到文件夹,路径名之后配置环境变量需要用到.</p><p><img src="https://i.loli.net/2019/04/30/5cc8310c53bd7.jpg" alt></p><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>在环境变量中新建<code>M2_HOME</code>系统变量,路径为<code>D:\Program Files\apache-maven-3.6.0</code>,就是你解压的文件夹的位置.</p><p>在path系统变量中添加一个,路径为<code>%M2_HOME%\bin</code>, 保存后进入命令行输入<code>mvn -version</code>查看是否配置成功.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\PmbJa&gt;mvn -version</span><br><span class="line">Apache Maven 3.6.0 (97c98ec64a1fdfee7767ce5ffb20918da4f719f3; 2018-10-25T02:41:47+08:00)</span><br><span class="line">Maven home: D:\Program Files\apache-maven-3.6.0\bin\..</span><br><span class="line">Java version: 1.8.0_191, vendor: Oracle Corporation, runtime: D:\Program Files\Java\jdk1.8.0_191\jre</span><br><span class="line">Default locale: en_US, platform encoding: GBK</span><br><span class="line">OS name: <span class="string">"windows 10"</span>, version: <span class="string">"10.0"</span>, arch: <span class="string">"amd64"</span>, family: <span class="string">"windows"</span></span><br></pre></td></tr></table></figure><h3 id="Maven文件夹配置"><a href="#Maven文件夹配置" class="headerlink" title="Maven文件夹配置"></a>Maven文件夹配置</h3><p>进入<code>%M2_HOME%\bin\conf</code>文件夹下,编辑<code>settings.xml</code>文件,将localRepository设置为自己的M2仓库位置.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">&lt;!-- localRepository</span></span><br><span class="line"><span class="comment">   | The path to the local repository maven will use to store artifacts.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | Default: $&#123;user.home&#125;/.m2/repository</span></span><br><span class="line"><span class="comment">  &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>\path\M2\Repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><p>另外也可以设置镜像</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- mirrors</span></span><br><span class="line"><span class="comment"> | This is a list of mirrors to be used in downloading artifacts from remote repositories.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> | It works like this: a POM may declare a repository to use in resolving certain artifacts.</span></span><br><span class="line"><span class="comment"> | However, this repository may have problems with heavy traffic at times, so people have mirrored</span></span><br><span class="line"><span class="comment"> | it to several places.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> | That repository definition will have a unique id, so we can create a mirror reference for that</span></span><br><span class="line"><span class="comment"> | repository, to be used as an alternate download site. The mirror site will be the preferred</span></span><br><span class="line"><span class="comment"> | server for that repository.</span></span><br><span class="line"><span class="comment"> |--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="配置IntelliJ-IDEA集成Maven"><a href="#配置IntelliJ-IDEA集成Maven" class="headerlink" title="配置IntelliJ IDEA集成Maven"></a>配置IntelliJ IDEA集成Maven</h3><p>打开IntelliJ IDEA-&gt;File-&gt;Setting,搜索Maven,在下图的位置修改成上一步修改的xml文件,下面的Local repository会自动修改.</p><p><img src="https://i.loli.net/2019/04/30/5cc83113cb1dd.jpg" alt></p><h3 id="Maven-for-Hello-World"><a href="#Maven-for-Hello-World" class="headerlink" title="Maven for Hello World"></a>Maven for Hello World</h3><ul><li>右键Projects-&gt;New-&gt;Module</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc8311961d1d.jpg" alt></p><ul><li><p>选择Maven,直接下一步</p><p><img src="https://i.loli.net/2019/04/30/5cc8311fd71b6.jpg" alt></p></li><li><p>设置Group,ArtifactId</p><p><img src="https://i.loli.net/2019/04/30/5cc831259fbd4.jpg" alt></p></li><li><p>Finish</p><p><img src="https://i.loli.net/2019/04/30/5cc8312c53788.jpg" alt></p></li><li><p>点击Enable Auto-Import,等待下载</p><p><img src="https://i.loli.net/2019/04/30/5cc8313313f73.jpg" alt></p></li><li><p>项目结构</p><p><img src="https://i.loli.net/2019/04/30/5cc83138a3dc1.jpg" alt></p></li><li><p>选择Project Structure</p><p><img src="https://i.loli.net/2019/04/30/5cc83140d297a.jpg" alt>            </p></li><li><p>选择Modules-&gt;Web</p><p><img src="https://i.loli.net/2019/04/30/5cc8314867d67.jpg" alt></p></li><li><p>双击Web Resource Directory,选择scr/main目录,在后面加上webapp</p><p><img src="https://i.loli.net/2019/04/30/5cc8314d9b0b5.jpg" alt></p></li><li><p>设置Web的描述文件的位置</p><p><img src="https://i.loli.net/2019/04/30/5cc831544e48a.jpg" alt></p></li><li><p>设置ArtifactId</p><p><img src="https://i.loli.net/2019/04/30/5cc8315a04ff5.jpg" alt></p></li><li><p>未完待续</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Maven-Tutorial&quot;&gt;&lt;a href=&quot;#Maven-Tutorial&quot; class=&quot;headerlink&quot; title=&quot;Maven Tutorial&quot;&gt;&lt;/a&gt;Maven Tutorial&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Maven是一个非常有用的依赖管理工具，Maven一个很重要的作用是用来管理Jar包的.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过maven工程可以直接从maven仓库下载需要的jar包到本地，不用再需要从外部添加，maven仓库可以是网上的镜像地址，也可以是公司内部的仓库；&lt;/li&gt;
&lt;li&gt;通过maven可以实现对java 工程的同意管理和规范化使用；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本文主要介绍Maven的配置过程.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Java" scheme="https://jacksonleon.gitee.io/categories/Java/"/>
    
      <category term="Maven" scheme="https://jacksonleon.gitee.io/categories/Java/Maven/"/>
    
    
      <category term="Java" scheme="https://jacksonleon.gitee.io/tags/Java/"/>
    
      <category term="Maven" scheme="https://jacksonleon.gitee.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>VSCode Customised</title>
    <link href="https://jacksonleon.gitee.io/posts/322488916.html"/>
    <id>https://jacksonleon.gitee.io/posts/322488916.html</id>
    <published>2018-12-15T16:01:39.000Z</published>
    <updated>2019-05-02T04:58:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="VSCode-Customised"><a href="#VSCode-Customised" class="headerlink" title="VSCode Customised"></a>VSCode Customised</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>VSCode.</p><p>此文用来记录VSCode 使用技巧.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="USER-SETTINGS"><a href="#USER-SETTINGS" class="headerlink" title="USER SETTINGS"></a>USER SETTINGS</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"workbench.startupEditor"</span>: <span class="string">"newUntitledFile"</span>,</span><br><span class="line">    <span class="attr">"editor.minimap.enabled"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"terminal.external.windowsExec"</span>: <span class="string">"C:\\Program Files\\Git\\bin\\bash.exe"</span>,</span><br><span class="line">    <span class="attr">"terminal.integrated.shell.windows"</span>: <span class="string">"C:\\Program Files\\Git\\bin\\bash.exe"</span>,</span><br><span class="line">    <span class="attr">"workbench.colorTheme"</span>: <span class="string">"One Dark Pro"</span>,</span><br><span class="line">    <span class="attr">"workbench.iconTheme"</span>: <span class="string">"vscode-icons"</span>,</span><br><span class="line">    <span class="attr">"diffEditor.ignoreTrimWhitespace"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"workbench.sideBar.location"</span>: <span class="string">"left"</span>,</span><br><span class="line">    <span class="attr">"editor.wordWrap"</span>: <span class="string">"on"</span>,</span><br><span class="line">    <span class="attr">"latex-workshop.latex.tools"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"latexmk"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"latexmk"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"-synctex=1"</span>,</span><br><span class="line">                <span class="string">"-interaction=nonstopmode"</span>,</span><br><span class="line">                <span class="string">"-file-line-error"</span>,</span><br><span class="line">                <span class="string">"-pdf"</span>,</span><br><span class="line">                <span class="string">"%DOC%"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"xelatex"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"xelatex"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"-synctex=1"</span>,</span><br><span class="line">                <span class="string">"-interaction=nonstopmode"</span>,</span><br><span class="line">                <span class="string">"-file-line-error"</span>,</span><br><span class="line">                <span class="string">"%DOC%"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"pdflatex"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"pdflatex"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"-synctex=1"</span>,</span><br><span class="line">                <span class="string">"-interaction=nonstopmode"</span>,</span><br><span class="line">                <span class="string">"-file-line-error"</span>,</span><br><span class="line">                <span class="string">"%DOC%"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"bibtex"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"bibtex"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"%DOCFILE%"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"latex-workshop.latex.recipes"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"xelatex"</span>,</span><br><span class="line">            <span class="attr">"tools"</span>: [</span><br><span class="line">                <span class="string">"xelatex"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"latexmk"</span>,</span><br><span class="line">            <span class="attr">"tools"</span>: [</span><br><span class="line">                <span class="string">"latexmk"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"pdflatex -&gt; bibtex -&gt; pdflatex*2"</span>,</span><br><span class="line">            <span class="attr">"tools"</span>: [</span><br><span class="line">                <span class="string">"pdflatex"</span>,</span><br><span class="line">                <span class="string">"bibtex"</span>,</span><br><span class="line">                <span class="string">"pdflatex"</span>,</span><br><span class="line">                <span class="string">"pdflatex"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"latex-workshop.latex.clean.enabled"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"latex-workshop.latex.clean.fileTypes"</span>: [</span><br><span class="line">        <span class="string">"*.aux"</span>,</span><br><span class="line">        <span class="string">"*.bbl"</span>,</span><br><span class="line">        <span class="string">"*.blg"</span>,</span><br><span class="line">        <span class="string">"*.idx"</span>,</span><br><span class="line">        <span class="string">"*.ind"</span>,</span><br><span class="line">        <span class="string">"*.lof"</span>,</span><br><span class="line">        <span class="string">"*.lot"</span>,</span><br><span class="line">        <span class="string">"*.out"</span>,</span><br><span class="line">        <span class="string">"*.toc"</span>,</span><br><span class="line">        <span class="string">"*.acn"</span>,</span><br><span class="line">        <span class="string">"*.acr"</span>,</span><br><span class="line">        <span class="string">"*.alg"</span>,</span><br><span class="line">        <span class="string">"*.glg"</span>,</span><br><span class="line">        <span class="string">"*.glo"</span>,</span><br><span class="line">        <span class="string">"*.gls"</span>,</span><br><span class="line">        <span class="string">"*.ist"</span>,</span><br><span class="line">        <span class="string">"*.fls"</span>,</span><br><span class="line">        <span class="string">"*.log"</span>,</span><br><span class="line">        <span class="string">"*.fdb_latexmk"</span>,</span><br><span class="line">        <span class="string">"*.gz"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"latex-workshop.view.pdf.viewer"</span>: <span class="string">"external"</span>,</span><br><span class="line">    <span class="attr">"latex-workshop.view.pdf.external.command"</span>: &#123;</span><br><span class="line">        <span class="attr">"command"</span>: <span class="string">"C:/Program Files/SumatraPDF/SumatraPDF.exe"</span>,</span><br><span class="line">        <span class="attr">"args"</span>: [</span><br><span class="line">            <span class="string">"%PDF%"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"latex-workshop.view.pdf.external.synctex"</span>: &#123;</span><br><span class="line">        <span class="attr">"command"</span>: <span class="string">"SumatraPDF.exe"</span>,</span><br><span class="line">        <span class="attr">"args"</span>: [</span><br><span class="line">            <span class="string">"-forward-search"</span>,</span><br><span class="line">            <span class="string">"%TEX%"</span>,</span><br><span class="line">            <span class="string">"%LINE%"</span>,</span><br><span class="line">            <span class="string">"%PDF%"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"workbench.startupEditor"</span>: <span class="string">"newUntitledFile"</span>,</span><br><span class="line">    <span class="attr">"editor.minimap.enabled"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"workbench.colorTheme"</span>: <span class="string">"One Dark Pro"</span>,</span><br><span class="line">    <span class="attr">"diffEditor.ignoreTrimWhitespace"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"workbench.sideBar.location"</span>: <span class="string">"left"</span>,</span><br><span class="line">    <span class="attr">"editor.fontFamily"</span>: <span class="string">"'Fira Code', 'Source Code Pro', 'Noto Sans CJK SC', monospace"</span>,</span><br><span class="line">    <span class="attr">"editor.fontLigatures"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"editor.wordWrap"</span>: <span class="string">"on"</span>,</span><br><span class="line">    <span class="attr">"editor.fontSize"</span>: <span class="number">16</span>,</span><br><span class="line">    <span class="attr">"terminal.integrated.fontFamily"</span>: <span class="string">"Fira Code"</span>,</span><br><span class="line">    <span class="attr">"terminal.integrated.fontSize"</span>: <span class="number">16</span>,</span><br><span class="line">    <span class="attr">"gitlens.views.repositories.files.layout"</span>: <span class="string">"list"</span>,</span><br><span class="line">    <span class="attr">"java.home"</span>: <span class="string">"/Library/Java/JavaVirtualMachines/jdk1.8.0_201.jdk/Contents/Home"</span>,</span><br><span class="line">    <span class="attr">"files.exclude"</span>: &#123;</span><br><span class="line">        <span class="attr">"**/.classpath"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">"**/.project"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">"**/.settings"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">"**/.factorypath"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"java.errors.incompleteClasspath.severity"</span>: <span class="string">"ignore"</span>,</span><br><span class="line">    <span class="attr">"editor.suggestSelection"</span>: <span class="string">"first"</span>,</span><br><span class="line">    <span class="attr">"python.linting.flake8Enabled"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"python.linting.flake8Args"</span>: [</span><br><span class="line">        <span class="string">"--max-line-length=248"</span>,</span><br><span class="line">        <span class="string">"--max-complexity=12"</span>,</span><br><span class="line">        <span class="string">"--ignore=F401,E231"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"python.formatting.provider"</span>: <span class="string">"yapf"</span>,</span><br><span class="line">    <span class="attr">"window.zoomLevel"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"python.jediEnabled"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"latex-workshop.latex.tools"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"xelatex"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"xelatex"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"-synctex=1"</span>,</span><br><span class="line">                <span class="string">"-interaction=nonstopmode"</span>,</span><br><span class="line">                <span class="string">"-file-line-error"</span>,</span><br><span class="line">                <span class="string">"%DOC%"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"latexmk"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"latexmk"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"-synctex=1"</span>,</span><br><span class="line">                <span class="string">"-interaction=nonstopmode"</span>,</span><br><span class="line">                <span class="string">"-file-line-error"</span>,</span><br><span class="line">                <span class="string">"-pdf"</span>,</span><br><span class="line">                <span class="string">"%DOC%"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"pdflatex"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"pdflatex"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"-synctex=1"</span>,</span><br><span class="line">                <span class="string">"-interaction=nonstopmode"</span>,</span><br><span class="line">                <span class="string">"-file-line-error"</span>,</span><br><span class="line">                <span class="string">"%DOC%"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"bibtex"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"bibtex"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"%DOCFILE%"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"latex-workshop.latex.recipes"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"xelatex -&gt; bibtex -&gt; xelatex*2"</span>,</span><br><span class="line">            <span class="attr">"tools"</span>: [</span><br><span class="line">                <span class="string">"xelatex"</span>,</span><br><span class="line">                <span class="string">"bibtex"</span>,</span><br><span class="line">                <span class="string">"xelatex"</span>,</span><br><span class="line">                <span class="string">"xelatex"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"pdflatex -&gt; bibtex -&gt; pdflatex*2"</span>,</span><br><span class="line">            <span class="attr">"tools"</span>: [</span><br><span class="line">                <span class="string">"pdflatex"</span>,</span><br><span class="line">                <span class="string">"bibtex"</span>,</span><br><span class="line">                <span class="string">"pdflatex"</span>,</span><br><span class="line">                <span class="string">"pdflatex"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"xelatex"</span>,</span><br><span class="line">            <span class="attr">"tools"</span>: [</span><br><span class="line">                <span class="string">"xelatex"</span>,</span><br><span class="line">                <span class="string">"xelatex"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"pdflatex"</span>,</span><br><span class="line">            <span class="attr">"tools"</span>: [</span><br><span class="line">                <span class="string">"pdflatex"</span>,</span><br><span class="line">                <span class="string">"pdflatex"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    // 用vs tab查看pdf文件</span><br><span class="line">    "latex-workshop.view.pdf.viewer": "tab",</span><br><span class="line">    // 清除build生成的文件</span><br><span class="line">    "latex-workshop.latex.autoClean.run": "onBuilt",</span><br><span class="line">    // 禁止保存的时候自动build</span><br><span class="line">    "latex-workshop.latex.autoBuild.run": "never",</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="EXTENSIONS"><a href="#EXTENSIONS" class="headerlink" title="EXTENSIONS"></a>EXTENSIONS</h2><ul><li><p>One Dark Pro</p></li><li><p>vscode-icons</p></li><li><p>ESLint</p></li><li><p>GitLens</p></li><li><p>LaTeX Workshop</p></li><li><p><del>Insert Date String</del></p><p><code>Windows:</code><kbd>ctrl</kbd>+<kbd>shift</kbd>+<kbd>I</kbd></p><p><code>MacOS</code><kbd>command</kbd>+<kbd>shift</kbd>+<kbd>I</kbd></p></li><li></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;VSCode-Customised&quot;&gt;&lt;a href=&quot;#VSCode-Customised&quot; class=&quot;headerlink&quot; title=&quot;VSCode Customised&quot;&gt;&lt;/a&gt;VSCode Customised&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;VSCode.&lt;/p&gt;
&lt;p&gt;此文用来记录VSCode 使用技巧.&lt;/p&gt;
&lt;p&gt;本文长期更新.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Applications" scheme="https://jacksonleon.gitee.io/categories/Applications/"/>
    
      <category term="VSCode" scheme="https://jacksonleon.gitee.io/categories/Applications/VSCode/"/>
    
    
      <category term="Applications" scheme="https://jacksonleon.gitee.io/tags/Applications/"/>
    
  </entry>
  
  <entry>
    <title>Linux Note</title>
    <link href="https://jacksonleon.gitee.io/posts/2223431484.html"/>
    <id>https://jacksonleon.gitee.io/posts/2223431484.html</id>
    <published>2018-12-13T07:10:43.000Z</published>
    <updated>2018-12-26T07:50:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux-Note"><a href="#Linux-Note" class="headerlink" title="Linux Note"></a>Linux Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>此文用来记录平时使用Linux遇到的问题与心得.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="Linux-命令"><a href="#Linux-命令" class="headerlink" title="Linux 命令"></a>Linux 命令</h2><ul><li><p>sudo</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 为某条命令指定用户</span></span><br><span class="line">sudo -Hu user-name commond</span><br></pre></td></tr></table></figure></li></ul><h2 id="Linux-配置"><a href="#Linux-配置" class="headerlink" title="Linux 配置"></a>Linux 配置</h2><ul><li><p>Java</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看JDK路径</span></span><br><span class="line">whereis java</span><br><span class="line"><span class="built_in">which</span> java （java执行路径）</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$JAVA_HOME</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置JDK环境变量</span></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.91.x86_64</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$JAVA_HOME</span>/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib:<span class="variable">$JRE_HOME</span>/lib</span><br></pre></td></tr></table></figure></li><li></li></ul><h2 id="Linux-发行版"><a href="#Linux-发行版" class="headerlink" title="Linux 发行版"></a>Linux 发行版</h2><ul><li>Ubuntu</li><li>Mint</li><li>Manjaro</li><li>Elementary</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ul><li>双系统切换后时间不一致</li></ul><blockquote><p>原因</p><p>Windows和Ubuntu在默认情况下看待硬件时间（主板上的BOIS显示的时间）的方式不一样</p><ul><li>Windows把系统硬件时间当作本地时间（Local time），即操作系统中显示的时间跟BIOS中显示的时间是一样的.</li><li>Linux/Unix/Mac把硬件时间当作UTC（Universal Time Coordinated,协调世界时），操作系统中显示的时间是硬件时间经过换算得来.</li></ul></blockquote><p>解决方案</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更改Windows</span></span><br><span class="line"><span class="comment"># 如果要让Windows把硬件时间当作UTC</span></span><br><span class="line"><span class="comment"># 在CMD窗口（快捷键Win+R，输入cmd，回车）中输入如下命令，可以快速编辑注册表</span></span><br><span class="line">Reg add HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1</span><br><span class="line"><span class="comment"># 或者直接编辑注册表，打开注册表编辑器（快捷键Win+R，输入regedit，回车），并找到一下目录位置</span></span><br><span class="line"><span class="comment"># 添加一项类型为REG_DWORD的键值，命名为RealTimeIsUniversal，值为1，重启后时间即回复正常</span></span><br><span class="line">HKEY_LOCAL_MACHINE/SYSTEM/CurrentControlSet/Control/TimeZoneInformation/</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Linux-Note&quot;&gt;&lt;a href=&quot;#Linux-Note&quot; class=&quot;headerlink&quot; title=&quot;Linux Note&quot;&gt;&lt;/a&gt;Linux Note&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;此文用来记录平时使用Linux遇到的问题与心得.&lt;/p&gt;
&lt;p&gt;本文长期更新.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://jacksonleon.gitee.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://jacksonleon.gitee.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>WebHook Based on Git(Using PHP)</title>
    <link href="https://jacksonleon.gitee.io/posts/182327132.html"/>
    <id>https://jacksonleon.gitee.io/posts/182327132.html</id>
    <published>2018-12-12T08:43:58.000Z</published>
    <updated>2018-02-14T05:14:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WebHook-Based-on-Git-Using-PHP"><a href="#WebHook-Based-on-Git-Using-PHP" class="headerlink" title="WebHook Based on Git(Using PHP)"></a>WebHook Based on Git(Using PHP)</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>使用Webhook实现远程服务器自动拉取更新内容</p></blockquote><a id="more"></a><h2 id="生成公钥"><a href="#生成公钥" class="headerlink" title="生成公钥"></a>生成公钥</h2><ul><li>Git用户公钥</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"test@test.com"</span></span><br><span class="line"><span class="comment"># 然后一直回车就行</span></span><br><span class="line"><span class="comment"># 生成的文件通常是 /root/.ssh/id_rsa，如果非root用户请查看提示上的路径</span></span><br></pre></td></tr></table></figure><ul><li>单独的服务器用户公钥</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo -Hu www ssh-keygen -t rsa </span><br><span class="line"><span class="comment"># 服务器运行PHP的用户为www,所以Hooks文件中涉及到权限的地方都需要声明为该用户</span></span><br><span class="line"><span class="comment"># 所以也就需要在Remote中加入该用户对应的公钥</span></span><br><span class="line"><span class="comment"># 意思是为www用户生成公钥</span></span><br><span class="line"><span class="comment"># 也是一直回车,中间会提示密钥存储位置</span></span><br></pre></td></tr></table></figure><p>接下来将这两个公钥加入账户中,获取对仓库的权限</p><h2 id="Hook文件"><a href="#Hook文件" class="headerlink" title="Hook文件"></a>Hook文件</h2><h3 id="创建和修改目录权限："><a href="#创建和修改目录权限：" class="headerlink" title="创建和修改目录权限："></a>创建和修改目录权限：</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line">mkdir /mnt/wwwroot/xxxx</span><br><span class="line"><span class="comment"># 修改目录权限</span></span><br><span class="line">chown -R www:www /mnt/wwwroot/xxxx</span><br></pre></td></tr></table></figure><h3 id="用www用户创建Hook文件-声明权限"><a href="#用www用户创建Hook文件-声明权限" class="headerlink" title="用www用户创建Hook文件,声明权限"></a>用www用户创建Hook文件,声明权限</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -Hu www touch /data/wwwroot/xxxx/webhook.php</span><br></pre></td></tr></table></figure><h3 id="创建log文件夹"><a href="#创建log文件夹" class="headerlink" title="创建log文件夹"></a>创建log文件夹</h3><p><code>sudo -Hu www mkdir log</code></p><h3 id="Hook文件内容"><a href="#Hook文件内容" class="headerlink" title="Hook文件内容"></a>Hook文件内容</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//git webhook 自动部署脚本</span></span><br><span class="line"><span class="comment">//项目存放物理路径</span></span><br><span class="line">$path = <span class="string">"/mnt/wwwroot/www.xxxx.com"</span>;</span><br><span class="line"></span><br><span class="line">$requestBody = file_get_contents(<span class="string">"php://input"</span>);</span><br><span class="line">$content = json_decode($requestBody, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//if(empty($content))&#123;</span></span><br><span class="line"><span class="comment">//    die("sent fail");</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//若是主分支且提交数大于0</span></span><br><span class="line"><span class="keyword">if</span> ($content[<span class="string">'ref'</span>]==<span class="string">'refs/heads/master'</span> &amp;&amp; $content[<span class="string">'total_commits_count'</span>]&gt;<span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//$res = shell_exec("cd &#123;$path&#125; &amp;&amp; git fetch --all &amp;&amp; git reset --hard origin/master ");</span></span><br><span class="line">    <span class="comment">//$res = shell_exec("cd &#123;$path&#125; &amp;&amp; git add . &amp;&amp; git commit -m 'commit by svn' &amp;&amp; git pull &amp;&amp; git push 2&gt;&amp;1");</span></span><br><span class="line">    $res = shell_exec(<span class="string">"cd &#123;$path&#125; &amp;&amp; git pull origin master "</span>);</span><br><span class="line"></span><br><span class="line">    $res_log = <span class="string">'-------------------------'</span>.PHP_EOL;</span><br><span class="line">    $res_log .= $content[<span class="string">'user_name'</span>] . <span class="string">' 在'</span> . date(<span class="string">'Y-m-d H:i:s'</span>) . <span class="string">'向'</span> . $content[<span class="string">'repository'</span>][<span class="string">'name'</span>] . <span class="string">'项目的'</span> . $content[<span class="string">'ref'</span>] . <span class="string">'分支push了</span></span><br><span class="line"><span class="string">'</span> . $content[<span class="string">'total_commits_count'</span>] . <span class="string">'个commit：'</span> . PHP_EOL;</span><br><span class="line">    $res_log .= $res.PHP_EOL;</span><br><span class="line"></span><br><span class="line">    file_put_contents(<span class="string">"&#123;$path&#125;/log/"</span>.date(<span class="string">'Y-m'</span>,time()).<span class="string">".txt"</span>, $res_log, FILE_APPEND);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>确保你的hook文件可以访问,例如<a href="https://test.com/hook.php" target="_blank" rel="noopener">https://test.com/hook.php</a> ,Hook文件准备完成.</p><h3 id="配置Remote和服务器仓库"><a href="#配置Remote和服务器仓库" class="headerlink" title="配置Remote和服务器仓库"></a>配置Remote和服务器仓库</h3><ul><li><p>配置公钥,将之前生成的公钥文件加入到Remote仓库的SSH公钥选项中</p></li><li><p>服务器仓库</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo -Hu www <span class="built_in">clone</span> git@repo_address/gittest.git /自定义文件夹</span><br><span class="line"><span class="comment"># 意思是以www用户的身份clone仓库,权限属于www用户</span></span><br></pre></td></tr></table></figure><ul><li>添加WebHooks规则</li></ul><blockquote><p>在每个仓库的设置中进行设置</p><p>可以选择推送事件/标签推送事件/评论/缺陷事件/合并请求/构建事件</p></blockquote><p>链接中填写外网访问服务器Hook文件的地址, 点击增加WEBHOOKS即可.</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>在本地仓库中:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim test.txt</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"test hook"</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>在服务器端:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看更改是否拉取到服务器</span></span><br><span class="line">vim test.txt</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;WebHook-Based-on-Git-Using-PHP&quot;&gt;&lt;a href=&quot;#WebHook-Based-on-Git-Using-PHP&quot; class=&quot;headerlink&quot; title=&quot;WebHook Based on Git(Using PHP)&quot;&gt;&lt;/a&gt;WebHook Based on Git(Using PHP)&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;使用Webhook实现远程服务器自动拉取更新内容&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Git" scheme="https://jacksonleon.gitee.io/categories/Git/"/>
    
      <category term="WebHook" scheme="https://jacksonleon.gitee.io/categories/Git/WebHook/"/>
    
    
      <category term="Git" scheme="https://jacksonleon.gitee.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>TortoiseGit on windows tutorial</title>
    <link href="https://jacksonleon.gitee.io/posts/2835625644.html"/>
    <id>https://jacksonleon.gitee.io/posts/2835625644.html</id>
    <published>2018-12-10T03:47:43.000Z</published>
    <updated>2018-12-24T15:07:18.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Tutorial-of-TortoiseGit-on-Windows"><a href="#Tutorial-of-TortoiseGit-on-Windows" class="headerlink" title="Tutorial of TortoiseGit on Windows"></a>Tutorial of TortoiseGit on Windows</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>Tutorial of TortoiseGit on Windows.</p><p><strong>TortoiseGit</strong> is a <a href="https://en.wikipedia.org/wiki/Git_(software" target="_blank" rel="noopener">Git</a>) revision control client, implemented as a <a href="https://en.wikipedia.org/wiki/Windows_shell_extension" target="_blank" rel="noopener">Windows shell extension</a> and based on <a href="https://en.wikipedia.org/wiki/TortoiseSVN" target="_blank" rel="noopener">TortoiseSVN</a>. It is <a href="https://en.wikipedia.org/wiki/Free_software" target="_blank" rel="noopener">free software</a> released under the <a href="https://en.wikipedia.org/wiki/GNU_General_Public_License" target="_blank" rel="noopener">GNU General Public License</a>.</p><p>In <a href="https://en.wikipedia.org/wiki/Windows_Explorer" target="_blank" rel="noopener">Windows Explorer</a>, besides showing context menu items for Git commands, TortoiseGit provides icon overlays that indicate the status of Git working trees and files.</p><p>It also comes with the TortoiseGitMerge utility to visually compare two files and resolve conflicts.</p></blockquote><a id="more"></a><h2 id="安装-TortoiseGit"><a href="#安装-TortoiseGit" class="headerlink" title="安装 TortoiseGit"></a>安装 TortoiseGit</h2><ul><li>需要下载<a href="https://git-for-windows.github.io/" target="_blank" rel="noopener">Git</a> 以及<a href="https://tortoisegit.org/download/" target="_blank" rel="noopener">TortoiseGit</a></li><li>TortoiseGit 官网自带<a href="https://download.tortoisegit.org/tgit/2.7.0.0/TortoiseGit-LanguagePack-2.7.0.0-64bit-zh_CN.msi" target="_blank" rel="noopener">中文语言包(64位)</a></li></ul><p>安装比较简单,一路Next,只需要注意下面几点:</p><ul><li>开始安装一路Next</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc8315f3303e.jpg" alt></p><h2 id="配置软件"><a href="#配置软件" class="headerlink" title="配置软件"></a>配置软件</h2><ul><li>勾选Run first start wizard</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc831671944b.jpg" alt></p><ul><li>设置本地Git路径</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc8316d65b19.jpg" alt></p><ul><li>设置用户名与邮箱地址</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc831723ef60.jpg" alt></p><ul><li>选择OpenSSh作为SSH软件工具(默认的会出现不知名错误)</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc8317791285.jpg" alt></p><ul><li>在相同的页面选择Generate PuTTY key pair</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc8317d84186.jpg" alt></p><ul><li>点击生成,鼠标需要在空白处移动,不然进度会非常慢</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc83182d5222.jpg" alt></p><ul><li>把生成的密钥内容粘贴进git库中的SSH 密钥的位置(设置-SSH 公钥)并保存到本地</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc8318979b81.jpg" alt></p><ul><li>打开Pageant(TortoiseGit文件夹下),点击Add,将刚刚生成的文件添加进去</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc8318d7debc.jpg" alt></p><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><h3 id="Clone到本地"><a href="#Clone到本地" class="headerlink" title="Clone到本地"></a>Clone到本地</h3><ul><li>工程文件夹下选择Git Clone,将Remote工程文件夹拉取到本地</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc8319796c77.jpg" alt></p><ul><li>URL中填写项目地址(SSH),Directory中填写工程所在位置,点击OK即可拉取到本地(与SVN操作大致相同)</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc8319f13886.jpg" alt></p><h3 id="将本地更新推送到远程"><a href="#将本地更新推送到远程" class="headerlink" title="将本地更新推送到远程"></a>将本地更新推送到远程</h3><ul><li>选择Git Commit…</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc831a5ee860.jpg" alt></p><ul><li>输入Message后点击Commit</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc831acb7c9b.jpg" alt></p><ul><li>接着点击Push并勾选合适的参数推送到远程客户端</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc831b27eea8.jpg" alt></p><p><img src="https://i.loli.net/2019/04/30/5cc831b853356.jpg" alt></p><ul><li>Push完成,一次本地更新结束,其他操作类似</li></ul><h3 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h3><ul><li>TortoiseGitDiff</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc831bdd9e68.jpg" alt></p><p><img src="https://i.loli.net/2019/04/30/5cc831c3cd65e.jpg" alt></p><ul><li>TortoiseGit选项</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc831c97a2f3.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Tutorial-of-TortoiseGit-on-Windows&quot;&gt;&lt;a href=&quot;#Tutorial-of-TortoiseGit-on-Windows&quot; class=&quot;headerlink&quot; title=&quot;Tutorial of TortoiseGit on Windows&quot;&gt;&lt;/a&gt;Tutorial of TortoiseGit on Windows&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Tutorial of TortoiseGit on Windows.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TortoiseGit&lt;/strong&gt; is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Git_(software&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Git&lt;/a&gt;) revision control client, implemented as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Windows_shell_extension&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Windows shell extension&lt;/a&gt; and based on &lt;a href=&quot;https://en.wikipedia.org/wiki/TortoiseSVN&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;TortoiseSVN&lt;/a&gt;. It is &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_software&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;free software&lt;/a&gt; released under the &lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_General_Public_License&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GNU General Public License&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;https://en.wikipedia.org/wiki/Windows_Explorer&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Windows Explorer&lt;/a&gt;, besides showing context menu items for Git commands, TortoiseGit provides icon overlays that indicate the status of Git working trees and files.&lt;/p&gt;
&lt;p&gt;It also comes with the TortoiseGitMerge utility to visually compare two files and resolve conflicts.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Git" scheme="https://jacksonleon.gitee.io/categories/Git/"/>
    
    
      <category term="Git" scheme="https://jacksonleon.gitee.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Java Note</title>
    <link href="https://jacksonleon.gitee.io/posts/1928241614.html"/>
    <id>https://jacksonleon.gitee.io/posts/1928241614.html</id>
    <published>2018-12-07T02:19:46.000Z</published>
    <updated>2018-12-28T07:49:42.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java-Note"><a href="#Java-Note" class="headerlink" title="Java Note"></a>Java Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>此文用来记录平时使用Java遇到的问题与心得.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="Java常用函数"><a href="#Java常用函数" class="headerlink" title="Java常用函数"></a>Java常用函数</h2><h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><ul><li>indexOf()</li><li>charAt()</li></ul><h2 id="Unix-时间戳与标准时间互转"><a href="#Unix-时间戳与标准时间互转" class="headerlink" title="Unix 时间戳与标准时间互转"></a>Unix 时间戳与标准时间互转</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Java将Unix时间戳转换成指定格式日期字符串</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> timestampString 时间戳 如："1473048265";</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> formats 要格式化的格式 默认："yyyy-MM-dd HH:mm:ss";</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 返回结果 如："2016-09-05 16:06:42";</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// imported</span></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">TimeStamp2Date</span><span class="params">(String timestampString, String formats)</span></span>&#123;</span><br><span class="line">    Long timestamp = Long.parseLong(timestampString);</span><br><span class="line">    String _date = <span class="keyword">new</span> SimpleDateFormat(formats, Locale.CHINA).format(<span class="keyword">new</span> Date(timestamp));</span><br><span class="line">    <span class="keyword">return</span> _date;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>调用方法</p><p><code>TimeStamp2Date(&quot;1473048265&quot;, &quot;yyyy-MM-dd HH:mm:ss”);</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 日期格式字符串转换成时间戳</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> dateStr 字符串日期</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> format   如：yyyy-MM-dd HH:mm:ss</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">Date2TimeStamp</span><span class="params">(String dateStr, String format)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(format);</span><br><span class="line">        <span class="keyword">return</span> String.valueOf(sdf.parse(dateStr).getTime() / <span class="number">1000</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Java-Note&quot;&gt;&lt;a href=&quot;#Java-Note&quot; class=&quot;headerlink&quot; title=&quot;Java Note&quot;&gt;&lt;/a&gt;Java Note&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;此文用来记录平时使用Java遇到的问题与心得.&lt;/p&gt;
&lt;p&gt;本文长期更新.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Java" scheme="https://jacksonleon.gitee.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://jacksonleon.gitee.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>MySQL Note</title>
    <link href="https://jacksonleon.gitee.io/posts/2102782187.html"/>
    <id>https://jacksonleon.gitee.io/posts/2102782187.html</id>
    <published>2018-12-07T01:52:54.000Z</published>
    <updated>2018-12-26T07:50:29.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL-Note"><a href="#MySQL-Note" class="headerlink" title="MySQL Note"></a>MySQL Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>此文用来记录平时使用MySQL遇到的问题与心得.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="MySQL常用命令"><a href="#MySQL常用命令" class="headerlink" title="MySQL常用命令"></a>MySQL常用命令</h2><ul><li>为用户修改密码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET PASSWORD FOR &apos;Username&apos;@&apos;Host&apos; = PASSWORD(&apos;password&apos;);</span><br></pre></td></tr></table></figure><ul><li>创建用户</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER Username IDENTIFIED BY &apos;password&apos;;</span><br><span class="line">GRANT SELECT, INSERT, UPDATE, DELETE, EXECUTE ON snatch.* TO &apos;Username&apos;@&apos;%&apos; identified by &apos;password&apos;;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><ul><li>删除用户</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Delete FROM user Where User=&apos;user-name&apos; and Host=&apos;host&apos;;</span><br></pre></td></tr></table></figure><h2 id="MySQL遇到的问题"><a href="#MySQL遇到的问题" class="headerlink" title="MySQL遇到的问题"></a>MySQL遇到的问题</h2><h3 id="InnoDB引擎自增id中断问题"><a href="#InnoDB引擎自增id中断问题" class="headerlink" title="InnoDB引擎自增id中断问题"></a>InnoDB引擎自增id中断问题</h3><blockquote><p> 如果在插入的过程中出现了删除的操作,那么下一条数据的自增id将跳过这个id,从而出现自增id中断的问题.</p></blockquote><p>如何检查:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 如果两个数不一样,那么就说明中间出现了断层</span><br><span class="line">SELECT COUNT(*) FROM table_name;</span><br><span class="line">SELECT MAX(id) FROM table_name;</span><br><span class="line"># 显示断层的id</span><br><span class="line">SELECT id FROM </span><br><span class="line">(SELECT id FROM table_name ORDER BY id ASC) t WHERE NOT EXISTS (SELECT 1 FROM table_name WHERE id=t.id-1);</span><br></pre></td></tr></table></figure><p>解决办法</p><ul><li>不适用默认自增id,自己设定id</li><li>在每次插入之前都将AUTO_INCREMENT设置为1<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name AUTO_INCREMENT=1;</span><br></pre></td></tr></table></figure></li></ul><h2 id="查询优化"><a href="#查询优化" class="headerlink" title="查询优化"></a>查询优化</h2><h3 id="limit、between等语句"><a href="#limit、between等语句" class="headerlink" title="limit、between等语句"></a>limit、between等语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># sql-1</span><br><span class="line">select * FROM table_name limit index1,index2-index1;</span><br><span class="line"># sql-2</span><br><span class="line">select * FROM table_name</span><br><span class="line">WHERE id BETWEEN index1 AND index2 limit 100;</span><br></pre></td></tr></table></figure><p>数据量比较大的话,<code>sql-2</code>的查询效率会比<code>sql-1</code>高很多,在数据量比较大的情况下一般使用between语句.</p><h2 id="查询表头信息"><a href="#查询表头信息" class="headerlink" title="查询表头信息"></a>查询表头信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW COLUMNS FROM snatch.`jcy_prop`;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MySQL-Note&quot;&gt;&lt;a href=&quot;#MySQL-Note&quot; class=&quot;headerlink&quot; title=&quot;MySQL Note&quot;&gt;&lt;/a&gt;MySQL Note&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;此文用来记录平时使用MySQL遇到的问题与心得.&lt;/p&gt;
&lt;p&gt;本文长期更新.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="MySQL" scheme="https://jacksonleon.gitee.io/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://jacksonleon.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Hackintosh for Lenovo Ideapad 700 15isk</title>
    <link href="https://jacksonleon.gitee.io/posts/3505015416.html"/>
    <id>https://jacksonleon.gitee.io/posts/3505015416.html</id>
    <published>2018-12-06T13:50:01.000Z</published>
    <updated>2019-01-26T14:25:44.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hacintash-for-Lenovo-Ideapad-700-15isk"><a href="#Hacintash-for-Lenovo-Ideapad-700-15isk" class="headerlink" title="Hacintash for Lenovo Ideapad 700 15isk"></a>Hacintash for Lenovo Ideapad 700 15isk</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>引言<br>最近更换了固态硬盘，所以就有一个闲置了出来，然后就在京东上面买了一个M.2接口NGFF协议的固态硬盘盒，用来装Hackintosh.</p></blockquote><a id="more"></a><h2 id="Windows-下制作MacOS安装盘"><a href="#Windows-下制作MacOS安装盘" class="headerlink" title="Windows 下制作MacOS安装盘"></a>Windows 下制作MacOS安装盘</h2><h3 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h3><ul><li><p>容量大于8G的U盘</p></li><li><p><a href="https://www.balena.io/etcher/" target="_blank" rel="noopener">etcher</a></p></li><li><p>Lenovo Ideapad 700 15isk专用CLOVER文件</p></li><li>系统镜像：<a href="https://blog.daliansky.net/macOS-Mojave-10.14.1-18B75-official-version-with-Clover-4726-original-image.html" target="_blank" rel="noopener">【黑果小兵】macOS Mojave 10.14.1 18B75 正式版 with Clover 4726原版镜像</a></li></ul><h3 id="制作安装镜像"><a href="#制作安装镜像" class="headerlink" title="制作安装镜像"></a>制作安装镜像</h3><p>镜像制作：下载<a href="https://etcher.io/" target="_blank" rel="noopener">etcher</a>，打开镜像，选择U盘，点击Flash即可<a href="http://7.daliansky.net/etcher.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/etcher.png" alt="etcher"></a></p><p>安装镜像的制作到这里就完成了,下一步,我们需要将电脑专用的EFI文件复制进刚制作好的USB磁盘的EFI分区里。</p><h3 id="Windows下将专用的EFI文件复制到USB安装盘的EFI分区下"><a href="#Windows下将专用的EFI文件复制到USB安装盘的EFI分区下" class="headerlink" title="Windows下将专用的EFI文件复制到USB安装盘的EFI分区下"></a>Windows下将专用的EFI文件复制到USB安装盘的EFI分区下</h3><p>以系统管理员身份打开<code>cmd</code>窗口,输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">c:\&gt;diskpart</span><br><span class="line">list disk           # 磁盘列表</span><br><span class="line">select disk n       # 选择EFI分区所在的磁盘，n为磁盘号</span><br><span class="line">list partition      # 磁盘分区列表</span><br><span class="line">select partition n  # 选择EFI分区，n为EFI分区号</span><br><span class="line">set id=&quot;ebd0a0a2-b9e5-4433-87c0-68b6b72699c7&quot;# 设置为基本数据分区</span><br><span class="line">assign letter=X     # x为EFI分区盘符</span><br><span class="line">exit# 退出diskpart</span><br><span class="line">notepad</span><br></pre></td></tr></table></figure><h3 id="BIOS设置"><a href="#BIOS设置" class="headerlink" title="BIOS设置"></a>BIOS设置</h3><p>进入BIOS,默认开启了安全认证,UEFI引导需要关闭安全启动<code>Secure Boot Mode</code>方式,否则无法加载UEFI引导设备.并设置MacOS启动U盘为第一启动序列,保存并重新启动.</p><h2 id="MacOS安装"><a href="#MacOS安装" class="headerlink" title="MacOS安装"></a>MacOS安装</h2><h3 id="第一阶段-以下为摘抄"><a href="#第一阶段-以下为摘抄" class="headerlink" title="第一阶段(以下为摘抄)"></a>第一阶段(以下为摘抄)</h3><ul><li>进入<code>Clover</code>主菜单</li></ul><p><img src="http://7.daliansky.net/XiaoMiCloverboot.png" alt="CLOVER菜单"></p><p>移动光标到<code>Boot OS X Install from XiaoMiPro 10131</code>回车 如果无法进入安装界面,需要打开啰嗦模式进行排错,具体的操作方法请参考<a href="https://blog.daliansky.net/clover-user-manual.html" target="_blank" rel="noopener">Clover使用教程</a> 。</p><ul><li>开始引导MacOS系统</li></ul><p><img src="http://7.daliansky.net/ParallelsPicture.png" alt></p><p>这个过程需要1-2分钟,耐心等待进入安装程序,出现语言选择界面</p><p><img src="http://7.daliansky.net/ParallelsPicture1.png" alt></p><p>出现<code>macOS实用工具</code>界面,选择磁盘工具</p><p><img src="http://7.daliansky.net/ParallelsPicture0.png" alt></p><h4 id="磁盘工具"><a href="#磁盘工具" class="headerlink" title="磁盘工具"></a>磁盘工具</h4><p><a href="http://7.daliansky.net/ParallelsPicture0.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/ParallelsPicture0.png" alt="ParallelsPicture0"></a>选择<code>显示所有设备</code>:<a href="http://7.daliansky.net/ParallelsPicture2.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/ParallelsPicture2.png" alt="ParallelsPicture2"></a>选择<code>SSD Media</code>,点击<code>抹掉</code>按钮,选择默认的<code>Mac OS扩展(日志型)</code>,将名称修改为<code>Macintosh HD</code>,点击<code>抹掉</code>按钮</p><p><strong>假设您的磁盘是空的且数据是已经备份过的,别怪我没提醒你!!!</strong></p><p><a href="http://7.daliansky.net/ParallelsPicture6.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/ParallelsPicture6.png" alt="ParallelsPicture6"></a>抹盘成功后,它会自动生成一个200MB的EFI分区,这样做的好处是不会出现安装过程中的由于EFI分区尺寸小于200MB而引起的无法安装的错误.当然前提是你的磁盘中没有重要的数据,或者您的数据已经提前备份过了.<a href="http://7.daliansky.net/ParallelsPicture7.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/ParallelsPicture7.png" alt="ParallelsPicture7"></a>到这里,磁盘工具的动作就已经结束了.退出磁盘工具进入安装界面,进行系统的安装了.</p><h4 id="安装macOS"><a href="#安装macOS" class="headerlink" title="安装macOS"></a>安装macOS</h4><p><a href="http://7.daliansky.net/ParallelsPicture8.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/ParallelsPicture8.png" alt="ParallelsPicture8"></a>进入安装界面<a href="http://7.daliansky.net/ParallelsPicture11.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/ParallelsPicture11.png" alt="ParallelsPicture11"></a>选择继续<a href="http://7.daliansky.net/ParallelsPicture12.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/ParallelsPicture12.png" alt="ParallelsPicture12"></a><a href="http://7.daliansky.net/ParallelsPicture13.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/ParallelsPicture13.png" alt="ParallelsPicture13"></a>点击同意,选择<code>Macintosh HD</code> <img src="http://7.daliansky.net/ParallelsPicture 14.png" alt="ParallelsPicture 14"> 选择安装 <img src="http://7.daliansky.net/ParallelsPicture 15.png" alt="ParallelsPicture 15"> 期间,它会把USB安装盘上的安装文件预复制到要安装的系统分区里,这个过程在小米Pro的笔记本上它跑得飞快,数据复制完后,它会自动重启<a href="http://7.daliansky.net/ParallelsPicture16.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/ParallelsPicture16.png" alt="ParallelsPicture16"></a>然后进行第二阶段的安装</p><h3 id="第二阶段"><a href="#第二阶段" class="headerlink" title="第二阶段"></a>第二阶段</h3><p>第二阶段的安装会有两种界面,一种是不进安装界面直接安装,另一种是先进入安装界面直接安装,需要注意的是,无论是哪一种界面下,安装的过程中全程是禁用鼠标和键盘的,需要你做的只是耐心等待它安装完成</p><p><img src="http://7.daliansky.net/ParallelsPicture 17.png" alt="ParallelsPicture 17"></p><p>安装速度取决于你的磁盘速度,第二阶段的安装已经与USB安装盘没什么关系了.macOS 10.13的安装完全区别于10.12,它不能免二次安装,甚至还需要重启多次,这些都是正常现象,请不要大惊小怪的. 系统安装完成后,重启进入系统设置向导</p><h4 id="国家选择"><a href="#国家选择" class="headerlink" title="国家选择"></a>国家选择</h4><p><a href="http://7.daliansky.net/Installer3.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer3.png" alt="Installer3"></a>首先让你选择国家,这里我选择中国<a href="http://7.daliansky.net/Installer4.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer4.png" alt="Installer4"></a>点击<code>继续</code>,设置键盘</p><h4 id="设置键盘"><a href="#设置键盘" class="headerlink" title="设置键盘"></a>设置键盘</h4><p><a href="http://7.daliansky.net/Installer5.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer5.png" alt="Installer5"></a>这里询问你<code>是否传输信息到这台Mac</code></p><h4 id="数据恢复"><a href="#数据恢复" class="headerlink" title="数据恢复"></a>数据恢复</h4><p>可以从Mac或者Time Machine备份恢复</p><p><a href="http://7.daliansky.net/Installer6.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer6.png" alt="Installer6"></a>我选择<code>现在不传输任何信息</code>,点击<code>继续</code></p><h4 id="Apple-ID登录"><a href="#Apple-ID登录" class="headerlink" title="Apple ID登录"></a>Apple ID登录</h4><p><a href="http://7.daliansky.net/Installer7.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer7.png" alt="Installer7"></a>选择是否<code>使用您的Apple ID登录</code>,如何想现在就登录到<code>Apple ID</code>,请输入<code>Apple ID</code>和密码登录,否则选择<code>不登录</code>,进入系统后也可以设置登录到<code>iCloud</code>,点击<code>继续</code><a href="http://7.daliansky.net/Installer8.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer8.png" alt="Installer8"></a>阅读条款与条件,选择<code>同意</code>继续<a href="http://7.daliansky.net/Installer9.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer9.png" alt="Installer9"></a>出现<code>创建电脑用户</code>的窗口,输入用户名和密码,点击<code>继续</code></p><h4 id="创建电脑用户"><a href="#创建电脑用户" class="headerlink" title="创建电脑用户"></a>创建电脑用户</h4><p><a href="http://7.daliansky.net/Installer10.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer10.png" alt="Installer10"></a>系统会创建初始用户<a href="http://7.daliansky.net/Installer11.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer11.png" alt="Installer11"></a>用户创建成功后,弹出<code>iCloud</code>的<code>正在设置用户</code>的窗口<a href="http://7.daliansky.net/Installer12.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer12.png" alt="Installer12"></a>紧接着弹出设置<code>iClound钥匙串</code>的设置窗口,选择<code>稍候设置</code>,点击<code>继续</code></p><h4 id="设置iCloud钥匙串"><a href="#设置iCloud钥匙串" class="headerlink" title="设置iCloud钥匙串"></a>设置iCloud钥匙串</h4><p><a href="http://7.daliansky.net/Installer13.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer13.png" alt="Installer13"></a>出现<code>快捷设置</code>,点击<code>继续</code></p><h4 id="快捷设置"><a href="#快捷设置" class="headerlink" title="快捷设置"></a>快捷设置</h4><p>自定义设置定位以及数据反馈,请根据自己的喜好进行设置</p><p><a href="http://7.daliansky.net/Installer14.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer14.png" alt="Installer14"></a>出现<code>iCloud中的所有文件</code>,如果你需要<code>将文稿和桌面上的文件储存在 iCloud Drive中</code>,请勾选,否则取消勾选,点击继续</p><h4 id="iCloud文件同步设置"><a href="#iCloud文件同步设置" class="headerlink" title="iCloud文件同步设置"></a>iCloud文件同步设置</h4><p><a href="http://7.daliansky.net/Installer16.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer16.png" alt="Installer16"></a>出现<code>FileVault磁盘加密</code>,如果你需要<code>打开 Filevault 磁盘加密</code>,请勾选,否则取消勾选,点击继续</p><h4 id="FileVault磁盘加密设置"><a href="#FileVault磁盘加密设置" class="headerlink" title="FileVault磁盘加密设置"></a>FileVault磁盘加密设置</h4><p><a href="http://7.daliansky.net/Installer17.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer17.png" alt="Installer17"></a>出现<code>正在设置您的Mac</code>,请稍候完成设置向导</p><h4 id="设置向导完成"><a href="#设置向导完成" class="headerlink" title="设置向导完成"></a>设置向导完成</h4><p><a href="http://7.daliansky.net/Installer18.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer18.png" alt="Installer18"></a></p><p>出现桌面后,整个的安装向导就完成了.<a href="http://7.daliansky.net/Installer19.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer19.png" alt="Installer19"></a></p><h3 id="安装后的系统设置"><a href="#安装后的系统设置" class="headerlink" title="安装后的系统设置"></a>安装后的系统设置</h3><p>教你将U盘上的EFI复制到磁盘的EFI分区,脱离USB运行[macOS篇]</p><blockquote><p>新的系统安装成功后，EFI还位于U盘里，总不能一直挂着U盘使用系统吧。这个时候如果你想将U盘里的EFI复制到磁盘的EFI分区里，却苦于找不到看不见EFI分区，这个时候是该让<code>diskutil</code>登场了。</p></blockquote><p><code>diskutil</code>命令的基本用法：</p><h4 id="查看磁盘分区表"><a href="#查看磁盘分区表" class="headerlink" title="查看磁盘分区表"></a>查看磁盘分区表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diskutil list</span><br></pre></td></tr></table></figure><p>/dev/disk0(internal, physical):</p><div class="table-container"><table><thead><tr><th>#:</th><th>TYPE</th><th>NAME</th><th>SIZE</th><th>IDENTIFIER</th></tr></thead><tbody><tr><td>0:</td><td>GUID_partition_scheme</td><td></td><td>256 GB</td><td>disk0</td></tr><tr><td>1:</td><td>EFI</td><td>EFI</td><td>200 MB</td><td>disk0s1</td></tr><tr><td>2:</td><td>Apple_HFS</td><td>MAC</td><td>128 GB</td><td>disk0s2</td></tr><tr><td>3:</td><td>Microsoft Basic Data</td><td>WIN10</td><td>127.7 GB</td><td>disk0s3</td></tr></tbody></table></div><p>/dev/disk1(internal, physical):</p><div class="table-container"><table><thead><tr><th>#:</th><th>TYPE</th><th>NAME</th><th>SIZE</th><th>IDENTIFIER</th></tr></thead><tbody><tr><td>0:</td><td>GUID_partition_scheme</td><td></td><td>16 GB</td><td>disk1</td></tr><tr><td>1:</td><td>EFI</td><td>EFI</td><td>200 MB</td><td>disk1s1</td></tr><tr><td>2:</td><td>Apple_HFS</td><td>Install macOS Sierra</td><td>15.8 GB</td><td>disk1s2</td></tr></tbody></table></div><h4 id="挂载磁盘EFI分区"><a href="#挂载磁盘EFI分区" class="headerlink" title="挂载磁盘EFI分区"></a>挂载磁盘EFI分区</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo diskutil mount disk0s1</span><br></pre></td></tr></table></figure><h4 id="挂载U盘EFI分区"><a href="#挂载U盘EFI分区" class="headerlink" title="挂载U盘EFI分区"></a>挂载U盘EFI分区</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo diskutil mount disk1s1</span><br></pre></td></tr></table></figure><p>打开Finder，注意后面有个<kbd>.</kbd></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open .</span><br></pre></td></tr></table></figure><p>左侧会显示挂载了两个EFI分区，将U盘EFI目录全部复制到磁盘的EFI分区即可。</p><h4 id="合并EFI分区"><a href="#合并EFI分区" class="headerlink" title="合并EFI分区"></a>合并EFI分区</h4><p><strong>这里有一点需要注意</strong>:如果之前安装过Windows系统的话,会存在EFI的目录,只是EFI的目录下面只有BOOT和Microsoft这两个目录,如果希望添加macOS的Clover引导的话,可以将USB的EFI分区里面的EFI目录下面的CLOVER复制到磁盘里的EFI目录下,也就是执行的是<strong><em>合并</em></strong>的操作,让EFI同时支持WINDOWS和macOS的引导.千万不要全部复制,否则有可能造成EFI无法启动Windows.</p><h4 id="复制EFI分区"><a href="#复制EFI分区" class="headerlink" title="复制EFI分区"></a>复制EFI分区</h4><p>如果磁盘上的EFI分区里为空的,可以直接将USB的EFI分区下面的EFI目录直接复制到磁盘上的EFI分区里.</p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>现在就可以拔掉U盘，尽情重启啦！</p><h2 id="后续工作"><a href="#后续工作" class="headerlink" title="后续工作"></a>后续工作</h2><ul><li>iMessage无法使用<ul><li>更改苹果三码实现</li><li>没有在苹果设备上注册过的账号一定是不可用的</li><li>之后继续尝试其他方案</li></ul></li><li>网卡、蓝牙无法使用</li><li>HIDPI提高分辨率</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hacintash-for-Lenovo-Ideapad-700-15isk&quot;&gt;&lt;a href=&quot;#Hacintash-for-Lenovo-Ideapad-700-15isk&quot; class=&quot;headerlink&quot; title=&quot;Hacintash for Lenovo Ideapad 700 15isk&quot;&gt;&lt;/a&gt;Hacintash for Lenovo Ideapad 700 15isk&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;引言&lt;br&gt;最近更换了固态硬盘，所以就有一个闲置了出来，然后就在京东上面买了一个M.2接口NGFF协议的固态硬盘盒，用来装Hackintosh.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Macintosh" scheme="https://jacksonleon.gitee.io/categories/Macintosh/"/>
    
      <category term="Hackintosh" scheme="https://jacksonleon.gitee.io/categories/Macintosh/Hackintosh/"/>
    
    
      <category term="Hackintosh" scheme="https://jacksonleon.gitee.io/tags/Hackintosh/"/>
    
  </entry>
  
  <entry>
    <title>「Leetcode」627. Swap Salary</title>
    <link href="https://jacksonleon.gitee.io/posts/3296282374.html"/>
    <id>https://jacksonleon.gitee.io/posts/3296282374.html</id>
    <published>2018-07-30T11:58:46.000Z</published>
    <updated>2018-12-28T07:47:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="627-Swap-Salary"><a href="#627-Swap-Salary" class="headerlink" title="627. Swap Salary"></a>627. Swap Salary</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Given a table <code>salary</code>, such as the one below, that has m=male and f=female values. Swap all f and m values (i.e., change all f values to m and vice versa) with a single update query and no intermediate temp table.</p><p>For example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">| id | name | sex | salary |</span><br><span class="line">|----|------|-----|--------|</span><br><span class="line">| 1  | A    | m   | 2500   |</span><br><span class="line">| 2  | B    | f   | 1500   |</span><br><span class="line">| 3  | C    | m   | 5500   |</span><br><span class="line">| 4  | D    | f   | 500    |</span><br></pre></td></tr></table></figure><p>After running your query, the above salary table should have the following rows: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">| id | name | sex | salary |</span><br><span class="line">|----|------|-----|--------|</span><br><span class="line">| 1  | A    | f   | 2500   |</span><br><span class="line">| 2  | B    | m   | 1500   |</span><br><span class="line">| 3  | C    | f   | 5500   |</span><br><span class="line">| 4  | D    | m   | 500    |</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Write your MySQL query statement below</span><br><span class="line">update salary </span><br><span class="line">set sex=IF(sex=&apos;f&apos;,&apos;m&apos;,&apos;f&apos;)</span><br></pre></td></tr></table></figure><h3 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h3><p>MySQL的东西忘得都差不多了，这些还是要定期复习一下的。话说这种判断式的语句真的非常好用啊！</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode-Note&quot;&gt;&lt;a href=&quot;#LeetCode-Note&quot; class=&quot;headerlink&quot; title=&quot;LeetCode Note&quot;&gt;&lt;/a&gt;LeetCode Note&lt;/h1&gt;&lt;p&gt;Sorted by Acceptance&lt;/p&gt;
&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;627-Swap-Salary&quot;&gt;&lt;a href=&quot;#627-Swap-Salary&quot; class=&quot;headerlink&quot; title=&quot;627. Swap Salary&quot;&gt;&lt;/a&gt;627. Swap Salary&lt;/h2&gt;&lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;p&gt;Given a table &lt;code&gt;salary&lt;/code&gt;, such as the one below, that has m=male and f=female values. Swap all f and m values (i.e., change all f values to m and vice versa) with a single update query and no intermediate temp table.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;| id | name | sex | salary |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|----|------|-----|--------|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| 1  | A    | m   | 2500   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| 2  | B    | f   | 1500   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| 3  | C    | m   | 5500   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| 4  | D    | f   | 500    |&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;After running your query, the above salary table should have the following rows: &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;| id | name | sex | salary |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|----|------|-----|--------|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| 1  | A    | f   | 2500   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| 2  | B    | m   | 1500   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| 3  | C    | f   | 5500   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| 4  | D    | m   | 500    |&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/tags/LeetCode/"/>
    
      <category term="MySQL" scheme="https://jacksonleon.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>「Leetcode」876. Middle of the Linked List</title>
    <link href="https://jacksonleon.gitee.io/posts/3852375072.html"/>
    <id>https://jacksonleon.gitee.io/posts/3852375072.html</id>
    <published>2018-07-30T10:59:07.000Z</published>
    <updated>2018-12-28T07:47:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="876-Middle-of-the-Linked-List"><a href="#876-Middle-of-the-Linked-List" class="headerlink" title="876. Middle of the Linked List"></a>876. Middle of the Linked List</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Given a non-empty, singly linked list with head node <code>head</code>, return a middle node of linked list.</p><p>If there are two middle nodes, return the second middle node.</p></blockquote><a id="more"></a><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><ul><li><p>one</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,2,3,4,5]</span><br><span class="line">Output: Node 3 from this list (Serialization: [3,4,5])</span><br><span class="line">The returned node has value 3.  (The judge&apos;s serialization of this node is [3,4,5]).</span><br><span class="line">Note that we returned a ListNode object ans, such that:</span><br><span class="line">ans.val = 3, ans.next.val = 4, ans.next.next.val = 5, and ans.next.next.next = NULL.</span><br></pre></td></tr></table></figure></li><li><p>two</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,2,3,4,5,6]</span><br><span class="line">Output: Node 4 from this list (Serialization: [4,5,6])</span><br><span class="line">Since the list has two middle nodes with values 3 and 4, we return the second one.</span><br></pre></td></tr></table></figure></li></ul><p><strong>Note</strong>: The number of nodes in the given list will be between <code>1</code> and <code>100</code>.</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">middleNode</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">        ListNode *slow, *fast;</span><br><span class="line">        slow=head;fast=head;</span><br><span class="line">        <span class="keyword">while</span>(fast!=<span class="literal">NULL</span> &amp;&amp; fast-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            slow=slow-&gt;next;</span><br><span class="line">            fast=fast-&gt;next-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slow;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h3><p>其实是一个搜索的过程，正常逻辑就是遍历链表到头，获取一半的长度，截取后半部分就可以，但是由于是链表，搜索起来耗费时间空间。</p><p>可以把链表内容复制到数组，从而将目标找到。也可以设置两个指针: <code>slow</code> 、<code>fast</code>，<code>fast</code>移动速度为<code>slow</code>的两倍，那么当<code>fast</code>到达链表尾部时，<code>slow</code>此时在链表中部，返回<code>slow</code>指针就达到了我们的目的。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode-Note&quot;&gt;&lt;a href=&quot;#LeetCode-Note&quot; class=&quot;headerlink&quot; title=&quot;LeetCode Note&quot;&gt;&lt;/a&gt;LeetCode Note&lt;/h1&gt;&lt;p&gt;Sorted by Acceptance&lt;/p&gt;
&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;876-Middle-of-the-Linked-List&quot;&gt;&lt;a href=&quot;#876-Middle-of-the-Linked-List&quot; class=&quot;headerlink&quot; title=&quot;876. Middle of the Linked List&quot;&gt;&lt;/a&gt;876. Middle of the Linked List&lt;/h2&gt;&lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Given a non-empty, singly linked list with head node &lt;code&gt;head&lt;/code&gt;, return a middle node of linked list.&lt;/p&gt;
&lt;p&gt;If there are two middle nodes, return the second middle node.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/categories/LeetCode/"/>
    
      <category term="Linked List" scheme="https://jacksonleon.gitee.io/categories/LeetCode/Linked-List/"/>
    
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/tags/LeetCode/"/>
    
      <category term="Array" scheme="https://jacksonleon.gitee.io/tags/Array/"/>
    
  </entry>
  
  <entry>
    <title>「Leetcode」852. Peak Index in a Mountain Array</title>
    <link href="https://jacksonleon.gitee.io/posts/756872862.html"/>
    <id>https://jacksonleon.gitee.io/posts/756872862.html</id>
    <published>2018-07-30T10:31:11.000Z</published>
    <updated>2018-12-28T07:47:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="852-Peak-Index-in-a-Mountain-Array"><a href="#852-Peak-Index-in-a-Mountain-Array" class="headerlink" title="852. Peak Index in a Mountain Array"></a>852. Peak Index in a Mountain Array</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Let’s call an array <code>A</code> a <em>mountain</em> if the following properties hold:</p><ul><li><code>A.length &gt;= 3</code></li><li>There exists some <code>0 &lt; i &lt; A.length - 1</code> such that <code>A[0] &lt; A[1] &lt; ... A[i-1] &lt; A[i] &gt; A[i+1] &gt; ... &gt; A[A.length - 1]</code></li></ul><p>Given an array that is definitely a mountain, return any <code>i</code> such that <code>A[0] &lt; A[1] &lt; ... A[i-1] &lt; A[i] &gt; A[i+1] &gt; ... &gt; A[A.length - 1]</code>.</p></blockquote><a id="more"></a><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><ul><li><p>one</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [0,1,0]</span><br><span class="line">Output: 1</span><br></pre></td></tr></table></figure></li><li><p>two</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [0,2,1,0]</span><br><span class="line">Output: 1</span><br></pre></td></tr></table></figure></li></ul><h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><ul><li><code>3 &lt;= A.length &lt;= 10000</code></li><li><code>0 &lt;= A[i] &lt;= 10^6</code></li><li>A is a mountain, as defined above.</li></ul><h3 id="Solution-C"><a href="#Solution-C" class="headerlink" title="Solution(C++)"></a>Solution(C++)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int peakIndexInMountainArray(vector&lt;int&gt;&amp; A) &#123;</span><br><span class="line">        for(int i=0;i&lt;A.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            if(A[i]&gt;A[i+1])</span><br><span class="line">                return i;</span><br><span class="line">        &#125;</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h3><p>直接根据<code>Mountain Array</code>的定义来确定<code>i</code>的位置，比较无脑的办法就是直接遍历数组。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode-Note&quot;&gt;&lt;a href=&quot;#LeetCode-Note&quot; class=&quot;headerlink&quot; title=&quot;LeetCode Note&quot;&gt;&lt;/a&gt;LeetCode Note&lt;/h1&gt;&lt;p&gt;Sorted by Acceptance&lt;/p&gt;
&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;852-Peak-Index-in-a-Mountain-Array&quot;&gt;&lt;a href=&quot;#852-Peak-Index-in-a-Mountain-Array&quot; class=&quot;headerlink&quot; title=&quot;852. Peak Index in a Mountain Array&quot;&gt;&lt;/a&gt;852. Peak Index in a Mountain Array&lt;/h2&gt;&lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Let’s call an array &lt;code&gt;A&lt;/code&gt; a &lt;em&gt;mountain&lt;/em&gt; if the following properties hold:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;A.length &amp;gt;= 3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;There exists some &lt;code&gt;0 &amp;lt; i &amp;lt; A.length - 1&lt;/code&gt; such that &lt;code&gt;A[0] &amp;lt; A[1] &amp;lt; ... A[i-1] &amp;lt; A[i] &amp;gt; A[i+1] &amp;gt; ... &amp;gt; A[A.length - 1]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Given an array that is definitely a mountain, return any &lt;code&gt;i&lt;/code&gt; such that &lt;code&gt;A[0] &amp;lt; A[1] &amp;lt; ... A[i-1] &amp;lt; A[i] &amp;gt; A[i+1] &amp;gt; ... &amp;gt; A[A.length - 1]&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/categories/LeetCode/"/>
    
      <category term="Binary Search" scheme="https://jacksonleon.gitee.io/categories/LeetCode/Binary-Search/"/>
    
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/tags/LeetCode/"/>
    
      <category term="String" scheme="https://jacksonleon.gitee.io/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>「Leetcode」617. Merge Two Binary Trees</title>
    <link href="https://jacksonleon.gitee.io/posts/1733828030.html"/>
    <id>https://jacksonleon.gitee.io/posts/1733828030.html</id>
    <published>2018-07-30T08:09:21.000Z</published>
    <updated>2018-12-28T07:47:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="617-Merge-Two-Binary-Trees"><a href="#617-Merge-Two-Binary-Trees" class="headerlink" title="617. Merge Two Binary Trees"></a>617. Merge Two Binary Trees</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Given two binary trees and imagine that when you put one of them to cover the other, some nodes of the two trees are overlapped while the others are not.</p><p>You need to merge them into a new binary tree. The merge rule is that if two nodes overlap, then sum node values up as the new value of the merged node. Otherwise, the NOT null node will be used as the node of new tree.</p></blockquote><a id="more"></a><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Input: </span><br><span class="line">   Tree 1                    Tree 2                  </span><br><span class="line">          1                         2                             </span><br><span class="line">         / \                       / \                            </span><br><span class="line">        3   2                     1   3                        </span><br><span class="line">       /                           \   \                      </span><br><span class="line">      5                             4   7                  </span><br><span class="line">Output: </span><br><span class="line">Merged tree:</span><br><span class="line">     3</span><br><span class="line">    / \</span><br><span class="line">   4   5</span><br><span class="line">  / \   \ </span><br><span class="line"> 5   4   7</span><br></pre></td></tr></table></figure><p><strong>Note</strong>: The merging process must start from the root nodes of both trees. </p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><ul><li><p>C++</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * struct TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode *left;</span></span><br><span class="line"><span class="comment"> *     TreeNode *right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">mergeTrees</span><span class="params">(TreeNode* t1, TreeNode* t2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t1==<span class="literal">NULL</span> &amp;&amp; t2==<span class="literal">NULL</span>)<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> tempValue=(t1==<span class="literal">NULL</span>?<span class="number">0</span>:t1-&gt;val)+(t2==<span class="literal">NULL</span>?<span class="number">0</span>:t2-&gt;val);</span><br><span class="line">        TreeNode* res=<span class="keyword">new</span> TreeNode(tempValue);</span><br><span class="line">        </span><br><span class="line">        res-&gt;left=mergeTrees((t1==<span class="literal">NULL</span>?<span class="literal">NULL</span>:t1-&gt;left),(t2==<span class="literal">NULL</span>?<span class="literal">NULL</span>:t2-&gt;left));</span><br><span class="line">        res-&gt;right=mergeTrees((t1==<span class="literal">NULL</span>?<span class="literal">NULL</span>:t1-&gt;right),(t2==<span class="literal">NULL</span>?<span class="literal">NULL</span>:t2-&gt;right));</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul><h3 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h3><p>使用递归遍历两个树，注意从头节点开始获取<code>val</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode-Note&quot;&gt;&lt;a href=&quot;#LeetCode-Note&quot; class=&quot;headerlink&quot; title=&quot;LeetCode Note&quot;&gt;&lt;/a&gt;LeetCode Note&lt;/h1&gt;&lt;p&gt;Sorted by Acceptance&lt;/p&gt;
&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;617-Merge-Two-Binary-Trees&quot;&gt;&lt;a href=&quot;#617-Merge-Two-Binary-Trees&quot; class=&quot;headerlink&quot; title=&quot;617. Merge Two Binary Trees&quot;&gt;&lt;/a&gt;617. Merge Two Binary Trees&lt;/h2&gt;&lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Given two binary trees and imagine that when you put one of them to cover the other, some nodes of the two trees are overlapped while the others are not.&lt;/p&gt;
&lt;p&gt;You need to merge them into a new binary tree. The merge rule is that if two nodes overlap, then sum node values up as the new value of the merged node. Otherwise, the NOT null node will be used as the node of new tree.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/categories/LeetCode/"/>
    
      <category term="Tree" scheme="https://jacksonleon.gitee.io/categories/LeetCode/Tree/"/>
    
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/tags/LeetCode/"/>
    
      <category term="Tree" scheme="https://jacksonleon.gitee.io/tags/Tree/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode Analysis</title>
    <link href="https://jacksonleon.gitee.io/posts/1393014657.html"/>
    <id>https://jacksonleon.gitee.io/posts/1393014657.html</id>
    <published>2018-07-30T08:09:21.000Z</published>
    <updated>2018-07-30T08:09:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode-Analysis"><a href="#LeetCode-Analysis" class="headerlink" title="LeetCode Analysis"></a>LeetCode Analysis</h1><div class="table-container"><table><thead><tr><th>LeetCode ID</th><th>Name</th><th>Status</th><th>Difficulty</th><th>Language</th></tr></thead><tbody><tr><td>191</td><td><a href="https://leetcode.com/problems/number-of-1-bits" target="_blank" rel="noopener">Number of 1 Bits</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>386</td><td><a href="https://leetcode.com/problems/lexicographical-numbers" target="_blank" rel="noopener">Lexicographical Numbers</a></td><td>Solved</td><td>M</td><td>C/C++</td></tr><tr><td>387</td><td><a href="https://leetcode.com/problems/first-unique-character-in-a-string" target="_blank" rel="noopener">First Unique Character in a String</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>461</td><td><a href="https://leetcode.com/problems/hamming-distance" target="_blank" rel="noopener">Hamming Distance</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>535</td><td><a href="https://leetcode.com/problems/encode-and-decode-tinyurl" target="_blank" rel="noopener">Encode and Decode TinyURL</a></td><td>Solved</td><td>M</td><td>C/C++</td></tr><tr><td>595</td><td><a href="https://leetcode.com/problems/big-countries" target="_blank" rel="noopener">Big Countries</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>617</td><td><a href="https://leetcode.com/problems/merge-two-binary-trees" target="_blank" rel="noopener">Merge Two Binary Trees</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>627</td><td><a href="https://leetcode.com/problems/swap-salary/description/" target="_blank" rel="noopener">Swap Salary</a></td><td>Solved</td><td>E</td><td>MySQL</td></tr><tr><td>654</td><td><a href="https://leetcode.com/problems/maximum-binary-tree" target="_blank" rel="noopener">Maximum Binary Tree</a></td><td>Solved</td><td>M</td><td>C/C++</td></tr><tr><td>657</td><td><a href="https://leetcode.com/problems/judge-route-circle" target="_blank" rel="noopener">Judge Route Circle</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>709</td><td><a href="https://leetcode.com/problems/to-lower-case" target="_blank" rel="noopener">To Lower Case</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>771</td><td><a href="https://leetcode.com/problems/jewels-and-stones" target="_blank" rel="noopener">Jewels and Stones</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>804</td><td><a href="https://leetcode.com/problems/unique-morse-code-words" target="_blank" rel="noopener">Unique Morse Code Words</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>807</td><td><a href="https://leetcode.com/problems/max-increase-to-keep-city-skyline" target="_blank" rel="noopener">Max Increase to Keep City Skyline</a></td><td>Solved</td><td>M</td><td>C/C++</td></tr><tr><td>832</td><td><a href="https://leetcode.com/problems/flipping-an-image" target="_blank" rel="noopener">Flipping an Image</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>852</td><td><a href="https://leetcode.com/problems/peak-index-in-a-mountain-array/description/" target="_blank" rel="noopener">Peak Index in a Mountain Array</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>876</td><td><a href="https://leetcode.com/problems/middle-of-the-linked-list/description/" target="_blank" rel="noopener">Middle of the Linked List</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr></tbody></table></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;LeetCode-Analysis&quot;&gt;&lt;a href=&quot;#LeetCode-Analysis&quot; class=&quot;headerlink&quot; title=&quot;LeetCode Analysis&quot;&gt;&lt;/a&gt;LeetCode Analysis&lt;/h1&gt;&lt;div class=&quot;t
      
    
    </summary>
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-NexT博客样式自定义</title>
    <link href="https://jacksonleon.gitee.io/posts/1540132352.html"/>
    <id>https://jacksonleon.gitee.io/posts/1540132352.html</id>
    <published>2018-07-17T00:36:16.000Z</published>
    <updated>2019-02-02T05:49:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-NexT博客样式自定义"><a href="#Hexo-NexT博客样式自定义" class="headerlink" title="Hexo-NexT博客样式自定义"></a>Hexo-NexT博客样式自定义</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>默认的主题样式非常简单，但是在有些方面还有些缺陷，其实NexT主题中已经包含这些主题，我们只需要把他们启用就OK啦。</p></blockquote><a id="more"></a><h2 id="更新NexT主题"><a href="#更新NexT主题" class="headerlink" title="更新NexT主题"></a>更新NexT主题</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><p>其中Blog文件夹下的_config.yml为站点配置文件，themes/next下的_config.yml为主题配置文件。</p><h2 id="开启主页菜单"><a href="#开启主页菜单" class="headerlink" title="开启主页菜单"></a>开启主页菜单</h2><p>打开主题配置文件，找到menu内容，将需要用到的菜单取消注释</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line"><span class="attr">  about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span></span><br><span class="line"><span class="attr">  tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br><span class="line"><span class="attr">  archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line">  <span class="comment"># schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment"># sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment"># commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure><p>启用的菜单需要添加对应的页面<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"categories"</span></span><br></pre></td></tr></table></figure></p><p>并在<code>index.md</code>文件中添加<code>type: &quot;categories&quot;</code></p><h2 id="添加Fork-me-on-github"><a href="#添加Fork-me-on-github" class="headerlink" title="添加Fork me on github"></a>添加Fork me on github</h2><p>在<a href="https://blog.github.com/2008-12-19-github-ribbons/" target="_blank" rel="noopener">GitHub Ribbons</a>或<a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">GitHub Corners</a>选择一款你喜欢的挂饰，拷贝方框内的代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://your-url"</span> <span class="attr">class</span>=<span class="string">"github-corner"</span> <span class="attr">aria-label</span>=<span class="string">"View source on Github"</span>&gt;</span><span class="tag">&lt;<span class="name">svg</span> <span class="attr">width</span>=<span class="string">"80"</span> <span class="attr">height</span>=<span class="string">"80"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 250 250"</span> <span class="attr">style</span>=<span class="string">"fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2"</span> <span class="attr">fill</span>=<span class="string">"currentColor"</span> <span class="attr">style</span>=<span class="string">"transform-origin: 130px 106px;"</span> <span class="attr">class</span>=<span class="string">"octo-arm"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z"</span> <span class="attr">fill</span>=<span class="string">"currentColor"</span> <span class="attr">class</span>=<span class="string">"octo-body"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">style</span>&gt;</span>.github-corner:hover .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;@keyframes octocat-wave&#123;0%,100%&#123;transform:rotate(0)&#125;20%,60%&#123;transform:rotate(-25deg)&#125;40%,80%&#123;transform:rotate(10deg)&#125;&#125;@media (max-width:500px)&#123;.github-corner:hover .octo-arm&#123;animation:none&#125;.github-corner .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;&#125;<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>在<code>/themes/next/layout/_layout.swig</code>文件中，将上述代码放到<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>下方。</p><h2 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h2><ul><li><p>安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure></li><li><p>编辑站点配置文件，在文件末尾添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plugins: hexo-generate-feed</span><br></pre></td></tr></table></figure></li><li><p>配置主题配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Set rss to false to disable feed link.</span><br><span class="line"># Leave rss as empty to use site&apos;s feed link.</span><br><span class="line"># Set rss to specific value if you have burned your feed already.</span><br><span class="line">rss: /atom.xml //注意：有一个空格</span><br></pre></td></tr></table></figure></li></ul><h2 id="修改底部标签样式"><a href="#修改底部标签样式" class="headerlink" title="修改底部标签样式"></a>修改底部标签样式</h2><p>修改<code>\themes\next\layout\_macro\post.swig</code>中文件，搜索<code>rel=&quot;tag&quot;&gt;#</code>，将#替换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code>。</p><h2 id="修改代码块自定义样式"><a href="#修改代码块自定义样式" class="headerlink" title="修改代码块自定义样式"></a>修改代码块自定义样式</h2><p>修改<code>\themes\next\source\css\_custom\custom.styl</code><br><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Custom styles.</span></span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff7600</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fbf7f8</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 大代码块的自定义样式</span></span><br><span class="line"><span class="selector-class">.highlight</span>, pre &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.highlight</span>, <span class="selector-tag">code</span>, pre &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d6d6d6</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="修改主题配置文件，搜索Social"><a href="#修改主题配置文件，搜索Social" class="headerlink" title="修改主题配置文件，搜索Social"></a>修改主题配置文件，搜索Social</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># [社交平台名]: [社交地址] || [图标名称]</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line"><span class="attr">  GitHub:</span> <span class="attr">https://github.com/JacksonLeon</span> <span class="string">||</span> <span class="string">github</span></span><br><span class="line"><span class="attr">  E-Mail:</span> <span class="attr">mailto:pumbjackson@gmail.com</span> <span class="string">||</span> <span class="string">envelope</span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || facebook</span></span><br><span class="line">  <span class="comment">#VK Group: https://vk.com/yourname || vk</span></span><br><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || skype</span></span><br></pre></td></tr></table></figure><h2 id="添加点击爱心效果"><a href="#添加点击爱心效果" class="headerlink" title="添加点击爱心效果"></a>添加点击爱心效果</h2><p>给NexT主题内添加页面点击出现爱心的效果</p><h3 id="创建js文件"><a href="#创建js文件" class="headerlink" title="创建js文件"></a>创建js文件</h3><p>在<code>/themes/next/source/js/src</code>下新建文件<code>clicklove.js</code>，接着把该<a href="http://7u2ss1.com1.z0.glb.clouddn.com/love.js" target="_blank" rel="noopener">链接</a>下的代码拷贝粘贴到<code>clicklove.js</code>文件中。<br>代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span> (<span class="params">e, t, a</span>) </span>&#123; <span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>) </span>&#123; c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>), o(), r() &#125; <span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>) </span>&#123; <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="number">0</span>; e &lt; d.length; e++)d[e].alpha &lt;= <span class="number">0</span> ? (t.body.removeChild(d[e].el), d.splice(e, <span class="number">1</span>)) : (d[e].y-- , d[e].scale += <span class="number">.004</span>, d[e].alpha -= <span class="number">.013</span>, d[e].el.style.cssText = <span class="string">"left:"</span> + d[e].x + <span class="string">"px;top:"</span> + d[e].y + <span class="string">"px;opacity:"</span> + d[e].alpha + <span class="string">";transform:scale("</span> + d[e].scale + <span class="string">","</span> + d[e].scale + <span class="string">") rotate(45deg);background:"</span> + d[e].color + <span class="string">";z-index:99999"</span>); requestAnimationFrame(r) &#125; <span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>) </span>&#123; <span class="keyword">var</span> t = <span class="string">"function"</span> == <span class="keyword">typeof</span> e.onclick &amp;&amp; e.onclick; e.onclick = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123; t &amp;&amp; t(), i(e) &#125; &#125; <span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>) </span>&#123; <span class="keyword">var</span> a = t.createElement(<span class="string">"div"</span>); a.className = <span class="string">"heart"</span>, d.push(&#123; <span class="attr">el</span>: a, <span class="attr">x</span>: e.clientX - <span class="number">5</span>, <span class="attr">y</span>: e.clientY - <span class="number">5</span>, <span class="attr">scale</span>: <span class="number">1</span>, <span class="attr">alpha</span>: <span class="number">1</span>, <span class="attr">color</span>: s() &#125;), t.body.appendChild(a) &#125; <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>) </span>&#123; <span class="keyword">var</span> a = t.createElement(<span class="string">"style"</span>); a.type = <span class="string">"text/css"</span>; <span class="keyword">try</span> &#123; a.appendChild(t.createTextNode(e)) &#125; <span class="keyword">catch</span> (t) &#123; a.styleSheet.cssText = e &#125; t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a) &#125; <span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> <span class="string">"rgb("</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">","</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">","</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">")"</span> &#125; <span class="keyword">var</span> d = []; e.requestAnimationFrame = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="keyword">return</span> e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123; setTimeout(e, <span class="number">1e3</span> / <span class="number">60</span>) &#125; &#125;(), n() &#125;(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br></pre></td></tr></table></figure><h3 id="修改-layout-swig"><a href="#修改-layout-swig" class="headerlink" title="修改_layout.swig"></a>修改_layout.swig</h3><p>在<code>\themes\next\layout\_layout.swig</code>文件末尾添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clicklove.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="添加字数统计、阅读时长"><a href="#添加字数统计、阅读时长" class="headerlink" title="添加字数统计、阅读时长"></a>添加字数统计、阅读时长</h2><h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure><h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><p>Activate this plugin in <strong>hexo’s _config.yml</strong> (which locates in the root dir of your blog) by enabled any option:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br></pre></td></tr></table></figure><p>If <code>symbols_count_time</code> not specified (or commented), plugin will totally disabled.</p><h3 id="NexT-theme"><a href="#NexT-theme" class="headerlink" title="NexT theme"></a>NexT theme</h3><p>This plugin integrated in «NexT» and after plugin enabled in main Hexo config, you may adjust options in NexT config:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true</span><br><span class="line">  item_text_post: true</span><br><span class="line">  item_text_total: false</span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br></pre></td></tr></table></figure><h4 id="Parameters"><a href="#Parameters" class="headerlink" title="Parameters"></a>Parameters</h4><ul><li><p><code>AWL</code>— Average Word Length (chars count in word). Default:<code>4</code>. You can check this <a href="https://charactercounttool.com/" target="_blank" rel="noopener">here</a></p><ul><li>CN ≈ <code>2</code></li><li>EN ≈ <code>5</code></li><li>RU ≈ <code>6</code></li></ul></li><li><p><code>WPM</code>— Words Per Minute. Default:<code>275</code>. You can check this <a href="https://wordcounter.net/" target="_blank" rel="noopener">here</a></p><ul><li>Slow ≈ <code>200</code></li><li>Normal ≈ <code>275</code></li><li>Fast ≈ <code>350</code></li></ul></li><li><code>Suffix</code> — If time to read less then 60 minutes, added suffix as string parameter. Default: <code>mins.</code></li></ul><p><strong>Note for Chinese users:</strong> because in Chinese language average word length about <code>~1.5</code> and if you at most cases write posts in Chinese (without mixed English), recommended to set <code>awl</code> to <code>2</code> and <code>wpm</code> to <code>300</code>.<br>But if you usualy mix your posts with English, <code>awl</code> to <code>4</code> and <code>wpm</code> to <code>275</code> will be nice.</p><h2 id="底部隐藏由Hexo强力驱动、主题"><a href="#底部隐藏由Hexo强力驱动、主题" class="headerlink" title="底部隐藏由Hexo强力驱动、主题"></a>底部隐藏由Hexo强力驱动、主题</h2><p>打开主题配置文件，搜索<code>footer</code>下的<code>powered</code>以及<code>theme</code>设置为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">enable: false</span><br><span class="line">version: false</span><br></pre></td></tr></table></figure><h2 id="在文章底部增加版权信息"><a href="#在文章底部增加版权信息" class="headerlink" title="在文章底部增加版权信息"></a>在文章底部增加版权信息</h2><ul><li>在目录<code>Blog/themes/next/layout/_macro/</code>，添加文件 <code>my-copyright.swig</code>，内容如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if page.copyright %&#125;</span><br><span class="line">&lt;div class=&quot;my_post_copyright&quot;&gt;</span><br><span class="line">  &lt;script src=&quot;//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;!-- JS库 sweetalert 可修改路径 --&gt;</span><br><span class="line">  &lt;script src=&quot;https://cdn.bootcss.com/jquery/2.0.0/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;https://unpkg.com/sweetalert/dist/sweetalert.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot;&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&lt;a href=&quot;/&quot; title=&quot;访问 &#123;&#123; theme.author &#125;&#125; 的个人博客&quot;&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123; page.updated.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot; title=&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt;</span><br><span class="line">    &lt;span class=&quot;copy-path&quot;  title=&quot;点击复制文章链接&quot;&gt;&lt;i class=&quot;fa fa-clipboard&quot; data-clipboard-text=&quot;&#123;&#123; page.permalink &#125;&#125;&quot;  aria-label=&quot;复制成功！&quot;&gt;&lt;/i&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class=&quot;fa fa-creative-commons&quot;&gt;&lt;/i&gt; &lt;a rel=&quot;license&quot; href=&quot;https://creativecommons.org/licenses/by-nc-nd/4.0/&quot; target=&quot;_blank&quot; title=&quot;Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)&quot;&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 转载请保留原文链接及作者。&lt;/p&gt;  </span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt; </span><br><span class="line">    var clipboard = new Clipboard(&apos;.fa-clipboard&apos;);</span><br><span class="line">    $(&quot;.fa-clipboard&quot;).click(function()&#123;</span><br><span class="line">      clipboard.on(&apos;success&apos;, function()&#123;</span><br><span class="line">        swal(&#123;   </span><br><span class="line">          title: &quot;&quot;,   </span><br><span class="line">          text: &apos;复制成功&apos;,</span><br><span class="line">          icon: &quot;success&quot;, </span><br><span class="line">          showConfirmButton: true</span><br><span class="line">          &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    &#125;);  </span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><ul><li>在<code>Blog/themes/next/source/css/_common/components/post/</code>添加文件<code>my-post-copyright.styl</code>，文件内容如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">.my_post_copyright &#123;</span><br><span class="line">  width: 85%;</span><br><span class="line">  max-width: 45em;</span><br><span class="line">  margin: 2.8em auto 0;</span><br><span class="line">  padding: 0.5em 1.0em;</span><br><span class="line">  border: 1px solid #d3d3d3;</span><br><span class="line">  font-size: 0.93rem;</span><br><span class="line">  line-height: 1.6em;</span><br><span class="line">  word-break: break-all;</span><br><span class="line">  background: rgba(255,255,255,0.4);</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright p&#123;margin:0;&#125;</span><br><span class="line">.my_post_copyright span &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  width: 5.2em;</span><br><span class="line">  color: #b5b5b5;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .raw &#123;</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 5em;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright a &#123;</span><br><span class="line">  color: #808080;</span><br><span class="line">  border-bottom:0;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright a:hover &#123;</span><br><span class="line">  color: #a3d2a3;</span><br><span class="line">  text-decoration: underline;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright:hover .fa-clipboard &#123;</span><br><span class="line">  color: #000;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .post-url:hover &#123;</span><br><span class="line">  font-weight: normal;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .copy-path &#123;</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 1em;</span><br><span class="line">  +mobile()&#123;display:none;&#125;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .copy-path:hover &#123;</span><br><span class="line">  color: #808080;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改<code>Blog/themes/next/layout/_macro/post.swig</code>，在如图位置添加以下代码：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">      &#123;% if not is_index %&#125;</span><br><span class="line">        &#123;% include &apos;my-copyright.swig&apos; %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/04/30/5cc831deb0d79.jpg" alt="image-20190202114207092"></p><ul><li>在<code>Blog/themes/next/source/css/_common/components/post/post.styl</code>文件最后加入下面的代码：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import &quot;my-post-copyright&quot;</span><br></pre></td></tr></table></figure><ul><li>在<code>Front-matter</code>中加入<code>copyright : ture</code>：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: Hexo-NexT博客主题美化</span><br><span class="line">categories: </span><br><span class="line">- Tutorial</span><br><span class="line">- Hexo</span><br><span class="line">copyright: true</span><br><span class="line">date: 2018-07-17 08:36:16</span><br><span class="line">updated: 2018-12-22 14:27:53</span><br><span class="line">tags: [Hexo, Blog, Tutorial]</span><br></pre></td></tr></table></figure><ul><li>配置根目录下的<code>_config.yml</code>文件，配置为：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: https://wenmobo.github.io/  //你的网站地址</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure><ul><li>效果图如下所示：</li></ul><p><img src="https://i.loli.net/2019/04/30/5cc831e2b5c55.jpg" alt="image-20190202114405264"></p><h2 id="自定义样式"><a href="#自定义样式" class="headerlink" title="自定义样式"></a>自定义样式</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//站点</span></span><br><span class="line"><span class="comment">// 站点名字体</span></span><br><span class="line">.site-title &#123;</span><br><span class="line">    font-size: <span class="number">26</span>px;</span><br><span class="line">    line-height: <span class="number">50</span>px;</span><br><span class="line">    letter-spacing: <span class="number">1</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 页面最顶部的横线</span></span><br><span class="line">.headband &#123;</span><br><span class="line">    height: <span class="number">2</span>px;</span><br><span class="line">    background-image: linear-gradient(90deg, #F79533 0%, #F37055 15%, #EF4E7B 30%, #A166AB 44%, #5073B8 58%, #1098AD 72%, #07B39B 86%, #6DBA82 100%);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 页面留白更改</span></span><br><span class="line">.header-inner &#123;</span><br><span class="line">    padding-top: <span class="number">0</span>px;</span><br><span class="line">    padding-bottom: <span class="number">0</span>px;</span><br><span class="line">    <span class="comment">//圆角矩形</span></span><br><span class="line">    border-radius: <span class="number">15</span>px <span class="number">15</span>px <span class="number">15</span>px <span class="number">15</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 去除在页面文章之间的分割线</span></span><br><span class="line">.posts-expand .post-eof &#123;</span><br><span class="line">    margin: <span class="number">0</span>px;</span><br><span class="line">    background-color: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 页面底部页码</span></span><br><span class="line">.pagination .page-number.current &#123;</span><br><span class="line">    background: #34495e;</span><br><span class="line">    <span class="comment">//底部页码圆形</span></span><br><span class="line">    width: <span class="number">15</span>px;</span><br><span class="line">    border-radius: <span class="number">100</span>%;</span><br><span class="line">    box-shadow: <span class="number">0</span>px <span class="number">0</span>px <span class="number">10</span>px <span class="number">0</span>px rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>);</span><br><span class="line">    background-color: rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, <span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br><span class="line">.pagination .prev, .pagination .next, .pagination .page-number &#123;</span><br><span class="line">    margin-bottom: <span class="number">10</span>px;</span><br><span class="line">    border: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 去除页面底部页码上面的横线</span></span><br><span class="line">.pagination &#123;</span><br><span class="line">    border: none;</span><br><span class="line">    margin: <span class="number">0</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// archives页面顶部文字</span></span><br><span class="line">.page-archive .archive-page-counter &#123;</span><br><span class="line">    font-size: <span class="number">18</span>px;</span><br><span class="line">    color: rgb(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// archives页面时间轴左边线条第一个圆点颜色</span></span><br><span class="line">.page-archive .posts-collapse .archive-move-on &#123;</span><br><span class="line">    top: <span class="number">15</span>px;</span><br><span class="line">    opacity: <span class="number">1</span>;</span><br><span class="line">    background-color: rgb(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    box-shadow: <span class="number">0</span>px <span class="number">0</span>px <span class="number">10</span>px <span class="number">0</span>px rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//post背景</span></span><br><span class="line">.content-wrap&#123;</span><br><span class="line">    float: right;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">    padding: <span class="number">40</span>px;</span><br><span class="line">    <span class="comment">//width: calc(100% - 252px);</span></span><br><span class="line">    <span class="comment">// 统一背景颜色</span></span><br><span class="line">    background: #eee;</span><br><span class="line">    min-height: <span class="number">700</span>px;</span><br><span class="line">    box-shadow: initial;</span><br><span class="line">    border-radius: <span class="number">30</span>px <span class="number">30</span>px <span class="number">30</span>px <span class="number">30</span>px;</span><br><span class="line"></span><br><span class="line">    +tablet() &#123;</span><br><span class="line">    width: <span class="number">100</span>%;</span><br><span class="line">    padding: <span class="number">8</span>px;</span><br><span class="line">    border-radius: <span class="number">30</span>px;</span><br><span class="line">    &#125;</span><br><span class="line">    +mobile() &#123;</span><br><span class="line">    width: <span class="number">100</span>%;</span><br><span class="line">    padding: <span class="number">8</span>px;</span><br><span class="line">    min-height: auto;</span><br><span class="line">    border-radius: <span class="number">30</span>px;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//整体背景色</span></span><br><span class="line">body &#123;</span><br><span class="line">    color: #000;</span><br><span class="line">    <span class="comment">//统一背景颜色</span></span><br><span class="line">    background: #eee;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//上方留白去除</span></span><br><span class="line">.posts-expand &#123;</span><br><span class="line">    padding-top: <span class="number">10</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.posts-expand .post-meta &#123;</span><br><span class="line">    margin: <span class="number">5</span>px <span class="number">0</span>px <span class="number">0</span>px <span class="number">0</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.post-button &#123;</span><br><span class="line">    margin-top: <span class="number">0</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//回到顶端背景颜色</span></span><br><span class="line">.back-to-top&#123;</span><br><span class="line">    <span class="comment">//统一背景颜色</span></span><br><span class="line">    background: #eee;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 文章</span></span><br><span class="line">.post &#123;</span><br><span class="line">    margin-bottom: <span class="number">25</span>px;</span><br><span class="line">    padding: <span class="number">45</span>px <span class="number">36</span>px <span class="number">36</span>px <span class="number">36</span>px;</span><br><span class="line">    box-shadow: <span class="number">0</span>px <span class="number">0</span>px <span class="number">10</span>px <span class="number">0</span>px rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>);</span><br><span class="line">    background-color: rgb(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    border-radius: <span class="number">15</span>px <span class="number">15</span>px <span class="number">15</span>px <span class="number">15</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 文章``代码块的自定义样式</span></span><br><span class="line">code &#123;</span><br><span class="line">    margin: <span class="number">0</span>px <span class="number">4</span>px;</span><br><span class="line">    background: rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.75</span>)</span><br><span class="line">    color: rgb(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 大代码块的自定义样式</span></span><br><span class="line">.highlight, pre &#123;</span><br><span class="line">    margin: <span class="number">5</span>px <span class="number">0</span>;</span><br><span class="line">    padding: <span class="number">5</span>px;</span><br><span class="line">    border-radius: <span class="number">3</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.highlight, code, pre &#123;</span><br><span class="line">    border: 1px solid #d6d6d6;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//文章标题颜色</span></span><br><span class="line">.posts-expand .post-title-link&#123;</span><br><span class="line">    color: #000;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 文章底部跳转</span></span><br><span class="line">.post-nav-item a &#123;</span><br><span class="line">    <span class="comment">//color: rgb(80, 115, 184);</span></span><br><span class="line">    font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line">.post-nav-item a:hover &#123;</span><br><span class="line">    <span class="comment">//color: rgb(161, 102, 171);</span></span><br><span class="line">    font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 文章内标题样式（左边的竖线）</span></span><br><span class="line">.post-body h2, h3, h4, h5, h6 &#123;</span><br><span class="line">    border-left: <span class="number">4</span>px solid rgb(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>);</span><br><span class="line">    margin-left: <span class="number">-36</span>px;</span><br><span class="line">    padding-left: <span class="number">32</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 去掉图片边框</span></span><br><span class="line">.posts-expand .post-body img &#123;</span><br><span class="line">    border: none;</span><br><span class="line">    padding: <span class="number">0</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.post-gallery .post-gallery-img img &#123;</span><br><span class="line">    padding: <span class="number">3</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// [Read More]按钮样式</span></span><br><span class="line">.post-button .btn &#123;</span><br><span class="line">    color: #555 !important;</span><br><span class="line">    background-color: rgb(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    border-radius: <span class="number">3</span>px;</span><br><span class="line">    font-size: <span class="number">15</span>px;</span><br><span class="line">    box-shadow: inset <span class="number">0</span>px <span class="number">0</span>px <span class="number">10</span>px <span class="number">0</span>px rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">    <span class="comment">//border: none !important;</span></span><br><span class="line">    transition-property: unset;</span><br><span class="line">    padding: <span class="number">3</span>px <span class="number">15</span>px;</span><br><span class="line">    border-radius: <span class="number">16</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.post-button .btn:hover &#123;</span><br><span class="line">    color: rgb(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>) !important;</span><br><span class="line">    border-radius: <span class="number">3</span>px;</span><br><span class="line">    font-size: <span class="number">15</span>px;</span><br><span class="line">    box-shadow: inset <span class="number">0</span>px <span class="number">0</span>px <span class="number">10</span>px <span class="number">0</span>px rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">    background-color: rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.75</span>);</span><br><span class="line">    border-radius: <span class="number">16</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//侧栏</span></span><br><span class="line">.sidebar&#123;</span><br><span class="line">    <span class="comment">//统一背景颜色</span></span><br><span class="line">    background: #eee;</span><br><span class="line">&#125;</span><br><span class="line">.sidebar-inner &#123;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">    width: <span class="number">240</span>px;</span><br><span class="line">    color: #555;</span><br><span class="line">    background: #fff;</span><br><span class="line">    box-shadow: <span class="number">0</span> <span class="number">2</span>px <span class="number">2</span>px <span class="number">0</span> rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>), <span class="number">0</span> <span class="number">3</span>px <span class="number">1</span>px <span class="number">-2</span>px rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.06</span>), <span class="number">0</span> <span class="number">1</span>px <span class="number">5</span>px <span class="number">0</span> rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>), <span class="number">0</span> <span class="number">-1</span>px <span class="number">0.5</span>px <span class="number">0</span> rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.09</span>);</span><br><span class="line">    border-radius: <span class="number">15</span>px;</span><br><span class="line">    opacity: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">.sidebar-inner .affix-top&#123;</span><br><span class="line">    border-radius: <span class="number">15</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 侧栏站点作者名</span></span><br><span class="line">.site-author-name &#123;</span><br><span class="line">    display: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 侧栏头像（圆形以及旋转效果）</span></span><br><span class="line">.site-author-image &#123;</span><br><span class="line">    border: <span class="number">2</span>px solid rgb(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    border-radius: <span class="number">100</span>%;</span><br><span class="line">    transition: transform <span class="number">1.0</span>s ease-out;</span><br><span class="line">&#125;</span><br><span class="line">img:hover &#123;</span><br><span class="line">    transform: rotateZ(<span class="number">360</span>deg);</span><br><span class="line">&#125;</span><br><span class="line">.posts-expand .post-body img:hover &#123;</span><br><span class="line">    transform: initial;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//归档</span></span><br><span class="line"><span class="comment">// archives页面顶部文字</span></span><br><span class="line">.page-archive .archive-page-counter &#123;</span><br><span class="line">    font-size: <span class="number">18</span>px;</span><br><span class="line">    color: rgb(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// archives页面时间轴左边线条第一个圆点颜色</span></span><br><span class="line">.page-archive .posts-collapse .archive-move-on &#123;</span><br><span class="line">    top: <span class="number">15</span>px;</span><br><span class="line">    opacity: <span class="number">1</span>;</span><br><span class="line">    background-color: rgb(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    box-shadow: <span class="number">0</span>px <span class="number">0</span>px <span class="number">10</span>px <span class="number">0</span>px rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单</span></span><br><span class="line"><span class="comment">// 菜单超链接字体大小</span></span><br><span class="line">.menu .menu-item a &#123;</span><br><span class="line">    font-size: <span class="number">14</span>px;</span><br><span class="line">    <span class="comment">//圆角矩形</span></span><br><span class="line">    border-radius: <span class="number">20</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 菜单各项边距</span></span><br><span class="line">.menu .menu-item &#123;</span><br><span class="line">    margin: <span class="number">5</span>px <span class="number">15</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//选中菜单颜色以及圆角矩形</span></span><br><span class="line">.menu-item-active a, .menu .menu-item a:hover, .menu .menu-item span.exturl:hover &#123;</span><br><span class="line">    background: #000000;</span><br><span class="line">    color: #fff;</span><br><span class="line">    border-radius: <span class="number">20</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.menu-item-active a:after, .menu .menu-item a:hover:after, .menu .menu-item span.exturl:hover:after &#123;</span><br><span class="line">    background-color: #fff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//其他</span></span><br><span class="line"><span class="comment">// 自定义页脚跳动的心样式</span></span><br><span class="line">@keyframes heartAnimate &#123;</span><br><span class="line">    <span class="number">0</span>%,<span class="number">100</span>%&#123;<span class="attr">transform</span>:scale(<span class="number">1</span>);&#125;</span><br><span class="line">    <span class="number">10</span>%,<span class="number">30</span>%&#123;<span class="attr">transform</span>:scale(<span class="number">0.9</span>);&#125;</span><br><span class="line">    <span class="number">20</span>%,<span class="number">40</span>%,<span class="number">60</span>%,<span class="number">80</span>%&#123;<span class="attr">transform</span>:scale(<span class="number">1.1</span>);&#125;</span><br><span class="line">    <span class="number">50</span>%,<span class="number">70</span>%&#123;<span class="attr">transform</span>:scale(<span class="number">1.1</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line">#heart &#123;</span><br><span class="line">    animation: heartAnimate <span class="number">1.33</span>s ease-<span class="keyword">in</span>-out infinite;</span><br><span class="line">&#125;</span><br><span class="line">.with-love &#123;</span><br><span class="line">    color: rgb(<span class="number">255</span>, <span class="number">113</span>, <span class="number">168</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 自定义特别的样式</span></span><br><span class="line">h2.love &#123;</span><br><span class="line">    border-left: none;</span><br><span class="line">    color: rgb(<span class="number">255</span>, <span class="number">113</span>, <span class="number">168</span>);</span><br><span class="line">    -webkit-text-fill-color: unset;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//弃用</span></span><br><span class="line"><span class="comment">/*位置</span></span><br><span class="line"><span class="comment">.post-button &#123;</span></span><br><span class="line"><span class="comment">    text-align: left;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br></pre></td></tr></table></figure><h2 id="文章链接唯一化"><a href="#文章链接唯一化" class="headerlink" title="文章链接唯一化"></a>文章链接唯一化</h2><p>也许你会数次更改文章题目或者变更文章发布时间，在默认设置下，文章链接都会改变，不利于搜索引擎收录，也不利于分享。唯一永久链接才是更好的选择。</p><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p>「注」安装后，不要在 hexo s 模式下更改文章文件名，否则文章将成空白。</p><h3 id="在站点配置文件中-permalink"><a href="#在站点配置文件中-permalink" class="headerlink" title="在站点配置文件中 permalink"></a>在站点配置文件中 permalink</h3><p>查找代码 <code>permalink:</code>，将其更改为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: posts/:abbrlink/  # “posts/” 可自行更换</span><br></pre></td></tr></table></figure><h3 id="在站点配置文件中添加abbrlink"><a href="#在站点配置文件中添加abbrlink" class="headerlink" title="在站点配置文件中添加abbrlink"></a>在站点配置文件中添加abbrlink</h3><p>添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># abbrlink config</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32  # 算法：crc16(default) and crc32 </span><br><span class="line">  rep: dec    # 进制：dec(default) and hex</span><br></pre></td></tr></table></figure><p>选择依据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">crc16 &amp; hex</span><br><span class="line">    https://post.zz173.com/posts/66c8.html</span><br><span class="line">crc16 &amp; dec</span><br><span class="line">    https://post.zz173.com/posts/65535.html</span><br><span class="line">crc32 &amp; hex</span><br><span class="line">    https://post.zz173.com/posts/8ddf18fb.html</span><br><span class="line">crc32 &amp; dec</span><br><span class="line">    https://post.zz173.com/posts/1690090958.html</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://github.com/Rozbo/hexo-abbrlink" target="_blank" rel="noopener">rozbo/hexo-abbrlink</a><br><a href="https://post.zz173.com/detail/hexo-abbrlink.html" target="_blank" rel="noopener">hexo-abbrlink介绍</a><br><a href="https://chekun.me/post/hexo-uuid/" target="_blank" rel="noopener">Hexo插件之Hexo-UUID</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hexo-NexT博客样式自定义&quot;&gt;&lt;a href=&quot;#Hexo-NexT博客样式自定义&quot; class=&quot;headerlink&quot; title=&quot;Hexo-NexT博客样式自定义&quot;&gt;&lt;/a&gt;Hexo-NexT博客样式自定义&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;默认的主题样式非常简单，但是在有些方面还有些缺陷，其实NexT主题中已经包含这些主题，我们只需要把他们启用就OK啦。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Blog" scheme="https://jacksonleon.gitee.io/categories/Blog/"/>
    
      <category term="Hexo" scheme="https://jacksonleon.gitee.io/categories/Blog/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://jacksonleon.gitee.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>「Leetcode」832. Flipping an Image</title>
    <link href="https://jacksonleon.gitee.io/posts/585836704.html"/>
    <id>https://jacksonleon.gitee.io/posts/585836704.html</id>
    <published>2018-07-15T10:53:14.000Z</published>
    <updated>2018-12-28T07:47:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="832-Flipping-an-Image"><a href="#832-Flipping-an-Image" class="headerlink" title="832. Flipping an Image"></a>832. Flipping an Image</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Given a binary matrix A, we want to flip the image horizontally, then invert it, and return the resulting image.<br>To flip an image horizontally means that each row of the image is reversed.  For example, flipping <code>[1, 1, 0]</code> horizontally results in <code>[0, 1, 1]</code>.<br>To invert an image means that each 0 is replaced by 1, and each 1 is replaced by 0. For example, inverting <code>[0, 1, 1]</code> results in <code>[1, 0, 0]</code>.</p></blockquote><a id="more"></a><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><h4 id="one"><a href="#one" class="headerlink" title="one"></a>one</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input: [[1,1,0],[1,0,1],[0,0,0]]</span><br><span class="line">Output: [[1,0,0],[0,1,0],[1,1,1]]</span><br><span class="line">Explanation: First reverse each row: [[0,1,1],[1,0,1],[0,0,0]].</span><br><span class="line">Then, invert the image: [[1,0,0],[0,1,0],[1,1,1]]</span><br></pre></td></tr></table></figure><h4 id="two"><a href="#two" class="headerlink" title="two"></a>two</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input: [[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]</span><br><span class="line">Output: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]</span><br><span class="line">Explanation: First reverse each row: [[0,0,1,1],[1,0,0,1],[1,1,1,0],[0,1,0,1]].</span><br><span class="line">Then invert the image: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]</span><br></pre></td></tr></table></figure><h3 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h3><ul><li><code>1 &lt;= A.length = A[0].length &lt;= 20</code></li><li><code>0 &lt;= A[i][j] &lt;= 1</code></li></ul><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; flipAndInvertImage(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; A) &#123;</span><br><span class="line">        <span class="keyword">int</span> size=A[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;A.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//矩阵内顺序反转</span></span><br><span class="line">            reverse(A[i].begin(),A[i].end());</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;size;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//反转</span></span><br><span class="line">                A[i][j]=<span class="number">1</span>-A[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> A;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode-Note&quot;&gt;&lt;a href=&quot;#LeetCode-Note&quot; class=&quot;headerlink&quot; title=&quot;LeetCode Note&quot;&gt;&lt;/a&gt;LeetCode Note&lt;/h1&gt;&lt;p&gt;Sorted by Acceptance&lt;/p&gt;
&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;832-Flipping-an-Image&quot;&gt;&lt;a href=&quot;#832-Flipping-an-Image&quot; class=&quot;headerlink&quot; title=&quot;832. Flipping an Image&quot;&gt;&lt;/a&gt;832. Flipping an Image&lt;/h2&gt;&lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Given a binary matrix A, we want to flip the image horizontally, then invert it, and return the resulting image.&lt;br&gt;To flip an image horizontally means that each row of the image is reversed.  For example, flipping &lt;code&gt;[1, 1, 0]&lt;/code&gt; horizontally results in &lt;code&gt;[0, 1, 1]&lt;/code&gt;.&lt;br&gt;To invert an image means that each 0 is replaced by 1, and each 1 is replaced by 0. For example, inverting &lt;code&gt;[0, 1, 1]&lt;/code&gt; results in &lt;code&gt;[1, 0, 0]&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/categories/LeetCode/"/>
    
      <category term="Array" scheme="https://jacksonleon.gitee.io/categories/LeetCode/Array/"/>
    
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/tags/LeetCode/"/>
    
      <category term="Matrix" scheme="https://jacksonleon.gitee.io/tags/Matrix/"/>
    
  </entry>
  
  <entry>
    <title>「Leetcode」709. To Lower Case</title>
    <link href="https://jacksonleon.gitee.io/posts/1103497448.html"/>
    <id>https://jacksonleon.gitee.io/posts/1103497448.html</id>
    <published>2018-07-14T02:15:53.000Z</published>
    <updated>2019-01-21T08:06:47.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance   </p><p>Author: JosephLau</p><hr><h2 id="709-To-Lower-Case"><a href="#709-To-Lower-Case" class="headerlink" title="709. To Lower Case"></a>709. To Lower Case</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Implement function ToLowerCase() that has a string parameter str, and returns the same string in lowercase.</p></blockquote><a id="more"></a><h3 id="C-Solution"><a href="#C-Solution" class="headerlink" title="C++ Solution"></a>C++ Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">toLowerCase</span><span class="params">(<span class="built_in">string</span> str)</span> </span>&#123;        </span><br><span class="line">        transform(str.begin(),str.end(),str.begin(),::<span class="built_in">tolower</span>);</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>STL</code>的<code>algorithm</code>库给我们提供了模板函数<code>transform</code>可以轻松解决这个问题.</p><blockquote><p>函数原型</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt; <span class="class"><span class="keyword">class</span> <span class="title">InputIterator</span>, <span class="title">class</span> <span class="title">OutputIterator</span>, <span class="title">class</span> <span class="title">UnaryOperator</span> &gt;</span></span><br><span class="line"><span class="class">  <span class="title">OutputIterator</span> <span class="title">transform</span> ( <span class="title">InputIterator</span> <span class="title">first1</span>, <span class="title">InputIterator</span> <span class="title">last1</span>,</span></span><br><span class="line"><span class="class">                             <span class="title">OutputIterator</span> <span class="title">result</span>, <span class="title">UnaryOperator</span> <span class="title">op</span> );</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">template</span> &lt; <span class="class"><span class="keyword">class</span> <span class="title">InputIterator1</span>, <span class="title">class</span> <span class="title">InputIterator2</span>,</span></span><br><span class="line"><span class="class">           <span class="title">class</span> <span class="title">OutputIterator</span>, <span class="title">class</span> <span class="title">BinaryOperator</span> &gt;</span></span><br><span class="line"><span class="class">  <span class="title">OutputIterator</span> <span class="title">transform</span> ( <span class="title">InputIterator1</span> <span class="title">first1</span>, <span class="title">InputIterator1</span> <span class="title">last1</span>,</span></span><br><span class="line"><span class="class">                             <span class="title">InputIterator2</span> <span class="title">first2</span>, <span class="title">OutputIterator</span> <span class="title">result</span>,</span></span><br><span class="line"><span class="class">                             <span class="title">BinaryOperator</span> <span class="title">binary_op</span> );</span></span><br></pre></td></tr></table></figure><blockquote><p>测试代码</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> strA = <span class="string">"pmbjackson@outlook.com"</span>;  </span><br><span class="line">    <span class="built_in">string</span> strB = <span class="string">"pumbjackson@gmail.com"</span>;  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Before transform:\n"</span>);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"strA:%s \n"</span>, strA.c_str());  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"strB:%s \n\n"</span>, strB.c_str());  </span><br><span class="line">  </span><br><span class="line">    transform(strA.begin(), strA.end(), strA.begin(), ::<span class="built_in">toupper</span>);  </span><br><span class="line">    transform(strB.begin(), strB.end(), strB.begin(), ::<span class="built_in">toupper</span>);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"After transform to toupper:\n"</span>);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"strA:%s \n"</span>, strA.c_str());  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"strB:%s \n\n"</span>, strB.c_str());  </span><br><span class="line">  </span><br><span class="line">    transform(strA.begin(), strA.end(), strA.begin(), ::<span class="built_in">tolower</span>);  </span><br><span class="line">    transform(strB.begin(), strB.end(), strB.begin(), ::<span class="built_in">tolower</span>);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"After transform to lower:\n"</span>);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"strA:%s \n"</span>, strA.c_str());  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"strB:%s \n\n"</span>, strB.c_str());  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>运行结果</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">strA:pmbjackson@outlook.com  </span><br><span class="line">strB:pumbjackson@gmail.com</span><br><span class="line">  </span><br><span class="line">After transform to toupper:  </span><br><span class="line">strA:PMBJACKSON@OUTLOOK.COM   </span><br><span class="line">strB:PUMBJACKSON@GMAIL.COM   </span><br><span class="line">  </span><br><span class="line">After transform to lower:  </span><br><span class="line">strA:pmbjackson@outlook.com   </span><br><span class="line">strB:pumbjackson@gmail.com</span><br></pre></td></tr></table></figure><h2 id="Java-Solution"><a href="#Java-Solution" class="headerlink" title="Java Solution"></a>Java Solution</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toLowerCase</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> str.toLowerCase();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode-Note&quot;&gt;&lt;a href=&quot;#LeetCode-Note&quot; class=&quot;headerlink&quot; title=&quot;LeetCode Note&quot;&gt;&lt;/a&gt;LeetCode Note&lt;/h1&gt;&lt;p&gt;Sorted by Acceptance   &lt;/p&gt;
&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;709-To-Lower-Case&quot;&gt;&lt;a href=&quot;#709-To-Lower-Case&quot; class=&quot;headerlink&quot; title=&quot;709. To Lower Case&quot;&gt;&lt;/a&gt;709. To Lower Case&lt;/h2&gt;&lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Implement function ToLowerCase() that has a string parameter str, and returns the same string in lowercase.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/categories/LeetCode/"/>
    
      <category term="String" scheme="https://jacksonleon.gitee.io/categories/LeetCode/String/"/>
    
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/tags/LeetCode/"/>
    
      <category term="String" scheme="https://jacksonleon.gitee.io/tags/String/"/>
    
      <category term="STL" scheme="https://jacksonleon.gitee.io/tags/STL/"/>
    
  </entry>
  
  <entry>
    <title>Django-blog</title>
    <link href="https://jacksonleon.gitee.io/posts/706331224.html"/>
    <id>https://jacksonleon.gitee.io/posts/706331224.html</id>
    <published>2018-06-21T08:16:54.000Z</published>
    <updated>2018-06-21T08:16:54.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirement.txt</span><br></pre></td></tr></table></figure><blockquote><p>requirement.txt</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">bootstrap-admin   </span><br><span class="line">dj-database-url   </span><br><span class="line">dj-static         </span><br><span class="line">Django            </span><br><span class="line">django-markdown   </span><br><span class="line">django-toolbelt   </span><br><span class="line">Markdown          </span><br><span class="line">markdown2         </span><br><span class="line">pip               </span><br><span class="line">psycopg2          </span><br><span class="line">Pygments          </span><br><span class="line">pygobject         </span><br><span class="line">python-apt        </span><br><span class="line">pytz              </span><br><span class="line">setuptools        </span><br><span class="line">ssh-import-id     </span><br><span class="line">static3           </span><br><span class="line">virtualenv        </span><br><span class="line">wheel</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ django-admin.py startproject my_blog</span><br><span class="line">$ python manage.py startapp article</span><br><span class="line"></span><br><span class="line">INSTALLED_APPS = (</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">'article'</span>,  <span class="comment">#这里填写的是app的名称</span></span><br><span class="line">)</span><br><span class="line">ALLOWED_HOSTS = [<span class="string">'*'</span>]</span><br><span class="line"></span><br><span class="line">$ python manage.py runserver 0.0.0.0:2210</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span clas
      
    
    </summary>
    
      <category term="Python" scheme="https://jacksonleon.gitee.io/categories/Python/"/>
    
      <category term="Django" scheme="https://jacksonleon.gitee.io/categories/Python/Django/"/>
    
    
      <category term="Blog" scheme="https://jacksonleon.gitee.io/tags/Blog/"/>
    
      <category term="Django" scheme="https://jacksonleon.gitee.io/tags/Django/"/>
    
      <category term="Python" scheme="https://jacksonleon.gitee.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Operating System Note</title>
    <link href="https://jacksonleon.gitee.io/posts/2700998608.html"/>
    <id>https://jacksonleon.gitee.io/posts/2700998608.html</id>
    <published>2018-05-22T06:30:14.000Z</published>
    <updated>2018-05-22T06:30:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Operating-System-Note"><a href="#Operating-System-Note" class="headerlink" title="Operating System Note"></a>Operating System Note</h1><hr><h2 id="页面置换算法"><a href="#页面置换算法" class="headerlink" title="页面置换算法"></a>页面置换算法</h2><blockquote><p>选择调出页面的算法就称为页面置换算法。好的页面置换算法应有较低的页面更换频率，也就是说，应将以后不会再访问或者以后较长时间内不会再访问的页面先调出。</p></blockquote><p>常见的页面置换算法有：最佳置换算法、先进先出（FIFO）、最近最久未使用（LRU）、时钟（CLOCK）置换算法。</p><h3 id="OPT"><a href="#OPT" class="headerlink" title="OPT"></a>OPT</h3><blockquote><p>最佳置换算法所选择的被淘汰页面将是以后永不使用的，或者是在最长时间内不再被访问的页面,这样可以保证获得最低的缺页率。但由于人们目前无法预知进程在内存下的若千页面中哪个是未来最长时间内不再被访问的，因而该算法其实是无法实现。</p></blockquote><p>虽然OPT算法是无法实现的，但是我们可以利用他对其他页面置换算法进行评价。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Operating-System-Note&quot;&gt;&lt;a href=&quot;#Operating-System-Note&quot; class=&quot;headerlink&quot; title=&quot;Operating System Note&quot;&gt;&lt;/a&gt;Operating System Note&lt;/
      
    
    </summary>
    
    
      <category term="Operating System" scheme="https://jacksonleon.gitee.io/tags/Operating-System/"/>
    
  </entry>
  
  <entry>
    <title>OpenCV Note</title>
    <link href="https://jacksonleon.gitee.io/posts/735415811.html"/>
    <id>https://jacksonleon.gitee.io/posts/735415811.html</id>
    <published>2018-05-20T15:06:44.000Z</published>
    <updated>2018-12-22T06:40:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="OpenCV-Note"><a href="#OpenCV-Note" class="headerlink" title="OpenCV Note"></a>OpenCV Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>此文用来记录平时使用OpenCV遇到的问题与心得.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="安装与配置"><a href="#安装与配置" class="headerlink" title="安装与配置"></a>安装与配置</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><blockquote><p>这里使用VS 2017与Opencv 3.4.1为例，其他版本基本相似</p></blockquote><ul><li><a href="https://sourceforge.net/projects/opencvlibrary/files/opencv-win/3.4.1/opencv-3.4.1-vc14_vc15.exe/download" target="_blank" rel="noopener">下载Opencv</a></li><li>双击运行，安装到磁盘（Opencv安装位置下面需要用到）</li><li>等解压完成就可以了</li></ul><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="系统环境变量配置"><a href="#系统环境变量配置" class="headerlink" title="系统环境变量配置"></a>系统环境变量配置</h4><ul><li>（以Windows 10为例）我的电脑-&gt;右键-&gt;属性-&gt;高级系统设置-&gt;环境变量</li><li>系统变量中找到path选择编辑</li><li>新建，内容为<code>%Opencv%\build\x64\vc15\bin</code>，其中<code>%Opencv%</code>为Opencv安装路径</li></ul><!--more--><h4 id="VS-2017配置"><a href="#VS-2017配置" class="headerlink" title="VS 2017配置"></a>VS 2017配置</h4><ul><li>创建VS 2017项目，Visual C++ -&gt; Win32 -&gt; Win32控制台应用程序</li><li>附加选项中勾上空项目，点击完成</li><li>点击视图-&gt;其他窗口-&gt;属性管理器</li><li>在你需要进行编译的环境下右键选择<code>添加新项目属性表</code></li><li>例如右键<code>Debug | x64</code>选择<code>添加新项目属性表</code>，名称为<code>Debug_64.props</code>，保存位置默认</li><li><p>在通用属性 -&gt; VC++目录 -&gt; 包含目录中分别添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%opencv%\build\include</span><br><span class="line">%opencv%\build\include\opencv</span><br><span class="line">%opencv%\build\include\opencv2</span><br></pre></td></tr></table></figure></li><li><p>库目录中添加<code>%opencv%\build\x64\vc15\lib</code></p></li><li>在通用属性 -&gt; 链接器 -&gt; 输入中添加<code>opencv_world341d.lib</code></li><li><code>Release</code>环境下的属性配置与<code>Debug</code>类似，不同的是在通用属性 -&gt; 链接器 -&gt; 输入中添加的是<code>opencv_world341.lib</code></li><li>以后若是创建新项目，可以直接在属性管理器中相应的编译环境下右键<code>添加现有项目属性表</code>，添加相应的属性表</li></ul><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/core/core.hpp&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/highgui/highgui.hpp&gt;  </span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 读入一张图片（test）    </span></span><br><span class="line">    Mat img = imread(<span class="string">"test.jpg"</span>);</span><br><span class="line">    <span class="comment">// 创建一个名为 "test"窗口    </span></span><br><span class="line">    namedWindow(<span class="string">"test"</span>);</span><br><span class="line">    <span class="comment">// 在窗口中显示test</span></span><br><span class="line">    imshow(<span class="string">"test"</span>, img);</span><br><span class="line">    <span class="comment">// 任意按键后窗口关闭</span></span><br><span class="line">    waitKey(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;OpenCV-Note&quot;&gt;&lt;a href=&quot;#OpenCV-Note&quot; class=&quot;headerlink&quot; title=&quot;OpenCV Note&quot;&gt;&lt;/a&gt;OpenCV Note&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;此文用来记录平时使用OpenCV遇到的问题与心得.&lt;/p&gt;
&lt;p&gt;本文长期更新.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="OpenCV" scheme="https://jacksonleon.gitee.io/categories/OpenCV/"/>
    
    
      <category term="Opencv" scheme="https://jacksonleon.gitee.io/tags/Opencv/"/>
    
  </entry>
  
  <entry>
    <title>MATLAB Note</title>
    <link href="https://jacksonleon.gitee.io/posts/2034843354.html"/>
    <id>https://jacksonleon.gitee.io/posts/2034843354.html</id>
    <published>2018-04-28T08:48:06.000Z</published>
    <updated>2018-04-28T08:48:06.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MATLAB-Note"><a href="#MATLAB-Note" class="headerlink" title="MATLAB Note"></a>MATLAB Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>此文用来记录平时使用MatLab遇到的问题与心得.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="输出无白边图片"><a href="#输出无白边图片" class="headerlink" title="输出无白边图片"></a>输出无白边图片</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">imshow(I,<span class="string">'border'</span>,<span class="string">'tight'</span>,<span class="string">'initialmagnification'</span>,<span class="string">'fit'</span>);</span><br><span class="line"><span class="comment">% 'border','tight'的组合功能意思是去掉图像周边空白</span></span><br><span class="line"><span class="comment">% 'InitialMagnification','fit'组合的意思是图像填充整个figure窗口</span></span><br></pre></td></tr></table></figure><h2 id="平移、旋转、缩放、镜像"><a href="#平移、旋转、缩放、镜像" class="headerlink" title="平移、旋转、缩放、镜像"></a>平移、旋转、缩放、镜像</h2><!--more--><h3 id="平移"><a href="#平移" class="headerlink" title="平移"></a>平移</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">init = imread(<span class="string">'Fig3.tif'</span>); <span class="comment">% 读取图像</span></span><br><span class="line">[R, C] = <span class="built_in">size</span>(init); <span class="comment">% 获取图像大小</span></span><br><span class="line">res = <span class="built_in">zeros</span>(R, C); <span class="comment">% 构造结果矩阵。每个像素点默认初始化为0（黑色）</span></span><br><span class="line">delX = <span class="number">50</span>; <span class="comment">% 平移量X</span></span><br><span class="line">delY = <span class="number">50</span>; <span class="comment">% 平移量Y</span></span><br><span class="line">tras = [<span class="number">1</span> <span class="number">0</span> delX; <span class="number">0</span> <span class="number">1</span> delY; <span class="number">0</span> <span class="number">0</span> <span class="number">1</span>]; <span class="comment">% 平移的变换矩阵 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : R</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span> : C</span><br><span class="line">        temp = [<span class="built_in">i</span>; <span class="built_in">j</span>; <span class="number">1</span>];</span><br><span class="line">        temp = tras * temp; <span class="comment">% 矩阵乘法</span></span><br><span class="line">        x = temp(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        y = temp(<span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="comment">% 变换后的位置判断是否越界</span></span><br><span class="line">        <span class="keyword">if</span> (x &lt;= R) &amp; (y &lt;= C) &amp; (x &gt;= <span class="number">1</span>) &amp; (y &gt;= <span class="number">1</span>)</span><br><span class="line">            res(x, y) = init(<span class="built_in">i</span>, <span class="built_in">j</span>);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">imshow(uint8(res)); <span class="comment">% 显示图像</span></span><br></pre></td></tr></table></figure><h3 id="旋转"><a href="#旋转" class="headerlink" title="旋转"></a>旋转</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">init = imread(<span class="string">'Fig3.tif'</span>); <span class="comment">% 读取图像</span></span><br><span class="line">[R, C] = <span class="built_in">size</span>(init); <span class="comment">% 获取图像大小</span></span><br><span class="line">res = <span class="built_in">zeros</span>( R,  C); <span class="comment">% 构造结果矩阵。每个像素点默认初始化为0（黑色）</span></span><br><span class="line"></span><br><span class="line">alfa = <span class="number">-15</span> * <span class="number">3.1415926</span> / <span class="number">180.0</span>; <span class="comment">% 旋转角度</span></span><br><span class="line">tras = [<span class="built_in">cos</span>(alfa) -<span class="built_in">sin</span>(alfa) <span class="number">0</span>; <span class="built_in">sin</span>(alfa) <span class="built_in">cos</span>(alfa) <span class="number">0</span>; <span class="number">0</span> <span class="number">0</span> <span class="number">1</span>]; <span class="comment">% 旋转的变换矩阵</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : R</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span> : C</span><br><span class="line">        temp = [<span class="built_in">i</span>; <span class="built_in">j</span>; <span class="number">1</span>];</span><br><span class="line">        temp = tras * temp;<span class="comment">% 矩阵乘法</span></span><br><span class="line">        x = uint16(temp(<span class="number">1</span>, <span class="number">1</span>));</span><br><span class="line">        y = uint16(temp(<span class="number">2</span>, <span class="number">1</span>));</span><br><span class="line">        <span class="comment">% 变换后的位置判断是否越界</span></span><br><span class="line">        <span class="keyword">if</span> (x &lt;= R) &amp; (y &lt;= C) &amp; (x &gt;= <span class="number">1</span>) &amp; (y &gt;= <span class="number">1</span>)</span><br><span class="line">            res(<span class="built_in">i</span>, <span class="built_in">j</span>) = init(x, y);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">imshow(uint8(res));  <span class="comment">% 显示图像</span></span><br></pre></td></tr></table></figure><h3 id="缩放"><a href="#缩放" class="headerlink" title="缩放"></a>缩放</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">init = imread(<span class="string">'Fig3.tif'</span>); <span class="comment">% 读取图像</span></span><br><span class="line">[R, C] = <span class="built_in">size</span>(init); <span class="comment">% 获取图像大小</span></span><br><span class="line">timesX = <span class="number">3</span>; <span class="comment">% X轴缩放量</span></span><br><span class="line">timesY = <span class="number">3</span>; <span class="comment">% Y轴缩放量</span></span><br><span class="line">res = <span class="built_in">zeros</span>(timesX * R, timesY * C); <span class="comment">% 构造结果矩阵。每个像素点默认初始化为0（黑色）</span></span><br><span class="line">tras = [<span class="number">1</span>/timesX <span class="number">0</span> <span class="number">0</span>; <span class="number">0</span> <span class="number">1</span>/timesY <span class="number">0</span>; <span class="number">0</span> <span class="number">0</span> <span class="number">1</span>]; <span class="comment">% 缩放的变换矩阵 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : timesX * R</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span> : timesY * C</span><br><span class="line">        temp = [<span class="built_in">i</span>; <span class="built_in">j</span>; <span class="number">1</span>];</span><br><span class="line">        temp = tras * temp; <span class="comment">% 矩阵乘法</span></span><br><span class="line">        x = uint8(temp(<span class="number">1</span>, <span class="number">1</span>));</span><br><span class="line">        y = uint8(temp(<span class="number">2</span>, <span class="number">1</span>));</span><br><span class="line">        <span class="comment">% 变换后的位置判断是否越界</span></span><br><span class="line">        <span class="keyword">if</span> (x &lt;= R) &amp; (y &lt;= C) &amp; (x &gt;= <span class="number">1</span>) &amp; (y &gt;= <span class="number">1</span>)</span><br><span class="line">            res(<span class="built_in">i</span>, <span class="built_in">j</span>) = init(x, y);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">imshow(uint8(res)); <span class="comment">% 显示图像</span></span><br></pre></td></tr></table></figure><h3 id="镜像（水平）"><a href="#镜像（水平）" class="headerlink" title="镜像（水平）"></a>镜像（水平）</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">init = imread(<span class="string">'Fig3.tif'</span>);</span><br><span class="line">[R, C] = <span class="built_in">size</span>(init);</span><br><span class="line">res = <span class="built_in">zeros</span>(R, C);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : R</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span> : C</span><br><span class="line">        x = <span class="built_in">i</span>;</span><br><span class="line">        y = C - <span class="built_in">j</span> + <span class="number">1</span>;</span><br><span class="line">        res(x, y) = init(<span class="built_in">i</span>, <span class="built_in">j</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">imshow(uint8(res));</span><br></pre></td></tr></table></figure><h3 id="Graythresh与im2bw函数"><a href="#Graythresh与im2bw函数" class="headerlink" title="Graythresh与im2bw函数"></a>Graythresh与im2bw函数</h3><blockquote><p>graythresh函数输入一副图像，输出就是阈值。在这个函数中，是使用最大类间方差法找到图片的一个合适的阈值（threshold）。再利用im2bw（将灰度图像转换为二值图像）函数，将找到的阈值输入，就可以把原图变为一个二值图。</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">thresh = graythresh(image)</span><br><span class="line">img = im2bw(image, thresh)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MATLAB-Note&quot;&gt;&lt;a href=&quot;#MATLAB-Note&quot; class=&quot;headerlink&quot; title=&quot;MATLAB Note&quot;&gt;&lt;/a&gt;MATLAB Note&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;此文用来记录平时使用MatLab遇到的问题与心得.&lt;/p&gt;
&lt;p&gt;本文长期更新.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="MatLab" scheme="https://jacksonleon.gitee.io/categories/MatLab/"/>
    
    
      <category term="Matlab" scheme="https://jacksonleon.gitee.io/tags/Matlab/"/>
    
  </entry>
  
  <entry>
    <title>我脑海中的NLP</title>
    <link href="https://jacksonleon.gitee.io/posts/3866712056.html"/>
    <id>https://jacksonleon.gitee.io/posts/3866712056.html</id>
    <published>2018-04-24T13:56:28.000Z</published>
    <updated>2018-04-24T13:56:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>中华文化博大精深，汉语更是其中的代表，近年来的NLP更是有了非常多的“用武之地”。例如，语义智能分析，当女朋友问你“爱不爱我”，有的时候是“我要包包”，有的时候是“我要口红”，有的时候就是单纯的想要你的肯定的回答，这个时候NLP就可以起到救命的作用^_^。</p><p>“沟通，是人最紧迫又最困难的事。除了生存，人解决孤独、恐惧等所有精神层面的问题，都要靠沟通。”这些年机器翻译、机器写新闻甚至是机器写诗都陆续出现，机器表现出的强大的能力背后是自然语言处理对于机器与人类之间沟通的作用。</p><p>想象一下，人类与机器沟通，甚至通过机器与自然界沟通，这是一个多么宏大的愿景啊！以前看过一部电影叫做《Her》，当初看这部电影主要是因为女神斯嘉丽·约翰逊给她配的音，但是看过之后反而被这部电影所描绘的世界给吸引住了。在《Her》的世界里，人类需要做什么直接告诉“Her”就行，孤单的时候“Her”可以是一个真正懂你的“完美情人”，而不仅仅是近年来只能订闹钟、打电话、查天气的Siri、Cortana、Google Assistant、小爱同学之流。</p><p>我认为未来的人工智能，必须是能够听懂及能够一定程度上满足人类需求的“工具”，那么这个“听懂”的前提很大一部分上依赖于现在的自然语言处理，也是未来人工智能的入口。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;中华文化博大精深，汉语更是其中的代表，近年来的NLP更是有了非常多的“用武之地”。例如，语义智能分析，当女朋友问你“爱不爱我”，有的时候是“我要包包”，有的时候是“我要口红”，有的时候就是单纯的想要你的肯定的回答，这个时候NLP就可以起到救命的作用^_^。&lt;/p&gt;
&lt;p&gt;“
      
    
    </summary>
    
    
      <category term="NLP" scheme="https://jacksonleon.gitee.io/tags/NLP/"/>
    
      <category term="Program Thinking" scheme="https://jacksonleon.gitee.io/tags/Program-Thinking/"/>
    
  </entry>
  
  <entry>
    <title>小说爬虫</title>
    <link href="https://jacksonleon.gitee.io/posts/247701255.html"/>
    <id>https://jacksonleon.gitee.io/posts/247701255.html</id>
    <published>2018-04-12T02:57:34.000Z</published>
    <updated>2018-04-12T02:57:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用Python爬虫爬取网络小说"><a href="#使用Python爬虫爬取网络小说" class="headerlink" title="使用Python爬虫爬取网络小说"></a>使用Python爬虫爬取网络小说</h1><ul><li><p>小说网址</p><blockquote><p><a href="https://www.uxiaoshuo.com/" target="_blank" rel="noopener">https://www.uxiaoshuo.com/</a></p></blockquote></li><li><p>使用<a href="https://www.uxiaoshuo.com/124/124629/" target="_blank" rel="noopener">绝色妖娆：鬼医至尊</a>为例（主要是女朋友想看<code>^_^</code>）</p></li></ul><a id="more"></a><p>下面是程序代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span>  requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">req_header=&#123;</span><br><span class="line"><span class="string">'Accept'</span>:<span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,</span><br><span class="line"><span class="string">'Accept-Encoding'</span>:<span class="string">'gzip, deflate, br'</span>,</span><br><span class="line"><span class="string">'Accept-Language'</span>:<span class="string">'zh-CN,zh;q=0.9'</span>,</span><br><span class="line"><span class="string">'Cookie'</span>:<span class="string">'UM_distinctid=162afbabff819e-03f2f082776e95-b34356b-1fa400-162afbabff9294; CNZZDATA1259019190=1993576859-1523364262-https%253A%252F%252Fwww.baidu.com%252F%7C1523364262; bookid=124629; chapterid=6510968; chaptername=%25u7B2C1%25u7AE0%2520%25u6797%25u4E2D%25u9634%25u8C0B'</span>,</span><br><span class="line"><span class="string">'Host'</span>:<span class="string">'www.uxiaoshuo.com'</span>,</span><br><span class="line"><span class="string">'Proxy-Connection'</span>:<span class="string">'keep-alive'</span>,</span><br><span class="line"><span class="string">'Referer'</span>:<span class="string">'https://www.uxiaoshuo.com/'</span>,</span><br><span class="line"><span class="string">'Upgrade-Insecure-Requests'</span>:<span class="string">'1'</span>,</span><br><span class="line"><span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">req_url_base=<span class="string">'http://www.uxiaoshuo.com'</span>                <span class="comment">#小说主地址</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_txt</span><span class="params">(txt_id)</span>:</span></span><br><span class="line">    txt=&#123;&#125;</span><br><span class="line">    _req_url=[]</span><br><span class="line">    txt[<span class="string">'title'</span>]=<span class="string">''</span></span><br><span class="line">    txt[<span class="string">'id'</span>]=str(txt_id)                                   <span class="comment">#小说编号</span></span><br><span class="line">    _req_url=txt[<span class="string">'id'</span>].split(<span class="string">'.'</span>)</span><br><span class="line">    req_url=req_url_base+ txt[<span class="string">'id'</span>]                         <span class="comment">#根据小说编号获取小说URL</span></span><br><span class="line">    print(<span class="string">"小说编号："</span>+req_url)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        res=requests.get(req_url, params=req_header)             <span class="comment">#获取小说第一章界面</span></span><br><span class="line">        soups=BeautifulSoup(res.text,<span class="string">"html.parser"</span>)             <span class="comment">#soup转化</span></span><br><span class="line">        <span class="comment">#获取小说题目</span></span><br><span class="line">        txt[<span class="string">'title'</span>]=soups.select(<span class="string">'#webhtml .box_con .con_top a'</span>)[<span class="number">1</span>].text</span><br><span class="line">        <span class="comment">#打开小说文件写入小说相关信息</span></span><br><span class="line">        fo = open(<span class="string">'&#123;0&#125;.txt'</span>.format(txt[<span class="string">'title'</span>]), <span class="string">"ab+"</span>)</span><br><span class="line">        <span class="comment">#循环写入章节内容</span></span><br><span class="line">        <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> _req_url[<span class="number">-1</span>]!=<span class="string">'html'</span>:</span><br><span class="line">                print(txt[<span class="string">'title'</span>]+<span class="string">"全部下载成功！"</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            txt[<span class="string">'c_title'</span>]=soups.select(<span class="string">'#webhtml .box_con .zhangjieming h1'</span>)[<span class="number">0</span>].text     <span class="comment">##章节名称</span></span><br><span class="line">            txt[<span class="string">'content'</span>]=soups.select(<span class="string">'#webhtml .box_con .zhangjieTXT'</span>)[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> txt[<span class="string">'content'</span>].select(<span class="string">"script"</span>):           <span class="comment">#去除无用内容</span></span><br><span class="line">                i.decompose()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> txt[<span class="string">'content'</span>].select(<span class="string">"div"</span>):</span><br><span class="line">                i.decompose()</span><br><span class="line">            txt[<span class="string">'content'</span>]=re.sub( <span class="string">'\s+'</span>, <span class="string">'\r\n\t'</span>, txt[<span class="string">'content'</span>].text).strip(<span class="string">'\r\n'</span>)</span><br><span class="line">            <span class="comment">#以二进制写入章节题目</span></span><br><span class="line">            fo.write((<span class="string">'\n'</span>+txt[<span class="string">'c_title'</span>]+<span class="string">'\r\n'</span>).encode(<span class="string">'UTF-8'</span>))</span><br><span class="line">            <span class="comment">#以二进制写入章节内容</span></span><br><span class="line">            fo.write((<span class="string">'\n'</span>+txt[<span class="string">'content'</span>]+<span class="string">'\n'</span>).encode(<span class="string">'UTF-8'</span>))</span><br><span class="line">            print(txt[<span class="string">'c_title'</span>])</span><br><span class="line">            <span class="comment"># print('章节名:'+txt['c_title'])</span></span><br><span class="line">            <span class="comment"># print("章节内容：\n"+txt['content'])</span></span><br><span class="line">            req_url=soups.select(<span class="string">'#webhtml .zhangjieming .bottem1 a'</span>)[<span class="number">3</span>][<span class="string">'href'</span>]</span><br><span class="line">            _req_url=req_url.split(<span class="string">'.'</span>)</span><br><span class="line">            req_url=req_url_base+req_url</span><br><span class="line">            res=requests.get(req_url, params=req_header)             <span class="comment">#获取下一章界面</span></span><br><span class="line">            soups=BeautifulSoup(res.text,<span class="string">"html.parser"</span>)             <span class="comment">#soup转化</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">get_txt(<span class="string">'/124/124629/7404934.html'</span>)</span><br><span class="line">get_txt(<span class="string">'/135/135169/7373986.html'</span>)</span><br></pre></td></tr></table></figure><blockquote><p>要爬取该网站内的小说，只需要将参数改成自己需要的小说就可以了</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用Python爬虫爬取网络小说&quot;&gt;&lt;a href=&quot;#使用Python爬虫爬取网络小说&quot; class=&quot;headerlink&quot; title=&quot;使用Python爬虫爬取网络小说&quot;&gt;&lt;/a&gt;使用Python爬虫爬取网络小说&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;小说网址&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.uxiaoshuo.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.uxiaoshuo.com/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用&lt;a href=&quot;https://www.uxiaoshuo.com/124/124629/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;绝色妖娆：鬼医至尊&lt;/a&gt;为例（主要是女朋友想看&lt;code&gt;^_^&lt;/code&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://jacksonleon.gitee.io/tags/Python/"/>
    
      <category term="Reptile" scheme="https://jacksonleon.gitee.io/tags/Reptile/"/>
    
  </entry>
  
  <entry>
    <title>「Leetcode」657. Judge Route Circle</title>
    <link href="https://jacksonleon.gitee.io/posts/3224175457.html"/>
    <id>https://jacksonleon.gitee.io/posts/3224175457.html</id>
    <published>2018-04-09T08:19:57.000Z</published>
    <updated>2018-12-28T07:47:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="657-Judge-Route-Circle"><a href="#657-Judge-Route-Circle" class="headerlink" title="657. Judge Route Circle"></a>657. Judge Route Circle</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Initially, there is a Robot at position (0, 0). Given a sequence of its moves, judge if this robot makes a circle, which means it moves back to the original place.<br>The move sequence is represented by a string. And each move is represent by a character. The valid robot moves are <code>R</code> (Right), <code>L</code> (Left), <code>U</code> (Up) and <code>D</code> (down). The output should be true or false representing whether the robot makes a circle.</p></blockquote><a id="more"></a><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><ul><li><p>One</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: &quot;UD&quot;</span><br><span class="line">Output: true</span><br></pre></td></tr></table></figure></li><li><p>Two</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: &quot;LL&quot;</span><br><span class="line">Output: false</span><br></pre></td></tr></table></figure></li></ul><h3 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h3><ul><li><p>C++ Solution</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">judgeCircle</span><span class="params">(<span class="built_in">string</span> moves)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> b=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:moves)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">switch</span>(c)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'R'</span>:a++;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'L'</span>:a--;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'U'</span>:b++;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'D'</span>:b--;<span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> a==<span class="number">0</span>&amp;&amp;b==<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>Wrong Answer</p><ul><li><p>Solution</p>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">judgeCircle</span><span class="params">(<span class="built_in">string</span> moves)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>* alp=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">26</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:moves)</span><br><span class="line">        &#123;</span><br><span class="line">            alp[c-<span class="string">'A'</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>((alp[<span class="string">'R'</span>-<span class="string">'A'</span>]==alp[<span class="string">'L'</span>-<span class="string">'A'</span>])&amp;&amp;(alp[<span class="string">'U'</span>-<span class="string">'A'</span>]      ==alp[<span class="string">'D'</span>-<span class="string">'A'</span>]))<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>Test Case</p><blockquote><p>按道理solution应该没错的，可是不知道哪里有点问题，神经病啊！！！！！</p></blockquote>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RULDDLLDLRDUUUURULRURRRRLRULRLULLLRRULULDDRDLRULDRRULLUDDURDLRRUDRUDDURLLLUUDULRUDRLURRDRLLDDLLLDLRLLRUUDUURDRLDUDRUDRLUDULRLUDRLDDUULDDLDURULUDUUDDRRDUURRLRDLDLRLLDRRUUURDLULLURRRRDRRURDUURDLRRUULRURRUULULUUDURUDLRDDDDDURRRLRUDRUULUUUULDURDRULLRRRUDDDUUULUURRDRDDRLLDRLDULDLUUDRDLULLDLDDRUUUUDDRRRDLLLLURUURLRUUULRDDULUULUURDURDDDRRURLURDLLLRLULRDLDDLRDRRRRLUURRRRLDUDLLRUDLDRDLDRUULDRDULRULRRDLDLLLUDLDLULLDURUURRLLULUURLRLRDUDULLDURRUDDLDDLLUDURLLRLDLDUDLURLLDRRURRDUDLDUULDUDRRUDULLUUDURRRURLULDDLRRURULUURURRDULUULDDDUUDRLDDRLULDUDDLLLDLDURDLRLUURDDRLUDRLUDLRRLUUULLDUUDUDURRUULLDDUDLURRDDLURLDRDRUDRLDDLDULDRULUDRRDRLLUURULURRRUDRLLUURULURRLUULRDDDRDDLDRLDRLDUDRLDRLDDLDUDDURUDUDDDLRRDLUUUDUDURLRDRURUDUDDRDRRLUDURULDULDDRLDLUURUULUDRLRLRLLLLRLDRURRRUULRDURDRRDDURULLRDUDRLULRRLLLDRLRLRRDULDDUDUURLRULUUUULURULDLDRDRLDDLRLURRUULRRLDULLUULUDUDRLDUDRDLLDULURLUDDUURULDURRUURLRDRRRLDDULLLLDDRRLRRDRDLRUDUUDLRLDRDRURULDLULRRDLLURDLLDLRDRURLRUDURDRRRULURDRURLDRRRDUDUDUDURUUUUULURDUDDRRDULRDDLULRDRULDRUURRURLUDDDDLDRLDLLLLRLDRLRDRRRLLDRDRUULURLDRULLDRRDUUDLURLLDULDUUDLRRRDDUDRLDULRDLLULRRUURRRURLRRLDDUDDLULRUDULDULRDUDRLRDULRUUDDRUURUDLDRDUDDUULLUDDLLRLURURLRRULLDDDLURDRRDLLLLULLDLUDDLURLLDDRLDLLDDRDRDDUDLDURLUUUUUDLLLRLDULDDRDDDDRUDLULDRRLLLDUUUDDDRDDLLULUULRRULRUDRURDDULURDRRURUULDDDDUULLLURRRRDLDDLRLDDDRLUUDRDDRDDLUDLUUULLDLRDLURRRLRDRLURUURLULLLLRDDLLLLRUDURRLDURULURULDDRULUDRLDRLLURURRRDURURDRRUDLDDLLRRDRDDLRLRLUDUDRRUDLLDUURUURRDUDLRRLRURUDURDLRRULLDLLUDURUDDRUDULLDUDRRDDUDLLLDLRDRUURLLDLDRDDLDLLUDRDDRUUUDDULRUULRDRUDUURRRURUDLURLRDDLUULRDULRDURLLRDDDRRUDDUDUDLLDDRRUUDURDLLUURDLRULULDULRUURUDRULDRDULLULRRDDLDRDLLLDULRRDDLDRDLLRDDRLUUULUURULRULRUDULRULRUURUDUUDLDUDUUURLLURDDDUDUDLRLULDLDUDUULULLRDUDLDRUDRUULRURDDLDDRDULRLRLRRRRLRULDLLLDDRLUDLULLUUDLDRRLUDULRDRLLRRRULRLRLLUDRUUDUDDLRLDRDDDDRDLDRURULULRUURLRDLLDDRLLRUDRRDDRDUDULRUDULURRUDRDLRDUUDDLDRUDLLDDLRLULLLRUUDRRRRUULLRLLULURLDUDDURLRULULDLDRURDRLLURRDLURRURLULDLRLDUDLULLLDRDLULDLRULLLUDUDUDUDLDDDDDRDLUDUULLUDRLUURDRLULD</span><br></pre></td></tr></table></figure>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">output: <span class="literal">false</span></span><br><span class="line">expect: <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode-Note&quot;&gt;&lt;a href=&quot;#LeetCode-Note&quot; class=&quot;headerlink&quot; title=&quot;LeetCode Note&quot;&gt;&lt;/a&gt;LeetCode Note&lt;/h1&gt;&lt;p&gt;Sorted by Acceptance&lt;/p&gt;
&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;657-Judge-Route-Circle&quot;&gt;&lt;a href=&quot;#657-Judge-Route-Circle&quot; class=&quot;headerlink&quot; title=&quot;657. Judge Route Circle&quot;&gt;&lt;/a&gt;657. Judge Route Circle&lt;/h2&gt;&lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Initially, there is a Robot at position (0, 0). Given a sequence of its moves, judge if this robot makes a circle, which means it moves back to the original place.&lt;br&gt;The move sequence is represented by a string. And each move is represent by a character. The valid robot moves are &lt;code&gt;R&lt;/code&gt; (Right), &lt;code&gt;L&lt;/code&gt; (Left), &lt;code&gt;U&lt;/code&gt; (Up) and &lt;code&gt;D&lt;/code&gt; (down). The output should be true or false representing whether the robot makes a circle.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/categories/LeetCode/"/>
    
      <category term="String" scheme="https://jacksonleon.gitee.io/categories/LeetCode/String/"/>
    
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/tags/LeetCode/"/>
    
      <category term="String" scheme="https://jacksonleon.gitee.io/tags/String/"/>
    
      <category term="Circle" scheme="https://jacksonleon.gitee.io/tags/Circle/"/>
    
  </entry>
  
  <entry>
    <title>「Leetcode」387. First Unique Character in a String</title>
    <link href="https://jacksonleon.gitee.io/posts/1822856309.html"/>
    <id>https://jacksonleon.gitee.io/posts/1822856309.html</id>
    <published>2018-04-09T06:56:23.000Z</published>
    <updated>2018-12-28T07:47:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="387-First-Unique-Character-in-a-String"><a href="#387-First-Unique-Character-in-a-String" class="headerlink" title="387. First Unique Character in a String"></a>387. First Unique Character in a String</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Given a string, find the first non-repeating character in it and return it’s index. If it doesn’t exist, return -1.</p></blockquote><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = &quot;leetcode&quot;</span><br><span class="line">return 0.</span><br><span class="line"></span><br><span class="line">s = &quot;loveleetcode&quot;,</span><br><span class="line">return 2.</span><br></pre></td></tr></table></figure><blockquote><p><strong>Note:</strong> You may assume the string contain only lowercase letters.</p></blockquote><a id="more"></a><h3 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h3><ul><li><p>C++ Solution</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">firstUniqChar</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>* alp=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">26</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:s)</span><br><span class="line">        &#123;</span><br><span class="line">            alp[c-<span class="string">'a'</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(alp[s[i]-<span class="string">'a'</span>]==<span class="number">1</span>)<span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>Someting Wrong</p><blockquote><p>明明测试用例是对的，但是提交就是错的，很郁闷，结果在下面发现 </p></blockquote></li></ul><blockquote><p>Note: is Run Code inconsistent with Submit Solution? If you are using global variables or C/C++, check this out.First, please check if you are using any global or static variables. They are Evil, period. If you must declare one, reset them in the first line of your called method or in the default constructor. Why? Because the judger executes all test cases using the same program instance, global/static variables affect the program state from one test case to another. See this Discuss thread for more details.Are you using C or C++? If the answer is yes, chances are your code has bugs in it which cause one of the earlier test cases to trigger an undefined behavior. See this Discuss thread for an example of undefined behavior. These bugs could be hard to debug, so good luck. Or just give up on C/C++ entirely and code in a more predictable language, like Java. Just kidding.<br>总之很郁闷</p></blockquote><ul><li><p>Jave Solution</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">firstUniqChar</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] alp=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">26</span>];</span><br><span class="line">        <span class="keyword">char</span>[] arr=s.toCharArray();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:arr)</span><br><span class="line">        &#123;</span><br><span class="line">            alp[c-<span class="string">'a'</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(alp[arr[i]-<span class="string">'a'</span>]==<span class="number">1</span>)<span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>9 ms Soluton in Java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">firstUniqChar</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> resIndex = s.length();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(resIndex == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c = <span class="string">'a'</span>;c&lt;=<span class="string">'z'</span>;c++)&#123;           </span><br><span class="line">            <span class="keyword">int</span> index = s.indexOf(c);      </span><br><span class="line">            <span class="keyword">if</span>(index!=-<span class="number">1</span> &amp;&amp; index == s.lastIndexOf(c))&#123;</span><br><span class="line">                resIndex = Math.min(resIndex,index);</span><br><span class="line">            &#125;        </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> resIndex == s.length() ? -<span class="number">1</span> : resIndex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode-Note&quot;&gt;&lt;a href=&quot;#LeetCode-Note&quot; class=&quot;headerlink&quot; title=&quot;LeetCode Note&quot;&gt;&lt;/a&gt;LeetCode Note&lt;/h1&gt;&lt;p&gt;Sorted by Acceptance&lt;/p&gt;
&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;387-First-Unique-Character-in-a-String&quot;&gt;&lt;a href=&quot;#387-First-Unique-Character-in-a-String&quot; class=&quot;headerlink&quot; title=&quot;387. First Unique Character in a String&quot;&gt;&lt;/a&gt;387. First Unique Character in a String&lt;/h2&gt;&lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Given a string, find the first non-repeating character in it and return it’s index. If it doesn’t exist, return -1.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Examples&quot;&gt;&lt;a href=&quot;#Examples&quot; class=&quot;headerlink&quot; title=&quot;Examples&quot;&gt;&lt;/a&gt;Examples&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;s = &amp;quot;leetcode&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return 0.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s = &amp;quot;loveleetcode&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return 2.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You may assume the string contain only lowercase letters.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/categories/LeetCode/"/>
    
      <category term="String" scheme="https://jacksonleon.gitee.io/categories/LeetCode/String/"/>
    
      <category term="Hash Table" scheme="https://jacksonleon.gitee.io/categories/LeetCode/String/Hash-Table/"/>
    
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/tags/LeetCode/"/>
    
      <category term="String" scheme="https://jacksonleon.gitee.io/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>双系统删除Ubuntu后出现grub rescure&gt;解决办法</title>
    <link href="https://jacksonleon.gitee.io/posts/2711132068.html"/>
    <id>https://jacksonleon.gitee.io/posts/2711132068.html</id>
    <published>2018-03-27T07:06:07.000Z</published>
    <updated>2019-01-26T17:11:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="双系统删除Ubuntu后出现grub-rescure"><a href="#双系统删除Ubuntu后出现grub-rescure" class="headerlink" title="双系统删除Ubuntu后出现grub rescure"></a>双系统删除Ubuntu后出现grub rescure</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>在笔记本电脑上安装了两个Linux系统，有一个几乎不用，所以决定把它给删除了,然后就出现了问题.</p></blockquote><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GRUB loading</span><br><span class="line">error:unknow filesystem</span><br><span class="line">grub rescue&gt;</span><br></pre></td></tr></table></figure><p>下面几种操作会导致这种问题：</p><ul><li>想删除Ubuntu，于是直接在Windows下删除/格式化了Ubuntu所在的分区。</li><li>调整磁盘，利用工具合并/分割/调整/删除分区，使磁盘分区数目发生了变化。</li><li>重新安装系统，把Linux安装到了新分区，原有分区已经格式化，但是没有重新安装grub2。</li><li>用Ubuntu备份工具/衍生版制造工具等，把主分区恢复成了8.X的老版本，结果老版本的grub是grub1,于是把grub2破坏掉了。</li></ul><p>总归是由于操作者不知道grub2分为两部分，一部分（一般情况下）写在了mbr上，另一部分写在了某个分区的<code>/boot/grub</code>目录（如果<code>/boot</code>单独分区，则直接写在对应分区的<code>/grub</code>目录）里面。由于上述操作，致使grub2的mbr里面的那一部分找不到<code>/grub</code>目录里面的那一部分了（或者另一部分已经删除了）。</p><!-- more --><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><h3 id="彻底删除grub2"><a href="#彻底删除grub2" class="headerlink" title="彻底删除grub2"></a>彻底删除grub2</h3><blockquote><p>已经使用此方法成功解决</p></blockquote><p>适用于已经不想再使用Ubuntu，要转回Windows的人。只要有Windows启动盘（非Ghost），用它启动，至选择安装位置，不用真正安装，退出重启就可以。或者用它启动到故障修复台，运行fixboot或者fixmbr都可以。<br>win7命令行下，则是执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BootRec.exe /fixmbr</span><br></pre></td></tr></table></figure><p><code>/fixmbr</code>修复mbr，<code>/FixBoot</code>修复启动扇区，<code>/ScanOs</code>检测已安装的win7，<code>/RebuildBcd</code>重建bcd。</p><h3 id="重新安装、修复grub2"><a href="#重新安装、修复grub2" class="headerlink" title="重新安装、修复grub2"></a>重新安装、修复grub2</h3><h4 id="先使用ls命令，找到Ubuntu安装在哪个分区"><a href="#先使用ls命令，找到Ubuntu安装在哪个分区" class="headerlink" title="先使用ls命令，找到Ubuntu安装在哪个分区"></a>先使用<code>ls</code>命令，找到Ubuntu安装在哪个分区</h4><p>在grub rescue&gt;下输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br></pre></td></tr></table></figure><p>会罗列所有的磁盘分区信息，比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(hd0,1),(hd0,5),(hd0,3),(hd0,2)</span><br></pre></td></tr></table></figure><h4 id="依次调用如下命令：-X表示各个分区号码"><a href="#依次调用如下命令：-X表示各个分区号码" class="headerlink" title="依次调用如下命令： X表示各个分区号码"></a>依次调用如下命令： X表示各个分区号码</h4><p>如果<code>/boot</code>没有单独分区，用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls (hd0,X)/boot/grub</span><br></pre></td></tr></table></figure><p>如果<code>/boot</code>单独分区，则用下列命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls （hd0,X)/grub</span><br></pre></td></tr></table></figure><p>正常情况下，会列出来几百个文件，很多文件的扩展名是<code>.mod</code>、<code>.lst</code>和<code>.img</code>，还有一个文件是<code>grub.cfg</code>。假设找到（hd0,5）时，显示了文件夹中的文件，则表示Linux安装在这个分区。</p><h4 id="如果找到了正确的grub目录，则设法临时性将grub的两部分关联起来"><a href="#如果找到了正确的grub目录，则设法临时性将grub的两部分关联起来" class="headerlink" title="如果找到了正确的grub目录，则设法临时性将grub的两部分关联起来"></a>如果找到了正确的grub目录，则设法临时性将grub的两部分关联起来</h4><p>以下是<code>/boot</code>没有单独分区的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grub rescue&gt;<span class="built_in">set</span> root=(hd0,5)</span><br><span class="line">grub rescue&gt;<span class="built_in">set</span> prefix=(hd0,5)/boot/grub</span><br><span class="line">grub rescue&gt;insmod /boot/grub/normal.mod</span><br></pre></td></tr></table></figure><p>以下是<code>/boot</code>单独分区的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grub rescue&gt;<span class="built_in">set</span> root=(hd0,5)</span><br><span class="line">grub rescue&gt;<span class="built_in">set</span> prefix=(hd0,5)/grub</span><br><span class="line">grub rescue&gt;insmod /grub/normal.mod</span><br></pre></td></tr></table></figure><p>为了显示出丢失的grub菜单，需要调用如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub rescue&gt;normal</span><br></pre></td></tr></table></figure><p>如果重启后问题依旧存在，则需要进入Linux中对grub进行修复。启动起来，进入Ubuntu之后，在终端执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo update-grub</span><br><span class="line">$ sudo grub-install /dev/sda</span><br></pre></td></tr></table></figure><p>sda是硬盘号码，千万不要指定分区号码，例如sda1，sda5等都不对。</p><h4 id="如果找不到正确的-grub目录，则尝试寻找是否有linux核心文件，则依次在grub-rescue-gt-下调用如下命令：-X表示各个分区号码"><a href="#如果找不到正确的-grub目录，则尝试寻找是否有linux核心文件，则依次在grub-rescue-gt-下调用如下命令：-X表示各个分区号码" class="headerlink" title="如果找不到正确的/grub目录，则尝试寻找是否有linux核心文件，则依次在grub rescue&gt;下调用如下命令： X表示各个分区号码"></a>如果找不到正确的/grub目录，则尝试寻找是否有linux核心文件，则依次在<code>grub rescue&gt;</code>下调用如下命令： X表示各个分区号码</h4><p>如果<code>/boot</code>没有单独分区：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls (hd0,X)/boot</span><br></pre></td></tr></table></figure><p>如果<code>/boot</code>单独分区：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls （hd0,X)</span><br></pre></td></tr></table></figure><p>找名字类似<code>vmlinuz-3.0.0-12-generic</code>这样的文件，这是Linux核心文件，如果找到，记下(hd0,X)中的X值。假设找到（hd0,5）时，显示了文件夹中的文件。</p><p>然后用live cd或者live usb启动，在live cd的Ubuntu终端中依次输入以下命令（sda5中的5必须改成上面记录下来数值）：</p><p>如果<code>/boot</code>没有单独分区：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mount /dev/sda5 /mnt</span><br><span class="line">sudo grub-install --boot-directory=/mnt/boot /dev/sda</span><br></pre></td></tr></table></figure><p>如果<code>/boot</code>单独分区：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mount /dev/sda5 /mnt</span><br><span class="line">sudo grub-install --boot-directory=/mnt /dev/sda</span><br></pre></td></tr></table></figure><p>然后重新启动即可。</p><p>以上这两句命令也可以解决“安装Ubuntu时grub安装位置不对，没有将grub安装到/dev/sda，造成启动时不出现Ubuntu启动项直接进入Windows”的问题，不过需要自行确定sda5中的5改成什么数字。</p><h4 id="如果连Linux核心文件都没有，那么就得彻底重新安装"><a href="#如果连Linux核心文件都没有，那么就得彻底重新安装" class="headerlink" title="如果连Linux核心文件都没有，那么就得彻底重新安装"></a>如果连Linux核心文件都没有，那么就得彻底重新安装</h4><p>找到了grub分区的目录，却找不到<code>normal.mod</code>这个文件，所以最后直接借助U盘里的Linux系统来完成修复了。面对这种状况的时候，最坏的打算就是重新安装系统了，可惜的就是那些辛辛苦苦收集的资料了。不过谁让自己瞎折腾的呢？这一切代价都需要自己去承担。不过索性有强大的网络，让我找到了解决的措施，在此感谢那些无私奉献的Linux爱好者辛勤的付出，是他们的存在才让生活更美好！</p><h4 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h4><p><a href="http://www.2cto.com/os/201111/112327.html" target="_blank" rel="noopener">Grub Rescue修复方法</a><br><a href="http://blog.sina.com.cn/s/blog_4d6c45250100wxnq.html" target="_blank" rel="noopener">grub rescue修复方法</a><br><a href="http://www.cnblogs.com/samcn/archive/2011/03/30/1999615.html" target="_blank" rel="noopener">Ubuntu启动问题以及Grub Rescue修复方法</a><br><a href="http://blog.csdn.net/jikiwh/article/details/5497900" target="_blank" rel="noopener">Grub Rescue来修复Grub 问题</a><br><a href="http://blog.csdn.net/tody_guo/article/details/7537454" target="_blank" rel="noopener">grub rescue模式下启动并修复</a><br><a href="http://tech.ccidnet.com/art/738/20100803/2140203_1.html" target="_blank" rel="noopener">Ubuntu Grub Rescue几种修复方法</a><br><a href="http://blog.csdn.net/miromelo/article/details/6132702" target="_blank" rel="noopener">grub rescue修复</a><br><a href="http://openwares.net/linux/grub_rescue_unkown_filesystem.html" target="_blank" rel="noopener">grub rescue 模式下引导修复</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;双系统删除Ubuntu后出现grub-rescure&quot;&gt;&lt;a href=&quot;#双系统删除Ubuntu后出现grub-rescure&quot; class=&quot;headerlink&quot; title=&quot;双系统删除Ubuntu后出现grub rescure&quot;&gt;&lt;/a&gt;双系统删除Ubuntu后出现grub rescure&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;在笔记本电脑上安装了两个Linux系统，有一个几乎不用，所以决定把它给删除了,然后就出现了问题.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="BUGs" scheme="https://jacksonleon.gitee.io/categories/BUGs/"/>
    
      <category term="Linux" scheme="https://jacksonleon.gitee.io/categories/BUGs/Linux/"/>
    
      <category term="Ubuntu" scheme="https://jacksonleon.gitee.io/categories/BUGs/Linux/Ubuntu/"/>
    
    
      <category term="Ubuntu" scheme="https://jacksonleon.gitee.io/tags/Ubuntu/"/>
    
      <category term="Windows" scheme="https://jacksonleon.gitee.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>「Leetcode」386. Lexicographical Numbers</title>
    <link href="https://jacksonleon.gitee.io/posts/784341676.html"/>
    <id>https://jacksonleon.gitee.io/posts/784341676.html</id>
    <published>2018-03-26T07:04:22.000Z</published>
    <updated>2018-12-28T07:47:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="386-Lexicographical-Numbers"><a href="#386-Lexicographical-Numbers" class="headerlink" title="386. Lexicographical Numbers"></a>386. Lexicographical Numbers</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Given an integer <code>n</code>, return <code>1-n</code> in lexicographical order. For example, given 13, return: <code>[1,10,11,12,13,2,3,4,5,6,7,8,9]</code>. Please optimize your algorithm to use less time and space. The input size may be as large as <code>5,000,000</code>.</p></blockquote><a id="more"></a><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; lexicalOrder(<span class="keyword">int</span> n) &#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; res;</span><br><span class="line">        <span class="keyword">int</span> cur=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            res.push_back(cur);</span><br><span class="line">            <span class="keyword">if</span>(cur*<span class="number">10</span>&lt;=n)   <span class="comment">//首先判断能否直接再后面加0</span></span><br><span class="line">                cur*=<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(cur%<span class="number">10</span>!=<span class="number">9</span>&amp;&amp;(cur+<span class="number">1</span>)&lt;=n)  <span class="comment">//正常情况下+1</span></span><br><span class="line">                cur++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">while</span>((cur/<span class="number">10</span>)%<span class="number">10</span>==<span class="number">9</span>)   <span class="comment">//处理*9_的情况，例如192(n=192)的下一个应该是(1__开头结束)2开头，而不是20</span></span><br><span class="line">                &#123;</span><br><span class="line">                    cur/=<span class="number">10</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                cur=(cur/<span class="number">10</span>)+<span class="number">1</span>; <span class="comment">//这一轮个位结束，从上一位+1继续开始</span></span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Hints"><a href="#Hints" class="headerlink" title="Hints"></a>Hints</h3><blockquote><p>字典排序(数字)</p><ul><li>首先判断能否直接再后面加0即乘10</li><li>正常情况下直接+1</li><li>还有这一轮个位结束，回到上一位+1重新开始</li><li>处理* 9 *的特殊情况，这种情况下需要从上一个不是9的位置开始也就是循环除以10</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode-Note&quot;&gt;&lt;a href=&quot;#LeetCode-Note&quot; class=&quot;headerlink&quot; title=&quot;LeetCode Note&quot;&gt;&lt;/a&gt;LeetCode Note&lt;/h1&gt;&lt;p&gt;Sorted by Acceptance&lt;/p&gt;
&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;386-Lexicographical-Numbers&quot;&gt;&lt;a href=&quot;#386-Lexicographical-Numbers&quot; class=&quot;headerlink&quot; title=&quot;386. Lexicographical Numbers&quot;&gt;&lt;/a&gt;386. Lexicographical Numbers&lt;/h2&gt;&lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Given an integer &lt;code&gt;n&lt;/code&gt;, return &lt;code&gt;1-n&lt;/code&gt; in lexicographical order. For example, given 13, return: &lt;code&gt;[1,10,11,12,13,2,3,4,5,6,7,8,9]&lt;/code&gt;. Please optimize your algorithm to use less time and space. The input size may be as large as &lt;code&gt;5,000,000&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/tags/LeetCode/"/>
    
      <category term="Sort" scheme="https://jacksonleon.gitee.io/tags/Sort/"/>
    
      <category term="Lexicographical" scheme="https://jacksonleon.gitee.io/tags/Lexicographical/"/>
    
  </entry>
  
  <entry>
    <title>「Leetcode」807. Max Increase to Keep City Skyline</title>
    <link href="https://jacksonleon.gitee.io/posts/3710545512.html"/>
    <id>https://jacksonleon.gitee.io/posts/3710545512.html</id>
    <published>2018-03-25T11:12:34.000Z</published>
    <updated>2018-12-28T07:47:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="807-Max-Increase-to-Keep-City-Skyline"><a href="#807-Max-Increase-to-Keep-City-Skyline" class="headerlink" title="807. Max Increase to Keep City Skyline"></a>807. Max Increase to Keep City Skyline</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>In a 2 dimensional array grid, each value <code>grid[i][j]</code> represents the height of a building located there. We are allowed to increase the height of any number of buildings, by any amount (the amounts can be different for different buildings). Height 0 is considered to be a building as well. At the end, the “skyline” when viewed from all four directions of the grid, i.e. <code>top</code>, <code>bottom</code>, <code>left</code>, and <code>right</code>, must be the same as the skyline of the original grid. A city’s skyline is the outer contour of the rectangles formed by all the buildings when viewed from a distance. See the following example.What is the <code>maximum total sum</code> that the height of the buildings can be increased?</p></blockquote><a id="more"></a><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: grid = [[3,0,8,4],[2,4,5,7],[9,2,6,3],[0,3,1,0]]</span><br><span class="line">Output: 35</span><br></pre></td></tr></table></figure><h3 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">The grid is:</span><br><span class="line">[[3, 0, 8, 4], </span><br><span class="line"> [2, 4, 5, 7],</span><br><span class="line"> [9, 2, 6, 3],</span><br><span class="line"> [0, 3, 1, 0]]</span><br><span class="line"></span><br><span class="line">The skyline viewed from top or bottom is: [9, 4, 8, 7]</span><br><span class="line">The skyline viewed from left or right is: [8, 7, 9, 3]</span><br><span class="line"></span><br><span class="line">The grid after increasing the height of buildings without affecting skylines is:</span><br><span class="line"></span><br><span class="line">gridNew = [ [8, 4, 8, 7],</span><br><span class="line">            [7, 4, 7, 7],</span><br><span class="line">            [9, 4, 8, 7],</span><br><span class="line">            [3, 3, 3, 3] ]</span><br></pre></td></tr></table></figure><h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><ul><li><code>1 &lt; grid.length = grid[0].length &lt;= 50</code>.</li><li>All heights <code>grid[i][j]</code> are in the range <code>[0, 100]</code>.</li><li>All buildings in <code>grid[i][j]</code> occupy the entire grid cell: that is, they are a <code>1 x 1 x grid[i][j]</code> rectangular prism.</li></ul><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxIncreaseKeepingSkyline</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; grid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = grid.size();</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; col, row;   <span class="comment">//The Skyline Matrix</span></span><br><span class="line">        <span class="keyword">int</span> max;    <span class="comment">//初始化col、row数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) </span><br><span class="line">        &#123;</span><br><span class="line">            max=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) </span><br><span class="line">                <span class="keyword">if</span>(max&lt;grid[i][j])max=grid[i][j];</span><br><span class="line">            row.push_back(max);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) </span><br><span class="line">        &#123;</span><br><span class="line">            max=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) </span><br><span class="line">                <span class="keyword">if</span>(max&lt;grid[j][i])max=grid[j][i];</span><br><span class="line">            col.push_back(max);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> tmp;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                tmp=row[i]&lt;col[j]?row[i]:col[j];    <span class="comment">//girdNew</span></span><br><span class="line">                res += tmp - grid[i][j];    <span class="comment">//累加增加的值</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode-Note&quot;&gt;&lt;a href=&quot;#LeetCode-Note&quot; class=&quot;headerlink&quot; title=&quot;LeetCode Note&quot;&gt;&lt;/a&gt;LeetCode Note&lt;/h1&gt;&lt;p&gt;Sorted by Acceptance&lt;/p&gt;
&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;807-Max-Increase-to-Keep-City-Skyline&quot;&gt;&lt;a href=&quot;#807-Max-Increase-to-Keep-City-Skyline&quot; class=&quot;headerlink&quot; title=&quot;807. Max Increase to Keep City Skyline&quot;&gt;&lt;/a&gt;807. Max Increase to Keep City Skyline&lt;/h2&gt;&lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;In a 2 dimensional array grid, each value &lt;code&gt;grid[i][j]&lt;/code&gt; represents the height of a building located there. We are allowed to increase the height of any number of buildings, by any amount (the amounts can be different for different buildings). Height 0 is considered to be a building as well. At the end, the “skyline” when viewed from all four directions of the grid, i.e. &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, and &lt;code&gt;right&lt;/code&gt;, must be the same as the skyline of the original grid. A city’s skyline is the outer contour of the rectangles formed by all the buildings when viewed from a distance. See the following example.What is the &lt;code&gt;maximum total sum&lt;/code&gt; that the height of the buildings can be increased?&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/tags/LeetCode/"/>
    
      <category term="Matrix" scheme="https://jacksonleon.gitee.io/tags/Matrix/"/>
    
  </entry>
  
  <entry>
    <title>「Leetcode」804. Unique Morse Code Words</title>
    <link href="https://jacksonleon.gitee.io/posts/2627122790.html"/>
    <id>https://jacksonleon.gitee.io/posts/2627122790.html</id>
    <published>2018-03-25T06:04:15.000Z</published>
    <updated>2018-12-28T07:47:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="804-Unique-Morse-Code-Words"><a href="#804-Unique-Morse-Code-Words" class="headerlink" title="804. Unique Morse Code Words"></a>804. Unique Morse Code Words</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>International Morse Code defines a standard encoding where each letter is mapped to a series of dots and dashes, as follows: <code>&quot;a&quot;</code> maps to <code>&quot;.-&quot;</code>, <code>&quot;b&quot;</code> maps to <code>&quot;-...&quot;</code>, <code>&quot;c&quot;</code> maps to <code>&quot;-.-.&quot;</code>, and so on. </p><p>For convenience, the full table for the 26 letters of the English alphabet is given below:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&quot;.-&quot;,&quot;-...&quot;,&quot;-.-.&quot;,&quot;-..&quot;,&quot;.&quot;,&quot;..-.&quot;,&quot;--.&quot;,&quot;....&quot;,&quot;..&quot;,&quot;.---&quot;,&quot;-.-&quot;,&quot;.-..&quot;,&quot;--&quot;,&quot;-.&quot;,&quot;---&quot;,&quot;.--.&quot;,&quot;--.-&quot;,&quot;.-.&quot;,&quot;...&quot;,&quot;-&quot;,&quot;..-&quot;,&quot;...-&quot;,&quot;.--&quot;,&quot;-..-&quot;,&quot;-.--&quot;,&quot;--..&quot;]</span><br></pre></td></tr></table></figure><blockquote><p>Now, given a list of words, each word can be written as a concatenation of the Morse code of each letter. For example, “cab” can be written as “-.-.-….-“, (which is the concatenation “-.-.” + “-…” + “.-“). We’ll call such a concatenation, the transformation of a word. Return the number of different transformations among all words we have.</p></blockquote><a id="more"></a><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Input: words = [&quot;gin&quot;, &quot;zen&quot;, &quot;gig&quot;, &quot;msg&quot;]</span><br><span class="line">Output: 2</span><br><span class="line">Explanation: </span><br><span class="line">The transformation of each word is:</span><br><span class="line">&quot;gin&quot; -&gt; &quot;--...-.&quot;</span><br><span class="line">&quot;zen&quot; -&gt; &quot;--...-.&quot;</span><br><span class="line">&quot;gig&quot; -&gt; &quot;--...--.&quot;</span><br><span class="line">&quot;msg&quot; -&gt; &quot;--...--.&quot;</span><br><span class="line"></span><br><span class="line">There are 2 different transformations, &quot;--...-.&quot; and &quot;--...--.&quot;.</span><br></pre></td></tr></table></figure><h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><ul><li>The length of words will be at most 100.</li><li>Each words[i] will have length in range [1, 12].</li><li>words[i] will only consist of lowercase letters.</li></ul><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">uniqueMorseRepresentations</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; words)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; letters=&#123;<span class="string">".-"</span>,<span class="string">"-..."</span>,<span class="string">"-.-."</span>,<span class="string">"-.."</span>,<span class="string">"."</span>,<span class="string">"..-."</span>,<span class="string">"--."</span>,<span class="string">"...."</span>,<span class="string">".."</span>,<span class="string">".---"</span>,<span class="string">"-.-"</span>,<span class="string">".-.."</span>,<span class="string">"--"</span>,<span class="string">"-."</span>,<span class="string">"---"</span>,<span class="string">".--."</span>,<span class="string">"--.-"</span>,<span class="string">".-."</span>,<span class="string">"..."</span>,<span class="string">"-"</span>,<span class="string">"..-"</span>,<span class="string">"...-"</span>,<span class="string">".--"</span>,<span class="string">"-..-"</span>,<span class="string">"-.--"</span>,<span class="string">"--.."</span>&#125;;</span><br><span class="line">        <span class="built_in">set</span>&lt;<span class="built_in">string</span>&gt; res;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">string</span> word:words)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> code;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">auto</span> w:word)</span><br><span class="line">            &#123;</span><br><span class="line">                code+=letters[w-<span class="string">'a'</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            res.insert(code);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Hints"><a href="#Hints" class="headerlink" title="Hints"></a>Hints</h3><ul><li><p>利用Set的特性：<code>元素无重复</code>，直接返回<code>set</code>的<code>size()</code>就可以得到<code>the number of different transformations among all words</code></p></li><li><p>根据ASCⅡ码的特点，<code>words</code>中的word包含的每个字母可以直接替换为<code>Morse Code</code>，再将字符串连接起来就可以得到每个<code>word</code>对应的<code>Morse Code</code></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode-Note&quot;&gt;&lt;a href=&quot;#LeetCode-Note&quot; class=&quot;headerlink&quot; title=&quot;LeetCode Note&quot;&gt;&lt;/a&gt;LeetCode Note&lt;/h1&gt;&lt;p&gt;Sorted by Acceptance&lt;/p&gt;
&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;804-Unique-Morse-Code-Words&quot;&gt;&lt;a href=&quot;#804-Unique-Morse-Code-Words&quot; class=&quot;headerlink&quot; title=&quot;804. Unique Morse Code Words&quot;&gt;&lt;/a&gt;804. Unique Morse Code Words&lt;/h2&gt;&lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;International Morse Code defines a standard encoding where each letter is mapped to a series of dots and dashes, as follows: &lt;code&gt;&amp;quot;a&amp;quot;&lt;/code&gt; maps to &lt;code&gt;&amp;quot;.-&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;b&amp;quot;&lt;/code&gt; maps to &lt;code&gt;&amp;quot;-...&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;c&amp;quot;&lt;/code&gt; maps to &lt;code&gt;&amp;quot;-.-.&amp;quot;&lt;/code&gt;, and so on. &lt;/p&gt;
&lt;p&gt;For convenience, the full table for the 26 letters of the English alphabet is given below:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&amp;quot;.-&amp;quot;,&amp;quot;-...&amp;quot;,&amp;quot;-.-.&amp;quot;,&amp;quot;-..&amp;quot;,&amp;quot;.&amp;quot;,&amp;quot;..-.&amp;quot;,&amp;quot;--.&amp;quot;,&amp;quot;....&amp;quot;,&amp;quot;..&amp;quot;,&amp;quot;.---&amp;quot;,&amp;quot;-.-&amp;quot;,&amp;quot;.-..&amp;quot;,&amp;quot;--&amp;quot;,&amp;quot;-.&amp;quot;,&amp;quot;---&amp;quot;,&amp;quot;.--.&amp;quot;,&amp;quot;--.-&amp;quot;,&amp;quot;.-.&amp;quot;,&amp;quot;...&amp;quot;,&amp;quot;-&amp;quot;,&amp;quot;..-&amp;quot;,&amp;quot;...-&amp;quot;,&amp;quot;.--&amp;quot;,&amp;quot;-..-&amp;quot;,&amp;quot;-.--&amp;quot;,&amp;quot;--..&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Now, given a list of words, each word can be written as a concatenation of the Morse code of each letter. For example, “cab” can be written as “-.-.-….-“, (which is the concatenation “-.-.” + “-…” + “.-“). We’ll call such a concatenation, the transformation of a word. Return the number of different transformations among all words we have.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/categories/LeetCode/"/>
    
      <category term="String" scheme="https://jacksonleon.gitee.io/categories/LeetCode/String/"/>
    
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/tags/LeetCode/"/>
    
      <category term="String" scheme="https://jacksonleon.gitee.io/tags/String/"/>
    
      <category term="Morse-Code" scheme="https://jacksonleon.gitee.io/tags/Morse-Code/"/>
    
  </entry>
  
  <entry>
    <title>「Leetcode」191. Number of 1 Bits</title>
    <link href="https://jacksonleon.gitee.io/posts/188551222.html"/>
    <id>https://jacksonleon.gitee.io/posts/188551222.html</id>
    <published>2018-03-25T05:32:38.000Z</published>
    <updated>2018-12-28T07:47:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="191-Number-of-1-Bits"><a href="#191-Number-of-1-Bits" class="headerlink" title="191. Number of 1 Bits"></a>191. Number of 1 Bits</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Write a function that takes an unsigned integer and returns the number of <code>1</code> bits it has (also known as the <code>Hamming weight</code>). For example, the 32-bit integer <code>11</code> has binary representation <code>00000000000000000000000000001011</code>, so the function should return 3.</p></blockquote><a id="more"></a><h4 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h4><ul><li><p>Hamming Weight</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">hammingWeight</span><span class="params">(<span class="keyword">uint32_t</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> c=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(n)</span><br><span class="line">        &#123;</span><br><span class="line">            c++;</span><br><span class="line">            n&amp;=n<span class="number">-1</span>; <span class="comment">//逐次获取最低非0 bit位</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>Bit Mask</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hammingWeight</span><span class="params">(self, n)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type n: int</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        res=<span class="number">0</span></span><br><span class="line">        mask=<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">            <span class="keyword">if</span> n&amp;mask:  <span class="comment"># &amp;：按位与</span></span><br><span class="line">                res+=<span class="number">1</span></span><br><span class="line">            mask=mask&lt;&lt;<span class="number">1</span></span><br><span class="line">            <span class="comment"># n=n&gt;&gt;1    #n移位或者mask移位</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode-Note&quot;&gt;&lt;a href=&quot;#LeetCode-Note&quot; class=&quot;headerlink&quot; title=&quot;LeetCode Note&quot;&gt;&lt;/a&gt;LeetCode Note&lt;/h1&gt;&lt;p&gt;Sorted by Acceptance&lt;/p&gt;
&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;191-Number-of-1-Bits&quot;&gt;&lt;a href=&quot;#191-Number-of-1-Bits&quot; class=&quot;headerlink&quot; title=&quot;191. Number of 1 Bits&quot;&gt;&lt;/a&gt;191. Number of 1 Bits&lt;/h2&gt;&lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Write a function that takes an unsigned integer and returns the number of &lt;code&gt;1&lt;/code&gt; bits it has (also known as the &lt;code&gt;Hamming weight&lt;/code&gt;). For example, the 32-bit integer &lt;code&gt;11&lt;/code&gt; has binary representation &lt;code&gt;00000000000000000000000000001011&lt;/code&gt;, so the function should return 3.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/categories/LeetCode/"/>
    
      <category term="Bit Manipulation" scheme="https://jacksonleon.gitee.io/categories/LeetCode/Bit-Manipulation/"/>
    
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/tags/LeetCode/"/>
    
      <category term="Hamming-Distance" scheme="https://jacksonleon.gitee.io/tags/Hamming-Distance/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Note</title>
    <link href="https://jacksonleon.gitee.io/posts/2993135007.html"/>
    <id>https://jacksonleon.gitee.io/posts/2993135007.html</id>
    <published>2018-03-25T05:10:22.000Z</published>
    <updated>2019-02-03T10:13:11.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-Note"><a href="#Hexo-Note" class="headerlink" title="Hexo Note"></a>Hexo Note</h1><p>Author: JosephLau</p><hr><a id="more"></a><h2 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h2><h3 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure><p><strong>站点配置文件</strong> 中启用该插件，如果没有这一项就自己加入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">encrypt:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure><p>在你的文章的头部添加上对应的字段，如 password, abstract, message</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章加密</span><br><span class="line">date: 2019-01-04T22:20:13.000Z</span><br><span class="line">category: 教程</span><br><span class="line">tags:</span><br><span class="line">  - 博客</span><br><span class="line">  - Hexo</span><br><span class="line">password: </span><br><span class="line">abstract: Password is needed for this post.</span><br><span class="line">message: Enter password, and enjoy it!</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li>password: 是该博客加密使用的密码</li><li>abstract: 是该博客的摘要，会显示在博客的列表页</li><li>message: 这个是博客查看时，密码输入框上面的描述性文字</li></ul><h3 id="Hexo博客实现页内跳转"><a href="#Hexo博客实现页内跳转" class="headerlink" title="Hexo博客实现页内跳转"></a>Hexo博客实现页内跳转</h3><blockquote><p>如何在Hexo中写MarkDown文档，不使用绝对地址进行跳转到本博客中另外一个页面</p></blockquote><p><del><a href="/posts/1565465933.html" title="传送门在此">传送门在此</a>，代码如下：</del></p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 出现了莫名的BUG</span><br><span class="line">&#123;% post_link Settings-of-iTerm2-on-Mac 详细设置请看这篇文章 %&#125;</span><br></pre></td></tr></table></figure><p>上面的方法失效了，本博客目前使用的是<code>permalink</code>链接到唯一的文章，改了文章名也没有关系</p><p><a href="/posts/1540132352.html">具体设置方法请看这里</a></p><h3 id="Next-主题中渲染-LaTeX数学公式"><a href="#Next-主题中渲染-LaTeX数学公式" class="headerlink" title="Next 主题中渲染 LaTeX数学公式"></a>Next 主题中渲染 LaTeX数学公式</h3><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>Hexo 默认使用 hexo-renderer-marked 引擎渲染网页，该引擎会把一些特殊的 markdown 符号转换为相应的 html 标签，比如在 markdown 语法中，下划线<code>_</code>代表斜体，会被渲染引擎处理为<code>&lt;em&gt;</code>标签。</p><p>因为类 Latex 格式书写的数学公式下划线<code>_</code>表示下标，有特殊的含义，如果被强制转换为<code>&lt;em&gt;</code>标签，那么 MathJax 引擎在渲染数学公式的时候就会出错。</p><p>类似的语义冲突的符号还包括<code>*</code>, <code>{</code>, <code>}</code>, <code>\\</code>等。</p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>更换 Hexo 的 markdown 渲染引擎，hexo-renderer-kramed 引擎是在默认的渲染引擎 hexo-renderer-marked 的基础上修改了一些 bug ，两者比较接近，也比较轻量级。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm uninstall hexo-renderer-marked --save</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-renderer-kramed --save</span></span><br></pre></td></tr></table></figure><p>执行上面的命令即可，先卸载原来的渲染引擎，再安装新的。<br>然后，跟换引擎后行间公式可以正确渲染了，但是这样还没有完全解决问题，行内公式的渲染还是有问题，因为 hexo-renderer-kramed 引擎也有语义冲突的问题。接下来到博客根目录下，找到<code>node_modules\kramed\lib\rules\inline.js</code>，把第11行的 escape 变量的值做相应的修改：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//escape: /^\\([\\`*&#123;&#125;\[\]()#$+\-.!_&gt;])/,</span></span><br><span class="line"><span class="built_in">escape</span>: <span class="regexp">/^\\([`*\[\]()#$+\-.!_&gt;])/</span>,</span><br></pre></td></tr></table></figure><p>这一步是在原基础上取消了对\,{,}的转义(escape)。<br>同时把第20行的em变量也要做相应的修改。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span></span><br><span class="line">em: <span class="regexp">/^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</span>,</span><br></pre></td></tr></table></figure><p>重新启动hexo（先clean再generate）,问题完美解决。哦，如果不幸还没解决的话，看看是不是还需要在使用的主题中配置mathjax开关。</p><h4 id="在-Next-主题中开启-MathJax-开关"><a href="#在-Next-主题中开启-MathJax-开关" class="headerlink" title="在 Next 主题中开启 MathJax 开关"></a>在 Next 主题中开启 MathJax 开关</h4><p>如何使用了主题了，别忘了在主题（Theme）中开启 MathJax 开关，下面以 next 主题为例，介绍下如何打开 MathJax 开关。</p><p>进入到主题目录，找到 _config.yml 配置问题，把 math 默认的 false 修改为true</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="comment"># enable: false</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Default(true) will load mathjax/katex script on demand</span></span><br><span class="line">  <span class="comment"># That is it only render those page who has `mathjax: true` in Front Matter.</span></span><br><span class="line">  <span class="comment"># If you set it to false, it will load mathjax/katex srcipt EVERY PAGE.</span></span><br><span class="line"><span class="attr">  per_page:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  engine:</span> <span class="string">mathjax</span></span><br><span class="line">  <span class="comment">#engine: katex</span></span><br><span class="line">  <span class="comment"># hexo-rendering-pandoc (or hexo-renderer-kramed) needed to full MathJax support.</span></span><br><span class="line"><span class="attr">  mathjax:</span></span><br><span class="line">    <span class="comment"># Use 2.7.1 as default, jsdelivr as default CDN, works everywhere even in China</span></span><br><span class="line"><span class="attr">    cdn:</span> <span class="string">//cdn.jsdelivr.net/npm/mathjax@2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML</span></span><br></pre></td></tr></table></figure><p>还需要在post的Front-matter里打开mathjax开关</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">updated: &#123;&#123; date &#125;&#125;</span><br><span class="line">copyright: true</span><br><span class="line">comments: true</span><br><span class="line">mathjax: false</span><br><span class="line">tags: </span><br><span class="line"><span class="bullet">- </span></span><br><span class="line">categories: </span><br><span class="line"><span class="bullet">- </span>Uncategoried</span><br><span class="line">image: </span><br><span class="line">sticky: </span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>需要渲染LaTeX公式的再选择开启。</p><h3 id="Markdown写作注意事项"><a href="#Markdown写作注意事项" class="headerlink" title="Markdown写作注意事项"></a>Markdown写作注意事项</h3><ul><li><p>引用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span>引用内容<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line"></span><br><span class="line">/* 如果上下间距很小，可以像下面这样写 */</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span>引用内容<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>居中和右对齐</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/* 居中 */</span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"></span><br><span class="line">/* 右对齐 */</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"text-align:right"</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>字体大小和颜色</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"#xxxxxx"</span> <span class="attr">size</span>=<span class="string">"number"</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">/* 详细请查看 http://www.w3school.com.cn/tags/tag_font.asp */</span><br></pre></td></tr></table></figure></li><li><p>Todo list</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-check-square"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 已完成<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-square"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 未完成<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="主题自带样式-note-标签"><a href="#主题自带样式-note-标签" class="headerlink" title="主题自带样式 note 标签"></a>主题自带样式 note 标签</h3><p>在主题配置文件<code>_config.yml</code>里有一个关于这个的配置，但官方文档没有提供 HTML 的使用方式，个人认为这种方式更简单，也不会产生一些奇怪的显示 bugs……</p><p><div class="note default"><p>default</p></div><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note default&quot;&gt;&lt;p&gt;default&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p><div class="note primary"><p>primary</p></div><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note primary&quot;&gt;&lt;p&gt;primary&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p><div class="note success"><p>success</p></div><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note success&quot;&gt;&lt;p&gt;success&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p><div class="note info"><p>info</p></div><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;info&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p><div class="note warning"><p>warning</p></div><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note warning&quot;&gt;&lt;p&gt;warning&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p><div class="note danger"><p>danger</p></div><br><div class="note danger">            <p>note danger, note danger, note danger<br>note danger, note danger, note danger<br>note danger, note danger, note danger</p>          </div></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note danger&quot;&gt;&lt;p&gt;danger&lt;/p&gt;&lt;/div&gt;</span><br><span class="line">// 或者这样</span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">note danger, note danger, note danger</span><br><span class="line">note danger, note danger, note danger</span><br><span class="line">note danger, note danger, note danger</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p><div class="note danger no-icon"><p>danger no-icon</p></div><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note danger no-icon&quot;&gt;&lt;p&gt;danger no-icon&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>首先可以在主题配置文件中需要配置下，贴上我的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">文件位置：~/blog/themes/next/_config.yml# Note tag (bs-callout).</span><br><span class="line">note:</span><br><span class="line">  # 风格</span><br><span class="line">  style: flat</span><br><span class="line">  # 要不要图标</span><br><span class="line">  icons: true</span><br><span class="line">  # 圆角矩形</span><br><span class="line">  border_radius: 3</span><br><span class="line">  light_bg_offset:</span><br></pre></td></tr></table></figure><p>里面的三种风格长啥样？开启图标长啥样？可以查看<a href="https://github.com/iissnan/hexo-theme-next/pull/1697" target="_blank" rel="noopener">这个页面</a>，更多的介绍也在这个页面。</p><h3 id="主题自带样式-label-标签"><a href="#主题自带样式-label-标签" class="headerlink" title="主题自带样式 label 标签"></a>主题自带样式 label 标签</h3><p>首先可以在主题配置文件中有配置，需要配置下，贴上我的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">文件位置：~/blog/themes/next/_config.yml# Label tag.</span><br><span class="line">label: true</span><br></pre></td></tr></table></figure><p>然后效果如下（@ 前面的是<code>label</code>的名字，后面的是要显示的文字）：</p><span class="label default">default</span><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label default@default %&#125;</span><br></pre></td></tr></table></figure><span class="label primary">primary</span><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label primary@primary %&#125;</span><br></pre></td></tr></table></figure><span class="label success">success</span><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label success@success %&#125;</span><br></pre></td></tr></table></figure><span class="label info">info</span><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label info@info %&#125;</span><br></pre></td></tr></table></figure><span class="label warning">warning</span><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label warning@warning %&#125;</span><br></pre></td></tr></table></figure><span class="label danger">danger</span><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label danger@danger %&#125;</span><br></pre></td></tr></table></figure><div class="note warning">            <p>目前博主发现个 bug，如果把它加在一段文字的段首，则会有点问题，见<a href="https://github.com/iissnan/hexo-theme-next/issues/2022" target="_blank" rel="noopener">issue</a> 。</p>          </div><h2 id="BUGs"><a href="#BUGs" class="headerlink" title="BUGs"></a>BUGs</h2><ol><li><p>Hexo解析问题</p><blockquote><p>例如：文章中代码块外出现<code>}}</code>时，Hexo 解析就会出现问题</p></blockquote><p><strong>解决办法：</strong></p><ul><li><p>One </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line"> 含有双大括号的内容</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure></li><li><p>The Other</p><blockquote><p>避免这种问题</p></blockquote></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hexo-Note&quot;&gt;&lt;a href=&quot;#Hexo-Note&quot; class=&quot;headerlink&quot; title=&quot;Hexo Note&quot;&gt;&lt;/a&gt;Hexo Note&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="Blog" scheme="https://jacksonleon.gitee.io/categories/Blog/"/>
    
      <category term="Hexo" scheme="https://jacksonleon.gitee.io/categories/Blog/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://jacksonleon.gitee.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>「Leetcode」461. Hamming Distance</title>
    <link href="https://jacksonleon.gitee.io/posts/1065998898.html"/>
    <id>https://jacksonleon.gitee.io/posts/1065998898.html</id>
    <published>2018-03-25T04:19:52.000Z</published>
    <updated>2018-12-28T07:47:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="461-Hamming-Distance"><a href="#461-Hamming-Distance" class="headerlink" title="461. Hamming Distance"></a>461. Hamming Distance</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>The Hamming distance between two integers is the number of positions at which the corresponding bits are different.Given two integers x and y, calculate the Hamming distance.</p></blockquote><a id="more"></a><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Input: x = 1, y = 4</span><br><span class="line"></span><br><span class="line">Output: 2</span><br><span class="line"></span><br><span class="line">Explanation:</span><br><span class="line">1   (0 0 0 1)</span><br><span class="line">4   (0 1 0 0)</span><br><span class="line">       ↑   ↑</span><br><span class="line"></span><br><span class="line">The above arrows point to positions where the corresponding bits are different.</span><br></pre></td></tr></table></figure><h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><blockquote><p>0 ≤ x , y &lt; 2^31</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">hammingDistance</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> dist=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> tmp=x^y;</span><br><span class="line">        <span class="keyword">while</span>(tmp)</span><br><span class="line">        &#123;</span><br><span class="line">            dist++;</span><br><span class="line">            tmp&amp;=tmp<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dist;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></blockquote><h3 id="Hints"><a href="#Hints" class="headerlink" title="Hints"></a>Hints</h3><blockquote><p>汉明距离是使用在数据传输差错控制编码里面的，汉明距离是一个概念，它表示两个（相同长度）字对应位不同的数量，我们以d（x,y）表示两个字x,y之间的汉明距离。对两个字符串进行异或运算，并统计结果为1的个数，那么这个数就是汉明距离。 </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">利用按位异或运算符^将不同bit位置为1，再逐次消除最低位非0 bit位得到Hamming Distance.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode-Note&quot;&gt;&lt;a href=&quot;#LeetCode-Note&quot; class=&quot;headerlink&quot; title=&quot;LeetCode Note&quot;&gt;&lt;/a&gt;LeetCode Note&lt;/h1&gt;&lt;p&gt;Sorted by Acceptance&lt;/p&gt;
&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;461-Hamming-Distance&quot;&gt;&lt;a href=&quot;#461-Hamming-Distance&quot; class=&quot;headerlink&quot; title=&quot;461. Hamming Distance&quot;&gt;&lt;/a&gt;461. Hamming Distance&lt;/h2&gt;&lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;The Hamming distance between two integers is the number of positions at which the corresponding bits are different.Given two integers x and y, calculate the Hamming distance.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/categories/LeetCode/"/>
    
      <category term="Bit Manipulation" scheme="https://jacksonleon.gitee.io/categories/LeetCode/Bit-Manipulation/"/>
    
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/tags/LeetCode/"/>
    
      <category term="Hamming-Distance" scheme="https://jacksonleon.gitee.io/tags/Hamming-Distance/"/>
    
  </entry>
  
  <entry>
    <title>「Leetcode」654. Maximum Binary Tree</title>
    <link href="https://jacksonleon.gitee.io/posts/2948637492.html"/>
    <id>https://jacksonleon.gitee.io/posts/2948637492.html</id>
    <published>2018-03-24T15:35:37.000Z</published>
    <updated>2018-12-28T07:47:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="654-Maximum-Binary-Tree"><a href="#654-Maximum-Binary-Tree" class="headerlink" title="654. Maximum Binary Tree"></a>654. Maximum Binary Tree</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Given an integer array with no duplicates. A maximum tree building on this array is defined as follow: The root is the maximum number in the array. The left subtree is the maximum tree constructed from left part subarray divided by the maximum number. The right subtree is the maximum tree constructed from right part subarray divided by the maximum number. Construct the maximum tree by the given array and output the root node of this tree.</p></blockquote><a id="more"></a><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Input: [3,2,1,6,0,5]</span><br><span class="line">Output: return the tree root node representing the following tree:</span><br><span class="line"></span><br><span class="line">      6</span><br><span class="line">    /   \</span><br><span class="line">   3     5</span><br><span class="line">    \   / </span><br><span class="line">     2 0   </span><br><span class="line">      \</span><br><span class="line">       1</span><br></pre></td></tr></table></figure><h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><ul><li>The size of the given array will be in the range [1,1000].</li></ul><h3 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h3><h4 id="C-from-Discuss-C-O-N-solution"><a href="#C-from-Discuss-C-O-N-solution" class="headerlink" title="C++ from Discuss : C++ O(N) solution"></a>C++ from Discuss : <a href="https://leetcode.com/problems/maximum-binary-tree/discuss/106146/" target="_blank" rel="noopener">C++ O(N) solution</a></h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * struct TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode *left;</span></span><br><span class="line"><span class="comment"> *     TreeNode *right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">constructMaximumBinaryTree</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;TreeNode*&gt; mbt;  <span class="comment">//堆栈存储数组</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.size();i++)  <span class="comment">//从左到右扫描数组</span></span><br><span class="line">        &#123;</span><br><span class="line">            TreeNode* cur=<span class="keyword">new</span> TreeNode(nums[i]);    <span class="comment">//当前数初始化树节点</span></span><br><span class="line">            <span class="keyword">while</span>(!mbt.empty()&amp;&amp;mbt.back()-&gt;val&lt;nums[i])</span><br><span class="line">            &#123;   <span class="comment">/*当堆栈不空且新数比堆栈中最后的数字小时，</span></span><br><span class="line"><span class="comment">                当前节点作为父节点，先前的作为左子树</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                cur-&gt;left=mbt.back();</span><br><span class="line">                mbt.pop_back();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!mbt.empty())    <span class="comment">//正常情况新节点直接作为右子树</span></span><br><span class="line">                mbt.back()-&gt;right=cur;</span><br><span class="line">            mbt.push_back(cur);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mbt.front(); <span class="comment">//返回头节点</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="Hints"><a href="#Hints" class="headerlink" title="Hints"></a>Hints</h4><ul><li>从左向右直接扫描数组</li><li>遇到比上一节点的val值小的直接作为右子树的头节点</li><li>所以比较适合使用堆栈来存储数组</li><li>当遇到比堆栈back()大的，作为其父节点</li><li>过几天再重新写试试看能不能写出来</li><li>就这样</li></ul><h4 id="Python-递归"><a href="#Python-递归" class="headerlink" title="Python 递归"></a>Python 递归</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">constructMaximumBinaryTree</span><span class="params">(self, nums)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :rtype: TreeNode</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> nums:</span><br><span class="line">            pos=nums.index(max(nums))</span><br><span class="line">            root=TreeNode(nums[pos])</span><br><span class="line">            root.left=self.constructMaximumBinaryTree(nums[:pos])</span><br><span class="line">            root.right=self.constructMaximumBinaryTree(nums[pos+<span class="number">1</span>:])</span><br><span class="line">            <span class="keyword">return</span> root</span><br></pre></td></tr></table></figure><h4 id="Hints-1"><a href="#Hints-1" class="headerlink" title="Hints"></a>Hints</h4><ul><li>先找到最大的数赋值给root节点</li><li>接着递归将左边数组返回左子树的头节点</li><li>相同地对右子树进行操作</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode-Note&quot;&gt;&lt;a href=&quot;#LeetCode-Note&quot; class=&quot;headerlink&quot; title=&quot;LeetCode Note&quot;&gt;&lt;/a&gt;LeetCode Note&lt;/h1&gt;&lt;p&gt;Sorted by Acceptance&lt;/p&gt;
&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;654-Maximum-Binary-Tree&quot;&gt;&lt;a href=&quot;#654-Maximum-Binary-Tree&quot; class=&quot;headerlink&quot; title=&quot;654. Maximum Binary Tree&quot;&gt;&lt;/a&gt;654. Maximum Binary Tree&lt;/h2&gt;&lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Given an integer array with no duplicates. A maximum tree building on this array is defined as follow: The root is the maximum number in the array. The left subtree is the maximum tree constructed from left part subarray divided by the maximum number. The right subtree is the maximum tree constructed from right part subarray divided by the maximum number. Construct the maximum tree by the given array and output the root node of this tree.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/categories/LeetCode/"/>
    
      <category term="Tree" scheme="https://jacksonleon.gitee.io/categories/LeetCode/Tree/"/>
    
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/tags/LeetCode/"/>
    
      <category term="Tree" scheme="https://jacksonleon.gitee.io/tags/Tree/"/>
    
  </entry>
  
  <entry>
    <title>Blog with Hexo</title>
    <link href="https://jacksonleon.gitee.io/posts/3307335557.html"/>
    <id>https://jacksonleon.gitee.io/posts/3307335557.html</id>
    <published>2018-03-22T11:05:00.000Z</published>
    <updated>2018-03-22T11:05:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo建站备忘录"><a href="#Hexo建站备忘录" class="headerlink" title="Hexo建站备忘录"></a>Hexo建站备忘录</h1><p>使用Hexo与Github Pages服务一同搭建个人博客</p><a id="more"></a><h2 id="添加功能"><a href="#添加功能" class="headerlink" title="添加功能"></a>添加功能</h2><ul><li><p>添加permanant link</p></li><li><p>添加置顶</p><p>在<code>node_modules/hexo-generate-index-pin-top/lib/generate.js</code>中替换<code>top</code>为<code>sticky</code>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">var</span> pagination = <span class="built_in">require</span>(<span class="string">'hexo-pagination'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">locals</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = <span class="keyword">this</span>.config;</span><br><span class="line">  <span class="keyword">var</span> posts = locals.posts;</span><br><span class="line">    posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a.sticky &amp;&amp; b.sticky) &#123; <span class="comment">// 两篇文章sticky都有定义</span></span><br><span class="line">            <span class="keyword">if</span>(a.sticky == b.sticky) <span class="keyword">return</span> b.date - a.date; <span class="comment">// 若sticky值一样则按照文章日期降序排</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> b.sticky - a.sticky; <span class="comment">// 否则按照sticky值降序排</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a.sticky &amp;&amp; !b.sticky) &#123; <span class="comment">// 以下是只有一篇文章sticky有定义，那么将有sticky的排在前面（这里用异或操作居然不行233）</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!a.sticky &amp;&amp; b.sticky) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="keyword">var</span> paginationDir = config.pagination_dir || <span class="string">'page'</span>;</span><br><span class="line">  <span class="keyword">return</span> pagination(<span class="string">''</span>, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [<span class="string">'index'</span>, <span class="string">'archive'</span>],</span><br><span class="line">    format: paginationDir + <span class="string">'/%d/'</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>字数统计</p></li><li><p>……</p></li></ul><p>安装依赖就可以完成（不敢保证）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"hexo-site"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.0.0"</span>,</span><br><span class="line">  <span class="attr">"private"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"hexo"</span>: &#123;</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"3.8.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"hexo"</span>: <span class="string">"^3.8.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-abbrlink"</span>: <span class="string">"^2.0.5"</span>,</span><br><span class="line">    <span class="attr">"hexo-deployer-git"</span>: <span class="string">"^0.3.1"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-archive"</span>: <span class="string">"^0.1.4"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-category"</span>: <span class="string">"^0.1.3"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-feed"</span>: <span class="string">"^1.2.2"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-index-pin-top"</span>: <span class="string">"^0.2.2"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-search"</span>: <span class="string">"^2.2.5"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-searchdb"</span>: <span class="string">"^1.0.8"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-tag"</span>: <span class="string">"^0.2.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-renderer-ejs"</span>: <span class="string">"^0.3.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-renderer-kramed"</span>: <span class="string">"^0.1.4"</span>,</span><br><span class="line">    <span class="attr">"hexo-renderer-stylus"</span>: <span class="string">"^0.3.1"</span>,</span><br><span class="line">    <span class="attr">"hexo-server"</span>: <span class="string">"^0.2.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-symbols-count-time"</span>: <span class="string">"^0.4.4"</span>,</span><br><span class="line">    <span class="attr">"hexo-wordcount"</span>: <span class="string">"^3.0.2"</span>,</span><br><span class="line">    <span class="attr">"tree"</span>: <span class="string">"^0.1.3"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置Hexo"><a href="#配置Hexo" class="headerlink" title="配置Hexo"></a>配置Hexo</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>要使用Hexo， 需要系统支持Node.js以及Git，根据不同系统进行安装。</p><ul><li>Node.js </li><li>Git</li></ul><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g<span class="comment"># 安装hexo</span></span><br><span class="line">$ hexo init blog</span><br><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ sudo npm install   <span class="comment"># 安装依赖组件</span></span><br><span class="line">$ hexo g    <span class="comment"># hexo generate</span></span><br><span class="line">$ hexo s    <span class="comment"># hexo server 本地查看</span></span><br></pre></td></tr></table></figure><ul><li><p>其他命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new post <span class="string">"post-name"</span> <span class="comment"># 默认为post</span></span><br><span class="line">$ hexo new page <span class="string">"page-name"</span> <span class="comment"># 新建页面</span></span><br></pre></td></tr></table></figure></li><li><p>简写</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g == hexo generate</span><br><span class="line">$ hexo s == hexo server</span><br><span class="line">$ hexo n == hexo new</span><br><span class="line">$ hexo d == hexo deploy</span><br></pre></td></tr></table></figure></li><li><p>本地环境查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure></li><li><p>我的本地环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">hexo: 3.6.0</span><br><span class="line">hexo-cli: 1.1.0</span><br><span class="line">os: Windows_NT 10.0.16299 win32 x64</span><br><span class="line">http_parser: 2.7.0</span><br><span class="line">node: 9.8.0</span><br><span class="line">v8: 6.2.414.46-node.21</span><br><span class="line">uv: 1.19.2</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">ares: 1.13.0</span><br><span class="line">modules: 59</span><br><span class="line">nghttp2: 1.29.0</span><br><span class="line">napi: 2</span><br><span class="line">openssl: 1.0.2n</span><br><span class="line">icu: 60.2</span><br><span class="line">unicode: 10.0</span><br><span class="line">cldr: 32.0.1</span><br><span class="line">tz: 2017c</span><br></pre></td></tr></table></figure></li></ul><h4 id="Hexo-主题"><a href="#Hexo-主题" class="headerlink" title="Hexo 主题"></a>Hexo 主题</h4><ul><li><p>安装主题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next.git themes/next</span><br><span class="line"><span class="comment"># 这种方案下，会出现仓库上传到Git后，本文件夹会变成@，不会显示具体内容的情况</span></span><br></pre></td></tr></table></figure></li><li><p>更新主题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes/next</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure></li><li><p>启用主题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure></li></ul><h2 id="Github-Pages"><a href="#Github-Pages" class="headerlink" title="Github Pages"></a>Github Pages</h2><p>GitHub Pages 主要用于管理自己的网站，不过，由于空间免费稳定，比较适合用来做搭建一个个人博客。</p><ul><li><p>创建自己的Github账号</p></li><li><p>创建repository<br>创建一个公共仓库用来存放网站静态内容，不过仓库名字必须是username/username.github.io，这是Github特殊的命名约定，你可以通过 <a href="https://username.github.io" target="_blank" rel="noopener">https://username.github.io</a> 来访问自己的博客。</p></li></ul><h4 id="使用Hexo-deploy部署"><a href="#使用Hexo-deploy部署" class="headerlink" title="使用Hexo deploy部署"></a>使用Hexo deploy部署</h4><ul><li>部署到Github<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">github:</span> <span class="string">git@github.com:username/username.github.io.git,master</span></span><br></pre></td></tr></table></figure></li></ul><p>注意空格</p><ul><li><p>安装扩展</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d    <span class="comment"># hexo deploy</span></span><br></pre></td></tr></table></figure></li><li><p>Github Repository</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/username/username.github.io.git .deploy/username.github.io</span><br></pre></td></tr></table></figure><p>将之前创建的空repo clone到本地，每次hexo d生成的public文件夹下内容复制到刚刚的文件夹下，再push到master brunch下，就可以更新github端的内容，为此我们创建一个sh脚本文件<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">cp -R public/* .deploy/JacksonLeon</span><br><span class="line"><span class="built_in">cd</span> .deploy/JacksonLeon</span><br><span class="line">git fetch origin</span><br><span class="line">git add .</span><br><span class="line">DATE=<span class="string">"<span class="variable">$(echo $(date --rfc-2822)</span>)"</span></span><br><span class="line">git commit -m <span class="string">"Auto builder by JacksonLeon CI: <span class="variable">$DATE</span>"</span></span><br><span class="line">git merge origin/master</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure></p><p>每次添加完文章后直接运行脚本就可以了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> */hexo/blog</span><br><span class="line">$ ./deploy.sh</span><br></pre></td></tr></table></figure></p><h2 id="Coding-pages"><a href="#Coding-pages" class="headerlink" title="Coding pages"></a><del>Coding pages</del></h2><p><del>由于国内访问Github速度比较慢，所以我们还可以使用 coding.net 的pages服务，大部分与Github pages设置相同，要注意的是，仓库名必须为用户名，不然会出现css解析错误以及404的现象。</del></p><p>改用Gitee，不过有个缺点，Gitee需要手动部署最新提交，自动部署属于VIP功能……还是以Github为主吧</p><ul><li><p>_config.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> </span><br><span class="line"><span class="attr">    github:</span> <span class="string">git@github.com:username/username.github.io.git,master</span></span><br><span class="line"><span class="attr">    coding:</span> <span class="string">git@git.coding.net:username/username.git,master</span></span><br></pre></td></tr></table></figure></li><li><p>.deploy.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">cp -R public/* .deploy/JacksonLeon</span><br><span class="line"><span class="built_in">cd</span> .deploy/JacksonLeon</span><br><span class="line">git fetch origin</span><br><span class="line">git add .</span><br><span class="line">DATE=<span class="string">"<span class="variable">$(echo $(date --rfc-2822)</span>)"</span></span><br><span class="line">git commit -m <span class="string">"Auto builder by JacksonLeon CI: <span class="variable">$DATE</span>"</span></span><br><span class="line">git merge origin/master</span><br><span class="line">git push origin master</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">cp -R public/* .deploy/JacksonLeon.github.io</span><br><span class="line"><span class="built_in">cd</span> .deploy/JacksonLeon.github.io</span><br><span class="line">git fetch origin</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"Auto builder by JacksonLeon CI: <span class="variable">$DATE</span>"</span></span><br><span class="line">git merge origin/master</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure></li></ul><h2 id="欢迎大家访问"><a href="#欢迎大家访问" class="headerlink" title="欢迎大家访问"></a>欢迎大家访问</h2><ul><li><p><a href="https://jacksonleon.github.io/" target="_blank" rel="noopener">Blog on Github Pages</a></p></li><li><p><del><a href="https://jacksonleon.coding.me/JacksonLeon/" target="_blank" rel="noopener">Blog on Coding Pages</a></del></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hexo建站备忘录&quot;&gt;&lt;a href=&quot;#Hexo建站备忘录&quot; class=&quot;headerlink&quot; title=&quot;Hexo建站备忘录&quot;&gt;&lt;/a&gt;Hexo建站备忘录&lt;/h1&gt;&lt;p&gt;使用Hexo与Github Pages服务一同搭建个人博客&lt;/p&gt;
    
    </summary>
    
      <category term="Blog" scheme="https://jacksonleon.gitee.io/categories/Blog/"/>
    
    
      <category term="Blog" scheme="https://jacksonleon.gitee.io/tags/Blog/"/>
    
      <category term="Hexo" scheme="https://jacksonleon.gitee.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>「Leetcode」771. Jewels and Stones</title>
    <link href="https://jacksonleon.gitee.io/posts/4173599199.html"/>
    <id>https://jacksonleon.gitee.io/posts/4173599199.html</id>
    <published>2018-03-22T07:11:00.000Z</published>
    <updated>2018-12-28T07:48:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="771-Jewels-and-Stones"><a href="#771-Jewels-and-Stones" class="headerlink" title="771. Jewels and Stones"></a>771. Jewels and Stones</h2><h3 id="Desciption"><a href="#Desciption" class="headerlink" title="Desciption"></a>Desciption</h3><blockquote><p>You’re given strings J representing the types of stones that are jewels, and S representing the stones you have.  Each character in S is a type of stone you have.  You want to know how many of the stones you have are also jewels. The letters in J are guaranteed distinct, and all characters in J and S are letters. Letters are case sensitive, so “a” is considered a different type of stone from “A”.</p></blockquote><a id="more"></a><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><ul><li><p>Example 1</p><figure class="highlight m"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: J <span class="built_in">=</span> <span class="string">"aA"</span>, S <span class="built_in">=</span> <span class="string">"aAAbbbb"</span></span><br><span class="line">Output: <span class="number">3</span></span><br></pre></td></tr></table></figure></li><li><p>Example 2</p><figure class="highlight m"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: J <span class="built_in">=</span> <span class="string">"z"</span>, S <span class="built_in">=</span> <span class="string">"ZZ"</span></span><br><span class="line">Output: <span class="number">0</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><ul><li>S and J  wil consist of letters and have length at most 500</li><li>The charactors in J are distinct</li></ul><h3 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h3><h4 id="first-try"><a href="#first-try" class="headerlink" title="first try"></a>first try</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">numJewelsInStones</span><span class="params">(<span class="built_in">string</span> J, <span class="built_in">string</span> S)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> c=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;J.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;S.size();j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(J[i]==S[j])</span><br><span class="line">                &#123;</span><br><span class="line">                    c++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="Solutions-in-Discuss"><a href="#Solutions-in-Discuss" class="headerlink" title="Solutions in Discuss"></a>Solutions in Discuss</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">numJewelsInStones</span><span class="params">(<span class="built_in">string</span> J, <span class="built_in">string</span> S)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> c=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">set</span>&lt;<span class="keyword">char</span>&gt; setj(J.begin(),J.end());</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> s:S)<span class="keyword">if</span>(setj.count(s))c++;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>Java Solution</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">numJewelsInStones</span><span class="params">(String J, String S)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> c=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;S.length();i++)</span><br><span class="line">            <span class="keyword">if</span>(J.indexOf(S.charAt(i))&gt;-<span class="number">1</span>)</span><br><span class="line">                c++;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode-Note&quot;&gt;&lt;a href=&quot;#LeetCode-Note&quot; class=&quot;headerlink&quot; title=&quot;LeetCode Note&quot;&gt;&lt;/a&gt;LeetCode Note&lt;/h1&gt;&lt;p&gt;Sorted by Acceptance&lt;/p&gt;
&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;771-Jewels-and-Stones&quot;&gt;&lt;a href=&quot;#771-Jewels-and-Stones&quot; class=&quot;headerlink&quot; title=&quot;771. Jewels and Stones&quot;&gt;&lt;/a&gt;771. Jewels and Stones&lt;/h2&gt;&lt;h3 id=&quot;Desciption&quot;&gt;&lt;a href=&quot;#Desciption&quot; class=&quot;headerlink&quot; title=&quot;Desciption&quot;&gt;&lt;/a&gt;Desciption&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;You’re given strings J representing the types of stones that are jewels, and S representing the stones you have.  Each character in S is a type of stone you have.  You want to know how many of the stones you have are also jewels. The letters in J are guaranteed distinct, and all characters in J and S are letters. Letters are case sensitive, so “a” is considered a different type of stone from “A”.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/categories/LeetCode/"/>
    
      <category term="Hash Table" scheme="https://jacksonleon.gitee.io/categories/LeetCode/Hash-Table/"/>
    
    
      <category term="LeetCode" scheme="https://jacksonleon.gitee.io/tags/LeetCode/"/>
    
      <category term="String" scheme="https://jacksonleon.gitee.io/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown 语法</title>
    <link href="https://jacksonleon.gitee.io/posts/4269544267.html"/>
    <id>https://jacksonleon.gitee.io/posts/4269544267.html</id>
    <published>2018-03-22T07:01:45.000Z</published>
    <updated>2018-03-22T07:01:45.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>NOTE:</strong> This is Simplelified Chinese Edition Document of Markdown Syntax. If you are seeking for English Edition Document. Please refer to <a href="http://daringfireball.net/projects/markdown/syntax" target="_blank" rel="noopener">Markdown: Syntax</a>.</p><p><strong>声明：</strong> 这份文档派生(fork)于<a href="http://markdown.tw/" target="_blank" rel="noopener">繁体中文版</a>，在此基础上进行了繁体转简体工作，并进行了适当的润色。此文档用 Markdown 语法编写，你可以到这里<a href="http://gitcafe.com/riku/Markdown-Syntax-CN/blob/master/syntax.md" target="_blank" rel="noopener">查看它的源文件</a>。「繁体中文版的原始文件可以<a href="https://github.com/othree/markdown-syntax-zhtw/blob/master/syntax.md" target="_blank" rel="noopener">查看这里</a> 。」—By @<a href="http://twitter.com/riku" target="_blank" rel="noopener">riku</a> / 本项目托管于 <a href="http://gitcafe.com/riku/Markdown-Syntax-CN" target="_blank" rel="noopener">GitCafe</a></p><p><strong>注：</strong> 本项目同时也托管于 <a href="https://github.com/riku/Markdown-Syntax-CN" target="_blank" rel="noopener">Github</a> 上，请通过 fork＋pull request 方式来帮忙改进本项目。</p><h1 id="Markdown-语法说明-简体中文版"><a href="#Markdown-语法说明-简体中文版" class="headerlink" title="Markdown 语法说明 (简体中文版)"></a>Markdown 语法说明 (简体中文版)</h1><hr><a id="more"></a><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="宗旨"><a href="#宗旨" class="headerlink" title="宗旨"></a>宗旨</h3><p>Markdown 的目标是实现「易读易写」。</p><p>可读性，无论如何，都是最重要的。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括 <a href="http://docutils.sourceforge.net/mirror/setext.html" target="_blank" rel="noopener">Setext</a>、<a href="http://www.aaronsw.com/2002/atx/" target="_blank" rel="noopener">atx</a>、<a href="http://textism.com/tools/textile/" target="_blank" rel="noopener">Textile</a>、<a href="http://docutils.sourceforge.net/rst.html" target="_blank" rel="noopener">reStructuredText</a>、<a href="http://www.triptico.com/software/grutatxt.html" target="_blank" rel="noopener">Grutatext</a> 和 <a href="http://ettext.taint.org/doc/" target="_blank" rel="noopener">EtText</a>，而最大灵感来源其实是纯文本电子邮件的格式。</p><p>总之， Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像<em> 强调 </em>。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。</p><h3 id="兼容-HTML"><a href="#兼容-HTML" class="headerlink" title="兼容 HTML"></a>兼容 HTML</h3><p>Markdown 语法的目标是：成为一种适用于网络的<em>书写</em>语言。</p><p>Markdown 不是想要取代 HTML，甚至也没有要和它相近，它的语法种类很少，只对应 HTML 标记的一小部分。Markdown 的构想<em>不是</em>要使得 HTML 文档更容易书写。在我看来， HTML 已经很容易写了。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种<em>发布</em>的格式，Markdown 是一种<em>书写</em>的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。</p><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。</p><p>要制约的只有一些 HTML 区块元素――比如 <code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>、<code>&lt;p&gt;</code> 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符或空格来缩进。Markdown 的生成器有足够智能，不会在 HTML 区块标签外加上不必要的 <code>&lt;p&gt;</code> 标签。</p><p>例子如下，在 Markdown 文件里加上一段 HTML 表格：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">这是一个普通段落。</span><br><span class="line"></span><br><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;Foo&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line"></span><br><span class="line">这是另一个普通段落。</span><br></pre></td></tr></table></figure><p>请注意，在 HTML 区块标签间的 Markdown 格式语法将不会被处理。比如，你在 HTML 区块内使用 Markdown 样式的<code>*强调*</code>会没有效果。</p><p>HTML 的区段（行内）标签如 <code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code> 可以在 Markdown 的段落、列表或是标题里随意使用。依照个人习惯，甚至可以不用 Markdown 格式，而直接采用 HTML 标签来格式化。举例说明：如果比较喜欢 HTML 的 <code>&lt;a&gt;</code> 或 <code>&lt;img&gt;</code> 标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图像标签语法。</p><p>和处在 HTML 区块标签间不同，Markdown 语法在 HTML 区段标签间是有效的。</p><h3 id="特殊字符自动转换"><a href="#特殊字符自动转换" class="headerlink" title="特殊字符自动转换"></a>特殊字符自动转换</h3><p>在 HTML 文件中，有两个字符需要特殊处理： <code>&lt;</code> 和 <code>&amp;</code> 。 <code>&lt;</code> 符号用于起始标签，<code>&amp;</code> 符号则用于标记 HTML 实体，如果你只是想要显示这些字符的原型，你必须要使用实体的形式，像是 <code>&amp;lt;</code> 和 <code>&amp;amp;</code>。</p><p><code>&amp;</code> 字符尤其让网络文档编写者受折磨，如果你要打「<code>AT&amp;T</code>」 ，你必须要写成「<code>AT&amp;amp;T</code>」。而网址中的 <code>&amp;</code> 字符也要转换。比如你要链接到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://images.google.com/images?num=30&amp;q=larry+bird</span><br></pre></td></tr></table></figure><p>你必须要把网址转换写为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://images.google.com/images?num=30&amp;amp;q=larry+bird</span><br></pre></td></tr></table></figure><p>才能放到链接标签的 <code>href</code> 属性里。不用说也知道这很容易忽略，这也可能是 HTML 标准检验所检查到的错误中，数量最多的。</p><p>Markdown 让你可以自然地书写字符，需要转换的由它来处理好了。如果你使用的 <code>&amp;</code> 字符是 HTML 字符实体的一部分，它会保留原状，否则它会被转换成 <code>&amp;amp</code>;。</p><p>所以你如果要在文档中插入一个版权符号 <code>©</code>，你可以这样写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;copy;</span><br></pre></td></tr></table></figure><p>Markdown 会保留它不动。而若你写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AT&amp;T</span><br></pre></td></tr></table></figure><p>Markdown 就会将它转为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AT&amp;amp;T</span><br></pre></td></tr></table></figure><p>类似的状况也会发生在 <code>&lt;</code> 符号上，因为 Markdown 允许 <a href="#html">兼容 HTML</a> ，如果你是把 <code>&lt;</code> 符号作为 HTML 标签的定界符使用，那 Markdown 也不会对它做任何转换，但是如果你写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 &lt; 5</span><br></pre></td></tr></table></figure><p>Markdown 将会把它转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 &amp;lt; 5</span><br></pre></td></tr></table></figure><p>不过需要注意的是，code 范围内，不论是行内还是区块， <code>&lt;</code> 和 <code>&amp;</code> 两个符号都<em>一定</em>会被转换成 HTML 实体，这项特性让你可以很容易地用 Markdown 写 HTML code （和 HTML 相对而言， HTML 语法中，你要把所有的 <code>&lt;</code> 和 <code>&amp;</code> 都转换为 HTML 实体，才能在 HTML 文件里面写出 HTML code。）</p><hr><h2 id="区块元素"><a href="#区块元素" class="headerlink" title="区块元素"></a>区块元素</h2><h3 id="段落和换行"><a href="#段落和换行" class="headerlink" title="段落和换行"></a>段落和换行</h3><p>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。</p><p>「由一个或多个连续的文本行组成」这句话其实暗示了 Markdown 允许段落内的强迫换行（插入换行符），这个特性和其他大部分的 text-to-HTML 格式不一样（包括 Movable Type 的「Convert Line Breaks」选项），其它的格式会把每个换行符都转成 <code>&lt;br /&gt;</code> 标签。</p><p>如果你<em>确实</em>想要依赖 Markdown 来插入 <code>&lt;br /&gt;</code> 标签的话，在插入处先按入两个以上的空格然后回车。</p><p>的确，需要多费点事（多加空格）来产生 <code>&lt;br /&gt;</code> ，但是简单地「每个换行都转换为 <code>&lt;br /&gt;</code>」的方法在 Markdown 中并不适合， Markdown 中 email 式的 <a href="#blockquote">区块引用</a> 和多段落的 <a href="#list">列表</a> 在使用换行来排版的时候，不但更好用，还更方便阅读。</p><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>Markdown 支持两种标题的语法，类 <a href="http://docutils.sourceforge.net/mirror/setext.html" target="_blank" rel="noopener">Setext</a> 和类 <a href="http://www.aaronsw.com/2002/atx/" target="_blank" rel="noopener">atx</a> 形式。</p><p>类 Setext 形式是用底线的形式，利用 <code>=</code> （最高阶标题）和 <code>-</code> （第二阶标题），例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is an H1</span><br><span class="line">=============</span><br><span class="line"></span><br><span class="line">This is an H2</span><br><span class="line">-------------</span><br></pre></td></tr></table></figure><p>任何数量的 <code>=</code> 和 <code>-</code> 都可以有效果。</p><p>类 Atx 形式则是在行首插入 1 到 6 个 <code>#</code> ，对应到标题 1 到 6 阶，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 这是 H1</span><br><span class="line"></span><br><span class="line">## 这是 H2</span><br><span class="line"></span><br><span class="line">###### 这是 H6</span><br></pre></td></tr></table></figure><p>你可以选择性地「闭合」类 atx 样式的标题，这纯粹只是美观用的，若是觉得这样看起来比较舒适，你就可以在行尾加上 <code>#</code>，而行尾的 <code>#</code> 数量也不用和开头一样（行首的井字符数量决定标题的阶数）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 这是 H1 #</span><br><span class="line"></span><br><span class="line">## 这是 H2 ##</span><br><span class="line"></span><br><span class="line">### 这是 H3 ######</span><br></pre></td></tr></table></figure><h3 id="区块引用-Blockquotes"><a href="#区块引用-Blockquotes" class="headerlink" title="区块引用 Blockquotes"></a>区块引用 Blockquotes</h3><p>Markdown 标记区块引用是使用类似 email 中用 <code>&gt;</code> 的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 <code>&gt;</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,</span><br><span class="line">&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span><br><span class="line">&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">&gt; </span><br><span class="line">&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse</span><br><span class="line">&gt; id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>Markdown 也允许你偷懒只在整个段落的第一行最前面加上 <code>&gt;</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,</span><br><span class="line">consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span><br><span class="line">Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line"></span><br><span class="line">&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse</span><br><span class="line">id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 <code>&gt;</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is the first level of quoting.</span><br><span class="line">&gt;</span><br><span class="line">&gt; &gt; This is nested blockquote.</span><br><span class="line">&gt;</span><br><span class="line">&gt; Back to the first level.</span><br></pre></td></tr></table></figure><p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; ## 这是一个标题。</span><br><span class="line">&gt; </span><br><span class="line">&gt; 1\.   这是第一行列表项。</span><br><span class="line">&gt; 2\.   这是第二行列表项。</span><br><span class="line">&gt; </span><br><span class="line">&gt; 给出一些例子代码：</span><br><span class="line">&gt; </span><br><span class="line">&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);</span><br></pre></td></tr></table></figure><p>任何像样的文本编辑器都能轻松地建立 email 型的引用。例如在 BBEdit 中，你可以选取文字后然后从选单中选择<em>增加引用阶层</em>。</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>Markdown 支持有序列表和无序列表。</p><p>无序列表使用星号、加号或是减号作为列表标记：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*   Red</span><br><span class="line">*   Green</span><br><span class="line">*   Blue</span><br></pre></td></tr></table></figure><p>等同于：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+   Red</span><br><span class="line">+   Green</span><br><span class="line">+   Blue</span><br></pre></td></tr></table></figure><p>也等同于：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-   Red</span><br><span class="line">-   Green</span><br><span class="line">-   Blue</span><br></pre></td></tr></table></figure><p>有序列表则使用数字接着一个英文句点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1\.  Bird</span><br><span class="line">2\.  McHale</span><br><span class="line">3\.  Parish</span><br></pre></td></tr></table></figure><p>很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果，上面的列表所产生的 HTML 标记为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;ol&gt;</span><br><span class="line">&lt;li&gt;Bird&lt;/li&gt;</span><br><span class="line">&lt;li&gt;McHale&lt;/li&gt;</span><br><span class="line">&lt;li&gt;Parish&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br></pre></td></tr></table></figure><p>如果你的列表标记写成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1\.  Bird</span><br><span class="line">1\.  McHale</span><br><span class="line">1\.  Parish</span><br></pre></td></tr></table></figure><p>或甚至是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3\. Bird</span><br><span class="line">1\. McHale</span><br><span class="line">8\. Parish</span><br></pre></td></tr></table></figure><p>你都会得到完全相同的 HTML 输出。重点在于，你可以让 Markdown 文件的列表数字和输出的结果相同，或是你懒一点，你可以完全不用在意数字的正确性。</p><p>如果你使用懒惰的写法，建议第一个项目最好还是从 1. 开始，因为 Markdown 未来可能会支持有序列表的 start 属性。</p><p>列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。</p><p>要让列表看起来更漂亮，你可以把内容用固定的缩进整理好：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</span><br><span class="line">    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,</span><br><span class="line">    viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.</span><br><span class="line">    Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>但是如果你懒，那也行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</span><br><span class="line">Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,</span><br><span class="line">viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.</span><br><span class="line">Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>如果列表项目间用空行分开，在输出 HTML 时 Markdown 就会将项目内容用 <code>&lt;p&gt;</code> 标签包起来，举例来说：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*   Bird</span><br><span class="line">*   Magic</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;Bird&lt;/li&gt;</span><br><span class="line">&lt;li&gt;Magic&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>但是这个：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*   Bird</span><br><span class="line"></span><br><span class="line">*   Magic</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1\.  This is a list item with two paragraphs. Lorem ipsum dolor</span><br><span class="line">    sit amet, consectetuer adipiscing elit. Aliquam hendrerit</span><br><span class="line">    mi posuere lectus.</span><br><span class="line"></span><br><span class="line">    Vestibulum enim wisi, viverra nec, fringilla in, laoreet</span><br><span class="line">    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum</span><br><span class="line">    sit amet velit.</span><br><span class="line"></span><br><span class="line">2\.  Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*   This is a list item with two paragraphs.</span><br><span class="line"></span><br><span class="line">    This is the second paragraph in the list item. You&apos;re</span><br><span class="line">only required to indent the first line. Lorem ipsum dolor</span><br><span class="line">sit amet, consectetuer adipiscing elit.</span><br><span class="line"></span><br><span class="line">*   Another item in the same list.</span><br></pre></td></tr></table></figure><p>如果要在列表项目内放进引用，那 <code>&gt;</code> 就需要缩进：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*   A list item with a blockquote:</span><br><span class="line"></span><br><span class="line">    &gt; This is a blockquote</span><br><span class="line">    &gt; inside a list item.</span><br></pre></td></tr></table></figure><p>如果要放代码区块的话，该区块就需要缩进<em>两次</em>，也就是 8 个空格或是 2 个制表符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*   一列表项包含一个列表区块：</span><br><span class="line"></span><br><span class="line">        &lt;代码写在这&gt;</span><br></pre></td></tr></table></figure><p>当然，项目列表很可能会不小心产生，像是下面这样的写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1986\. What a great season.</span><br></pre></td></tr></table></figure><p>换句话说，也就是在行首出现<em>数字-句点-空白</em>，要避免这样的状况，你可以在句点前面加上反斜杠。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1986\. What a great season.</span><br></pre></td></tr></table></figure><h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h3><p>和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown 会用 <code>&lt;pre&gt;</code> 和 <code>&lt;code&gt;</code> 标签来把代码区块包起来。</p><p>要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，例如，下面的输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是一个普通段落：</span><br><span class="line"></span><br><span class="line">    这是一个代码区块。</span><br></pre></td></tr></table></figure><p>Markdown 会转换成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;这是一个普通段落：&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;pre&gt;&lt;code&gt;这是一个代码区块。</span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>这个每行一阶的缩进（4 个空格或是 1 个制表符），都会被移除，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Here is an example of AppleScript:</span><br><span class="line"></span><br><span class="line">    tell application &quot;Foo&quot;</span><br><span class="line">        beep</span><br><span class="line">    end tell</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;pre&gt;&lt;code&gt;tell application &quot;Foo&quot;</span><br><span class="line">    beep</span><br><span class="line">end tell</span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</p><p>在代码区块里面， <code>&amp;</code> 、 <code>&lt;</code> 和 <code>&gt;</code> 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，再加上缩进就可以了，剩下的 Markdown 都会帮你处理，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;footer&quot;&gt;</span><br><span class="line">    &amp;copy; 2004 Foo Corporation</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;footer&quot;&amp;gt;</span><br><span class="line">    &amp;amp;copy; 2004 Foo Corporation</span><br><span class="line">&amp;lt;/div&amp;gt;</span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>代码区块中，一般的 Markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 Markdown 语法撰写 Markdown 语法相关的文件。</p><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">* * *</span><br><span class="line"></span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">*****</span><br><span class="line"></span><br><span class="line">- - -</span><br><span class="line"></span><br><span class="line">---------------------------------------</span><br></pre></td></tr></table></figure><hr><h2 id="区段元素"><a href="#区段元素" class="headerlink" title="区段元素"></a>区段元素</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>Markdown 支持两种形式的链接语法： <em>行内式</em>和<em>参考式</em>两种形式。</p><p>不管是哪一种，链接文字都是用 [方括号] 来标记。</p><p>要建立一个<em>行内式</em>的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">This is [an example](http://example.com/ &quot;Title&quot;) inline link.</span><br><span class="line"></span><br><span class="line">[This link](http://example.net/) has no title attribute.</span><br></pre></td></tr></table></figure><p>会产生：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;</span><br><span class="line">an example&lt;/a&gt; inline link.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no</span><br><span class="line">title attribute.&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>如果你是要链接到同样主机的资源，你可以使用相对路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">See my [About](/about/) page for details.</span><br></pre></td></tr></table></figure><p><em>参考式</em>的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is [an example][id] reference-style link.</span><br></pre></td></tr></table></figure><p>你也可以选择性地在两个方括号中间加上一个空格：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is [an example] [id] reference-style link.</span><br></pre></td></tr></table></figure><p>接着，在文件的任意处，你可以把这个标记的链接内容定义出来：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[id]: http://example.com/  &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>链接内容定义的形式为：</p><ul><li>方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字</li><li>接着一个冒号</li><li>接着一个以上的空格或制表符</li><li>接着链接的网址</li><li>选择性地接着 title 内容，可以用单引号、双引号或是括弧包着</li></ul><p>下面这三种链接的定义都是相同：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[foo]: http://example.com/  &quot;Optional Title Here&quot;</span><br><span class="line">[foo]: http://example.com/  &apos;Optional Title Here&apos;</span><br><span class="line">[foo]: http://example.com/  (Optional Title Here)</span><br></pre></td></tr></table></figure><p><strong>请注意：</strong> 有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。</p><p>链接网址也可以用方括号包起来：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[id]: http://example.com/longish/path/to/resource/here</span><br><span class="line">    &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。</p><p>链接辨别标签可以有字母、数字、空白和标点符号，但是并<em>不</em>区分大小写，因此下面两个链接是一样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[link text][a]</span><br><span class="line">[link text][A]</span><br></pre></td></tr></table></figure><p><em>隐式链接标记</em>功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 “Google” 链接到 google.com，你可以简化成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Google][]</span><br></pre></td></tr></table></figure><p>然后定义链接内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Google]: http://google.com/</span><br></pre></td></tr></table></figure><p>由于链接文字可能包含空白，所以这种简化型的标记内也许包含多个单词：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Visit [Daring Fireball][] for more information.</span><br></pre></td></tr></table></figure><p>然后接着定义链接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Daring Fireball]: http://daringfireball.net/</span><br></pre></td></tr></table></figure><p>链接的定义可以放在文件中的任何一个地方，我比较偏好直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。</p><p>下面是一个参考式链接的范例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google] [1] than from</span><br><span class="line">[Yahoo] [2] or [MSN] [3].</span><br><span class="line"></span><br><span class="line">  [1]: http://google.com/        &quot;Google&quot;</span><br><span class="line">  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;</span><br><span class="line">  [3]: http://search.msn.com/    &quot;MSN Search&quot;</span><br></pre></td></tr></table></figure><p>如果改成用链接名称的方式写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google][] than from</span><br><span class="line">[Yahoo][] or [MSN][].</span><br><span class="line"></span><br><span class="line">  [google]: http://google.com/        &quot;Google&quot;</span><br><span class="line">  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;</span><br><span class="line">  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;</span><br></pre></td></tr></table></figure><p>上面两种写法都会产生下面的 HTML。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot;</span><br><span class="line">title=&quot;Google&quot;&gt;Google&lt;/a&gt; than from</span><br><span class="line">&lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt;</span><br><span class="line">or &lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>下面是用行内式写的同样一段内容的 Markdown 文件，提供作为比较之用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)</span><br><span class="line">than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or</span><br><span class="line">[MSN](http://search.msn.com/ &quot;MSN Search&quot;).</span><br></pre></td></tr></table></figure><p>参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的却会增加到 176 个字元，如果是用纯 HTML 格式来写，会有 234 个字元，在 HTML 格式中，标签比文本还要多。</p><p>使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断。</p><h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><p>Markdown 使用星号（<code>*</code>）和底线（<code>_</code>）作为标记强调字词的符号，被 <code>*</code> 或 <code>_</code> 包围的字词会被转成用 <code>&lt;em&gt;</code> 标签包围，用两个 <code>*</code> 或 <code>_</code> 包起来的话，则会被转成 <code>&lt;strong&gt;</code>，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*single asterisks*</span><br><span class="line"></span><br><span class="line">_single underscores_</span><br><span class="line"></span><br><span class="line">**double asterisks**</span><br><span class="line"></span><br><span class="line">__double underscores__</span><br></pre></td></tr></table></figure><p>会转成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;em&gt;single asterisks&lt;/em&gt;</span><br><span class="line"></span><br><span class="line">&lt;em&gt;single underscores&lt;/em&gt;</span><br><span class="line"></span><br><span class="line">&lt;strong&gt;double asterisks&lt;/strong&gt;</span><br><span class="line"></span><br><span class="line">&lt;strong&gt;double underscores&lt;/strong&gt;</span><br></pre></td></tr></table></figure><p>你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。</p><p>强调也可以直接插在文字中间：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">un*frigging*believable</span><br></pre></td></tr></table></figure><p>但是<strong>如果你的 <code>*</code> 和 <code>_</code> 两边都有空白的话，它们就只会被当成普通的符号</strong>。</p><p>如果要在文字前后直接插入普通的星号或底线，你可以用反斜线：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\*this text is surrounded by literal asterisks\*</span><br></pre></td></tr></table></figure><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>如果要标记一小段行内代码，你可以用反引号把它包起来（<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>Use the <code>printf()</code> function.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">会产生：</span><br></pre></td></tr></table></figure><p>Use the <code>printf()</code> function.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段：</span><br></pre></td></tr></table></figure><p><code>There is a literal backtick (`) here.</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">这段语法会产生：</span><br></pre></td></tr></table></figure><p><code>There is a literal backtick (`) here.</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样你就可以在区段的一开始就插入反引号：</span><br></pre></td></tr></table></figure><p>A single backtick in a code span: <code>` </code></p><p>A backtick-delimited string in a code span: <code>`foo` </code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">会产生：</span><br></pre></td></tr></table></figure><p>A single backtick in a code span: <code>`</code></p><p>A backtick-delimited string in a code span: <code>`foo`</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在代码区段内，`&amp;` 和方括号**都**会被自动地转成 HTML 实体，这使得插入 HTML 原始码变得很容易，Markdown 会把下面这段：</span><br></pre></td></tr></table></figure><p>Please don’t use any <code>&lt;blink&gt;</code> tags.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">转为：</span><br></pre></td></tr></table></figure><p>Please don't use any <code>&lt;blink&gt;</code> tags.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">你也可以这样写：</span><br></pre></td></tr></table></figure><p><code>&amp;#8212;</code> is the decimal-encoded equivalent of <code>&amp;mdash;</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">以产生：</span><br></pre></td></tr></table></figure><p><code>&amp;#8212;</code> is the decimal-encodedequivalent of <code>&amp;mdash;</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 图片</span><br><span class="line"></span><br><span class="line">很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。</span><br><span class="line"></span><br><span class="line">Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： _行内式_和_参考式_。</span><br><span class="line"></span><br><span class="line">行内式的图片语法看起来像是：</span><br></pre></td></tr></table></figure><p><img src="/path/to/img.jpg" alt="Alt text"></p><p><img src="/path/to/img.jpg" alt="Alt text" title="Optional title"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">详细叙述如下：</span><br><span class="line"></span><br><span class="line">*   一个惊叹号 `!`</span><br><span class="line">*   接着一个方括号，里面放上图片的替代文字</span><br><span class="line">*   接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 &apos;title&apos; 文字。</span><br><span class="line"></span><br><span class="line">参考式的图片语法则长得像这样：</span><br></pre></td></tr></table></figure><p><img src="url/to/image" alt="Alt text" title="Optional title attribute"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 `&lt;img&gt;` 标签。</span><br><span class="line"></span><br><span class="line">* * *</span><br><span class="line"></span><br><span class="line">## 其它</span><br><span class="line"></span><br><span class="line">### 自动链接</span><br><span class="line"></span><br><span class="line">Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用方括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：</span><br></pre></td></tr></table></figure><p><a href="http://example.com/" target="_blank" rel="noopener">http://example.com/</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Markdown 会转为：</span><br></pre></td></tr></table></figure></p><p><a href="http://example.com/" target="_blank" rel="noopener">http://example.com/</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">邮址的自动链接也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以糊弄一些不好的邮址收集机器人，例如：</span><br></pre></td></tr></table></figure></p><p><a href="&#109;&#x61;&#x69;&#x6c;&#116;&#x6f;&#58;&#97;&#100;&#x64;&#114;&#101;&#x73;&#x73;&#x40;&#x65;&#x78;&#x61;&#x6d;&#112;&#x6c;&#x65;&#46;&#x63;&#x6f;&#109;">&#97;&#100;&#x64;&#114;&#101;&#x73;&#x73;&#x40;&#x65;&#x78;&#x61;&#x6d;&#112;&#x6c;&#x65;&#46;&#x63;&#x6f;&#109;</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Markdown 会转成：</span><br></pre></td></tr></table></figure></p><p><a href="&#x6D;&#x61;i&#x6C;&#x74;&#x6F;:&#x61;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#64;&#101;&#120;&#x61;&#109;&#x70;&#x6C;e&#x2E;&#99;&#111;&#109;">&#x61;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#64;&#101;&#120;&#x61;<br>&#109;&#x70;&#x6C;e&#x2E;&#99;&#111;&#109;</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在浏览器里面，这段字串（其实是 `&lt;a href=&quot;mailto:address@example.com&quot;&gt;address@example.com&lt;/a&gt;`）会变成一个可以点击的「address@example.com」链接。</span><br><span class="line"></span><br><span class="line">（这种作法虽然可以糊弄不少的机器人，但并不能全部挡下来，不过总比什么都不做好些。不管怎样，公开你的信箱终究会引来广告信件的。）</span><br><span class="line"></span><br><span class="line">### 反斜杠</span><br><span class="line"></span><br><span class="line">Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 `&lt;em&gt;` 标签），你可以在星号的前面加上反斜杠：</span><br></pre></td></tr></table></figure></p><p>*literal asterisks*<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</span><br></pre></td></tr></table></figure></p><p>\   反斜线<br>`   反引号</p><ul><li>星号<br>_   底线<br>{}  花括号<br>[]  方括号<br>()  括弧<h1 id="井字号"><a href="#井字号" class="headerlink" title="井字号"></a>井字号</h1></li></ul><ul><li>加号</li></ul><ul><li>减号<br>.   英文句点<br>!   惊叹号<br>```</li></ul><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>感谢 <a href="https://twitter.com/#!/leafy7382" target="_blank" rel="noopener">leafy7382</a> 协助翻译，<a href="http://iamhlb.com/" target="_blank" rel="noopener">hlb</a>、<a href="http://twitter.com/randylien" target="_blank" rel="noopener">Randylien</a> 帮忙润稿，<a href="https://twitter.com/#!/ethantw" target="_blank" rel="noopener">ethantw</a> 的<a href="http://ethantw.net/projects/han/" target="_blank" rel="noopener">汉字标准格式・CSS Reset</a>， <a href="http://kidwm.net/" target="_blank" rel="noopener">WM</a> 回报文字错误。</p><p>感谢 <a href="https://github.com/fenprace" target="_blank" rel="noopener">fenprace</a>，<a href="https://github.com/addv" target="_blank" rel="noopener">addv</a>。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This is Simplelified Chinese Edition Document of Markdown Syntax. If you are seeking for English Edition Document. Please refer to &lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Markdown: Syntax&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;声明：&lt;/strong&gt; 这份文档派生(fork)于&lt;a href=&quot;http://markdown.tw/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;繁体中文版&lt;/a&gt;，在此基础上进行了繁体转简体工作，并进行了适当的润色。此文档用 Markdown 语法编写，你可以到这里&lt;a href=&quot;http://gitcafe.com/riku/Markdown-Syntax-CN/blob/master/syntax.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;查看它的源文件&lt;/a&gt;。「繁体中文版的原始文件可以&lt;a href=&quot;https://github.com/othree/markdown-syntax-zhtw/blob/master/syntax.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;查看这里&lt;/a&gt; 。」—By @&lt;a href=&quot;http://twitter.com/riku&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;riku&lt;/a&gt; / 本项目托管于 &lt;a href=&quot;http://gitcafe.com/riku/Markdown-Syntax-CN&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitCafe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt; 本项目同时也托管于 &lt;a href=&quot;https://github.com/riku/Markdown-Syntax-CN&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github&lt;/a&gt; 上，请通过 fork＋pull request 方式来帮忙改进本项目。&lt;/p&gt;
&lt;h1 id=&quot;Markdown-语法说明-简体中文版&quot;&gt;&lt;a href=&quot;#Markdown-语法说明-简体中文版&quot; class=&quot;headerlink&quot; title=&quot;Markdown 语法说明 (简体中文版)&quot;&gt;&lt;/a&gt;Markdown 语法说明 (简体中文版)&lt;/h1&gt;&lt;hr&gt;
    
    </summary>
    
    
      <category term="Reproduce" scheme="https://jacksonleon.gitee.io/tags/Reproduce/"/>
    
      <category term="MarkDown" scheme="https://jacksonleon.gitee.io/tags/MarkDown/"/>
    
  </entry>
  
  <entry>
    <title>Vim Note</title>
    <link href="https://jacksonleon.gitee.io/posts/3542455720.html"/>
    <id>https://jacksonleon.gitee.io/posts/3542455720.html</id>
    <published>2018-03-21T05:42:00.000Z</published>
    <updated>2019-01-29T20:11:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vim-Note"><a href="#Vim-Note" class="headerlink" title="Vim Note"></a>Vim Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>此文用来记录平时使用Vim遇到的问题与心得.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="Vim使用技巧"><a href="#Vim使用技巧" class="headerlink" title="Vim使用技巧"></a>Vim使用技巧</h2><h3 id="批量删除内容"><a href="#批量删除内容" class="headerlink" title="批量删除内容"></a>批量删除内容</h3><ul><li><p>全部删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 进入文章末尾</span></span><br><span class="line">G   <span class="comment">##注意大写</span></span><br><span class="line">:1,:d  <span class="comment">## 删除全部内容</span></span><br></pre></td></tr></table></figure></li><li><p>删除部分内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 定位到要删除的文档末尾</span></span><br><span class="line">200G</span><br><span class="line">:9,:d   <span class="comment">##删除9-200之间的内容</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="复制粘贴"><a href="#复制粘贴" class="headerlink" title="复制粘贴"></a>复制粘贴</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 复制当前行</span></span><br><span class="line">yy</span><br><span class="line"><span class="comment"># 在当前行粘贴</span></span><br><span class="line">p</span><br></pre></td></tr></table></figure><h3 id="查找替换"><a href="#查找替换" class="headerlink" title="查找替换"></a>查找替换</h3><p>在normal模式下按下<code>/</code>即可进入查找模式，输入要查找的字符串并按下回车。 Vim会跳转到第一个匹配。按下<code>n</code>查找下一个，按下<code>N</code>查找上一个。</p><p>Vim查找支持正则表达式，例如<code>/vim$</code>匹配行尾的<code>&quot;vim&quot;</code>。 需要查找特殊字符需要转义，例如<code>/vim\$</code>匹配<code>&quot;vim$&quot;</code>。</p><blockquote><p>注意查找回车应当用<code>\n</code>，而替换为回车应当用<code>\r</code>（相当于<code>&lt;CR&gt;</code>）。</p></blockquote><h3 id="查找当前单词"><a href="#查找当前单词" class="headerlink" title="查找当前单词"></a>查找当前单词</h3><p>在normal模式下按下<code>*</code>即可查找光标所在单词（word）， 要求每次出现的前后为空白字符或标点符号。例如当前为<code>foo</code>， 可以匹配<code>foo bar</code>中的<code>foo</code>，但不可匹配<code>foobar</code>中的<code>foo</code>。 这在查找函数名、变量名时非常有用。</p><p>按下<code>g*</code>即可查找光标所在单词的字符序列，每次出现前后字符无要求。 即<code>foo bar</code>和<code>foobar</code>中的<code>foo</code>均可被匹配到。</p><p><code>:s</code>（substitute）命令用来查找和替换字符串。语法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:&#123;作用范围&#125;s/&#123;目标&#125;/&#123;替换&#125;/&#123;替换标志&#125;</span><br></pre></td></tr></table></figure><p>例如<code>:%s/foo/bar/g</code>会在全局范围(<code>%</code>)查找<code>foo</code>并替换为<code>bar</code>，所有出现都会被替换（<code>g</code>）。</p><h3 id="作用范围"><a href="#作用范围" class="headerlink" title="作用范围"></a>作用范围</h3><p>作用范围分为当前行、全文、选区等等。</p><p>当前行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:s/foo/bar/g</span><br></pre></td></tr></table></figure><p>全文：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/foo/bar/g</span><br></pre></td></tr></table></figure><p>选区，在Visual模式下选择区域后输入<code>:</code>，Vim即可自动补全为 <code>:&#39;&lt;,&#39;&gt;</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:&apos;&lt;,&apos;&gt;s/foo/bar/g</span><br></pre></td></tr></table></figure><p>2-11行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:5,12s/foo/bar/g</span><br></pre></td></tr></table></figure><p>当前行<code>.</code>与接下来两行<code>+2</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:.,+2s/foo/bar/g</span><br></pre></td></tr></table></figure><h3 id="替换标志"><a href="#替换标志" class="headerlink" title="替换标志"></a>替换标志</h3><p>上文中命令结尾的<code>g</code>即是替换标志之一，表示全局<code>global</code>替换（即替换目标的所有出现）。 还有很多其他有用的替换标志：</p><p>空替换标志表示只替换从光标位置开始，目标的第一次出现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/foo/bar</span><br></pre></td></tr></table></figure><p><code>i</code>表示大小写不敏感查找，<code>I</code>表示大小写敏感：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:%s/foo/bar/i</span><br><span class="line"># 等效于模式中的\c（不敏感）或\C（敏感）</span><br><span class="line">:%s/foo\c/bar</span><br></pre></td></tr></table></figure><p><code>c</code>表示需要确认，例如全局查找<code>&quot;foo&quot;</code>替换为<code>&quot;bar&quot;</code>并且需要确认：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/foo/bar/gc</span><br></pre></td></tr></table></figure><p>回车后Vim会将光标移动到每一次<code>&quot;foo&quot;</code>出现的位置，并提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">replace with bar (y/n/a/q/l/^E/^Y)?</span><br></pre></td></tr></table></figure><p>按下<code>y</code>表示替换，<code>n</code>表示不替换，<code>a</code>表示替换所有，<code>q</code>表示退出查找模式， <code>l</code>表示替换当前位置并退出。<code>^E</code>与<code>^Y</code>是光标移动快捷键，参考： <a href="https://harttle.land/2015/11/07/vim-cursor.html" target="_blank" rel="noopener">Vim中如何快速进行光标移动</a>。</p><h3 id="高亮设置"><a href="#高亮设置" class="headerlink" title="高亮设置"></a>高亮设置</h3><h4 id="高亮颜色设置"><a href="#高亮颜色设置" class="headerlink" title="高亮颜色设置"></a>高亮颜色设置</h4><p>如果你像我一样觉得高亮的颜色不太舒服，可以在 <code>~/.vimrc</code> 中进行设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">highlight Search ctermbg=yellow ctermfg=black </span><br><span class="line">highlight IncSearch ctermbg=black ctermfg=yellow </span><br><span class="line">highlight MatchParen cterm=underline ctermbg=NONE ctermfg=NONE</span><br></pre></td></tr></table></figure><p>上述配置指定 Search 结果的前景色（foreground）为黑色，背景色（background）为灰色； 渐进搜索的前景色为黑色，背景色为黄色；光标处的字符加下划线。</p><blockquote><p>更多的CTERM颜色可以查阅：<a href="http://vim.wikia.com/wiki/Xterm256_color_names_for_console_Vim" target="_blank" rel="noopener">http://vim.wikia.com/wiki/Xterm256_color_names_for_console_Vim</a></p></blockquote><h4 id="禁用-启用高亮"><a href="#禁用-启用高亮" class="headerlink" title="禁用/启用高亮"></a>禁用/启用高亮</h4><p>有木有觉得每次查找替换后 Vim 仍然高亮着搜索结果？ 可以手动让它停止高亮，在normal模式下输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:nohighlight</span><br><span class="line"># 等效于</span><br><span class="line">:nohl</span><br></pre></td></tr></table></figure><p>其实上述命令禁用了所有高亮，只禁用搜索高亮的命令是<code>:set nohlsearch</code>。 下次搜索时需要<code>:set hlsearch</code>再次启动搜索高亮。</p><h4 id="延时禁用"><a href="#延时禁用" class="headerlink" title="延时禁用"></a>延时禁用</h4><p>怎么能够让Vim查找/替换后一段时间自动取消高亮，发生查找时自动开启呢？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&quot; 当光标一段时间保持不动了，就禁用高亮</span><br><span class="line">autocmd cursorhold * set nohlsearch</span><br><span class="line">&quot; 当输入查找命令时，再启用高亮</span><br><span class="line">noremap n :set hlsearch&lt;cr&gt;n</span><br><span class="line">noremap N :set hlsearch&lt;cr&gt;N</span><br><span class="line">noremap / :set hlsearch&lt;cr&gt;/</span><br><span class="line">noremap ? :set hlsearch&lt;cr&gt;?</span><br><span class="line">noremap * *:set hlsearch&lt;cr&gt;</span><br></pre></td></tr></table></figure><blockquote><p>将上述配置粘贴到<code>~/.vimrc</code>，重新打开vim即可生效。</p></blockquote><h4 id="一键禁用"><a href="#一键禁用" class="headerlink" title="一键禁用"></a>一键禁用</h4><p>如果延时禁用搜索高亮仍然不够舒服，可以设置快捷键来一键禁用/开启搜索高亮：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">noremap n :set hlsearch&lt;cr&gt;n</span><br><span class="line">noremap N :set hlsearch&lt;cr&gt;N</span><br><span class="line">noremap / :set hlsearch&lt;cr&gt;/</span><br><span class="line">noremap ? :set hlsearch&lt;cr&gt;?</span><br><span class="line">noremap * *:set hlsearch&lt;cr&gt;</span><br><span class="line"></span><br><span class="line">nnoremap &lt;c-h&gt; :call DisableHighlight()&lt;cr&gt;</span><br><span class="line">function! DisableHighlight()</span><br><span class="line">    set nohlsearch</span><br><span class="line">endfunc</span><br></pre></td></tr></table></figure><p>希望关闭高亮时只需要按下 <code>Ctrl+H</code>，当发生下次搜索时又会自动启用。</p><h3 id="大小写"><a href="#大小写" class="headerlink" title="大小写"></a>大小写</h3><h4 id="大小写敏感查找"><a href="#大小写敏感查找" class="headerlink" title="大小写敏感查找"></a>大小写敏感查找</h4><p>在查找模式中加入<code>\c</code>表示大小写不敏感查找，<code>\C</code>表示大小写敏感查找。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/foo\c</span><br></pre></td></tr></table></figure><p>将会查找所有的<code>&quot;foo&quot;</code>,<code>&quot;FOO&quot;</code>,<code>&quot;Foo&quot;</code>等字符串。</p><h4 id="大小写敏感配置"><a href="#大小写敏感配置" class="headerlink" title="大小写敏感配置"></a>大小写敏感配置</h4><p>Vim 默认采用大小写敏感的查找，为了方便我们常常将其配置为大小写不敏感：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot; 设置默认进行大小写不敏感查找</span><br><span class="line">set ignorecase</span><br><span class="line">&quot; 如果有一个大写字母，则切换到大小写敏感查找</span><br><span class="line">set smartcase</span><br></pre></td></tr></table></figure><blockquote><p>将上述设置粘贴到你的<code>~/.vimrc</code>，重新打开Vim即可生效。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Vim-Note&quot;&gt;&lt;a href=&quot;#Vim-Note&quot; class=&quot;headerlink&quot; title=&quot;Vim Note&quot;&gt;&lt;/a&gt;Vim Note&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;此文用来记录平时使用Vim遇到的问题与心得.&lt;/p&gt;
&lt;p&gt;本文长期更新.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Vim" scheme="https://jacksonleon.gitee.io/categories/Vim/"/>
    
    
      <category term="Vim" scheme="https://jacksonleon.gitee.io/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>Git note</title>
    <link href="https://jacksonleon.gitee.io/posts/3890174064.html"/>
    <id>https://jacksonleon.gitee.io/posts/3890174064.html</id>
    <published>2018-03-20T13:16:45.000Z</published>
    <updated>2019-02-03T10:13:19.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git-Note"><a href="#Git-Note" class="headerlink" title="Git Note"></a>Git Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>此文用来记录平时使用Git遇到的问题与心得.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="遇到的报错与解决办法"><a href="#遇到的报错与解决办法" class="headerlink" title="遇到的报错与解决办法"></a>遇到的报错与解决办法</h2><ul><li><p><strong>File Mode</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 遇到的问题</span></span><br><span class="line">[root@me file]<span class="comment"># git diff .gitignore</span></span><br><span class="line">diff --git a/.gitignore b/.gitignore</span><br><span class="line">old mode 100644</span><br><span class="line">new mode 100755</span><br></pre></td></tr></table></figure><blockquote><p><strong>解决办法:</strong></p><p>filemode的变化，文件chmod后其文件某些位是改变了的，如果严格的比较原文件和chmod后的文件，两者是有区别的，但是源代码通常只关心文本内容，因此chmod产生的变化应该忽略，所以设置一下：</p><p><code>git config --add core.filemode false</code></p></blockquote></li><li><p><strong>在.gitignore文件中添加忽略规则无效</strong></p><blockquote><p>项目开始的时候 没有将一些无关文件配置进 .gitignore里面。导致文件已经进行跟踪了，但是目前想把这些文件add 到 .gitignore文件中，但是发现没有效果。 修改文件之后，git 依然检测到了，文件改动。</p><p><strong>解决办法</strong>:</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 原来git有一条规则，“如果一个文件一开始没有添加到.gitignore里面，中途添加进去。git将不会忽略这个文件。”在这种情况下，必须使用</span></span><br><span class="line">git rm --cached &lt; file name &gt;</span><br><span class="line"><span class="comment"># git rm --cached -r &lt; file name &gt; 强制删除</span></span><br><span class="line"><span class="comment"># 这个命令 来 移除对这个文件的跟踪，然后将 这个不想被跟踪的文件 添加到 .gitignore文件里面 就可以了。</span></span><br><span class="line"><span class="comment"># 做完这些工作之后 你还必须 再 commit 一次，这次commit之后 ，文件就可以被忽略了。</span></span><br></pre></td></tr></table></figure></li><li><p><code>fatal: refusing to merge unrelated histories</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在使用Git创建项目的时候，在两个分支合并的时候，出现了下面的这个错误。</span></span><br><span class="line">git merge origin/master</span><br><span class="line">fatal: refusing to merge unrelated histories</span><br></pre></td></tr></table></figure><blockquote><p><strong>解决办法:</strong></p><p>在你操作命令后面加</p><p><code>--allow-unrelated-histories</code> </p><p>例如</p><p><code>git merge master --allow-unrelated-histories</code></p></blockquote></li><li><p><strong><code>commit</code>之后想撤销</strong></p><blockquote><p>commit之后想要撤销commit某个文件</p><p><strong>解决办法:</strong></p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看commit日志</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"><span class="comment"># reset commit</span></span><br><span class="line"><span class="comment"># 想要撤销的commit的前一次commit id</span></span><br><span class="line">git reset --soft [commit id]</span><br><span class="line"><span class="comment"># 取消暂存</span></span><br><span class="line">git reset HEAD README.md</span><br><span class="line"><span class="comment"># 重新commit</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"message"</span></span><br></pre></td></tr></table></figure></li><li><p><strong>To prevent you from losing history, non-fast-forward updates were rejected</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">To git</span><br><span class="line"> ! [rejected]        master -&gt; master (non-fast-forward)</span><br><span class="line">error: failed to push some refs to &apos;git&apos;</span><br><span class="line">To prevent you from losing history, non-fast-forward updates were rejected</span><br><span class="line">Merge the remote changes before pushing again.  See the &apos;Note about</span><br><span class="line">fast-forwards&apos; section of &apos;git push --help&apos; for details.</span><br></pre></td></tr></table></figure><blockquote><p>出现原因在于：git仓库中已经有一部分代码，所以它不允许你直接把你的代码覆盖上去。于是你有2个选择方式：</p><ol><li><p>强推，即利用强覆盖方式用你本地的代码替代git仓库内的内容</p><p><code>git push -f</code></p></li><li><p>先把git的东西fetch到你本地然后merge后再push</p><p><code>git pull</code></p></li></ol></blockquote></li><li><p><strong>拉取远程强制覆盖本地</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取remote最新代码</span></span><br><span class="line">git fetch --all</span><br><span class="line"><span class="comment"># 覆盖本地</span></span><br><span class="line">git reset --hard origin master</span><br></pre></td></tr></table></figure></li><li><p><strong>push失败</strong></p><p>push时提示</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git push github deploy</span><br><span class="line">error: src refspec deploy does not match any.</span><br></pre></td></tr></table></figure><blockquote><p>我的情况是当前仓库没有分支，需要创建分支</p></blockquote><p><code>git checkout -b deploy</code></p><blockquote><p>或者</p></blockquote><p><code>git push github HEAD:deploy</code></p></li><li><p><strong>生成密钥</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"your email address"</span></span><br><span class="line"><span class="comment"># Windows存储在/c/user/username/.ssh中</span></span><br><span class="line"><span class="comment"># Mac存储在~/.ssh中</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="Git常用命令"><a href="#Git常用命令" class="headerlink" title="Git常用命令"></a>Git常用命令</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git add [filename]</span><br><span class="line"><span class="comment"># 提交暂存区到仓库区</span></span><br><span class="line">git commit -m [message]</span><br><span class="line"><span class="comment"># 提交暂存区的指定文件到仓库区</span></span><br><span class="line">git commit [file1] [file2] ... -m [message]</span><br><span class="line"><span class="comment"># 提交工作区自上次commit之后的变化，直接到仓库区</span></span><br><span class="line">git commit -a</span><br><span class="line"><span class="comment"># 提交时显示所有diff信息</span></span><br><span class="line">git commit -v</span><br><span class="line"><span class="comment"># 使用一次新的commit，替代上一次提交</span></span><br><span class="line"><span class="comment"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span></span><br><span class="line">git commit --amend -m [message]</span><br><span class="line"><span class="comment"># 重做上一次commit，并包括指定文件的新变化</span></span><br><span class="line">git commit --amend [file1] [file2] ...</span><br><span class="line"><span class="comment"># 暂时将未提交的变化移除，稍后再移入</span></span><br><span class="line">git stash</span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure><h2 id="Git-Workspace"><a href="#Git-Workspace" class="headerlink" title="Git Workspace"></a>Git Workspace</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Workspace：工作区</span><br><span class="line">Index/Stage：暂存区</span><br><span class="line">Repository：仓库区（或本地仓库）</span><br><span class="line">Remote：远程仓库</span><br></pre></td></tr></table></figure><h2 id="Git-Push-免密码登陆"><a href="#Git-Push-免密码登陆" class="headerlink" title="Git Push 免密码登陆"></a>Git Push 免密码登陆</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##设置git config --global</span></span><br><span class="line"><span class="comment">##credential.helper设置为store</span></span><br><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure><h2 id="查看设置是否完成"><a href="#查看设置是否完成" class="headerlink" title="查看设置是否完成"></a>查看设置是否完成</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##查看git config设置内容</span></span><br><span class="line">git config --list</span><br><span class="line">user.name=your-username</span><br><span class="line">user.email=example@example.com</span><br><span class="line">credential.helper=store</span><br></pre></td></tr></table></figure><h2 id="Git-Push-操作"><a href="#Git-Push-操作" class="headerlink" title="Git Push 操作"></a>Git Push 操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"message"</span></span><br><span class="line">git merge origin/master</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h2 id="新建Repo"><a href="#新建Repo" class="headerlink" title="新建Repo"></a>新建Repo</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在当前目录新建一个Git代码库</span></span><br><span class="line">git init</span><br><span class="line"><span class="comment"># 新建一个目录，将其初始化为Git代码库</span></span><br><span class="line">git init[project-name]</span><br><span class="line"><span class="comment"># 下载一个项目和它的整个代码历史</span></span><br><span class="line">git <span class="built_in">clone</span> [url]</span><br></pre></td></tr></table></figure><h2 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示当前的Git配置</span></span><br><span class="line">git config--list</span><br><span class="line"><span class="comment"># 编辑Git配置文件</span></span><br><span class="line">git config -e[--global]</span><br><span class="line"><span class="comment"># 设置提交代码时的用户信息</span></span><br><span class="line">git config[--global] user.name <span class="string">"[name]"</span></span><br><span class="line">git config[--global] user.email <span class="string">"[email address]"</span></span><br></pre></td></tr></table></figure><h2 id="增加删除文件"><a href="#增加删除文件" class="headerlink" title="增加删除文件"></a>增加删除文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加指定文件到暂存区</span></span><br><span class="line">git add [file1][file2] ...</span><br><span class="line"><span class="comment"># 添加指定目录到暂存区，包括子目录</span></span><br><span class="line">git add [dir]</span><br><span class="line"><span class="comment"># 添加当前目录的所有文件到暂存区</span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment"># 添加每个变化前，都会要求确认</span></span><br><span class="line"><span class="comment"># 对于同一个文件的多处变化，可以实现分次提交</span></span><br><span class="line">git add -p</span><br><span class="line"><span class="comment"># 删除工作区文件，并且将这次删除放入暂存区</span></span><br><span class="line">git rm [file1][file2] ...</span><br><span class="line"><span class="comment"># 停止追踪指定文件，但该文件会保留在工作区</span></span><br><span class="line">git rm --cached[file]</span><br><span class="line"><span class="comment"># 改名文件，并且将这个改名放入暂存区</span></span><br><span class="line">git mv[file-original] [file-renamed]</span><br></pre></td></tr></table></figure><h2 id="代码提交"><a href="#代码提交" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提交暂存区到仓库区</span></span><br><span class="line">git commit -m[message]</span><br><span class="line"><span class="comment"># 提交暂存区的指定文件到仓库区</span></span><br><span class="line">git commit [file1] [file2] ... -m [message]</span><br><span class="line"><span class="comment"># 提交工作区自上次commit之后的变化，直接到仓库区</span></span><br><span class="line">git commit -a</span><br><span class="line"><span class="comment"># 提交时显示所有diff信息</span></span><br><span class="line">git commit -v</span><br><span class="line"><span class="comment"># 使用一次新的commit，替代上一次提交</span></span><br><span class="line"><span class="comment"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span></span><br><span class="line">git commit --amend -m [message]</span><br><span class="line"><span class="comment"># 重做上一次commit，并包括指定文件的新变化</span></span><br><span class="line">git commit--amend [file1] [file2] ...</span><br></pre></td></tr></table></figure><h2 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出所有本地分支</span></span><br><span class="line">git branch</span><br><span class="line"><span class="comment"># 列出所有远程分支</span></span><br><span class="line">git branch -r</span><br><span class="line"><span class="comment"># 列出所有本地分支和远程分支</span></span><br><span class="line">git branch -a</span><br><span class="line"><span class="comment"># 新建一个分支，但依然停留在当前分支</span></span><br><span class="line">git branch[branch-name]</span><br><span class="line"><span class="comment"># 新建一个分支，并切换到该分支</span></span><br><span class="line">git checkout -b[branch]</span><br><span class="line"><span class="comment"># 新建一个分支，指向指定commit</span></span><br><span class="line">git branch[branch] [commit]</span><br><span class="line"><span class="comment"># 新建一个分支，与指定的远程分支建立追踪关系</span></span><br><span class="line">git branch--track [branch] [remote-branch]</span><br><span class="line"><span class="comment"># 切换到指定分支，并更新工作区</span></span><br><span class="line">git checkout[branch-name]</span><br><span class="line"><span class="comment"># 切换到上一个分支</span></span><br><span class="line">git checkout -</span><br><span class="line"><span class="comment"># 建立追踪关系，在现有分支与指定的远程分支之间</span></span><br><span class="line">git branch--<span class="built_in">set</span>-upstream [branch] [remote-branch]</span><br><span class="line"><span class="comment"># 合并指定分支到当前分支</span></span><br><span class="line">git merge[branch]</span><br><span class="line"><span class="comment"># 选择一个commit，合并进当前分支</span></span><br><span class="line">git cherry-pick[commit]</span><br><span class="line"><span class="comment"># 删除分支</span></span><br><span class="line">git branch -d[branch-name]</span><br><span class="line"><span class="comment"># 删除远程分支</span></span><br><span class="line">git push origin--delete [branch-name]</span><br><span class="line">git branch -dr[remote/branch]</span><br></pre></td></tr></table></figure><h2 id="标签操作"><a href="#标签操作" class="headerlink" title="标签操作"></a>标签操作</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出所有tag</span></span><br><span class="line">git tag</span><br><span class="line"><span class="comment"># 新建一个tag在当前commit</span></span><br><span class="line">git tag [tag]</span><br><span class="line"><span class="comment"># 新建一个tag在指定commit</span></span><br><span class="line">git tag [tag][commit]</span><br><span class="line"><span class="comment"># 删除本地tag</span></span><br><span class="line">git tag -d[tag]</span><br><span class="line"><span class="comment"># 删除远程tag</span></span><br><span class="line">git push origin:refs/tags/[tagName]</span><br><span class="line"><span class="comment"># 查看tag信息</span></span><br><span class="line">git show [tag]</span><br><span class="line"><span class="comment"># 提交指定tag</span></span><br><span class="line">git push[remote] [tag]</span><br><span class="line"><span class="comment"># 提交所有tag</span></span><br><span class="line">git push[remote] --tags</span><br><span class="line"><span class="comment"># 新建一个分支，指向某个tag</span></span><br><span class="line">git checkout -b[branch] [tag]</span><br></pre></td></tr></table></figure><h2 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示有变更的文件</span></span><br><span class="line">git status</span><br><span class="line"><span class="comment"># 显示当前分支的版本历史</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"><span class="comment"># 显示commit历史，以及每次commit发生变更的文件</span></span><br><span class="line">git <span class="built_in">log</span> --<span class="built_in">stat</span></span><br><span class="line"><span class="comment"># 搜索提交历史，根据关键词</span></span><br><span class="line">git <span class="built_in">log</span> -S [keyword]</span><br><span class="line"><span class="comment"># 显示某个commit之后的所有变动，每个commit占据一行</span></span><br><span class="line">git <span class="built_in">log</span> [tag]HEAD --pretty=format:%s</span><br><span class="line"><span class="comment"># 显示某个commit之后的所有变动，其"提交说明"必须符合搜索条件</span></span><br><span class="line">git <span class="built_in">log</span> [tag]HEAD --grep feature</span><br><span class="line"><span class="comment"># 显示某个文件的版本历史，包括文件改名</span></span><br><span class="line">git <span class="built_in">log</span> --follow [file]</span><br><span class="line">git whatchanged [file]</span><br><span class="line"><span class="comment"># 显示指定文件相关的每一次diff</span></span><br><span class="line">git <span class="built_in">log</span> -p[file]</span><br><span class="line"><span class="comment"># 显示过去5次提交</span></span><br><span class="line">git <span class="built_in">log</span> -5--pretty --oneline</span><br><span class="line"><span class="comment"># 显示所有提交过的用户，按提交次数排序</span></span><br><span class="line">git shortlog -sn</span><br><span class="line"><span class="comment"># 显示指定文件是什么人在什么时间修改过</span></span><br><span class="line">git blame [file]</span><br><span class="line"><span class="comment"># 显示暂存区和工作区的差异</span></span><br><span class="line">git diff</span><br><span class="line"><span class="comment"># 显示暂存区和上一个commit的差异</span></span><br><span class="line">git diff --cached [file]</span><br><span class="line"><span class="comment"># 显示工作区与当前分支最新commit之间的差异</span></span><br><span class="line">git diff HEAD</span><br><span class="line"><span class="comment"># 显示两次提交之间的差异</span></span><br><span class="line">git diff [first-branch]...[second-branch]</span><br><span class="line"><span class="comment"># 显示今天你写了多少行代码</span></span><br><span class="line">git diff --shortstat <span class="string">"@&#123;0 day ago&#125;"</span></span><br><span class="line"><span class="comment"># 显示某次提交的元数据和内容变化</span></span><br><span class="line">git show [commit]</span><br><span class="line"><span class="comment"># 显示某次提交发生变化的文件</span></span><br><span class="line">git show --name-only [commit]</span><br><span class="line"><span class="comment"># 显示某次提交时，某个文件的内容</span></span><br><span class="line">git show [commit]:[filename]</span><br><span class="line"><span class="comment"># 显示当前分支的最近几次提交</span></span><br><span class="line">git reflog</span><br></pre></td></tr></table></figure><h2 id="远程同步"><a href="#远程同步" class="headerlink" title="远程同步"></a>远程同步</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载远程仓库的所有变动</span></span><br><span class="line">git fetch[remote]</span><br><span class="line"><span class="comment"># 显示所有远程仓库</span></span><br><span class="line">git remote -v</span><br><span class="line"><span class="comment"># 显示某个远程仓库的信息</span></span><br><span class="line">git remote show[remote]</span><br><span class="line"><span class="comment"># 增加一个新的远程仓库，并命名</span></span><br><span class="line">git remote add[shortname] [url]</span><br><span class="line"><span class="comment"># 取回远程仓库的变化，并与本地分支合并</span></span><br><span class="line">git pull[remote] [branch]</span><br><span class="line"><span class="comment"># 上传本地指定分支到远程仓库</span></span><br><span class="line">git push[remote] [branch]</span><br><span class="line"><span class="comment"># 强行推送当前分支到远程仓库，即使有冲突</span></span><br><span class="line">git push[remote] --force</span><br><span class="line"><span class="comment"># 推送所有分支到远程仓库</span></span><br><span class="line">git push[remote] --all</span><br></pre></td></tr></table></figure><h2 id="撤销操作"><a href="#撤销操作" class="headerlink" title="撤销操作"></a>撤销操作</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 恢复暂存区的指定文件到工作区</span></span><br><span class="line">git checkout [file]</span><br><span class="line"><span class="comment"># 恢复某个commit的指定文件到暂存区和工作区</span></span><br><span class="line">git checkout [commit] [file]</span><br><span class="line"><span class="comment"># 恢复暂存区的所有文件到工作区</span></span><br><span class="line">git checkout .</span><br><span class="line"><span class="comment"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span></span><br><span class="line">git reset [file]</span><br><span class="line"><span class="comment"># 重置暂存区与工作区，与上一次commit保持一致</span></span><br><span class="line">git reset --hard</span><br><span class="line"><span class="comment"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span></span><br><span class="line">git reset[commit]</span><br><span class="line"><span class="comment"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span></span><br><span class="line">git reset--hard [commit]</span><br><span class="line"><span class="comment"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span></span><br><span class="line">git reset--keep [commit]</span><br><span class="line"><span class="comment"># 新建一个commit，用来撤销指定commit</span></span><br><span class="line"><span class="comment"># 后者的所有变化都将被前者抵消，并且应用到当前分支</span></span><br><span class="line">git revert [commit]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Git-Note&quot;&gt;&lt;a href=&quot;#Git-Note&quot; class=&quot;headerlink&quot; title=&quot;Git Note&quot;&gt;&lt;/a&gt;Git Note&lt;/h1&gt;&lt;p&gt;Author: JosephLau&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;此文用来记录平时使用Git遇到的问题与心得.&lt;/p&gt;
&lt;p&gt;本文长期更新.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Git" scheme="https://jacksonleon.gitee.io/categories/Git/"/>
    
    
      <category term="Git" scheme="https://jacksonleon.gitee.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://jacksonleon.gitee.io/posts/1243066710.html"/>
    <id>https://jacksonleon.gitee.io/posts/1243066710.html</id>
    <published>2018-02-14T05:14:00.000Z</published>
    <updated>2018-02-14T05:14:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
