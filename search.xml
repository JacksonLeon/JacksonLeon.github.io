<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Andrew Ng ML-0</title>
      <link href="/posts/4168189520.html"/>
      <url>/posts/4168189520.html</url>
      <content type="html"><![CDATA[<h1 id="「吴恩达机器学习」（一）"><a href="#「吴恩达机器学习」（一）" class="headerlink" title="「吴恩达机器学习」（一）"></a>「吴恩达机器学习」（一）</h1><a id="more"></a>]]></content>
      
      <categories>
          
          <category> Machine Learning </category>
          
          <category> Andrew NG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Machine Learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>LaTeX Note</title>
      <link href="/posts/1260497769.html"/>
      <url>/posts/1260497769.html</url>
      <content type="html"><![CDATA[<h1 id="LaTeX-Note"><a href="#LaTeX-Note" class="headerlink" title="LaTeX Note"></a>LaTeX Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>LaTeX Note</p></blockquote><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h3><p>MacTex 安装包非常大，而且自带了很多图形应用。但是我更喜欢用命令行，而且MacTex 还有 no-gui 版本，省去安装各种缺少的包。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">brew cask install mactex-no-gui</span><br><span class="line"><span class="comment"># 添加到环境变量</span></span><br><span class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/texlive/2018/bin/x86_64-darwin:<span class="variable">$PATH</span></span><br><span class="line"><span class="comment"># 换源</span></span><br><span class="line">sudo tlmgr update --self --repository http://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/tlnet</span><br><span class="line">sudo tlmgr install latexmk --repository http://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/tlnet</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xelatex test.tex</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> LaTeX </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「SMTC」0007.py</title>
      <link href="/posts/4089488553.html"/>
      <url>/posts/4089488553.html</url>
      <content type="html"><![CDATA[<h1 id="「SMTC」0007-py"><a href="#「SMTC」0007-py" class="headerlink" title="「SMTC」0007.py"></a>「SMTC」0007.py</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>Show me the code 第0007题 Python版</p><a href="/posts/724513738.html" title="完整题目">完整题目</a></blockquote><a id="more"></a><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p><strong>第 0007 题：</strong> 有个目录，里面是你自己写过的程序，统计一下你写过多少行代码。包括空行和注释，但是要分别列出来。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>遍历文件夹下的文件</li><li>获取后缀名，找到py文件</li><li>遍历文件的每一行</li><li>如果是空的则说明是空行</li><li>用正则匹配<code>#</code>注释符号</li><li>统计行数输出</li></ol><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_code</span><span class="params">(filesPath)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(filesPath):</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="comment"># 正则匹配#</span></span><br><span class="line">    exp_re = re.compile(<span class="string">'^#.*'</span>)</span><br><span class="line">    fileList = os.listdir(filesPath)</span><br><span class="line">    print(<span class="string">'&#123;0&#125;\t&#123;1&#125;\t&#123;2&#125;\t&#123;3&#125;'</span>.format(<span class="string">'fileName'</span>,</span><br><span class="line">                                      <span class="string">'all_lines'</span>, <span class="string">'space_lines'</span>, <span class="string">'exp_lines'</span>))</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> fileList:</span><br><span class="line">        filePath = os.path.join(filesPath, file)</span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(filePath) <span class="keyword">and</span> os.path.splitext(filePath)[<span class="number">1</span>] == <span class="string">'.py'</span>:</span><br><span class="line">            <span class="keyword">with</span> open(filePath) <span class="keyword">as</span> code:</span><br><span class="line">                all_lines = <span class="number">0</span></span><br><span class="line">                space_lines = <span class="number">0</span></span><br><span class="line">                exp_lines = <span class="number">0</span></span><br><span class="line">                <span class="keyword">for</span> line <span class="keyword">in</span> code.readlines():</span><br><span class="line">                    all_lines += <span class="number">1</span></span><br><span class="line">                    <span class="comment"># 空行</span></span><br><span class="line">                    <span class="keyword">if</span> line.strip() == <span class="string">''</span>:</span><br><span class="line">                        space_lines += <span class="number">1</span></span><br><span class="line">                    <span class="comment"># 注释</span></span><br><span class="line">                    exp = exp_re.findall(line.strip())</span><br><span class="line">                    <span class="keyword">if</span> exp:</span><br><span class="line">                        exp_lines += <span class="number">1</span></span><br><span class="line">            print(<span class="string">'&#123;0&#125;\t\t&#123;1&#125;\t\t&#123;2&#125;\t\t&#123;3&#125;'</span>.format(</span><br><span class="line">                file, all_lines, space_lines, exp_lines))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    parse_code(<span class="string">'./SMTC'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Python </category>
          
          <category> SMTC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> SMTC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「Her」</title>
      <link href="/posts/800396456.html"/>
      <url>/posts/800396456.html</url>
      <content type="html"><![CDATA[<h1 id="「Her」"><a href="#「Her」" class="headerlink" title="「Her」"></a><center>「Her」</center></h1><a id="more"></a><div class="note primary">            <p>新的一年，宝贝儿我们一起加油哦！</p>          </div><p><img src="https://raw.githubusercontent.com/JacksonLeon/pics/master/4.jpg" alt="4"></p><p><img src="https://raw.githubusercontent.com/JacksonLeon/pics/master/IMG_20190105_164827-COLLAGE.jpg" alt="4"></p><p><img src="https://raw.githubusercontent.com/JacksonLeon/pics/master/IMG_20190109_123220.jpg" alt="4"></p><p><img src="https://raw.githubusercontent.com/JacksonLeon/pics/master/IMG_20190109_123240.jpg" alt="4"></p><p><img src="https://raw.githubusercontent.com/JacksonLeon/pics/master/IMG_20190108_164244-COLLAGE.jpg" alt="4"></p><p><img src="https://raw.githubusercontent.com/JacksonLeon/pics/master/5.jpg" alt="4"></p><p><img src="https://raw.githubusercontent.com/JacksonLeon/pics/master/6.jpg" alt="4"></p><p><img src="https://raw.githubusercontent.com/JacksonLeon/pics/master/11.jpg" alt="4"></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>2019猪年快乐</title>
      <link href="/posts/1470630020.html"/>
      <url>/posts/1470630020.html</url>
      <content type="html"><![CDATA[<h1 id="2019㊗️大家🐷年大吉！"><a href="#2019㊗️大家🐷年大吉！" class="headerlink" title="2019㊗️大家🐷年大吉！"></a><center><strong>2019㊗️大家🐷年大吉！</strong></center></h1><a id="more"></a><p><img src="https://ws2.sinaimg.cn/large/006tNc79gy1fzusq0kt2uj312h0u0qig.jpg" alt="pig_text"></p><p><a href="https://github.com/JacksonLeon/pic2text" target="_blank" rel="noopener">附上代码，欢迎Fork</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>「SMTC」0006.py</title>
      <link href="/posts/1266467788.html"/>
      <url>/posts/1266467788.html</url>
      <content type="html"><![CDATA[<h1 id="「SMTC」0006-py"><a href="#「SMTC」0006-py" class="headerlink" title="「SMTC」0006.py"></a>「SMTC」0006.py</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>Show me the code 第0006题 Python版</p><a href="/posts/724513738.html" title="完整题目">完整题目</a></blockquote><a id="more"></a><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p><strong>第 0006 题：</strong> 你有一个目录，放了你一个月的日记，都是 txt，为了避免分词的问题，假设内容都是英文，请统计出你认为每篇日记最重要的词。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>首先英文可以避免分词的问题，中文可能就需要引入终止词</li><li>需要对日记进行清洗，去除掉标点符号等</li><li>对于每篇日记最重要的词，应该是除了正常使用的代词外的词频最高的名词或者形容词</li><li>这就可以用到第0004题中的Solution</li></ol><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GetTF</span><span class="params">(filesPath)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(filesPath):</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    files=os.listdir(filesPath)</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        filePath=os.path.join(filesPath,file)</span><br><span class="line">        <span class="comment"># 判断是否为文件且文件后缀名是否为.txt</span></span><br><span class="line">        <span class="comment"># 去除其他文件的影响</span></span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(filePath) <span class="keyword">and</span> os.path.splitext(filePath)[<span class="number">1</span>]==<span class="string">'.txt'</span>:</span><br><span class="line">            <span class="keyword">with</span> open(filePath) <span class="keyword">as</span> text:</span><br><span class="line">                content=text.read()</span><br><span class="line">                <span class="comment"># 去除标点符号</span></span><br><span class="line">                <span class="keyword">for</span> char <span class="keyword">in</span> <span class="string">'-.,\n'</span>:</span><br><span class="line">                    content=content.replace(char, <span class="string">' '</span>)</span><br><span class="line">                content=content.lower()</span><br><span class="line">                wordList=content.split()</span><br><span class="line">                wordDic=&#123;&#125;</span><br><span class="line">                <span class="comment"># 去除无用词</span></span><br><span class="line">                exceptWord=[<span class="string">'the'</span>,<span class="string">'a'</span>,<span class="string">'to'</span>,<span class="string">'and'</span>,<span class="string">'of'</span>]</span><br><span class="line">                <span class="keyword">for</span> word <span class="keyword">in</span> wordList:</span><br><span class="line">                    <span class="keyword">if</span> word <span class="keyword">in</span> exceptWord:</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">if</span> word <span class="keyword">in</span> wordDic:</span><br><span class="line">                        wordDic[word]+=<span class="number">1</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        wordDic[word]=<span class="number">1</span></span><br><span class="line">                <span class="comment"># 倒序排序</span></span><br><span class="line">                res=sorted(wordDic.items(),key=<span class="keyword">lambda</span> t: t[<span class="number">1</span>],reverse=<span class="keyword">True</span>)</span><br><span class="line">                print(<span class="string">"the most important word in &#123;0&#125; is &#123;1&#125;"</span>.format(filePath,res[<span class="number">0</span>][<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    GetTF(<span class="string">'/Users/lau/Documents/Coding/Python/SMTC/source/0006'</span>)</span><br></pre></td></tr></table></figure><p><strong>Result：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">the most important word in /Users/lau/Documents/Coding/Python/SMTC/source/0006/3.txt is language</span><br><span class="line">the most important word in /Users/lau/Documents/Coding/Python/SMTC/source/0006/2.txt is based</span><br><span class="line">the most important word in /Users/lau/Documents/Coding/Python/SMTC/source/0006/1.txt is programming</span><br></pre></td></tr></table></figure><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><ol><li><p><code>os.path.splitext(path)</code></p><p>Split the pathname <em>path</em> into a pair <code>(root, ext)</code> such that <code>root + ext == path</code>, and <em>ext</em> is empty or begins with a period and contains at most one period. Leading periods on the basename are ignored; <code>splitext(&#39;.cshrc&#39;)</code> returns<code>(&#39;.cshrc&#39;, &#39;&#39;)</code>.</p></li></ol>]]></content>
      
      <categories>
          
          <category> Python </category>
          
          <category> SMTC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> SMTC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python Library</title>
      <link href="/posts/3101691907.html"/>
      <url>/posts/3101691907.html</url>
      <content type="html"><![CDATA[<h1 id="Python-Library"><a href="#Python-Library" class="headerlink" title="Python Library"></a>Python Library</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>汇总使用过的Python库</p><p>简单记一下模块功能以及函数原型</p></blockquote><a id="more"></a><h2 id="Pillow"><a href="#Pillow" class="headerlink" title="Pillow"></a>Pillow</h2><p><a href="https://pillow.readthedocs.io/en/stable/" target="_blank" rel="noopener">官方文档</a></p><ol><li><p><code>Image</code>Module</p><blockquote><p>Open, rotate, and display an image (using the default viewer)</p></blockquote><p><code>PIL.Image.open(fp, mode=&#39;r’)</code><a href="https://pillow.readthedocs.io/en/stable/_modules/PIL/Image.html#open" target="_blank" rel="noopener">[source]</a></p><p>Opens and identifies the given image file.</p><p>This is a lazy operation; this function identifies the file, but the file remains open and the actual image data is not read from the file until you try to process the data (or call the <a href="https://pillow.readthedocs.io/en/stable/reference/Image.html#PIL.Image.Image.load" target="_blank" rel="noopener"><code>load()</code></a>method). See <a href="https://pillow.readthedocs.io/en/stable/reference/Image.html#PIL.Image.new" target="_blank" rel="noopener"><code>new()</code></a>. See <a href="https://pillow.readthedocs.io/en/stable/reference/open_files.html#file-handling" target="_blank" rel="noopener">File Handling in Pillow</a>.</p><p>| Parameters: | <strong>fp</strong> – A filename (string), pathlib.Path object or a file object. The file object must implement <code>read()</code>, <code>seek()</code>, and <code>tell()</code> methods, and be opened in binary mode.<strong>mode</strong> – The mode. If given, this argument must be “r”. |<br>| ———– | ———————————————————— |<br>| Returns:    | An <a href="https://pillow.readthedocs.io/en/stable/reference/Image.html#PIL.Image.Image" target="_blank" rel="noopener"><code>Image</code></a> object. |<br>| Raises:     | <strong>IOError</strong> – If the file cannot be found, or the image cannot be opened and identified. |</p></li><li><p><code>ImageDraw</code>Module</p><blockquote><p>The <code>ImageDraw</code> module provides simple 2D graphics for <a href="https://pillow.readthedocs.io/en/stable/reference/Image.html#PIL.Image.Image" target="_blank" rel="noopener"><code>Image</code></a> objects. You can use this module to create new images, annotate or retouch existing images, and to generate graphics on the fly for web use.</p></blockquote><p>class<code>PIL.ImageDraw.Draw(im, mode=None)</code></p><p>Creates an object that can be used to draw in the given image.</p><p>Note that the image will be modified in place.</p><p>Parameters:  </p><ul><li><p><strong>im</strong> </p></li><li><p>The image to draw in.<strong>mode</strong> – Optional mode to use for color values. For RGB images, this argument can be RGB or RGBA (to blend the drawing into the image). For all other modes, this argument must be the same as the image mode. If omitted, the mode defaults to the mode of the image.</p></li></ul><p><code>PIL.ImageDraw.ImageDraw.text(xy, text, fill=None, font=None, anchor=None, spacing=0, align=&quot;left&quot;, direction=None, features=None)</code></p><p>Draws the string at the given position.</p><ul><li><p><strong>xy</strong> – Top left corner of the text.</p></li><li><p><strong>text</strong> – Text to be drawn. If it contains any newline characters, the text is passed on to multiline_text()</p></li><li><p><strong>fill</strong> – Color to use for the text.</p></li><li><p><strong>font</strong> – An <code>ImageFont</code> instance.</p></li><li><p><strong>spacing</strong> – If the text is passed on to multiline_text(), the number of pixels between lines.</p></li><li><p><strong>align</strong> – If the text is passed on to multiline_text(), “left”, “center” or “right”.</p></li><li><p>direction </p><p>Direction of the text. It can be ‘rtl’ (right to left), ‘ltr’ (left to right) or ‘ttb’ (top to bottom). Requires libraqm.</p><p><em>New in version 4.2.0.</em></p></li><li><p>features</p><p>A list of OpenType font features to be used during text layout. This is usually used to turn on optional font features that are not enabled by default, for example ‘dlig’ or ‘ss01’, but can be also used to turn off default font features for example ‘-liga’ to disable ligatures or ‘-kern’ to disable kerning. To get all supported features, see<a href="https://docs.microsoft.com/en-us/typography/opentype/spec/featurelist" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/typography/opentype/spec/featurelist</a>Requires libraqm.</p><p><em>New in version 4.2.0.</em></p></li></ul></li><li><p><code>ImageFont</code>Module</p><blockquote><p>The <code>ImageFont</code> module defines a class with the same name. Instances of this class store bitmap fonts, and are used with the <code>PIL.ImageDraw.Draw.text()</code> method.</p></blockquote><p><code>PIL.ImageFont.truetype(font=None, size=10, index=0, encoding=&#39;&#39;, layout_engine=None)</code></p><p>Load a TrueType or OpenType font from a file or file-like object, and create a font object. This function loads a font object from the given file or file-like object, and creates a font object for a font of the given size.</p><p>This function requires the _imagingft service.</p><ul><li><strong>font</strong> – A filename or file-like object containing a TrueType font. Under Windows, if the file is not found in this filename, the loader also looks in Windows <code>fonts/</code>directory.</li><li><strong>size</strong> – The requested size, in points.</li><li><strong>index</strong> – Which font face to load (default is first available face).</li><li><strong>encoding</strong> – Which font encoding to use (default is Unicode). Common encodings are “unic” (Unicode), “symb” (Microsoft Symbol), “ADOB” (Adobe Standard), “ADBE” (Adobe Expert), and “armn” (Apple Roman). See the FreeType documentation for more information.</li><li><strong>layout_engine</strong> – Which layout engine to use, if available:ImageFont.LAYOUT_BASIC or ImageFont.LAYOUT_RAQM.</li></ul><p>##<a href="https://docs.python.org/2/library/collections.html#module-collections" target="_blank" rel="noopener"><code>collections</code></a></p></li><li><p><a href="https://docs.python.org/2/library/collections.html#collections.Counter" target="_blank" rel="noopener"><code>Counter</code></a></p><blockquote><p>A counter tool is provided to support convenient and rapid tallies. For example:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; # Tally occurrences of words in a list</span><br><span class="line">&gt;&gt;&gt; cnt = Counter()</span><br><span class="line">&gt;&gt;&gt; for word in [&apos;red&apos;, &apos;blue&apos;, &apos;red&apos;, &apos;green&apos;, &apos;blue&apos;, &apos;blue&apos;]:</span><br><span class="line">...     cnt[word] += 1</span><br><span class="line">&gt;&gt;&gt; cnt</span><br><span class="line">Counter(&#123;&apos;blue&apos;: 3, &apos;red&apos;: 2, &apos;green&apos;: 1&#125;)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; # Find the ten most common words in Hamlet</span><br><span class="line">&gt;&gt;&gt; import re</span><br><span class="line">&gt;&gt;&gt; words = re.findall(r&apos;\w+&apos;, open(&apos;hamlet.txt&apos;).read().lower())</span><br><span class="line">&gt;&gt;&gt; Counter(words).most_common(10)</span><br><span class="line">[(&apos;the&apos;, 1143), (&apos;and&apos;, 966), (&apos;to&apos;, 762), (&apos;of&apos;, 669), (&apos;i&apos;, 631),</span><br><span class="line"> (&apos;you&apos;, 554),  (&apos;a&apos;, 546), (&apos;my&apos;, 514), (&apos;hamlet&apos;, 471), (&apos;in&apos;, 451)]</span><br></pre></td></tr></table></figure><ul><li><p><code>most_common</code>([<em>n</em>])</p><p>Return a list of the <em>n</em> most common elements and their counts from the most common to the least. If <em>n</em> is omitted or <code>None</code>, <a href="https://docs.python.org/2/library/collections.html#collections.Counter.most_common" target="_blank" rel="noopener"><code>most_common()</code></a> returns <em>all</em> elements in the counter. Elements with equal counts are ordered arbitrarily:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; Counter(&apos;abracadabra&apos;).most_common(3)</span><br><span class="line">[(&apos;a&apos;, 5), (&apos;r&apos;, 2), (&apos;b&apos;, 2)]</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="re"><a href="#re" class="headerlink" title="re"></a>re</h2><h2 id="bs4"><a href="#bs4" class="headerlink" title="bs4"></a>bs4</h2><h3 id="BeautifulSoup"><a href="#BeautifulSoup" class="headerlink" title="BeautifulSoup"></a>BeautifulSoup</h3><p>使用BeautifulSoup解析这段代码,能够得到一个 <code>BeautifulSoup</code> 的对象,并能按照标准的缩进格式的结构输出:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(html_doc, <span class="string">'html.parser'</span>)</span><br><span class="line"></span><br><span class="line">print(soup.prettify())</span><br></pre></td></tr></table></figure><p>几个简单的浏览结构化数据的方法:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">soup.title</span><br><span class="line"><span class="comment"># &lt;title&gt;The Dormouse's story&lt;/title&gt;</span></span><br><span class="line"></span><br><span class="line">soup.title.name</span><br><span class="line"><span class="comment"># u'title'</span></span><br><span class="line"></span><br><span class="line">soup.title.string</span><br><span class="line"><span class="comment"># u'The Dormouse's story'</span></span><br><span class="line"></span><br><span class="line">soup.title.parent.name</span><br><span class="line"><span class="comment"># u'head'</span></span><br><span class="line"></span><br><span class="line">soup.p</span><br><span class="line"><span class="comment"># &lt;p class="title"&gt;&lt;b&gt;The Dormouse's story&lt;/b&gt;&lt;/p&gt;</span></span><br><span class="line"></span><br><span class="line">soup.p[<span class="string">'class'</span>]</span><br><span class="line"><span class="comment"># u'title'</span></span><br><span class="line"></span><br><span class="line">soup.a</span><br><span class="line"><span class="comment"># &lt;a class="sister" href="http://example.com/elsie" id="link1"&gt;Elsie&lt;/a&gt;</span></span><br><span class="line"></span><br><span class="line">soup.find_all(<span class="string">'a'</span>)</span><br><span class="line"><span class="comment"># [&lt;a class="sister" href="http://example.com/elsie" id="link1"&gt;Elsie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class="sister" href="http://example.com/lacie" id="link2"&gt;Lacie&lt;/a&gt;,</span></span><br><span class="line"><span class="comment">#  &lt;a class="sister" href="http://example.com/tillie" id="link3"&gt;Tillie&lt;/a&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.find(id=<span class="string">"link3"</span>)</span><br><span class="line"><span class="comment"># &lt;a class="sister" href="http://example.com/tillie" id="link3"&gt;Tillie&lt;/a&gt;</span></span><br></pre></td></tr></table></figure><p>从文档中找到所有<a>标签的链接:</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> link <span class="keyword">in</span> soup.find_all(<span class="string">'a'</span>):</span><br><span class="line">    print(link.get(<span class="string">'href'</span>))</span><br><span class="line">    <span class="comment"># http://example.com/elsie</span></span><br><span class="line">    <span class="comment"># http://example.com/lacie</span></span><br><span class="line">    <span class="comment"># http://example.com/tillie</span></span><br></pre></td></tr></table></figure><p>从文档中获取所有文字内容:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(soup.get_text())</span><br></pre></td></tr></table></figure><p>Beautiful Soup支持Python标准库中的HTML解析器,还支持一些第三方的解析器,其中一个是 <a href="http://lxml.de/" target="_blank" rel="noopener">lxml</a> .根据操作系统不同,可以选择下列方法来安装lxml:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install Python-lxml</span><br><span class="line">$ easy_install lxml</span><br><span class="line">$ pip install lxml</span><br></pre></td></tr></table></figure><p>另一个可供选择的解析器是纯Python实现的 <a href="http://code.google.com/p/html5lib/" target="_blank" rel="noopener">html5lib</a> , html5lib的解析方式与浏览器相同,可以选择下列方法来安装html5lib:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install Python-html5lib</span><br><span class="line">$ easy_install html5lib</span><br><span class="line">$ pip install html5lib</span><br></pre></td></tr></table></figure><p>下表列出了主要的解析器,以及它们的优缺点:</p><table><thead><tr><th>解析器</th><th>使用方法</th><th>优势</th><th>劣势</th></tr></thead><tbody><tr><td>Python标准库</td><td><code>BeautifulSoup(markup,&quot;html.parser&quot;)</code></td><td>Python的内置标准库执行速度适中文档容错能力强</td><td>Python 2.7.3 or 3.2.2)前 的版本中文档容错能力差</td></tr><tr><td>lxml HTML 解析器</td><td><code>BeautifulSoup(markup,&quot;lxml&quot;)</code></td><td>速度快文档容错能力强</td><td>需要安装C语言库</td></tr><tr><td>lxml XML 解析器</td><td><code>BeautifulSoup(markup,[&quot;lxml-xml&quot;])</code> <code>BeautifulSoup(markup,&quot;xml&quot;)</code></td><td>速度快唯一支持XML的解析器</td><td>需要安装C语言库</td></tr><tr><td>html5lib</td><td><code>BeautifulSoup(markup,&quot;html5lib&quot;)</code></td><td>最好的容错性以浏览器的方式解析文档生成HTML5格式的文档</td><td>速度慢不依赖外部扩展</td></tr></tbody></table><h2 id="The-Worksheet-Class"><a href="#The-Worksheet-Class" class="headerlink" title="The Worksheet Class"></a>The Worksheet Class</h2><blockquote><p>The worksheet class represents an Excel worksheet. It handles operations such as writing data to cells or formatting worksheet layout.</p><p>A worksheet object isn’t instantiated directly. Instead a new worksheet is created by calling the <a href="https://xlsxwriter.readthedocs.io/workbook.html#add_worksheet" target="_blank" rel="noopener"><code>add_worksheet()</code></a> method from a <a href="https://xlsxwriter.readthedocs.io/workbook.html#Workbook" target="_blank" rel="noopener"><code>Workbook()</code></a> object:</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">workbook   = xlsxwriter.Workbook(<span class="string">'filename.xlsx'</span>)</span><br><span class="line"></span><br><span class="line">worksheet1 = workbook.add_worksheet()</span><br><span class="line">worksheet2 = workbook.add_worksheet()</span><br><span class="line"></span><br><span class="line">worksheet1.write(<span class="string">'A1'</span>, <span class="number">123</span>)</span><br><span class="line"></span><br><span class="line">workbook.close()</span><br></pre></td></tr></table></figure><ul><li><p><strong>worksheet.write()</strong></p><p><code>write</code>(<em>row</em>, <em>col</em>, *<em>args</em>)</p><p>Write generic data to a worksheet cell.</p><p>| Parameters: | <strong>row</strong> – The cell row (zero indexed).<strong>col</strong> – The cell column (zero indexed).<strong>*args</strong> – The additional args that are passed to the sub methods such as number, string and cell_format. |<br>| ———– | ———————————————————— |<br>| Returns:    | 0: Success.                                                  |<br>| Returns:    | -1: Row or column is out of worksheet bounds.                |<br>| Returns:    | Other values from the called write methods.                  |</p><p>Here are some examples:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">worksheet.write(<span class="number">0</span>, <span class="number">0</span>, <span class="string">'Hello'</span>)          <span class="comment"># write_string()</span></span><br><span class="line">worksheet.write(<span class="number">1</span>, <span class="number">0</span>, <span class="string">'World'</span>)          <span class="comment"># write_string()</span></span><br><span class="line">worksheet.write(<span class="number">2</span>, <span class="number">0</span>, <span class="number">2</span>)                <span class="comment"># write_number()</span></span><br><span class="line">worksheet.write(<span class="number">3</span>, <span class="number">0</span>, <span class="number">3.00001</span>)          <span class="comment"># write_number()</span></span><br><span class="line">worksheet.write(<span class="number">4</span>, <span class="number">0</span>, <span class="string">'=SIN(PI()/4)'</span>)   <span class="comment"># write_formula()</span></span><br><span class="line">worksheet.write(<span class="number">5</span>, <span class="number">0</span>, <span class="string">''</span>)               <span class="comment"># write_blank()</span></span><br><span class="line">worksheet.write(<span class="number">6</span>, <span class="number">0</span>, <span class="keyword">None</span>)             <span class="comment"># write_blank()</span></span><br></pre></td></tr></table></figure><p><img src="https://xlsxwriter.readthedocs.io/_images/worksheet01.png" alt="_images/worksheet01.png"></p><p>Excel makes a distinction between data types such as strings, numbers, blanks, formulas and hyperlinks. To simplify the process of writing data to an XlsxWriter file the <code>write()</code> method acts as a general alias for several more specific methods:</p><ul><li><a href="https://xlsxwriter.readthedocs.io/worksheet.html#write_string" target="_blank" rel="noopener"><code>write_string()</code></a></li><li><a href="https://xlsxwriter.readthedocs.io/worksheet.html#write_number" target="_blank" rel="noopener"><code>write_number()</code></a></li><li><a href="https://xlsxwriter.readthedocs.io/worksheet.html#write_blank" target="_blank" rel="noopener"><code>write_blank()</code></a></li><li><a href="https://xlsxwriter.readthedocs.io/worksheet.html#write_formula" target="_blank" rel="noopener"><code>write_formula()</code></a></li><li><a href="https://xlsxwriter.readthedocs.io/worksheet.html#write_datetime" target="_blank" rel="noopener"><code>write_datetime()</code></a></li><li><a href="https://xlsxwriter.readthedocs.io/worksheet.html#write_boolean" target="_blank" rel="noopener"><code>write_boolean()</code></a></li><li><a href="https://xlsxwriter.readthedocs.io/worksheet.html#write_url" target="_blank" rel="noopener"><code>write_url()</code></a></li></ul></li></ul><h2 id="Enumerate"><a href="#Enumerate" class="headerlink" title="Enumerate"></a>Enumerate</h2><p>Enumerate is a built-in function of Python. Its usefulness can not be summarized in a single line. Yet most of the newcomers and even some advanced programmers are unaware of it. It allows us to loop over something and have an automatic counter. Here is an example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for counter, value in enumerate(some_list):</span><br><span class="line">    print(counter, value)</span><br></pre></td></tr></table></figure><p>And there is more! <code>enumerate</code> also accepts an optional argument which makes it even more useful.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">my_list = [&apos;apple&apos;, &apos;banana&apos;, &apos;grapes&apos;, &apos;pear&apos;]</span><br><span class="line">for c, value in enumerate(my_list, 1):</span><br><span class="line">    print(c, value)</span><br><span class="line"></span><br><span class="line"># Output:</span><br><span class="line"># 1 apple</span><br><span class="line"># 2 banana</span><br><span class="line"># 3 grapes</span><br><span class="line"># 4 pear</span><br></pre></td></tr></table></figure><p>The optional argument allows us to tell <code>enumerate</code> from where to start the index. You can also create tuples containing the index and list item using a list. Here is an example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">my_list = [<span class="string">'apple'</span>, <span class="string">'banana'</span>, <span class="string">'grapes'</span>, <span class="string">'pear'</span>]</span><br><span class="line">counter_list = list(enumerate(my_list, <span class="number">1</span>))</span><br><span class="line">print(counter_list)</span><br><span class="line"><span class="comment"># Output: [(1, 'apple'), (2, 'banana'), (3, 'grapes'), (4, 'pear')]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Python </category>
          
          <category> Library </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「SMTC」0000.py</title>
      <link href="/posts/1847041040.html"/>
      <url>/posts/1847041040.html</url>
      <content type="html"><![CDATA[<h1 id="「SMTC」0000-py"><a href="#「SMTC」0000-py" class="headerlink" title="「SMTC」0000.py"></a>「SMTC」0000.py</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>Show me the code 第0000题 Python版</p><a href="/posts/724513738.html" title="完整题目">完整题目</a></blockquote><a id="more"></a><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>第 0000 题：将你的 QQ 头像（或者微博头像）右上角加上红色的数字，类似于微信未读信息数量那种提示效果。 类似于图中效果：</p><p><img src="https://camo.githubusercontent.com/d518d3929e4054ce2f9183b23e52908da7e5632d/687474703a2f2f692e696d6775722e636f6d2f736732646b75592e706e673f31" alt="头像"></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p><a href="https://pillow.readthedocs.io/en/4.0.x/reference/ImageDraw.html" target="_blank" rel="noopener">利用Pillow模块中提供的ImageDraw</a>在图片上画图形或者文字。</p><p>首先打开图片，使用<code>Image.open()</code>，在这之前需要导入<code>pillow</code>模块库，<code>import PIL</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Creates an object that can be used to draw in the given image.</span></span><br><span class="line"><span class="comment"># PIL.ImageDraw.Draw(im, mode=None)</span></span><br><span class="line">imgDraw = ImageDraw.Draw(image)</span><br></pre></td></tr></table></figure><p>设置填充字体以及颜色，获取图片大小，好设置填充位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 颜色</span></span><br><span class="line">fillColor = <span class="string">'#ff0000'</span></span><br><span class="line"><span class="comment"># 大小</span></span><br><span class="line">width, height = image.size</span><br><span class="line"><span class="comment"># 字体</span></span><br><span class="line">myFont = ImageFont.truetype(<span class="string">'/Library/Fonts/Tahoma.ttf'</span>, size=width//<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>接着<code>imgDraw.text((width-100, 0), &#39;hello&#39;, *fill*=fillColor, *font*=myFont)</code>，填充数字或者单词。</p><p>保存图片完成。</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> PIL</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageDraw</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageFont</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_num</span><span class="params">(imgName)</span>:</span></span><br><span class="line">    <span class="comment"># 打开图片</span></span><br><span class="line">    image = Image.open(imgName)</span><br><span class="line">    <span class="comment"># Creates an object that can be used to draw in the given image.</span></span><br><span class="line">    <span class="comment"># PIL.ImageDraw.Draw(im, mode=None)</span></span><br><span class="line">    imgDraw = ImageDraw.Draw(image)</span><br><span class="line">    <span class="comment"># 颜色</span></span><br><span class="line">    fillColor = <span class="string">'#ff0000'</span></span><br><span class="line">    <span class="comment"># 大小</span></span><br><span class="line">    width, height = image.size</span><br><span class="line">    <span class="comment"># 字体</span></span><br><span class="line">    <span class="comment"># 使用中文字体时才可以渲染中文</span></span><br><span class="line">    myFont = ImageFont.truetype(</span><br><span class="line">        <span class="string">'/Library/Fonts/Songti.ttc'</span>, size=width//<span class="number">10</span>)</span><br><span class="line">    imgDraw.text((width<span class="number">-100</span>, <span class="number">0</span>), <span class="string">u'你好'</span>, fill=fillColor, font=myFont)</span><br><span class="line">    <span class="comment"># image.show()</span></span><br><span class="line">    image.save(<span class="string">'/Users/lau/Documents/Coding/Python/SMTC/0000/result.jpg'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    add_num(<span class="string">'/Users/lau/Documents/Coding/Python/SMTC/0000/0000.jpeg'</span>)</span><br></pre></td></tr></table></figure><p><strong>原图</strong>：</p><p><img src="https://ws2.sinaimg.cn/large/006tNc79gy1fzohb50olxj30cs0cs3zk.jpg" alt="0000"></p><p><strong>效果图</strong>：</p><p><img src="https://ws3.sinaimg.cn/large/006tNc79gy1fzofwijluaj30cs0cswfk.jpg" alt="result"></p><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><ol><li><p>ModuleNotFoundError: No module named ‘PIL’</p><p>由于pillow模块未安装，所以需要使用pip(3)安装</p><p><code>pip3 install Pillow</code></p></li><li><p><code>/usr/local/bin/python3 -m pip install -U pylint --user</code></p><p><a href="https://www.ibm.com/developerworks/cn/linux/l-cn-pylint/index.html" target="_blank" rel="noopener">Pylint 是什么</a></p></li><li><p>ImageDraw</p><p><a href="https://pillow.readthedocs.io/en/4.0.x/reference/ImageDraw.html" target="_blank" rel="noopener">官方文档</a></p></li><li><p>找不到图片</p><p>相对路径找不到时，试试绝对路径。</p></li><li><p>如果要加汉字呢？编码问题怎么解决？</p><ul><li>换个中文字体</li><li>指定utf-8编码</li></ul></li></ol>]]></content>
      
      <categories>
          
          <category> Python </category>
          
          <category> SMTC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> SMTC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Show Me The Code</title>
      <link href="/posts/724513738.html"/>
      <url>/posts/724513738.html</url>
      <content type="html"><![CDATA[<h1 id="Show-Me-The-Code"><a href="#Show-Me-The-Code" class="headerlink" title="Show Me The Code"></a>Show Me The Code</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>Python 练习册，每天一个小程序</p><p>From<a href="https://github.com/Yixiaohan/show-me-the-code" target="_blank" rel="noopener"><strong>show me the code</strong></a></p></blockquote><a id="more"></a><blockquote><p>Talk is cheap. Show me the code.    –Linus Torvalds</p></blockquote><p><strong>第 0000 题：</strong> 将你的 QQ 头像（或者微博头像）右上角加上红色的数字，类似于微信未读信息数量那种提示效果。 类似于图中效果</p><p><img src="https://camo.githubusercontent.com/d518d3929e4054ce2f9183b23e52908da7e5632d/687474703a2f2f692e696d6775722e636f6d2f736732646b75592e706e673f31" alt="头像"></p><p><a href="/posts/1847041040.html">解答</a></p><p><strong>第 0001 题：</strong> 做为 Apple Store App 独立开发者，你要搞限时促销，为你的应用<strong>生成激活码</strong>（或者优惠券），使用 Python 如何生成 200 个激活码（或者优惠券）？</p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mysql.connector</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> mysql.connector</span><br><span class="line"></span><br><span class="line">forSelect = string.ascii_letters + string.digits</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_code</span><span class="params">(count, length)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(count):</span><br><span class="line">        Re = <span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> range(length):</span><br><span class="line">            Re += random.choice(forSelect)</span><br><span class="line">        <span class="keyword">yield</span> Re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_code</span><span class="params">()</span>:</span></span><br><span class="line">    conn = mysql.connector.connect(user=<span class="string">'root'</span>, password=<span class="string">'l'</span>, database=<span class="string">'test'</span>)</span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    codes = gen_code(<span class="number">200</span>, <span class="number">20</span>)</span><br><span class="line">    <span class="keyword">for</span> code <span class="keyword">in</span> codes:</span><br><span class="line">        cursor.execute(<span class="string">"INSERT INTO `code`(`code`) VALUES(%s)"</span>, params=[code])</span><br><span class="line">    conn.commit()</span><br><span class="line">    cursor.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    save_code()</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0002 题:</strong> 将 0001 题生成的 200 个激活码（或者优惠券）保存到 <strong>MySQL</strong> 关系型数据库中。</p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mysql.connector</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> mysql.connector</span><br><span class="line"></span><br><span class="line">forSelect = string.ascii_letters + string.digits</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_code</span><span class="params">(count, length)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(count):</span><br><span class="line">        Re = <span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> range(length):</span><br><span class="line">            Re += random.choice(forSelect)</span><br><span class="line">        <span class="keyword">yield</span> Re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_code</span><span class="params">()</span>:</span></span><br><span class="line">    conn = mysql.connector.connect(user=<span class="string">'root'</span>, password=<span class="string">'l'</span>, database=<span class="string">'test'</span>)</span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    codes = gen_code(<span class="number">200</span>, <span class="number">20</span>)</span><br><span class="line">    <span class="keyword">for</span> code <span class="keyword">in</span> codes:</span><br><span class="line">        cursor.execute(<span class="string">"INSERT INTO `code`(`code`) VALUES(%s)"</span>, params=[code])</span><br><span class="line">    conn.commit()</span><br><span class="line">    cursor.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    save_code()</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0003 题：</strong> 将 0001 题生成的 200 个激活码（或者优惠券）保存到 <strong>Redis</strong> 非关系型数据库中。</p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">forSelect = string.ascii_letters + string.digits</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_code</span><span class="params">(count, length)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(count):</span><br><span class="line">        Re = <span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> range(length):</span><br><span class="line">            Re += random.choice(forSelect)</span><br><span class="line">        <span class="keyword">yield</span> Re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_code</span><span class="params">()</span>:</span></span><br><span class="line">    r = redis.Redis(host=<span class="string">'127.0.0.1'</span>, port=<span class="string">'6379'</span>, password=<span class="string">'linyii'</span>)</span><br><span class="line">    codes = gen_code(<span class="number">200</span>, <span class="number">20</span>)</span><br><span class="line">    p = r.pipeline()</span><br><span class="line">    <span class="keyword">for</span> code <span class="keyword">in</span> codes:</span><br><span class="line">        p.sadd(<span class="string">'code'</span>, code)</span><br><span class="line">    p.execute()</span><br><span class="line">    <span class="keyword">return</span> r.scard(<span class="string">'code'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    save_code()</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0004 题：</strong> 任一个英文的纯文本文件，统计其中的单词出现的个数。</p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line">Text = <span class="string">"""</span></span><br><span class="line"><span class="string">bands which have connected them with another, and to assume among the powers of the earth, the separate and equal station to which the Laws of Nature and of Nature's God entitle them, a decent respect to the opinions of mankind requires that they should declare the causes which impel them to the separation.  We hold these truths to be</span></span><br><span class="line"><span class="string">self-evident, that all men are created equal, that they are endowed by their Creator with certain unalienable Rights, that among these are Life, Liberty and the pursuit of Happiness.--That to secure these rights, Governments are instituted among Men, deriving their just powers from the consent of the governed, --That whenever any Form of Government becomes destructive of these ends, it is the Right of the People to alter or to abolish it, and to institute new Government, laying its foundation on such principles and organizing its powers in such form, as to them shall seem most likely to effect their Safety and Happiness. """</span></span><br><span class="line"><span class="comment"># clean</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> <span class="string">'-.,\n'</span>:</span><br><span class="line">    Text = Text.replace(char, <span class="string">' '</span>)</span><br><span class="line">Text = Text.lower()</span><br><span class="line">word_list = Text.split()</span><br><span class="line"></span><br><span class="line"><span class="comment"># solution 1</span></span><br><span class="line">res = Counter(word_list).most_common()</span><br><span class="line"></span><br><span class="line"><span class="comment"># solution 2</span></span><br><span class="line"><span class="comment"># 使用字典，key-value，单词与个数一一对应</span></span><br><span class="line">d = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> word_list:</span><br><span class="line">    <span class="comment"># 找到个数然后+1，没有就默认0然后+1</span></span><br><span class="line">    <span class="comment"># dict.get(key, default = None)</span></span><br><span class="line">    <span class="comment"># key − This is the Key to be searched in the dictionary.</span></span><br><span class="line">    <span class="comment"># default − This is the Value to be returned in case key does not exist.</span></span><br><span class="line">    <span class="comment"># This method return a value for the given key. If key is not available, then returns default value None.</span></span><br><span class="line">    d[word] = d.get(word, <span class="number">0</span>)+<span class="number">1</span></span><br><span class="line"><span class="comment"># 使用列表为了排序</span></span><br><span class="line">word_freq = []</span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> d.items():</span><br><span class="line">    word_freq.append((value, key))</span><br><span class="line">word_freq.sort(reverse=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># solution 3</span></span><br><span class="line"><span class="comment"># 不使用get()方法</span></span><br><span class="line">d = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> word_list:</span><br><span class="line">    <span class="keyword">if</span> word <span class="keyword">not</span> <span class="keyword">in</span> d:</span><br><span class="line">        d[word] = <span class="number">0</span></span><br><span class="line">    d[word] += <span class="number">1</span></span><br><span class="line">word_freq = []</span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> d.items():</span><br><span class="line">    word_freq.append((value, key))</span><br><span class="line">word_freq.sort(reverse=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0005 题：</strong> 你有一个目录，装了很多照片，把它们的尺寸变成都不大于 iPhone5 分辨率的大小。</p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">path=<span class="string">'/Users/lau/Pictures'</span></span><br><span class="line">resPath=<span class="string">'/Users/lau/Desktop'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(resPath):</span><br><span class="line">    os.mkdir(resPath)</span><br><span class="line"><span class="keyword">for</span> fileName <span class="keyword">in</span> os.listdir(path):</span><br><span class="line">    <span class="comment"># mac系统会出现.DS_Store文件，会报错，所以简单的办法就是</span></span><br><span class="line">    <span class="comment"># 去这个文件夹删除隐藏文件</span></span><br><span class="line">    picPath=os.path.join(path,fileName)</span><br><span class="line">    print(picPath)</span><br><span class="line">    <span class="keyword">with</span> Image.open(picPath) <span class="keyword">as</span> im:</span><br><span class="line">        im.thumbnail((<span class="number">1366</span>,<span class="number">640</span>))</span><br><span class="line">        im.save(resPath+<span class="string">'/f_'</span>+fileName,<span class="string">'jpeg'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0006 题：</strong> 你有一个目录，放了你一个月的日记，都是 txt，为了避免分词的问题，假设内容都是英文，请统计出你认为每篇日记最重要的词。</p><p><a href="/posts/1266467788.html">解答</a></p><p><strong>第 0007 题：</strong> 有个目录，里面是你自己写过的程序，统计一下你写过多少行代码。包括空行和注释，但是要分别列出来。</p><p><a href="/posts/4089488553.html">解答</a></p><p><strong>第 0008 题：</strong> 一个HTML文件，找出里面的<strong>正文</strong>。</p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">html_body</span><span class="params">(filesPath)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(filesPath):</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    filesList = os.listdir(filesPath)</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> filesList:</span><br><span class="line">        filePath = os.path.join(filesPath, file)</span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(filePath) <span class="keyword">and</span> os.path.splitext(filePath)[<span class="number">1</span>] == <span class="string">'.html'</span>:</span><br><span class="line">            <span class="keyword">with</span> open(filePath) <span class="keyword">as</span> fileHtml:</span><br><span class="line">                text = BeautifulSoup(fileHtml, <span class="string">'lxml'</span>)</span><br><span class="line">                content = text.getText().strip(<span class="string">'\n'</span>)</span><br><span class="line">                print(content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    html_body(<span class="string">'./SMTC/source/0008'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0009 题：</strong> 一个HTML文件，找出里面的<strong>链接</strong>。</p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">html_link</span><span class="params">(filesPath)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(filesPath):</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    filesList = os.listdir(filesPath)</span><br><span class="line">    links = []</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> filesList:</span><br><span class="line">        filePath = os.path.join(filesPath, file)</span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(filePath) <span class="keyword">and</span> os.path.splitext(filePath)[<span class="number">1</span>] == <span class="string">'.html'</span>:</span><br><span class="line">            <span class="keyword">with</span> open(filePath) <span class="keyword">as</span> fileHtml:</span><br><span class="line">                text = BeautifulSoup(fileHtml, <span class="string">'lxml'</span>)</span><br><span class="line">                <span class="comment"># 找到a标签</span></span><br><span class="line">                <span class="keyword">for</span> link <span class="keyword">in</span> text.find_all(<span class="string">'a'</span>):</span><br><span class="line">                    <span class="comment"># 获取链接</span></span><br><span class="line">                    links.append(link.get(<span class="string">'href'</span>))</span><br><span class="line">    print(links)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    html_link(<span class="string">'./SMTC/source/0008'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0010 题：</strong> 使用 Python 生成类似于下图中的<strong>字母验证码图片</strong></p><p><img src="https://camo.githubusercontent.com/f80e7aa0d43b3685657b4d329f2809a28c82e12a/687474703a2f2f692e696d6775722e636f6d2f615668626567562e6a7067" alt="字母验证码"></p><ul><li><p><a href="http://stackoverflow.com/questions/2823316/generate-a-random-letter-in-python" target="_blank" rel="noopener">阅读资料</a></p></li><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 第 0010 题：使用 Python 生成类似于下图中的字母验证码图片</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageDraw, ImageFont, ImageFilter</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">randomLetter</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 大写字母65-90</span></span><br><span class="line">    <span class="comment"># 数字转字符</span></span><br><span class="line">    <span class="keyword">return</span> chr(random.randint(<span class="number">65</span>, <span class="number">90</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">randomColor</span><span class="params">(argc)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> argc == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> (random.randint(<span class="number">64</span>, <span class="number">255</span>), random.randint(<span class="number">64</span>, <span class="number">255</span>), random.randint(<span class="number">64</span>, <span class="number">255</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> (random.randint(<span class="number">0</span>, <span class="number">100</span>), random.randint(<span class="number">0</span>, <span class="number">100</span>), random.randint(<span class="number">0</span>, <span class="number">100</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_codepic</span><span class="params">(savePath)</span>:</span></span><br><span class="line">    width = <span class="number">60</span>*<span class="number">4</span></span><br><span class="line">    height = <span class="number">60</span></span><br><span class="line">    img = Image.new(<span class="string">'RGB'</span>, (width, height), (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">    <span class="comment"># 字体</span></span><br><span class="line">    font = ImageFont.truetype(</span><br><span class="line">        <span class="string">'/Library/Fonts/Songti.ttc'</span>, <span class="number">36</span>)</span><br><span class="line">    imgDraw = ImageDraw.Draw(img)</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(width):</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> range(height):</span><br><span class="line">            imgDraw.point((x, y), fill=randomColor(<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        imgDraw.text((<span class="number">60</span>*index+<span class="number">20</span>, <span class="number">5</span>), randomLetter(),</span><br><span class="line">                     font=font, fill=randomColor(<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">    img = img.filter(ImageFilter.BLUR)</span><br><span class="line">    img.save(savePath+<span class="string">'codepic.jpg'</span>, <span class="string">'JPEG'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    gen_codepic(<span class="string">'./SMTC/source/0010/'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0011 题：</strong> 敏感词文本文件 filtered_words.txt，里面的内容为以下内容，当用户输入敏感词语时，则打印出 Freedom，否则打印出 Human Rights。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">北京</span><br><span class="line">程序员</span><br><span class="line">公务员</span><br><span class="line">领导</span><br><span class="line">牛比</span><br><span class="line">牛逼</span><br><span class="line">你娘</span><br><span class="line">你妈</span><br><span class="line">love</span><br><span class="line">sex</span><br><span class="line">jiangge</span><br></pre></td></tr></table></figure><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 敏感词文本文件 filtered_words.txt，里面的内容为以下内容，当用户输入敏感词语时，则打印出 Freedom，否则打印出 Human Rights。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Freedom</span><span class="params">(filesPath)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(filesPath):</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    fileList=os.listdir(filesPath)</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> fileList:</span><br><span class="line">        filePath=os.path.join(filesPath,file)</span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(filePath) <span class="keyword">and</span> os.path.split(filePath)[<span class="number">1</span>]==<span class="string">'filtered_words.txt'</span>:</span><br><span class="line">            <span class="keyword">with</span> open(filePath) <span class="keyword">as</span> text:</span><br><span class="line">                text=text.read().split(<span class="string">'\n'</span>)</span><br><span class="line">                getInput=input(<span class="string">'input:'</span>)</span><br><span class="line">                <span class="keyword">if</span> getInput <span class="keyword">in</span> text:</span><br><span class="line">                    print(<span class="string">'Freedom'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    print(<span class="string">'Human Rights'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    Freedom(<span class="string">'./SMTC/source/0011'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0012 题：</strong> 敏感词文本文件 filtered_words.txt，里面的内容 和 0011题一样，当用户输入敏感词语，则用 星号 * 替换，例如当用户输入「北京是个好城市」，则变成「**是个好城市」。</p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 敏感词文本文件 filtered_words.txt，里面的内容 和 0011题一样，当用户输入敏感词语，则用 星号 * 替换，例如当用户输入「北京是个好城市」，则变成「**是个好城市」。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Freedom</span><span class="params">(filePath)</span>:</span></span><br><span class="line">    word_filter = set()</span><br><span class="line">    <span class="keyword">with</span> open(filePath+<span class="string">'filtered_words.txt'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> f.readlines():</span><br><span class="line">            word_filter.add(word.strip())</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        s = input(<span class="string">'input:'</span>)</span><br><span class="line">        <span class="keyword">if</span> s == <span class="string">'exit'</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">for</span> w <span class="keyword">in</span> word_filter:</span><br><span class="line">            <span class="keyword">if</span> w <span class="keyword">in</span> s:</span><br><span class="line">                s = s.replace(w, <span class="string">'*'</span>*len(w))</span><br><span class="line">        print(s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    Freedom(<span class="string">'./SMTC/source/0011/'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0013 题：</strong> 用 Python 写一个爬图片的程序，爬 <a href="http://tieba.baidu.com/p/2166231880" target="_blank" rel="noopener">这个链接里的日本妹子图片 :-)</a></p><ul><li><p><a href="http://www.v2ex.com/t/61686" target="_blank" rel="noopener">参考代码</a></p></li><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 用 Python 写一个爬图片的程序，爬这个链接里的日本妹子图片(http://tieba.baidu.com/p/2166231880) :-)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">spy_pic</span><span class="params">(url, savePath, header)</span>:</span></span><br><span class="line">    response = requests.get(url, headers=header)</span><br><span class="line">    content = BeautifulSoup(response.content, <span class="string">'lxml'</span>)</span><br><span class="line">    img_tag = content.find_all(<span class="string">'img'</span>)</span><br><span class="line">    img_link = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> img_tag:</span><br><span class="line">        <span class="keyword">if</span> i.get(<span class="string">'pic_type'</span>) == <span class="string">'0'</span>:</span><br><span class="line">            img_link.append(i.get(<span class="string">'src'</span>))</span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(savePath):</span><br><span class="line">        os.mkdir(savePath)</span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> img_link:</span><br><span class="line">        pic_html = requests.get(link)</span><br><span class="line">        picPath = savePath+str(index+<span class="number">1</span>)+<span class="string">'.'</span>+link.split(<span class="string">'.'</span>)[<span class="number">-1</span>]</span><br><span class="line">        <span class="keyword">with</span> open(picPath, <span class="string">'wb'</span>) <span class="keyword">as</span> pic:</span><br><span class="line">            pic.write(pic_html.content)</span><br><span class="line">            pic.flush</span><br><span class="line">        pic.close()</span><br><span class="line">        print(<span class="string">'第&#123;0&#125;张图片抓取完成'</span>.format(index+<span class="number">1</span>))</span><br><span class="line">        index += <span class="number">1</span></span><br><span class="line">    print(<span class="string">'抓取完成！'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    reqHeader = &#123;</span><br><span class="line">        <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line">        <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7'</span>,</span><br><span class="line">        <span class="string">'Cookie'</span>: <span class="string">'TIEBA_USERTYPE=7b00a4223cb9934b1b9270ad; wise_device=0; bdshare_firstime=1549795215089; Hm_lvt_98b9d8c2fd6608d564bf2ac2ae642948=1549795215; Hm_lvt_287705c8d9e2073d13275b18dbd746dc=1549795216; Hm_lpvt_98b9d8c2fd6608d564bf2ac2ae642948=1549847500; Hm_lpvt_287705c8d9e2073d13275b18dbd746dc=1549847500; BAIDUID=48130036CAF55267908C2180103698DC:FG=1; cflag=13%3A3; BDUSS=HN6WUx-aGVQMGlNR0NlcEhCd0pjUkJVQXpBbWFxY3hYTjZNfmozdjV6RFlkb2hjQVFBQUFBJCQAAAAAAAAAAAEAAAAZhpwmbmljZWxpdXppAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjpYFzY6WBcO; TIEBAUID=35f770fc8e0ac33633210842; STOKEN=42c9d0d4dc2e420802cf269968ec38e4101a2a5d7f095a603f36b0261f413597'</span>,</span><br><span class="line">        <span class="string">'Host'</span>: <span class="string">'tieba.baidu.com'</span>,</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.96 Safari/537.36'</span></span><br><span class="line">    &#125;</span><br><span class="line">    spy_pic(<span class="string">'http://tieba.baidu.com/p/2166231880'</span>, <span class="string">'./SMTC/source/0013/'</span>, reqHeader</span><br><span class="line">            )</span><br></pre></td></tr></table></figure></li><li><p>效果展示</p><p><img src="https://ws4.sinaimg.cn/large/006tNc79gy1g02kz3zr68j31hc0r04la.jpg" alt="image-20190211164921861"><img src="https://ws2.sinaimg.cn/large/006tNc79gy1g02kyeox86j30xe0mq1kx.jpg" alt="image-20190211164828843"></p></li><li><p><em>参考</em></p><p><a href="https://blog.csdn.net/IllegalName/article/details/77366508" target="_blank" rel="noopener">【Python爬虫系列】使用requests爬取图片</a></p><p><a href="https://jacksonleon.gitee.io/posts/247701255.html">小说爬虫</a></p></li></ul><p><strong>第 0014 题：</strong> 纯文本文件 student.txt为学生信息, 里面的内容（包括花括号）如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;1&quot;:[&quot;张三&quot;,150,120,100],</span><br><span class="line">&quot;2&quot;:[&quot;李四&quot;,90,99,95],</span><br><span class="line">&quot;3&quot;:[&quot;王五&quot;,60,66,68]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请将上述内容写到 student.xls 文件中，如下图所示：</p><p><img src="https://camo.githubusercontent.com/18dea9401449e4ca894d40d55134d9c28083280d/687474703a2f2f692e696d6775722e636f6d2f6e50446c706d652e6a7067" alt="student.xls"></p><ul><li><p><a href="http://www.cnblogs.com/skynet/archive/2013/05/06/3063245.html" target="_blank" rel="noopener">阅读资料</a> 腾讯游戏开发 XML 和 Excel 内容相互转换</p></li><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 纯文本文件 student.txt为学生信息, 里面的内容（包括花括号）如下所示</span></span><br><span class="line"><span class="keyword">from</span> xlwt <span class="keyword">import</span> Workbook</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xml2exl</span><span class="params">(filePath)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(filePath+<span class="string">'student.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> dic:</span><br><span class="line">        content = json.load(dic)</span><br><span class="line">        workbook = Workbook()</span><br><span class="line">        sheet = workbook.add_sheet(<span class="string">'student'</span>, cell_overwrite_ok=<span class="keyword">True</span>)</span><br><span class="line">        <span class="comment"># 输出元素序号</span></span><br><span class="line">        <span class="keyword">for</span> index, (key, values) <span class="keyword">in</span> enumerate(content.items()):</span><br><span class="line">            <span class="comment"># sheet.write(row, col, *args)</span></span><br><span class="line">            <span class="comment"># 输入第一列数据</span></span><br><span class="line">            sheet.write(index, <span class="number">0</span>, key)</span><br><span class="line">            <span class="keyword">for</span> i, value <span class="keyword">in</span> enumerate(values):</span><br><span class="line">                <span class="comment"># 输入每一行第二列开始的数据</span></span><br><span class="line">                sheet.write(index, i+<span class="number">1</span>, value)</span><br><span class="line">        workbook.save(filePath+<span class="string">'student.xls'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    xml2exl(<span class="string">'./SMTC/source/0014/'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0015 题：</strong>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;1&quot; : &quot;上海&quot;,</span><br><span class="line">    &quot;2&quot; : &quot;北京&quot;,</span><br><span class="line">    &quot;3&quot; : &quot;成都&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请将上述内容写到 city.xls 文件中，如下图所示：</p><p><img src="https://camo.githubusercontent.com/61120377319bfe5520c9d73f51776f923d6bd3b7/687474703a2f2f692e696d6775722e636f6d2f724f4862557a672e706e67" alt="city.xls"></p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 纯文本文件 city.txt为城市信息, 里面的内容（包括花括号）如下所示：</span></span><br><span class="line"><span class="keyword">from</span> xlwt <span class="keyword">import</span> Workbook</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xml2exl</span><span class="params">(filePath)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(filePath+<span class="string">'city.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        content = json.load(f)</span><br><span class="line">        workBook = Workbook()</span><br><span class="line">        sheet = workBook.add_sheet(<span class="string">'city'</span>, cell_overwrite_ok=<span class="keyword">True</span>)</span><br><span class="line">        <span class="comment"># enumerate可以分开词语</span></span><br><span class="line">        <span class="keyword">for</span> index, (key, value) <span class="keyword">in</span> enumerate(content.items()):</span><br><span class="line">            sheet.write(index, <span class="number">0</span>, key)</span><br><span class="line">            <span class="comment"># 与上一题不同的是</span></span><br><span class="line">            <span class="comment"># 这题中的value只有一列值</span></span><br><span class="line">            <span class="comment"># 不需要使用enumerate</span></span><br><span class="line">            sheet.write(index, <span class="number">1</span>, value)</span><br><span class="line">        workBook.save(filePath+<span class="string">'city.xls'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    xml2exl(<span class="string">'./SMTC/source/0015/'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0016 题：</strong> 纯文本文件 numbers.txt, 里面的内容（包括方括号）如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">[1, 82, 65535], </span><br><span class="line">[20, 90, 13],</span><br><span class="line">[26, 809, 1024]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>请将上述内容写到 numbers.xls 文件中，如下图所示：</p><p><img src="https://camo.githubusercontent.com/60da4d596289212b517547ddcc2408bfc9f39087/687474703a2f2f692e696d6775722e636f6d2f69757a305062762e706e67" alt="numbers.xls"></p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 纯文本文件 numbers.txt, 里面的内容（包括方括号）</span></span><br><span class="line"><span class="keyword">from</span> xlwt <span class="keyword">import</span> Workbook</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">json2xls</span><span class="params">(filePath)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(filePath+<span class="string">'numbers.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        content = json.load(f)</span><br><span class="line">        workbook = Workbook()</span><br><span class="line">        sheet = workbook.add_sheet(<span class="string">'numbers'</span>, cell_overwrite_ok=<span class="keyword">True</span>)</span><br><span class="line">        <span class="keyword">for</span> row, list <span class="keyword">in</span> enumerate(content):</span><br><span class="line">            <span class="keyword">for</span> col, value <span class="keyword">in</span> enumerate(list):</span><br><span class="line">                sheet.write(row, col, value)</span><br><span class="line">        workbook.save(filePath+<span class="string">'numbers.xls'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    json2xls(<span class="string">'./SMTC/source/0016/'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0017 题：</strong> 将 第 0014 题中的 student.xls 文件中的内容写到 student.xml 文件中，如</p><p>下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">&lt;students&gt;</span><br><span class="line">&lt;!-- </span><br><span class="line">学生信息表</span><br><span class="line">&quot;id&quot; : [名字, 数学, 语文, 英文]</span><br><span class="line">--&gt;</span><br><span class="line">&#123;</span><br><span class="line">&quot;1&quot; : [&quot;张三&quot;, 150, 120, 100],</span><br><span class="line">&quot;2&quot; : [&quot;李四&quot;, 90, 99, 95],</span><br><span class="line">&quot;3&quot; : [&quot;王五&quot;, 60, 66, 68]</span><br><span class="line">&#125;</span><br><span class="line">&lt;/students&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 将 第 0014 题中的 student.xls 文件中的内容写到 student.xml 文件中</span></span><br><span class="line"><span class="keyword">from</span> xml.dom.minidom <span class="keyword">import</span> Document</span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xls2xml</span><span class="params">(filePath)</span>:</span></span><br><span class="line">    doc = Document()</span><br><span class="line">    root = doc.createElement(<span class="string">'root'</span>)</span><br><span class="line">    doc.appendChild(root)</span><br><span class="line">    students = doc.createElement(<span class="string">'students'</span>)</span><br><span class="line">    root.appendChild(students)</span><br><span class="line">    comment = doc.createComment(<span class="string">'学生信息表\n\t\t"id" : [名字, 数学, 语文, 英文]\n\t\t'</span>)</span><br><span class="line">    students.appendChild(comment)</span><br><span class="line"></span><br><span class="line">    content = xlrd.open_workbook(filePath+<span class="string">'student.xls'</span>)</span><br><span class="line">    sheet = content.sheet_by_index(<span class="number">0</span>)</span><br><span class="line">    nrows = sheet.nrows</span><br><span class="line">    sheet_content = dict()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(nrows):</span><br><span class="line">        sheet_content[str(sheet.cell(i, <span class="number">0</span>).value)] = sheet.row_values(i)[<span class="number">1</span>:]</span><br><span class="line">    students.appendChild(doc.createTextNode(str(sheet_content)))</span><br><span class="line">    <span class="keyword">with</span> open(filePath+<span class="string">'student.xml'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> student_xml:</span><br><span class="line">        student_xml.write(doc.toprettyxml())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    xls2xml(<span class="string">'./SMTC/source/0014/'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0018 题：</strong> 将 第 0015 题中的 city.xls 文件中的内容写到 city.xml 文件中，如下 所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xmlversion=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">&lt;cities&gt;</span><br><span class="line">&lt;!-- </span><br><span class="line">城市信息</span><br><span class="line">--&gt;</span><br><span class="line">&#123;</span><br><span class="line">&quot;1&quot; : &quot;上海&quot;,</span><br><span class="line">&quot;2&quot; : &quot;北京&quot;,</span><br><span class="line">&quot;3&quot; : &quot;成都&quot;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/cities&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 将 第 0015 题中的 city.xls 文件中的内容写到 city.xml 文件中</span></span><br><span class="line"><span class="keyword">from</span> xml.dom.minidom <span class="keyword">import</span> Document</span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xls2xml</span><span class="params">(filePath)</span>:</span></span><br><span class="line">    doc = Document()</span><br><span class="line">    root = doc.createElement(<span class="string">'root'</span>)</span><br><span class="line">    doc.appendChild(root)</span><br><span class="line">    cities = doc.createElement(<span class="string">'cities'</span>)</span><br><span class="line">    root.appendChild(cities)</span><br><span class="line">    comment = doc.createComment(<span class="string">'\n\t\t城市信息\n\t\t'</span>)</span><br><span class="line">    cities.appendChild(comment)</span><br><span class="line"></span><br><span class="line">    content = xlrd.open_workbook(filePath+<span class="string">'city.xls'</span>, <span class="string">'r'</span>)</span><br><span class="line">    sheet = content.sheet_by_index(<span class="number">0</span>)</span><br><span class="line">    nrows = sheet.nrows</span><br><span class="line">    sheet_content = dict()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(nrows):</span><br><span class="line">        sheet_content[sheet.cell(i, <span class="number">0</span>).value] = sheet.row_values(i)[<span class="number">1</span>:]</span><br><span class="line">    cities.appendChild(doc.createTextNode(str(sheet_content)))</span><br><span class="line">    <span class="keyword">with</span> open(filePath+<span class="string">'city.xml'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(doc.toprettyxml())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    xls2xml(<span class="string">'./SMTC/source/0015/'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0019 题：</strong> 将 第 0016 题中的 numbers.xls 文件中的内容写到 numbers.xml 文件中，如下</p><p>所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;root&gt;</span><br><span class="line">&lt;numbers&gt;</span><br><span class="line">&lt;!-- </span><br><span class="line">数字信息</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">[</span><br><span class="line">[1, 82, 65535],</span><br><span class="line">[20, 90, 13],</span><br><span class="line">[26, 809, 1024]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">&lt;/numbers&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># 将 第 0016 题中的 numbers.xls 文件中的内容写到 numbers.xml 文件中</span></span><br><span class="line"><span class="keyword">from</span> xml.dom.minidom <span class="keyword">import</span> Document</span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xls2xml</span><span class="params">(filePath)</span>:</span></span><br><span class="line">    doc = Document()</span><br><span class="line">    root = doc.createElement(<span class="string">'root'</span>)</span><br><span class="line">    doc.appendChild(root)</span><br><span class="line">    numbers = doc.createElement(<span class="string">'numbers'</span>)</span><br><span class="line">    root.appendChild(numbers)</span><br><span class="line">    numbers.appendChild(doc.createComment(<span class="string">'\n\t\t数字信息\n\t\t'</span>))</span><br><span class="line"></span><br><span class="line">    content = xlrd.open_workbook(filePath+<span class="string">'numbers.xls'</span>)</span><br><span class="line">    sheet = content.sheet_by_index(<span class="number">0</span>)</span><br><span class="line">    nrows = sheet.nrows</span><br><span class="line">    sheet_list = list()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(nrows):</span><br><span class="line">        sheet_list.append(sheet.row_values(i))</span><br><span class="line">    numbers.appendChild(doc.createTextNode(str(sheet_list)))</span><br><span class="line">    <span class="keyword">with</span> open(filePath+<span class="string">'numbers.xml'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(doc.toprettyxml())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    xls2xml(<span class="string">'./SMTC/source/0016/'</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0020 题：</strong> <a href="http://iservice.10010.com/index_.html" target="_blank" rel="noopener">登陆中国联通网上营业厅</a> 后选择「自助服务」 –&gt; 「详单查询」，然后选择你要查询的时间段，点击「查询」按钮，查询结果页面的最下方，点击「导出」，就会生成类似于 2014年10月01日～2014年10月31日通话详单.xls 文件。写代码，对每月通话时间做个统计。</p><ul><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2sec</span><span class="params">(str)</span>:</span></span><br><span class="line">    sec = <span class="number">0</span></span><br><span class="line">    time_re = re.compile(<span class="string">r'(\d+)(\D+)'</span>)</span><br><span class="line">    time_list = time_re.findall(str)</span><br><span class="line">    <span class="keyword">for</span> time_item <span class="keyword">in</span> time_list:</span><br><span class="line">        <span class="keyword">if</span> time_item[<span class="number">1</span>] == <span class="string">'秒'</span>:</span><br><span class="line">            sec += int(time_item[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">elif</span> time_item[<span class="number">1</span>] == <span class="string">'分'</span>:</span><br><span class="line">            sec += int(time_item[<span class="number">0</span>]) * <span class="number">60</span></span><br><span class="line">        <span class="keyword">elif</span> time_item[<span class="number">1</span>] == <span class="string">'小时'</span>:</span><br><span class="line">            sec += int(time_item[<span class="number">0</span>]) * <span class="number">3600</span></span><br><span class="line">    <span class="keyword">return</span> sec</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sec2str</span><span class="params">(sec)</span>:</span></span><br><span class="line">    h = sec // <span class="number">3600</span></span><br><span class="line">    m = sec % <span class="number">3600</span> // <span class="number">60</span></span><br><span class="line">    s = sec % <span class="number">60</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'%s小时%s分%s秒'</span> % (h, m, s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">minidata</span><span class="params">()</span>:</span></span><br><span class="line">    all_time = <span class="number">0</span>  <span class="comment"># 使用总时间（秒）</span></span><br><span class="line">    start_time = time.mktime(time.strptime(<span class="string">'2018-09-01'</span>, <span class="string">'%Y-%m-%d'</span>))</span><br><span class="line">    end_time = time.mktime(time.strptime(<span class="string">'2018-10-01'</span>, <span class="string">'%Y-%m-%d'</span>))</span><br><span class="line">    data = xlrd.open_workbook(<span class="string">'./SMTC/source/0020/2018年09月语音通信.xls'</span>)</span><br><span class="line">    table = data.sheet_by_index(<span class="number">0</span>)</span><br><span class="line">    nrows = table.nrows</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(nrows):</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        this_time = time.mktime(time.strptime(</span><br><span class="line">            table.row_values(i)[<span class="number">2</span>], <span class="string">'%Y-%m-%d %H:%M:%S'</span>))</span><br><span class="line">        <span class="keyword">if</span> this_time &gt;= start_time <span class="keyword">and</span> this_time &lt; end_time:</span><br><span class="line">            all_time += str2sec(table.row_values(i)[<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'总时间:'</span>+sec2str(all_time))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    minidata()</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0021 题：</strong> 通常，登陆某个网站或者 APP，需要使用用户名和密码。密码是如何加密后存储起来的呢？请使用 Python 对密码加密。</p><ul><li><p>阅读资料 <a href="http://zhuoqiang.me/password-storage-and-python-example.html" target="_blank" rel="noopener">用户密码的存储与 Python 示例</a></p></li><li><p>阅读资料 <a href="http://www.pythoncentral.io/hashing-strings-with-python/" target="_blank" rel="noopener">Hashing Strings with Python</a></p></li><li><p>阅读资料 <a href="http://stackoverflow.com/questions/2572099/pythons-safest-method-to-store-and-retrieve-passwords-from-a-database" target="_blank" rel="noopener">Python’s safest method to store and retrieve passwords from a database</a></p></li><li><p>解答</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha256</span><br><span class="line"><span class="keyword">from</span> hmac <span class="keyword">import</span> HMAC</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt_passwd</span><span class="params">(password, salt=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> salt <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        salt = os.urandom(<span class="number">8</span>)</span><br><span class="line">    <span class="keyword">assert</span> <span class="number">8</span> == len(salt)</span><br><span class="line">    <span class="keyword">assert</span> isinstance(salt, bytes)</span><br><span class="line">    <span class="keyword">assert</span> isinstance(password, str)</span><br><span class="line">    <span class="keyword">if</span> isinstance(password, str):</span><br><span class="line">        password = password.encode(<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">assert</span> isinstance(password, bytes)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        password = HMAC(password, salt, sha256).digest()</span><br><span class="line">    <span class="comment"># print('password:', password)</span></span><br><span class="line">    <span class="keyword">return</span> salt+password</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">validate_passwd</span><span class="params">(hashed, input)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashed == encrypt_passwd(input, hashed[:<span class="number">8</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    hashed = encrypt_passwd(<span class="string">'123456'</span>)</span><br><span class="line">    print(validate_passwd(hashed, <span class="string">'123456'</span>))</span><br></pre></td></tr></table></figure></li></ul><p><strong>第 0022 题：</strong> iPhone 6、iPhone 6 Plus 早已上市开卖。请查看你写得 第 0005 题的代码是否可以复用。</p><p><strong>第 0023 题：</strong> 使用 Python 的 Web 框架，做一个 Web 版本 留言簿 应用。</p><p><a href="http://v2ex.com/t/151643#reply53" target="_blank" rel="noopener">阅读资料：Python 有哪些 Web 框架</a></p><ul><li><img src="https://camo.githubusercontent.com/cf9e3cc773f4b57747953428556db4c49b3d36c2/687474703a2f2f692e696d6775722e636f6d2f564979435a30692e6a7067" alt="留言簿参考"></li></ul><p><strong>第 0024 题：</strong> 使用 Python 的 Web 框架，做一个 Web 版本 TodoList 应用。</p><ul><li><img src="https://camo.githubusercontent.com/d6aaa1fd3e238860cb9ce736cc8bdae628117508/687474703a2f2f692e696d6775722e636f6d2f4e4566377a48702e6a7067" alt="SpringSide 版TodoList"></li></ul><p><strong>第 0025 题：</strong> 使用 Python 实现：对着电脑吼一声,自动打开浏览器中的默认网站。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">例如，对着笔记本电脑吼一声“百度”，浏览器自动打开百度首页。</span><br><span class="line"></span><br><span class="line">关键字：Speech to Text</span><br></pre></td></tr></table></figure><p>参考思路：<br>1：获取电脑录音–&gt;WAV文件 python record wav</p><p>2：录音文件–&gt;文本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">STT: Speech to Text</span><br><span class="line"></span><br><span class="line">STT API Google API</span><br></pre></td></tr></table></figure><p>3:文本–&gt;电脑命令</p>]]></content>
      
      <categories>
          
          <category> Uncategoried </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Python Note</title>
      <link href="/posts/1999510617.html"/>
      <url>/posts/1999510617.html</url>
      <content type="html"><![CDATA[<h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><p> <a href="https://bop.mol.uno/" target="_blank" rel="noopener">「Python简明教程」</a>&amp;&amp; JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>Python个人笔记</p><p>持续更新</p></blockquote><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>之所以，我们把Python，蟒蛇，作为此计算机语言的名字，是有其历史典故的：</p><p>Python语言的创始人，吉多·范罗苏姆（Guido van Rossum）在1989年圣诞节期间，在阿姆斯特丹，为了打发圣诞节的无趣，决心开发一个新的脚本解释程序，而在给自己新创造的计算机语言起名字的时候，由于其是，自于七十年代风靡全球的英国六人喜剧团体，巨蟒剧团（Monty Python）的忠实粉丝，所以，就把此计算机语言的名字叫做：Python。</p></blockquote><p>Python是一种脚本语言、解释性语言「无需编译源码，可直接运行」、交互性语言、面向对象的语言。</p><p><em>代码缩进决定了Python代码的逻辑关系，而不仅仅是为了好看</em></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>Mac下安装非常简单，一条命令：<code>brew install python3</code>，只不过有时候需要更新Homebrew，比较耗费时间。</p><p><img src="https://ws2.sinaimg.cn/large/006tNc79gy1fzj58sy7olj308s02174a.jpg" alt="image-20190125211920126"></p><p>如果你没有Homebrew，使用<code>/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</code>安装完成后，再安装Python。</p><h2 id="遇到的问题与解决方案"><a href="#遇到的问题与解决方案" class="headerlink" title="遇到的问题与解决方案"></a>遇到的问题与解决方案</h2><ul><li><p><code>pip3 install</code>和<code>pip3 list</code> 出现问题</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Exception:</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"/usr/local/lib/python3.7/site-packages/pip/_vendor/pkg_resources/__init__.py"</span>, line 2584, <span class="keyword">in</span> version</span><br><span class="line">    <span class="built_in">return</span> self._version</span><br><span class="line">  File <span class="string">"/usr/local/lib/python3.7/site-packages/pip/_vendor/pkg_resources/__init__.py"</span>, line 2691, <span class="keyword">in</span> __getattr__</span><br><span class="line">    raise AttributeError(attr)</span><br><span class="line">AttributeError: _version</span><br><span class="line"></span><br><span class="line">During handling of the above exception, another exception occurred:</span><br><span class="line"></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"/usr/local/lib/python3.7/site-packages/pip/_internal/cli/base_command.py"</span>, line 179, <span class="keyword">in</span> main</span><br><span class="line">    status = self.run(options, args)</span><br><span class="line">  File <span class="string">"/usr/local/lib/python3.7/site-packages/pip/_internal/commands/list.py"</span>, line 148, <span class="keyword">in</span> run</span><br><span class="line">    self.output_package_listing(packages, options)</span><br><span class="line">  File <span class="string">"/usr/local/lib/python3.7/site-packages/pip/_internal/commands/list.py"</span>, line 205, <span class="keyword">in</span> output_package_listing</span><br><span class="line">    data, header = format_for_columns(packages, options)</span><br><span class="line">  File <span class="string">"/usr/local/lib/python3.7/site-packages/pip/_internal/commands/list.py"</span>, line 271, <span class="keyword">in</span> format_for_columns</span><br><span class="line">    row = [proj.project_name, proj.version]</span><br><span class="line">  File <span class="string">"/usr/local/lib/python3.7/site-packages/pip/_vendor/pkg_resources/__init__.py"</span>, line 2589, <span class="keyword">in</span> version</span><br><span class="line">    raise ValueError(tmpl % self.PKG_INFO, self)</span><br><span class="line">ValueError: (<span class="string">"Missing 'Version:' header and/or METADATA file"</span>, Unknown [unknown version] (/usr/<span class="built_in">local</span>/lib/python3.7/site-packages))</span><br></pre></td></tr></table></figure><p>解决方法：</p><blockquote><p>目前还不知道是因为什么原因引起的</p><p>不过找到了解决办法</p><p><a href="https://stackoverflow.com/questions/54410773/pip3-list-failed-completely-and-returing-error" target="_blank" rel="noopener">https://stackoverflow.com/questions/54410773/pip3-list-failed-completely-and-returing-error</a></p></blockquote><blockquote><p>This was pretty difficult to solve, but I thing the gest of it is that if there are any folders in <code>site-packages</code> which have a <code>-</code> at the beginning, they are causing it. </p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/lib/python3.7/site-packages</span><br><span class="line">rm -rf ./-ip-19.0.1.dist-info</span><br></pre></td></tr></table></figure></li></ul><h2 id="提高效率"><a href="#提高效率" class="headerlink" title="提高效率"></a>提高效率</h2><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><h3 id="lambda"><a href="#lambda" class="headerlink" title="lambda"></a>lambda</h3><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="字符串与基本规则"><a href="#字符串与基本规则" class="headerlink" title="字符串与基本规则"></a>字符串与基本规则</h3><ol><li><p>字符串</p><p>单引号与双引号作用相同、三引号<code>‘’&#39;</code>/<code>“&quot;”</code>用来指定多行字符串。</p><p>更多用法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是一个字符串对象</span></span><br><span class="line">name = <span class="string">'Swaroop'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> name.startswith(<span class="string">'Swa'</span>):</span><br><span class="line">    print(<span class="string">'Yes, the string starts with "Swa"'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">'a'</span> <span class="keyword">in</span> name:</span><br><span class="line">    print(<span class="string">'Yes, it contains the string "a"'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> name.find(<span class="string">'war'</span>) != <span class="number">-1</span>:</span><br><span class="line">    print(<span class="string">'Yes, it contains the string "war"'</span>)</span><br><span class="line"></span><br><span class="line">delimiter = <span class="string">'_*_'</span></span><br><span class="line">mylist = [<span class="string">'Brazil'</span>, <span class="string">'Russia'</span>, <span class="string">'India'</span>, <span class="string">'China'</span>]</span><br><span class="line">print(delimiter.join(mylist))</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ python ds_str_methods.py</span><br><span class="line">Yes, the string starts with &quot;Swa&quot;</span><br><span class="line">Yes, it contains the string &quot;a&quot;</span><br><span class="line">Yes, it contains the string &quot;war&quot;</span><br><span class="line">Brazil_*_Russia_*_India_*_China</span><br></pre></td></tr></table></figure><p>格式化：<code>format()</code></p><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">20</span></span><br><span class="line">name = <span class="string">'Swaroop'</span></span><br><span class="line">print(<span class="string">'&#123;0&#125; was &#123;1&#125; years old when he wrote this book'</span>.format(name, age))</span><br><span class="line">print(<span class="string">'Why is &#123;0&#125; playing with that python?'</span>.format(name))</span><br><span class="line"><span class="comment"># 输出：</span></span><br><span class="line">Swaroop was <span class="number">20</span> years old when he wrote this book</span><br><span class="line">Why is Swaroop playing with that python?</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于浮点数 '0.333' 保留小数点(.)后三位</span></span><br><span class="line">print(<span class="string">'&#123;0:.3f&#125;'</span>.format(<span class="number">1.0</span>/<span class="number">3</span>))</span><br><span class="line"><span class="comment"># 使用下划线填充文本，并保持文字处于中间位置</span></span><br><span class="line"><span class="comment"># 使用 (^) 定义 '___hello___'字符串长度为 11</span></span><br><span class="line">print(<span class="string">'&#123;0:_^11&#125;'</span>.format(<span class="string">'hello'</span>))</span><br><span class="line"><span class="comment"># 基于关键词输出 'Swaroop wrote A Byte of Python'  </span></span><br><span class="line">print(<span class="string">'&#123;name&#125; wrote &#123;book&#125;'</span>.format(name=<span class="string">'Swaroop'</span>, book=<span class="string">'A Byte of Python'</span>))</span><br><span class="line"><span class="comment"># 输出：</span></span><br><span class="line"><span class="number">0.333</span></span><br><span class="line">___hello___</span><br><span class="line">Swaroop wrote A Byte of Python</span><br></pre></td></tr></table></figure></li><li><p><code>print()</code></p><p>由于我们正在讨论格式问题，就要注意 <code>print</code> 总是会以一个不可见的“新一行”字符（<code>\n</code>）结尾，因此重复调用 <code>print</code>将会在相互独立的一行中分别打印。为防止打印过程中出现这一换行符，你可以通过 <code>end</code>指定其应以空白结尾：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'a'</span>, end=<span class="string">''</span>)</span><br><span class="line">print(<span class="string">'b'</span>, end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p>输出结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ab</span><br></pre></td></tr></table></figure><p>或者你通过 <code>end</code> 指定以空格结尾：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'a'</span>, end=<span class="string">' '</span>)</span><br><span class="line">print(<span class="string">'b'</span>, end=<span class="string">' '</span>)</span><br><span class="line">print(<span class="string">'c'</span>)</span><br></pre></td></tr></table></figure><p>输出结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a b c</span><br></pre></td></tr></table></figure><p><code>end</code> 参数用在<code>print</code>函数中，目的是打印一行并允许下一次打印在同一行继续。这是一个让 <code>print</code> 能够不在打印的末尾打印出<code>\n</code>（新行换行符）符号的小窍门。</p></li><li><p>转义字符：<code>\</code></p><blockquote><p>以及：在一个字符串中，一个放置在末尾的反斜杠表示字符串将在下一行继续，但不会添加新的一行。</p><p>如果你需要指定一些未经过特殊处理的字符串，比如转义序列，那么你需要在字符串前增加 <code>r</code> 或 <code>R</code> 来指定一个<em>原始（Raw）</em>字符串。</p><p>在处理正则表达式时应全程使用原始字符串。否则，将会有大量 Backwhacking 需要处理。举例说明的话，反向引用可以通过 <code>&#39;\\1&#39;</code> 或 <code>r&#39;\1&#39;</code> 来实现。</p></blockquote></li><li><p>命名规则</p><p>变量是标识符的一个例子。<em>标识符（Identifiers）</em> 是为 <em>某些东西</em> 提供的给定名称。在你命名标识符时，你需要遵守以下规则：</p><ul><li>第一个字符必须是字母表中的字母（大写 ASCII 字符或小写 ASCII 字符或 Unicode 字符）或下划线（<code>_</code>）。</li><li>标识符的其它部分可以由字符（大写 ASCII 字符或小写 ASCII 字符或 Unicode 字符）、下划线（<code>_</code>）、数字（0~9）组成。</li><li>标识符名称区分大小写。例如，<code>myname</code> 和 <code>myName</code> 并<em>不</em>等同。要注意到前者是小写字母 <code>n</code> 而后者是大写字母 <code>N</code>。</li><li><em>有效</em> 的标识符名称可以是 <code>i</code> 或 <code>name_2_3</code> ，<em>无效</em> 的标识符名称可能是 <code>2things</code>，<code>this is spaced out</code>，<code>my-name</code> 和 <code>&gt;a1b2_c3</code>。</li></ul></li><li><p>缩进</p><blockquote><p>使用四个空格来缩进。这是来自 Python 语言官方的建议。好的编辑器会自动为你完成这一工作。请确保你在缩进中使用数量一致的空格，否则你的程序将不会运行，或引发不期望的行为。</p></blockquote></li></ol><h3 id="运算符与表达式"><a href="#运算符与表达式" class="headerlink" title="运算符与表达式"></a>运算符与表达式</h3><ol><li><p><strong>运算符</strong></p><ul><li><code>+</code>（加）<ul><li>两个对象相加。</li><li><code>3+5</code> 则输出 <code>8</code>。<code>&#39;a&#39; + &#39;b&#39;</code> 则输出 <code>&#39;ab&#39;</code>。</li></ul></li><li><code>-</code>（减）<ul><li>从一个数中减去另一个数，如果第一个操作数不存在，则假定为零。</li><li><code>-5.2</code> 将输出一个负数，<code>50 - 24</code> 输出 <code>26</code>。</li></ul></li><li><code>*</code>（乘）<ul><li>给出两个数的乘积，或返回字符串重复指定次数后的结果。</li><li><code>2 * 3</code> 输出 <code>6</code>。<code>&#39;la&#39; * 3</code> 输出 <code>&#39;lalala&#39;</code>。</li></ul></li><li><code>**</code> （乘方）<ul><li>返回 x 的 y 次方。</li><li><code>3 ** 4</code> 输出 <code>81</code> （即 <code>3 * 3 * 3 * 3</code>）。</li></ul></li><li><code>/</code> （除）<ul><li>x 除以 y</li><li><code>13 / 3</code> 输出 <code>4.333333333333333</code>。</li></ul></li><li><code>//</code> （整除）<ul><li>x 除以 y 并对结果<em>向下</em>取整至最接近的整数。</li><li><code>13 // 3</code> 输出 <code>4</code>。</li><li><code>-13 // 3</code> 输出 <code>-5</code>。</li></ul></li><li><code>%</code> （取模）<ul><li>返回除法运算后的余数。</li><li><code>13 % 3</code> 输出 <code>1</code>。<code>-25.5 % 2.25</code> 输出 <code>1.5</code>。</li></ul></li><li><code>&lt;&lt;</code> （左移）<ul><li>将数字的位向左移动指定的位数。（每个数字在内存中以二进制数表示，即 0 和1）</li><li><code>2 &lt;&lt; 2</code> 输出 <code>8</code>。 <code>2</code> 用二进制数表示为 <code>10</code>。</li><li>向左移 2 位会得到 <code>1000</code> 这一结果，表示十进制中的 <code>8</code>。</li></ul></li><li><code>&gt;&gt;</code> （右移）<ul><li>将数字的位向右移动指定的位数。</li><li><code>11 &gt;&gt; 1</code> 输出 <code>5</code>。</li><li><code>11</code> 在二进制中表示为 <code>1011</code>，右移一位后输出 <code>101</code> 这一结果，表示十进制中的 <code>5</code>。</li></ul></li><li><code>&amp;</code> （按位与）<ul><li>对数字进行按位与操作。</li><li><code>5 &amp; 3</code> 输出 <code>1</code>。</li></ul></li><li><code>|</code> （按位或）<ul><li>对数字进行按位或操作。</li><li><code>5 | 3</code> 输出 <code>7</code>。</li></ul></li><li><code>^</code>（按位异或）<ul><li>对数字进行按位异或操作。</li><li><code>5 ^ 3</code> 输出 <code>6</code>。</li></ul></li><li><code>~</code> （按位取反）<ul><li>x 的按位取反结果为 -(x+1)。</li><li><code>~5</code> 输出 <code>-6</code>。有关本例的更多细节可以参阅：<a href="http://stackoverflow.com/a/11810203" target="_blank" rel="noopener">http://stackoverflow.com/a/11810203</a> 。</li></ul></li><li><code>&lt;</code> （小于）<ul><li>返回 x 是否小于 y。所有的比较运算符返回的结果均为 <code>True</code> 或 <code>False</code>。请注意这些名称之中的大写字母。</li><li><code>5 &lt; 3</code> 输出 <code>False</code>，<code>3 &lt; 6</code> 输出 <code>True</code>。</li><li>比较可以任意组成组成链接：<code>3 &lt; 5 &lt; 7</code> 返回 <code>True</code>。</li></ul></li><li><code>&gt;</code> （大于）<ul><li>返回 x 是否大于 y。</li><li><code>5 &gt; 3</code> 返回 <code>True</code>。如果两个操作数均为数字，它们首先将会被转换至一种共同的类型。否则，它将总是返回 <code>False</code>。</li></ul></li><li><code>&lt;=</code> （小于等于）<ul><li>返回 x 是否小于或等于 y。</li><li><code>x = 3; y = 6; x&lt;=y</code> 返回 <code>True</code>。</li></ul></li><li><code>&gt;=</code> （大于等于）<ul><li>返回 x 是否大于或等于 y。</li><li><code>x = 4; y = 3; x&gt;=3</code> 返回 <code>True</code>。</li></ul></li><li><code>==</code> （等于）<ul><li>比较两个对象是否相等。</li><li><code>x = 2; y = 2; x == y</code> 返回 <code>True</code>。</li><li><code>x = &#39;str&#39;; y = &#39;stR&#39;; x == y</code> 返回 <code>False</code>。</li><li><code>x = &#39;str&#39;; y = &#39;str&#39;; x == y</code> 返回 <code>True</code>。</li></ul></li><li><code>!=</code> （不等于）<ul><li>比较两个对象是否不相等。</li><li><code>x = 2; y = 3; x != y</code> 返回 <code>True</code>。</li></ul></li><li><code>not</code> （布尔“非”）<ul><li>如果 x 是 <code>True</code>，则返回 <code>False</code>。如果 x 是 <code>False</code>，则返回 <code>True</code>。</li><li><code>x = True; not x</code> 返回 <code>False</code>。</li></ul></li><li><code>and</code> （布尔“与”）<ul><li>如果 x 是 <code>False</code>，则 <code>x and y</code> 返回 <code>False</code>，否则返回 y 的计算值。</li><li>当 x 是 <code>False</code> 时，<code>x = False; y = True; x and y</code> 将返回 <code>False</code>。在这一情境中，Python 将不会计算 y，因为它已经了解 and 表达式的左侧是 <code>False</code>，这意味着整个表达式都将是 <code>False</code> 而不会是别的值。这种情况被称作短路计算（Short-circuit Evaluation）。</li></ul></li><li><code>or</code>（布尔“或”）<ul><li>如果 x 是 <code>True</code>，则返回 <code>True</code>，否则它将返回 y 的计算值。</li><li><code>x = Ture; y = False; x or y</code> 将返回 <code>Ture</code>。在这里短路计算同样适用。</li></ul></li></ul></li><li><p>运算顺序</p><p>下面是从 <a href="http://docs.python.org/3/reference/expressions.html#operator-precedence" target="_blank" rel="noopener">Python 参考手册</a> 中引用而来。<strong>你最好使用圆括号操作符来对运算符与操作数进行分组，以更加明确地指定优先级。这也能使得程序更加可读</strong>。你可以阅读<a href="https://bop.mol.uno/08.op_exp.html#changing-order-of-evaluation" target="_blank" rel="noopener">改变运算顺序</a>来了解更多的细节。</p><ul><li><code>lambda</code>：Lambda 表达式</li><li><code>if - else</code> ：条件表达式</li><li><code>or</code>：布尔“或”</li><li><code>and</code>：布尔“与”</li><li><code>not x</code>：布尔“非”</li><li><code>in, not in, is, is not, &lt;, &lt;=, &gt;, &gt;=, !=, ==</code>：比较，包括成员资格测试（Membership Tests）和身份测试（Identity Tests）。</li><li><code>|</code>：按位或</li><li><code>^</code>：按位异或</li><li><code>&amp;</code>：按位与</li><li><code>&lt;&lt;, &gt;&gt;</code>：移动</li><li><code>+, -</code>：加与减</li><li><code>*, /, //, %</code>：乘、除、整除、取余</li><li><code>+x, -x, ~x</code>：正、负、按位取反</li><li><code>**</code>：求幂</li><li><code>x[index], x[index:index], x(arguments...), x.attribute</code>：下标、切片、调用、属性引用</li><li><code>(expressions...), [expressions...], {key: value...}, {expressions...}</code>：表示绑定或元组、表示列表、表示字典、表示集合</li></ul></li></ol><h3 id="控制语句"><a href="#控制语句" class="headerlink" title="控制语句"></a>控制语句</h3><ol><li><p><code>if</code>语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">number = <span class="number">23</span></span><br><span class="line">guess = int(input(<span class="string">'Enter an integer : '</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> guess == number:</span><br><span class="line">    <span class="comment"># 新块从这里开始</span></span><br><span class="line">    print(<span class="string">'Congratulations, you guessed it.'</span>)</span><br><span class="line">    print(<span class="string">'(but you do not win any prizes!)'</span>)</span><br><span class="line">    <span class="comment"># 新块在这里结束</span></span><br><span class="line"><span class="keyword">elif</span> guess &lt; number:</span><br><span class="line">    <span class="comment"># 另一代码块</span></span><br><span class="line">    print(<span class="string">'No, it is a little higher than that'</span>)</span><br><span class="line">    <span class="comment"># 你可以在此做任何你希望在该代码块内进行的事情</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'No, it is a little lower than that'</span>)</span><br><span class="line">    <span class="comment"># 你必须通过猜测一个大于（&gt;）设置数的数字来到达这里。</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'Done'</span>)</span><br><span class="line"><span class="comment"># 这最后一句语句将在</span></span><br><span class="line"><span class="comment"># if 语句执行完毕后执行。</span></span><br></pre></td></tr></table></figure></li><li><p><code>for</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">5</span>):</span><br><span class="line">    print(i)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'The for loop is over'</span>)</span><br></pre></td></tr></table></figure></li><li><p><code>while</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">number = <span class="number">23</span></span><br><span class="line">running = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> running:</span><br><span class="line">    guess = int(input(<span class="string">'Enter an integer : '</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> guess == number:</span><br><span class="line">        print(<span class="string">'Congratulations, you guessed it.'</span>)</span><br><span class="line">        <span class="comment"># 这将导致 while 循环中止</span></span><br><span class="line">        running = <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">elif</span> guess &lt; number:</span><br><span class="line">        print(<span class="string">'No, it is a little higher than that.'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'No, it is a little lower than that.'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'The while loop is over.'</span>)</span><br><span class="line">    <span class="comment"># 在这里你可以做你想做的任何事</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'Done'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">Enter an integer : <span class="number">50</span></span><br><span class="line">No, it <span class="keyword">is</span> a little lower than that.</span><br><span class="line">Enter an integer : <span class="number">22</span></span><br><span class="line">No, it <span class="keyword">is</span> a little higher than that.</span><br><span class="line">Enter an integer : <span class="number">23</span></span><br><span class="line">Congratulations, you guessed it.</span><br><span class="line">The <span class="keyword">while</span> loop <span class="keyword">is</span> over.</span><br><span class="line">Done</span><br></pre></td></tr></table></figure></li><li><p><code>break</code></p><p><code>break</code> 语句用以<em>中断</em>（Break）循环语句，也就是中止循环语句的执行，即使循环条件没有变更为 <code>False</code>，或队列中的项目尚未完全迭代依旧如此。</p><p>有一点需要尤其注意，如果你 <em>中断</em> 了一个 <code>for</code> 或 <code>while</code> 循环，任何相应循环中的 <code>else</code> 块都将<em>不会</em>被执行。</p></li><li><p><code>continue</code></p><p><code>continue</code> 语句用以告诉 Python 跳过当前循环块中的剩余语句，并<em>继续</em>该循环的下一次迭代，同样能用于 <code>for</code> 循环。</p></li></ol><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">say_hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 该块属于这一函数</span></span><br><span class="line">    print(<span class="string">'hello world'</span>)</span><br><span class="line"><span class="comment"># 函数结束</span></span><br><span class="line"></span><br><span class="line">say_hello()  <span class="comment"># 调用函数</span></span><br><span class="line">say_hello()  <span class="comment"># 再次调用函数</span></span><br></pre></td></tr></table></figure><ol><li><p>参数</p><blockquote><p>在定义函数时给定的名称称作<em>“形参”（Parameters）</em>，在调用函数时你所提供给函数的值称作<em>“实参”（Arguments）</em>。</p></blockquote></li><li><p>局部变量</p><blockquote><p>当你在一个函数的定义中声明变量时，它们不会以任何方式与身处函数之外但具有相同名称的变量产生关系，也就是说，这些变量名只存在于函数这一<em>局部（Local）</em>。这被称为变量的<em>作用域（Scope）</em>。所有变量的作用域是它们被定义的块，从定义它们的名字的定义点开始。</p></blockquote></li><li><p>全局声明</p><p><code>global</code> 语句用以声明 <code>x</code> 是一个全局变量——因此，当我们在函数中为 <code>x</code> 进行赋值时，这一改动将影响到我们在主代码块中使用的 <code>x</code> 的值。</p><p>你可以在同一句 <code>global</code> 语句中指定不止一个的全局变量，例如 <code>global x, y, z</code>。</p></li></ol><h3 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h3><ol><li><p>模块的 <code>__name__</code></p><p>每个模块都有一个名称，而模块中的语句可以找到它们所处的模块的名称。这对于确定模块是独立运行的还是被导入进来运行的这一特定目的来说大为有用。正如先前所提到的，当模块第一次被导入时，它所包含的代码将被执行。我们可以通过这一特性来使模块以不同的方式运行，这取决于它是为自己所用还是从其它从的模块中导入而来。这可以通过使用模块的 <code>__name__</code> 属性来实现。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(<span class="string">'This program is being run by itself'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'I am being imported from another module'</span>)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ python module_using_name.py</span><br><span class="line">This program is being run by itself</span><br><span class="line"></span><br><span class="line">$ python</span><br><span class="line">&gt;&gt;&gt; import module_using_name</span><br><span class="line">I am being imported from another module</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure></li><li><p><strong>Python之蝉</strong></p><blockquote><p>Python 的一大指导原则是“明了胜过晦涩”。你可以通过在 Python 中运行 <code>import this</code> 来了解更多内容。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import this</span><br><span class="line">The Zen of Python, by Tim Peters</span><br><span class="line"></span><br><span class="line">Beautiful is better than ugly.</span><br><span class="line">Explicit is better than implicit.</span><br><span class="line">Simple is better than complex.</span><br><span class="line">Complex is better than complicated.</span><br><span class="line">Flat is better than nested.</span><br><span class="line">Sparse is better than dense.</span><br><span class="line">Readability counts.</span><br><span class="line">Special cases aren&apos;t special enough to break the rules.</span><br><span class="line">Although practicality beats purity.</span><br><span class="line">Errors should never pass silently.</span><br><span class="line">Unless explicitly silenced.</span><br><span class="line">In the face of ambiguity, refuse the temptation to guess.</span><br><span class="line">There should be one-- and preferably only one --obvious way to do it.</span><br><span class="line">Although that way may not be obvious at first unless you&apos;re Dutch.</span><br><span class="line">Now is better than never.</span><br><span class="line">Although never is often better than *right* now.</span><br><span class="line">If the implementation is hard to explain, it&apos;s a bad idea.</span><br><span class="line">If the implementation is easy to explain, it may be a good idea.</span><br><span class="line">Namespaces are one honking great idea -- let&apos;s do more of those!</span><br></pre></td></tr></table></figure></li></ol><h3 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h3><ol><li><p><code>list</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This is my shopping list</span></span><br><span class="line">shoplist = [<span class="string">'apple'</span>, <span class="string">'mango'</span>, <span class="string">'carrot'</span>, <span class="string">'banana'</span>]</span><br><span class="line"></span><br><span class="line">print(<span class="string">'I have'</span>, len(shoplist), <span class="string">'items to purchase.'</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'These items are:'</span>, end=<span class="string">' '</span>)</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> shoplist:</span><br><span class="line">    print(item, end=<span class="string">' '</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'\nI also have to buy rice.'</span>)</span><br><span class="line">shoplist.append(<span class="string">'rice'</span>)</span><br><span class="line">print(<span class="string">'My shopping list is now'</span>, shoplist)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'I will sort my list now'</span>)</span><br><span class="line">shoplist.sort()</span><br><span class="line">print(<span class="string">'Sorted shopping list is'</span>, shoplist)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'The first item I will buy is'</span>, shoplist[<span class="number">0</span>])</span><br><span class="line">olditem = shoplist[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">del</span> shoplist[<span class="number">0</span>]</span><br><span class="line">print(<span class="string">'I bought the'</span>, olditem)</span><br><span class="line">print(<span class="string">'My shopping list is now'</span>, shoplist)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ python ds_using_list.py</span><br><span class="line">I have 4 items to purchase.</span><br><span class="line">These items are: apple mango carrot banana</span><br><span class="line">I also have to buy rice.</span><br><span class="line">My shopping list is now [&apos;apple&apos;, &apos;mango&apos;, &apos;carrot&apos;, &apos;banana&apos;, &apos;rice&apos;]</span><br><span class="line">I will sort my list now</span><br><span class="line">Sorted shopping list is [&apos;apple&apos;, &apos;banana&apos;, &apos;carrot&apos;, &apos;mango&apos;, &apos;rice&apos;]</span><br><span class="line">The first item I will buy is apple</span><br><span class="line">I bought the apple</span><br><span class="line">My shopping list is now [&apos;banana&apos;, &apos;carrot&apos;, &apos;mango&apos;, &apos;rice&apos;]</span><br></pre></td></tr></table></figure><p>If you want access to the index of each element within the body of a loop, use the built-in <code>enumerate</code> function:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">animals = [<span class="string">'cat'</span>, <span class="string">'dog'</span>, <span class="string">'monkey'</span>]</span><br><span class="line"><span class="keyword">for</span> idx, animal <span class="keyword">in</span> enumerate(animals):</span><br><span class="line">    print(<span class="string">'#%d: %s'</span> % (idx + <span class="number">1</span>, animal))</span><br><span class="line"><span class="comment"># Prints "#1: cat", "#2: dog", "#3: monkey", each on its own line</span></span><br></pre></td></tr></table></figure></li><li><p>元组</p><p>元组（Tuple）用于将多个对象保存到一起。你可以将它们近似地看作列表，但是元组不能提供列表类能够提供给你的广泛的功能。<strong>元组的一大特征类似于字符串，它们是不可变的，也就是说，你不能编辑或更改元组</strong>。</p><p>元组通常用于保证某一语句或某一用户定义的函数可以安全地采用一组数值，意即元组内的数值不会改变。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 我会推荐你总是使用括号</span></span><br><span class="line"><span class="comment"># 来指明元组的开始与结束</span></span><br><span class="line"><span class="comment"># 尽管括号是一个可选选项。</span></span><br><span class="line"><span class="comment"># 明了胜过晦涩，显式优于隐式。</span></span><br><span class="line">zoo = (<span class="string">'python'</span>, <span class="string">'elephant'</span>, <span class="string">'penguin'</span>)</span><br><span class="line">print(<span class="string">'Number of animals in the zoo is'</span>, len(zoo))</span><br><span class="line"></span><br><span class="line">new_zoo = <span class="string">'monkey'</span>, <span class="string">'camel'</span>, zoo</span><br><span class="line">print(<span class="string">'Number of cages in the new zoo is'</span>, len(new_zoo))</span><br><span class="line">print(<span class="string">'All animals in new zoo are'</span>, new_zoo)</span><br><span class="line">print(<span class="string">'Animals brought from old zoo are'</span>, new_zoo[<span class="number">2</span>])</span><br><span class="line">print(<span class="string">'Last animal brought from old zoo is'</span>, new_zoo[<span class="number">2</span>][<span class="number">2</span>])</span><br><span class="line">print(<span class="string">'Number of animals in the new zoo is'</span>,</span><br><span class="line">      len(new_zoo)<span class="number">-1</span>+len(new_zoo[<span class="number">2</span>]))</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ python ds_using_tuple.py</span><br><span class="line">Number of animals in the zoo is 3</span><br><span class="line">Number of cages in the new zoo is 3</span><br><span class="line">All animals in new zoo are (&apos;monkey&apos;, &apos;camel&apos;, (&apos;python&apos;, &apos;elephant&apos;, &apos;penguin&apos;))</span><br><span class="line">Animals brought from old zoo are (&apos;python&apos;, &apos;elephant&apos;, &apos;penguin&apos;)</span><br><span class="line">Last animal brought from old zoo is penguin</span><br><span class="line">Number of animals in the new zoo is 5</span><br></pre></td></tr></table></figure></li><li><p>字典</p><p><strong>键值必须是唯一</strong>，你只能使用不可变的对象（如字符串）作为字典的键值，但是你可以使用可变或不可变的对象作为字典中的值。基本上这段话也可以翻译为你只能使用<strong>简单对象作为键值</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># “ab”是地址（Address）簿（Book）的缩写</span></span><br><span class="line"></span><br><span class="line">ab = &#123;</span><br><span class="line">    <span class="string">'Swaroop'</span>: <span class="string">'swaroop@swaroopch.com'</span>,</span><br><span class="line">    <span class="string">'Larry'</span>: <span class="string">'larry@wall.org'</span>,</span><br><span class="line">    <span class="string">'Matsumoto'</span>: <span class="string">'matz@ruby-lang.org'</span>,</span><br><span class="line">    <span class="string">'Spammer'</span>: <span class="string">'spammer@hotmail.com'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Swaroop's address is"</span>, ab[<span class="string">'Swaroop'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除一对键值—值配对</span></span><br><span class="line"><span class="keyword">del</span> ab[<span class="string">'Spammer'</span>]</span><br><span class="line"></span><br><span class="line">print(<span class="string">'\nThere are &#123;&#125; contacts in the address-book\n'</span>.format(len(ab)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> name, address <span class="keyword">in</span> ab.items():</span><br><span class="line">    print(<span class="string">'Contact &#123;&#125; at &#123;&#125;'</span>.format(name, address))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加一对键值—值配对</span></span><br><span class="line">ab[<span class="string">'Guido'</span>] = <span class="string">'guido@python.org'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">'Guido'</span> <span class="keyword">in</span> ab:</span><br><span class="line">    print(<span class="string">"\nGuido's address is"</span>, ab[<span class="string">'Guido'</span>])</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ python ds_using_dict.py</span><br><span class="line">Swaroop<span class="string">'s address is swaroop@swaroopch.com</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">There are 3 contacts in the address-book</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Contact Swaroop at swaroop@swaroopch.com</span></span><br><span class="line"><span class="string">Contact Matsumoto at matz@ruby-lang.org</span></span><br><span class="line"><span class="string">Contact Larry at larry@wall.org</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Guido'</span>s address <span class="keyword">is</span> guido@python.org</span><br></pre></td></tr></table></figure><p>A dictionary stores (key, value) pairs, similar to a <code>Map</code> in Java or an object in Javascript. You can use it like this:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;<span class="string">'cat'</span>: <span class="string">'cute'</span>, <span class="string">'dog'</span>: <span class="string">'furry'</span>&#125;  <span class="comment"># Create a new dictionary with some data</span></span><br><span class="line">print(d[<span class="string">'cat'</span>])       <span class="comment"># Get an entry from a dictionary; prints "cute"</span></span><br><span class="line">print(<span class="string">'cat'</span> <span class="keyword">in</span> d)     <span class="comment"># Check if a dictionary has a given key; prints "True"</span></span><br><span class="line">d[<span class="string">'fish'</span>] = <span class="string">'wet'</span>     <span class="comment"># Set an entry in a dictionary</span></span><br><span class="line">print(d[<span class="string">'fish'</span>])      <span class="comment"># Prints "wet"</span></span><br><span class="line"><span class="comment"># print(d['monkey'])  # KeyError: 'monkey' not a key of d</span></span><br><span class="line">print(d.get(<span class="string">'monkey'</span>, <span class="string">'N/A'</span>))  <span class="comment"># Get an element with a default; prints "N/A"</span></span><br><span class="line">print(d.get(<span class="string">'fish'</span>, <span class="string">'N/A'</span>))    <span class="comment"># Get an element with a default; prints "wet"</span></span><br><span class="line"><span class="keyword">del</span> d[<span class="string">'fish'</span>]         <span class="comment"># Remove an element from a dictionary</span></span><br><span class="line">print(d.get(<span class="string">'fish'</span>, <span class="string">'N/A'</span>)) <span class="comment"># "fish" is no longer a key; prints "N/A"</span></span><br></pre></td></tr></table></figure></li><li><p><strong>序列操作</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">shoplist = [<span class="string">'apple'</span>, <span class="string">'mango'</span>, <span class="string">'carrot'</span>, <span class="string">'banana'</span>]</span><br><span class="line">name = <span class="string">'swaroop'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Indexing or 'Subscription' operation #</span></span><br><span class="line"><span class="comment"># 索引或“下标（Subscription）”操作符 #</span></span><br><span class="line">print(<span class="string">'Item 0 is'</span>, shoplist[<span class="number">0</span>])</span><br><span class="line">print(<span class="string">'Item 1 is'</span>, shoplist[<span class="number">1</span>])</span><br><span class="line">print(<span class="string">'Item 2 is'</span>, shoplist[<span class="number">2</span>])</span><br><span class="line">print(<span class="string">'Item 3 is'</span>, shoplist[<span class="number">3</span>])</span><br><span class="line">print(<span class="string">'Item -1 is'</span>, shoplist[<span class="number">-1</span>])</span><br><span class="line">print(<span class="string">'Item -2 is'</span>, shoplist[<span class="number">-2</span>])</span><br><span class="line">print(<span class="string">'Character 0 is'</span>, name[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Slicing on a list #</span></span><br><span class="line">print(<span class="string">'Item 1 to 3 is'</span>, shoplist[<span class="number">1</span>:<span class="number">3</span>])</span><br><span class="line">print(<span class="string">'Item 2 to end is'</span>, shoplist[<span class="number">2</span>:])</span><br><span class="line">print(<span class="string">'Item 1 to -1 is'</span>, shoplist[<span class="number">1</span>:<span class="number">-1</span>])</span><br><span class="line">print(<span class="string">'Item start to end is'</span>, shoplist[:])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从某一字符串中切片 #</span></span><br><span class="line">print(<span class="string">'characters 1 to 3 is'</span>, name[<span class="number">1</span>:<span class="number">3</span>])</span><br><span class="line">print(<span class="string">'characters 2 to end is'</span>, name[<span class="number">2</span>:])</span><br><span class="line">print(<span class="string">'characters 1 to -1 is'</span>, name[<span class="number">1</span>:<span class="number">-1</span>])</span><br><span class="line">print(<span class="string">'characters start to end is'</span>, name[:])</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Item 0 is apple</span><br><span class="line">Item 1 is mango</span><br><span class="line">Item 2 is carrot</span><br><span class="line">Item 3 is banana</span><br><span class="line">Item -1 is banana</span><br><span class="line">Item -2 is carrot</span><br><span class="line">Character 0 is s</span><br><span class="line">Item 1 to 3 is [&apos;mango&apos;, &apos;carrot&apos;]</span><br><span class="line">Item 2 to end is [&apos;carrot&apos;, &apos;banana&apos;]</span><br><span class="line">Item 1 to -1 is [&apos;mango&apos;, &apos;carrot&apos;]</span><br><span class="line">Item start to end is [&apos;apple&apos;, &apos;mango&apos;, &apos;carrot&apos;, &apos;banana&apos;]</span><br><span class="line">characters 1 to 3 is wa</span><br><span class="line">characters 2 to end is aroop</span><br><span class="line">characters 1 to -1 is waroo</span><br><span class="line">characters start to end is swaroop</span><br></pre></td></tr></table></figure></li><li><p>集合</p><p>集合（Set）是简单对象的<strong><em>无序</em></strong>集合（Collection）。当集合中的项目存在与否比起次序或其出现次数更加重要时，我们就会使用集合。<strong>说明集合里的元素是不重复的。</strong></p><p>通过使用集合，你可以测试某些对象的资格或情况，检查它们是否是其它集合的子集，找到两个集合的交集，等等。</p></li><li><p><strong>引用</strong>——涉及到深拷贝浅拷贝的问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'Simple Assignment'</span>)</span><br><span class="line">shoplist = [<span class="string">'apple'</span>, <span class="string">'mango'</span>, <span class="string">'carrot'</span>, <span class="string">'banana'</span>]</span><br><span class="line"><span class="comment"># mylist 只是指向同一对象的另一种名称</span></span><br><span class="line">mylist = shoplist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 我购买了第一项项目，所以我将其从列表中删除</span></span><br><span class="line"><span class="keyword">del</span> shoplist[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">print(<span class="string">'shoplist is'</span>, shoplist)</span><br><span class="line">print(<span class="string">'mylist is'</span>, mylist)</span><br><span class="line"><span class="comment"># 注意到 shoplist 和 mylist 二者都</span></span><br><span class="line"><span class="comment"># 打印出了其中都没有 apple 的同样的列表，以此我们确认</span></span><br><span class="line"><span class="comment"># 它们指向的是同一个对象</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'Copy by making a full slice'</span>)</span><br><span class="line"><span class="comment"># 通过生成一份完整的切片制作一份列表的副本</span></span><br><span class="line">mylist = shoplist[:]</span><br><span class="line"><span class="comment"># 删除第一个项目</span></span><br><span class="line"><span class="keyword">del</span> mylist[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">print(<span class="string">'shoplist is'</span>, shoplist)</span><br><span class="line">print(<span class="string">'mylist is'</span>, mylist)</span><br><span class="line"><span class="comment"># 注意到现在两份列表已出现不同</span></span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ python ds_reference.py</span><br><span class="line">Simple Assignment</span><br><span class="line">shoplist is [&apos;mango&apos;, &apos;carrot&apos;, &apos;banana&apos;]</span><br><span class="line">mylist is [&apos;mango&apos;, &apos;carrot&apos;, &apos;banana&apos;]</span><br><span class="line">Copy by making a full slice</span><br><span class="line">shoplist is [&apos;mango&apos;, &apos;carrot&apos;, &apos;banana&apos;]</span><br><span class="line">mylist is [&apos;carrot&apos;, &apos;banana&apos;]</span><br></pre></td></tr></table></figure><blockquote><p>要记住列表的赋值语句<strong>不会</strong>创建一份副本。你必须使用切片操作来生成一份序列的副本。</p></blockquote></li></ol><h3 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h3><p>类与对象是面向对象编程的两个主要方面。一个<strong>类（Class）</strong>能够创建一种新的<em>类型（Type）</em>，其中<strong>对象（Object）</strong>就是类的<strong>实例（Instance）</strong>。可以这样来类比：你可以拥有类型 <code>int</code> 的变量，也就是说存储整数的变量是 <code>int</code> 类的实例（对象）。</p><p>对象可以使用<em>属于</em>它的普通变量来存储数据。这种从属于对象或类的变量叫作<strong>字段（Field）</strong>。对象还可以使用<em>属于</em>类的函数来实现某些功能，这种函数叫作类的<strong>方法（Method）</strong>。这两个术语很重要，它有助于我们区分函数与变量，哪些是独立的，哪些又是属于类或对象的。总之，字段与方法通称类的<strong>属性（Attribute）</strong>。</p><p>字段有两种类型——它们属于某一类的各个实例或对象，或是从属于某一类本身。它们被分别称作<strong>实例变量（Instance Variables）</strong>与<strong>类变量（Class Variables）</strong>。</p><p>通过 <code>class</code> 关键字可以创建一个类。这个类的字段与方法可以在缩进代码块中予以列出。</p><ol><li><p><code>self</code></p><p><strong>类方法与普通函数只有一种特定的区别</strong>——前者必须多加一个参数在参数列表开头，这个名字必须添加到参数列表的开头，但是你<em>不用</em>在你调用这个功能时为这个参数赋值，Python 会为它提供。这种特定的变量引用的是对象<em>本身</em>，按照惯例，它被赋予 <code>self</code> 这一名称。</p><blockquote><p>Python 中的 <code>self</code> 相当于 C++ 中的 <code>this</code> 指针以及 Java 与 C# 中的 <code>this</code> 引用。</p></blockquote></li><li><p><code>__init__</code></p><p><code>__init__</code> 方法会在类的对象被实例化（Instantiated）时<strong>立即运行</strong>。这一方法可以对任何你想进行操作的目标对象进行<em>初始化（Initialization）</em>操作。这里你要注意在 init 前后加上的双下划线。</p></li><li><p>类变量与对象变量</p><p>每个对象都通过 <code>self.__class__</code> 属性来引用它的类。</p><p>类方法与对象方法与变量是对应的，通过对应的变量引用。我们使用<a href="https://bop.mol.uno/18.more.html#decorator" target="_blank" rel="noopener">装饰器（Decorator）</a>将 <code>how_many</code> 方法标记为类方法。</p><blockquote><p>所有类成员（包括数据成员）都是<em>公开的</em>，并且 Python 中所有的方法都是<em>虚拟的（Virtual）</em>。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Robot</span>:</span></span><br><span class="line">    <span class="string">"""表示有一个带有名字的机器人。"""</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 一个类变量，用来计数机器人的数量</span></span><br><span class="line">    population = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        <span class="string">"""初始化数据"""</span></span><br><span class="line">        self.name = name</span><br><span class="line">        print(<span class="string">"(Initializing &#123;&#125;)"</span>.format(self.name))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 当有人被创建时，机器人</span></span><br><span class="line">        <span class="comment"># 将会增加人口数量</span></span><br><span class="line">        Robot.population += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">die</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""我挂了。"""</span></span><br><span class="line">        print(<span class="string">"&#123;&#125; is being destroyed!"</span>.format(self.name))</span><br><span class="line"></span><br><span class="line">        Robot.population -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> Robot.population == <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">"&#123;&#125; was the last one."</span>.format(self.name))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"There are still &#123;:d&#125; robots working."</span>.format(</span><br><span class="line">                Robot.population))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">say_hi</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""来自机器人的诚挚问候</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        没问题，你做得到。"""</span></span><br><span class="line">        print(<span class="string">"Greetings, my masters call me &#123;&#125;."</span>.format(self.name))</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">how_many</span><span class="params">(cls)</span>:</span></span><br><span class="line">        <span class="string">"""打印出当前的人口数量"""</span></span><br><span class="line">        print(<span class="string">"We have &#123;:d&#125; robots."</span>.format(cls.population))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">droid1 = Robot(<span class="string">"R2-D2"</span>)</span><br><span class="line">droid1.say_hi()</span><br><span class="line">Robot.how_many()</span><br><span class="line"></span><br><span class="line">droid2 = Robot(<span class="string">"C-3PO"</span>)</span><br><span class="line">droid2.say_hi()</span><br><span class="line">Robot.how_many()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"\nRobots can do some work here.\n"</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Robots have finished their work. So let's destroy them."</span>)</span><br><span class="line">droid1.die()</span><br><span class="line">droid2.die()</span><br><span class="line"></span><br><span class="line">Robot.how_many()</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ python oop_objvar.py</span><br><span class="line">(Initializing R2-D2)</span><br><span class="line">Greetings, my masters call me R2-D2.</span><br><span class="line">We have 1 robots.</span><br><span class="line">(Initializing C-3PO)</span><br><span class="line">Greetings, my masters call me C-3PO.</span><br><span class="line">We have 2 robots.</span><br><span class="line"></span><br><span class="line">Robots can do some work here.</span><br><span class="line"></span><br><span class="line">Robots have finished their work. So let&apos;s destroy them.</span><br><span class="line">R2-D2 is being destroyed!</span><br><span class="line">There are still 1 robots working.</span><br><span class="line">C-3PO is being destroyed!</span><br><span class="line">C-3PO was the last one.</span><br><span class="line">We have 0 robots.</span><br></pre></td></tr></table></figure></li><li><p>继承</p><p>面向对象编程的一大优点是对代码的<strong>重用（Reuse）</strong>，重用的一种实现方法就是通过<strong>继承（Inheritance）</strong>机制。继承最好是想象成在类之间实现<strong>类型与子类型（Type and Subtype）</strong>关系的工具。</p><p><code>SchoolMember</code> 类会被称作<strong>基类（Base Class）</strong>或是<strong>超类（Superclass）</strong>。<code>Teacher</code> 和 <code>Student</code> 类会被称作<strong>派生类（Derived Classes）</strong>或是<strong>子类（Subclass）</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SchoolMember</span>:</span></span><br><span class="line">    <span class="string">'''代表任何学校里的成员。'''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">        print(<span class="string">'(Initialized SchoolMember: &#123;&#125;)'</span>.format(self.name))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tell</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">'''告诉我有关我的细节。'''</span></span><br><span class="line">        print(<span class="string">'Name:"&#123;&#125;" Age:"&#123;&#125;"'</span>.format(self.name, self.age), end=<span class="string">" "</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span><span class="params">(SchoolMember)</span>:</span></span><br><span class="line">    <span class="string">'''代表一位老师。'''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age, salary)</span>:</span></span><br><span class="line">        SchoolMember.__init__(self, name, age)</span><br><span class="line">        self.salary = salary</span><br><span class="line">        print(<span class="string">'(Initialized Teacher: &#123;&#125;)'</span>.format(self.name))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tell</span><span class="params">(self)</span>:</span></span><br><span class="line">        SchoolMember.tell(self)</span><br><span class="line">        print(<span class="string">'Salary: "&#123;:d&#125;"'</span>.format(self.salary))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(SchoolMember)</span>:</span></span><br><span class="line">    <span class="string">'''代表一位学生。'''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age, marks)</span>:</span></span><br><span class="line">        SchoolMember.__init__(self, name, age)</span><br><span class="line">        self.marks = marks</span><br><span class="line">        print(<span class="string">'(Initialized Student: &#123;&#125;)'</span>.format(self.name))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tell</span><span class="params">(self)</span>:</span></span><br><span class="line">        SchoolMember.tell(self)</span><br><span class="line">        print(<span class="string">'Marks: "&#123;:d&#125;"'</span>.format(self.marks))</span><br><span class="line"></span><br><span class="line">t = Teacher(<span class="string">'Mrs. Shrividya'</span>, <span class="number">40</span>, <span class="number">30000</span>)</span><br><span class="line">s = Student(<span class="string">'Swaroop'</span>, <span class="number">25</span>, <span class="number">75</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印一行空白行</span></span><br><span class="line">print()</span><br><span class="line"></span><br><span class="line">members = [t, s]</span><br><span class="line"><span class="keyword">for</span> member <span class="keyword">in</span> members:</span><br><span class="line">    <span class="comment"># 对全体师生工作</span></span><br><span class="line">    member.tell()</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ python oop_subclass.py</span><br><span class="line">(Initialized SchoolMember: Mrs. Shrividya)</span><br><span class="line">(Initialized Teacher: Mrs. Shrividya)</span><br><span class="line">(Initialized SchoolMember: Swaroop)</span><br><span class="line">(Initialized Student: Swaroop)</span><br><span class="line"></span><br><span class="line">Name:&quot;Mrs. Shrividya&quot; Age:&quot;40&quot; Salary: &quot;30000&quot;</span><br><span class="line">Name:&quot;Swaroop&quot; Age:&quot;25&quot; Marks: &quot;75&quot;</span><br></pre></td></tr></table></figure><p>需要注意到的是：因为我们在 <code>Teacher</code> 和 <code>Student</code> 子类中定义了 <code>__init__</code> 方法，Python 不会自动调用基类 <code>SchoolMember</code> 的构造函数，你必须自己显式地调用它。</p><p>相反，如果我们<em>没有</em>在一个子类中定义一个 <code>__init__</code> 方法，Python 将会自动调用基类的构造函数。</p><p>当我们调用父类的方法时，子类可以看作是父类的实例。</p></li></ol><h3 id="输入与输出"><a href="#输入与输出" class="headerlink" title="输入与输出"></a>输入与输出</h3><ol><li><p>输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reverse</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> text[::<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_palindrome</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> text == reverse(text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">something = input(<span class="string">"Enter text: "</span>)</span><br><span class="line"><span class="keyword">if</span> is_palindrome(something):</span><br><span class="line">    print(<span class="string">"Yes, it is a palindrome"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"No, it is not a palindrome"</span>)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ python3 io_input.py</span><br><span class="line">Enter text: sir</span><br><span class="line">No, it is not a palindrome</span><br><span class="line"></span><br><span class="line">$ python3 io_input.py</span><br><span class="line">Enter text: madam</span><br><span class="line">Yes, it is a palindrome</span><br><span class="line"></span><br><span class="line">$ python3 io_input.py</span><br><span class="line">Enter text: racecar</span><br><span class="line">Yes, it is a palindrome</span><br></pre></td></tr></table></figure></li><li><p>文件</p><p>你可以通过创建一个属于 <code>file</code> 类的对象并适当使用它的 <code>read</code>、<code>readline</code>、<code>write</code> 方法来打开或使用文件，并对它们进行读取或写入。读取或写入文件的能力取决于你指定以何种方式打开文件。最后，当你完成了文件，你可以调用 <code>close</code> 方法来告诉 Python 我们已经完成了对该文件的使用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">poem = <span class="string">'''\</span></span><br><span class="line"><span class="string">Programming is fun</span></span><br><span class="line"><span class="string">When the work is done</span></span><br><span class="line"><span class="string">if you wanna make your work also fun:</span></span><br><span class="line"><span class="string">    use Python!</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开文件以编辑（'w'riting）</span></span><br><span class="line">f = open(<span class="string">'poem.txt'</span>, <span class="string">'w'</span>)</span><br><span class="line"><span class="comment"># 向文件中编写文本</span></span><br><span class="line">f.write(poem)</span><br><span class="line"><span class="comment"># 关闭文件</span></span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果没有特别指定，</span></span><br><span class="line"><span class="comment"># 将假定启用默认的阅读（'r'ead）模式</span></span><br><span class="line">f = open(<span class="string">'poem.txt'</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    line = f.readline()</span><br><span class="line">    <span class="comment"># 零长度指示 EOF</span></span><br><span class="line">    <span class="keyword">if</span> len(line) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># 每行（`line`）的末尾</span></span><br><span class="line">    <span class="comment"># 都已经有了换行符</span></span><br><span class="line">    <span class="comment">#因为它是从一个文件中进行读取的</span></span><br><span class="line">    print(line, end=<span class="string">''</span>)</span><br><span class="line"><span class="comment"># 关闭文件</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ python3 io_using_file.py</span><br><span class="line">Programming is fun</span><br><span class="line">When the work is done</span><br><span class="line">if you wanna make your work also fun:</span><br><span class="line">    use Python!</span><br></pre></td></tr></table></figure><p>我们使用内置的 <code>open</code> 函数并指定文件名以及我们所希望使用的打开模式来打开一个文件。打开模式可以是阅读模式（<code>&#39;r&#39;</code>），写入模式（<code>&#39;w&#39;</code>）和追加模式（<code>&#39;a&#39;</code>）。我们还可以选择是通过文本模式（<code>&#39;t&#39;</code>）还是二进制模式（<code>&#39;b&#39;</code>）来读取、写入或追加文本。实际上还有其它更多的模式可用，<code>help(open)</code> 会给你有关它们的更多细节。在默认情况下，<code>open()</code> 会将文件视作文本（<strong>t</strong>ext）文件，并以阅读（<strong>r</strong>ead）模式打开它。</p></li><li><p>Pickle</p><p>Python 提供了一个叫作 <code>Pickle</code> 的标准模块，通过它你可以将<em>任何</em>纯 Python 对象存储到一个文件中，并在稍后将其取回。这叫作<em>持久地（Persistently）</em>存储对象。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line"><span class="comment"># 我们存储相关对象的文件的名称</span></span><br><span class="line">shoplistfile = <span class="string">'shoplist.data'</span></span><br><span class="line"><span class="comment"># 需要购买的物品清单</span></span><br><span class="line">shoplist = [<span class="string">'apple'</span>, <span class="string">'mango'</span>, <span class="string">'carrot'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 准备写入文件</span></span><br><span class="line">f = open(shoplistfile, <span class="string">'wb'</span>)</span><br><span class="line"><span class="comment"># 转储对象至文件</span></span><br><span class="line">pickle.dump(shoplist, f)</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除 shoplist 变量</span></span><br><span class="line"><span class="keyword">del</span> shoplist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新打开存储文件</span></span><br><span class="line">f = open(shoplistfile, <span class="string">'rb'</span>)</span><br><span class="line"><span class="comment"># 从文件中载入对象</span></span><br><span class="line">storedlist = pickle.load(f)</span><br><span class="line">print(storedlist)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python io_pickle.py</span><br><span class="line">[&apos;apple&apos;, &apos;mango&apos;, &apos;carrot&apos;]</span><br></pre></td></tr></table></figure><p>要想将一个对象存储到一个文件中，我们首先需要通过 <code>open</code> 以写入（<strong>w</strong>rite）二进制（<strong>b</strong>inary）模式打开文件，然后调用 <code>pickle</code> 模块的 <code>dump</code> 函数。这一过程被称作<em>封装（Pickling）</em>。</p><p>接着，我们通过 <code>pickle</code> 模块的 <code>load</code> 函数接收返回的对象。这个过程被称作<em>拆封（Unpickling）</em>。</p></li><li><p><strong>Unicode</strong>——<strong>Important</strong></p><p>截止到现在，当我们编写或使用字符串、读取或写入某一文件时，我们用到的只是简单的英语字符。</p><blockquote><p>注意：如果你正在使用 Python 2，我们又希望能够读写其它非英语语言，我们需要使用 <code>unicode</code> 类型，它全都以字母 <code>u</code> 开头，例如 <code>u&quot;hello world&quot;</code>。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"hello world"</span></span><br><span class="line"><span class="string">'hello world'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(<span class="string">"hello world"</span>)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">str</span>'&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">u</span>"<span class="title">hello</span> <span class="title">world</span>"</span></span><br><span class="line"><span class="class">'<span class="title">hello</span> <span class="title">world</span>'</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">type</span><span class="params">(<span class="string">u"hello world"</span>)</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> '<span class="title">str</span>'&gt;</span></span><br></pre></td></tr></table></figure><p>当我们阅读或写入某一文件或当我们希望与互联网上的其它计算机通信时，我们需要将我们的 Unicode 字符串转换至一个能够被发送和接收的格式，这个格式叫作“UTF-8”。我们可以在这一格式下进行读取与写入，只需使用一个简单的关键字参数到我们的标准 <code>open</code> 函数中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"></span><br><span class="line">f = io.open(<span class="string">"abc.txt"</span>, <span class="string">"wt"</span>, encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">f.write(<span class="string">u"Imagine non-English language here"</span>)</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line">text = io.open(<span class="string">"abc.txt"</span>, encoding=<span class="string">"utf-8"</span>).read()</span><br><span class="line">print(text)</span><br></pre></td></tr></table></figure><p><strong>它是如何工作的</strong></p><p>现在你可以忽略 <code>import</code> 语句，我们会在<a href="https://bop.mol.uno/11.modules.html#modules" target="_blank" rel="noopener">模块章节</a>章节探讨有关它的更多细节。</p><p>每当我们诸如上面那番使用 Unicode 字面量编写一款程序时，我们必须确保 Python 程序已经被告知我们使用的是 UTF-8，因此我们必须将 <code># encoding=utf-8</code> 这一注释放置在我们程序的顶端。<a href="https://bop.mol.uno/15.io.html#fn_4" target="_blank" rel="noopener">4</a></p><p>我们使用 <code>io.open</code> 并提供了“编码（Encoding）”与“解码（Decoding）”参数来告诉 Python 我们正在使用 Unicode。</p><p>你可以阅读以下文章来了解有关这一话题的更多内容：</p><ul><li><a href="http://www.joelonsoftware.com/articles/Unicode.html" target="_blank" rel="noopener">“The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets”</a></li><li><a href="http://docs.python.org/3/howto/unicode.html" target="_blank" rel="noopener">Python Unicode Howto</a></li><li><a href="http://nedbatchelder.com/text/unipain.html" target="_blank" rel="noopener">Pragmatic Unicode talk by Nat Batchelder</a></li></ul></li></ol><h3 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h3><ol><li><p>处理异常</p><p>如果你的程序中出现了一些无效的语句该怎么办？Python 将会对此进行处理，<strong>举起（Raises）</strong><a href="https://bop.mol.uno/16.exceptions.html#fn_1" target="_blank" rel="noopener">1</a>它的小手来告诉你哪里出现了一个<strong>错误（Error）</strong>。</p><p>我们可以通过使用 <code>try..except</code> 来处理异常状况。一般来说我们会把通常的语句放在 try 代码块中，将我们的错误处理器代码放置在 except 代码块中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    text = input(<span class="string">'Enter something --&gt; '</span>)</span><br><span class="line"><span class="keyword">except</span> EOFError:</span><br><span class="line">    print(<span class="string">'Why did you do an EOF on me?'</span>)</span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">    print(<span class="string">'You cancelled the operation.'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'You entered &#123;&#125;'</span>.format(text))</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Press ctrl + d</span><br><span class="line">$ python exceptions_handle.py</span><br><span class="line">Enter something --&gt; Why did you do an EOF on me?</span><br><span class="line"></span><br><span class="line"># Press ctrl + c</span><br><span class="line">$ python exceptions_handle.py</span><br><span class="line">Enter something --&gt; ^CYou cancelled the operation.</span><br><span class="line"></span><br><span class="line">$ python exceptions_handle.py</span><br><span class="line">Enter something --&gt; No exceptions</span><br><span class="line">You entered No exceptions</span><br></pre></td></tr></table></figure></li><li><p>抛出异常</p><p>你可以通过 <code>raise</code> 语句来<em>引发</em>一次异常，具体方法是提供错误名或异常名以及要<em>抛出（Thrown）</em>异常的对象。</p><p>你能够引发的错误或异常必须是直接或间接从属于 <code>Exception</code>（异常） 类的派生类。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding=UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShortInputException</span><span class="params">(Exception)</span>:</span></span><br><span class="line">    <span class="string">'''一个由用户定义的异常类'''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, length, atleast)</span>:</span></span><br><span class="line">        Exception.__init__(self)</span><br><span class="line">        self.length = length</span><br><span class="line">        self.atleast = atleast</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    text = input(<span class="string">'Enter something --&gt; '</span>)</span><br><span class="line">    <span class="keyword">if</span> len(text) &lt; <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">raise</span> ShortInputException(len(text), <span class="number">3</span>)</span><br><span class="line">    <span class="comment"># 其他工作能在此处继续正常运行</span></span><br><span class="line"><span class="keyword">except</span> EOFError:</span><br><span class="line">    print(<span class="string">'Why did you do an EOF on me?'</span>)</span><br><span class="line"><span class="keyword">except</span> ShortInputException <span class="keyword">as</span> ex:</span><br><span class="line">    print((<span class="string">'ShortInputException: The input was '</span> +</span><br><span class="line">           <span class="string">'&#123;0&#125; long, expected at least &#123;1&#125;'</span>)</span><br><span class="line">          .format(ex.length, ex.atleast))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'No exception was raised.'</span>)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ python exceptions_raise.py</span><br><span class="line">Enter something --&gt; a</span><br><span class="line">ShortInputException: The input was 1 long, expected at least 3</span><br><span class="line"></span><br><span class="line">$ python exceptions_raise.py</span><br><span class="line">Enter something --&gt; abc</span><br><span class="line">No exception was raised.</span><br></pre></td></tr></table></figure><p><strong>假设你正在你的读取中读取一份文件。你应该如何确保文件对象被正确关闭，无论是否会发生异常？这可以通过 <code>finally</code> 块来完成。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">f = <span class="keyword">None</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    f = open(<span class="string">"poem.txt"</span>)</span><br><span class="line">    <span class="comment"># 我们常用的文件阅读风格</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        line = f.readline()</span><br><span class="line">        <span class="keyword">if</span> len(line) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        print(line, end=<span class="string">''</span>)</span><br><span class="line">        sys.stdout.flush()</span><br><span class="line">        print(<span class="string">"Press ctrl+c now"</span>)</span><br><span class="line">        <span class="comment"># 为了确保它能运行一段时间</span></span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">except</span> IOError:</span><br><span class="line">    print(<span class="string">"Could not find file poem.txt"</span>)</span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">    print(<span class="string">"!! You cancelled the reading from the file."</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="keyword">if</span> f:</span><br><span class="line">        f.close()</span><br><span class="line">    print(<span class="string">"(Cleaning up: Closed the file)"</span>)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ python exceptions_finally.py</span><br><span class="line">Programming is fun</span><br><span class="line">Press ctrl+c now</span><br><span class="line">^C!! You cancelled the reading from the file.</span><br><span class="line">(Cleaning up: Closed the file)</span><br></pre></td></tr></table></figure></li><li><p><strong>with语句</strong></p><p>在 <code>try</code> 块中获取资源，然后在 <code>finally</code> 块中释放资源是一种常见的模式。因此，还有一个 <code>with</code> 语句使得这一过程可以以一种干净的姿态得以完成。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">"poem.txt"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">        print(line, end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p>程序输出的内容应与上一个案例所呈现的相同。本例的不同之处在于我们使用的是 <code>open</code> 函数与 <code>with</code> 语句——我们将关闭文件的操作交由 <code>with open</code> 来自动完成。</p><p>在幕后发生的事情是有一项 <code>with</code> 语句所使用的协议（Protocol）。它会获取由 <code>open</code> 语句返回的对象，在本案例中就是“thefile”。</p><p>它<em>总会</em>在代码块开始之前调用 <code>thefile.__enter__</code> 函数，<strong>并且<em>总会</em>在代码块执行完毕之后调用 thefile.<strong>exit</strong></strong>。</p></li></ol><h3 id="标准库"><a href="#标准库" class="headerlink" title="标准库"></a>标准库</h3><ol><li><p>日志模块</p><p>如果你想将一些调试（Debugging）信息或一些重要的信息储存在某个地方，以便你可以检查你的程序是否如你所期望那般运行，应该怎么做？你应该如何将这些信息“储存在某个地方”？这可以通过 <code>logging</code> 模块来实现。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> platform.platform().startswith(<span class="string">'Windows'</span>):</span><br><span class="line">    logging_file = os.path.join(os.getenv(<span class="string">'HOMEDRIVE'</span>),</span><br><span class="line">                                os.getenv(<span class="string">'HOMEPATH'</span>),</span><br><span class="line">                                <span class="string">'test.log'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    logging_file = os.path.join(os.getenv(<span class="string">'HOME'</span>),</span><br><span class="line">                                <span class="string">'test.log'</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Logging to"</span>, logging_file)</span><br><span class="line"></span><br><span class="line">logging.basicConfig(</span><br><span class="line">    level=logging.DEBUG,</span><br><span class="line">    format=<span class="string">'%(asctime)s : %(levelname)s : %(message)s'</span>,</span><br><span class="line">    filename=logging_file,</span><br><span class="line">    filemode=<span class="string">'w'</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">logging.debug(<span class="string">"Start of the program"</span>)</span><br><span class="line">logging.info(<span class="string">"Doing something"</span>)</span><br><span class="line">logging.warning(<span class="string">"Dying now"</span>)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ python stdlib_logging.py</span><br><span class="line">Logging to /Users/swa/test.log</span><br><span class="line"></span><br><span class="line">$ cat /Users/swa/test.log</span><br><span class="line">2014-03-29 09:27:36,660 : DEBUG : Start of the program</span><br><span class="line">2014-03-29 09:27:36,660 : INFO : Doing something</span><br><span class="line">2014-03-29 09:27:36,660 : WARNING : Dying now</span><br></pre></td></tr></table></figure><p>我们使用了三款标准库中的模块——<code>os</code> 模块用以和操作系统交互，<code>platform</code> 模块用以获取平台——操作系统——的信息，<code>logging</code> 模块用来<em>记录（Log）</em>信息。</p></li><li><p>Python每周模块</p><p>标准库中还有许多模块值得探索，例如一些<a href="http://docs.python.org/3/library/pdb.html" target="_blank" rel="noopener">用以调试（Debugging）的模块</a>， <a href="http://docs.python.org/3/library/argparse.html" target="_blank" rel="noopener">处理命令行选项的模块</a>，<a href="http://docs.python.org/3/library/re.html" target="_blank" rel="noopener">正则表达式（Regular Expressions）模块</a> 等等等等。</p><p>进一步探索标准库的最好方法是阅读由 Doug Hellmann 撰写的优秀的 <a href="http://pymotw.com/2/contents.html" target="_blank" rel="noopener">Python Module of the Week</a> 系列（你还可以阅读<a href="http://amzn.com/0321767349" target="_blank" rel="noopener">它的实体书</a>或是阅读 <a href="http://docs.python.org/3/" target="_blank" rel="noopener">Python 官方文档</a>）。</p></li></ol><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ol><li><p>Python 2 与 Python 3 的不同</p><p>请参阅：</p><ul><li><a href="http://pythonhosted.org/six/" target="_blank" rel="noopener">“Six” library</a></li><li><a href="http://lucumr.pocoo.org/2013/5/21/porting-to-python-3-redux/" target="_blank" rel="noopener">Porting to Python 3 Redux by Armin</a></li><li><a href="http://pydanny.com/experiences-with-django-python3.html" target="_blank" rel="noopener">Python 3 experience by PyDanny</a></li><li><a href="https://docs.djangoproject.com/en/dev/topics/python3/" target="_blank" rel="noopener">Official Django Guide to Porting to Python 3</a></li><li><a href="http://www.reddit.com/r/Python/comments/22ovb3/what_are_the_advantages_to_python_3x/" target="_blank" rel="noopener">Discussion on What are the advantages to python 3.x?</a></li></ul></li></ol><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><ol><li><p><a href="https://stackoverflow.com/questions/7670303/purpose-of-usr-bin-python3" target="_blank" rel="noopener">Purpose of #!/usr/bin/python3</a></p><blockquote><p>Answer:</p><p><code>#!/usr/bin/python3</code> is a <strong>shebang line</strong>.</p><p>A shebang line defines where the interpreter is located. In this case, the <code>python3</code> interpreter is located in <code>/usr/bin/python3</code>. A shebang line could also be a <code>bash</code>, <code>ruby</code>, <code>perl</code> or any other scripting languages’ interpreter, for example: <code>#!/bin/bash</code>.</p><p>Without the shebang line, the operating system does not know it’s a python script, even if you set the execution flag on the script and run it like <code>./script.py</code>. To make the script run by default in python3, either invoke it as <code>python3 script.py</code> or set the shebang line.</p><p>You can use <code>#!/usr/bin/env python3</code> for portability across different systems in case they have the language interpreter installed in different locations.</p></blockquote></li><li><p><a href="https://stackoverflow.com/questions/5142418/what-is-the-use-of-assert-in-python" target="_blank" rel="noopener">What is the use of “assert” in Python?</a></p><p>The <code>assert</code> statement exists in almost every programming language. It helps detect problems early in your program, where the cause is clear, rather than later as a side-effect of some other operation.</p><p>When you do…</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">assert</span> condition</span><br></pre></td></tr></table></figure><p>you’re telling the program to test that condition, and immediately trigger an error if the condition is false.</p><p>In Python, it’s roughly equivalent to this:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> condition:</span><br><span class="line">    <span class="keyword">raise</span> AssertionError()</span><br></pre></td></tr></table></figure><p>Try it in the Python shell:</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">assert</span> <span class="keyword">True</span> <span class="comment"># nothing happens</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">assert</span> <span class="keyword">False</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">AssertionError</span><br></pre></td></tr></table></figure><p>Assertions can include an optional message, and you can disable them when running the interpreter.</p><p>To print a message if the assertion fails:</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">assert</span> <span class="keyword">False</span>, <span class="string">"Oh no! This assertion failed!"</span></span><br></pre></td></tr></table></figure><p>Do <strong>not</strong> use parenthesis to call <code>assert</code> like a function. It is a statement. If you do <code>assert(condition, message)</code> you’ll be running the <code>assert</code> with a <code>(condition, message)</code> tuple as first parameter.</p><p>As for disabling them, when running <code>python</code> in optimized mode, where <code>__debug__</code> is <code>False</code>, assert statements will be ignored. Just pass the <code>-O</code> flag:</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -O script.py</span><br></pre></td></tr></table></figure><p>See <a href="http://docs.python.org/reference/simple_stmts.html#assert" target="_blank" rel="noopener">here</a> for the relevant documentation.</p></li><li><p>You use <code>==</code> when comparing values and <code>is</code> when comparing identities.</p></li></ol>]]></content>
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Settings of iTerm2 on Mac</title>
      <link href="/posts/141487065.html"/>
      <url>/posts/141487065.html</url>
      <content type="html"><![CDATA[<h1 id="Mac终端iTerm-2配置"><a href="#Mac终端iTerm-2配置" class="headerlink" title="Mac终端iTerm 2配置"></a>Mac终端iTerm 2配置</h1><p>Author: 以乐之名 「from 简书」</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>完成配置后的iTerm 2具备功能：</p><ol><li>语法高亮</li><li>命令Tab补全</li><li>自动提示</li><li>Git相关功能</li></ol></blockquote><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li><p><strong>下载</strong><a href="https://link.jianshu.com/?t=http%3A%2F%2Fwww.iterm2.com%2F" target="_blank" rel="noopener"><strong>iTerm2</strong></a></p></li><li><p>解压后安装iTerm2并打开</p></li><li><p>设为Mac默认终端</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /bin/zsh</span><br><span class="line"><span class="comment"># 如果想修改回默认dash，同样使用chsh命令即可：</span></span><br><span class="line">chsh -s /bin/bash</span><br></pre></td></tr></table></figure></li></ol><h2 id="配置美化"><a href="#配置美化" class="headerlink" title="配置美化"></a>配置美化</h2><ol><li><p><strong>配色方案</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/altercation/solarized</span><br><span class="line"><span class="built_in">cd</span> solarized/iterm2-colors-solarized/</span><br><span class="line">open .</span><br></pre></td></tr></table></figure><p>在打开的finder窗口中，双击Solarized Dark.itermcolors和Solarized Light.itermcolors即可安装明暗两种配色，再次进入iTerm2 -&gt; Preferences -&gt; Profiles -&gt; Colors -&gt; Color Presets中根据个人喜好选择这两种配色中的一种即可：</p><p><img src="https://ws1.sinaimg.cn/large/006tNc79gy1fzhmom4o50j30pt0iidkn.jpg" alt=""></p></li><li><p><strong>oh-my-zsh</strong></p><p>github：<a href="https://link.jianshu.com?t=https%3A%2F%2Fgithub.com%2Frobbyrussell%2Foh-my-zsh" target="_blank" rel="noopener">https://github.com/robbyrussell/oh-my-zsh</a></p><p>官方提供 curl 和 wget 两种安装方式</p><ul><li><p>curl 安装：</p><p> <code>sh -c `</code>“$(curl -fsSL <a href="https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;`" target="_blank" rel="noopener">https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;`</a></p></li><li><p>wget安装：</p><p> <code>sh -c `</code>“$(wget <a href="https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh" target="_blank" rel="noopener">https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh</a> -O -)”`</p></li></ul></li><li><p><strong>iTerm 2主题</strong></p><p>用vim编辑<code>~/.zshrc</code>，将zsh主题修改为“agnoster”，<code>ZSH_THEME=&quot;agnoster&quot;</code>，之后使用<code>command+Q</code>或<code>source ~/.zshrc</code>，是配置文件生效。</p><p><em>路径前缀的XX@XX太长，缩短：</em><br>编辑<code>~/.oh-my-zsh/themes/agnoster.zsh-theme</code>主体文件，将里面的<code>build_prompt</code>下的<code>prompt_context</code>字段在前面加<code>#</code>注释掉即可</p></li><li><p><strong>安装PowerLine</strong></p><p>powerline官网：<a href="http://powerline.readthedocs.io/en/latest/installation.html" target="_blank" rel="noopener">http://powerline.readthedocs….</a></p><p>安装powerline的方式依然简单，也只需要一条命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install powerline-status --user</span><br></pre></td></tr></table></figure><p>没有安装pip的同学可能会碰到<code>zsh: command not found: pip</code>，使用命令安装pip即可：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo easy_install pip</span><br></pre></td></tr></table></figure><p>安装后再次执行安装powerline的命令即可。</p></li><li><p><strong>安装PowerFonts</strong></p><p>安装字体库需要首先将项目git clone至本地，然后执行源码中的install.sh。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git clone</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/powerline/fonts.git --depth=1</span><br><span class="line"><span class="comment"># cd to folder</span></span><br><span class="line"><span class="built_in">cd</span> fonts</span><br><span class="line"><span class="comment"># run install shell</span></span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure><p>安装好字体库之后，我们来设置iTerm2的字体，具体的操作是iTerm2 -&gt; Preferences -&gt; Profiles -&gt; Text，在Font区域选中Change Font，然后找到Meslo LG字体。有L、M、S可选，看个人喜好：</p><p><img src="https://ws3.sinaimg.cn/large/006tNc79gy1fzhrhsghevj30sl0mzwj2.jpg" alt="image-20190124163806040"></p></li><li><p><strong>自动提示与命令补全</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.oh-my-zsh/custom/plugins</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/zsh-users/zsh-autosuggestions</span><br><span class="line">vim ~/.zshrc</span><br><span class="line"><span class="comment"># 加上plugins=(zsh-autosuggestions)</span></span><br></pre></td></tr></table></figure><p>PS：当你重新打开终端时可能看不到变化，可能你的字体颜色太淡了，我们把其改亮一些：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions`</span><br><span class="line">vim zsh-autosuggestions.zsh</span><br><span class="line"><span class="comment"># 修改内容</span></span><br><span class="line">ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE=<span class="string">'fg=10'</span></span><br><span class="line"><span class="built_in">source</span> zsh-autosuggestions.zsh</span><br></pre></td></tr></table></figure></li><li><p><strong>语法高亮效果</strong></p><p>这是oh my zsh的一个插件，安装方式与theme大同小异：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.oh-my-zsh/custom/plugins/</span><br><span class="line">git clone https://github.com/zsh-users/zsh-syntax-highlighting.git</span><br><span class="line">vi ~/.zshrc</span><br></pre></td></tr></table></figure><p>这时我们再次打开zshrc文件进行编辑。找到plugins，此时plugins中应该已经有了git，我们需要把高亮插件也加上：</p><p><img src="https://image-static.segmentfault.com/326/093/326093881-5b0511fccffcd_articlex" alt=""></p><p>请务必保证插件顺序，zsh-syntax-highlighting必须在最后一个。</p><p>然后在文件的最后一行添加：<code>source ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</code>并保存文件。</p><p>执行命令使刚才的修改生效：<code>source ~/.zshrc</code>。</p></li></ol>]]></content>
      
      <categories>
          
          <category> Macintosh </category>
          
          <category> Application </category>
          
          <category> iTerm 2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Macintosh </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Homebrew for Mac</title>
      <link href="/posts/1430094892.html"/>
      <url>/posts/1430094892.html</url>
      <content type="html"><![CDATA[<h1 id="Homebrew-for-Mac"><a href="#Homebrew-for-Mac" class="headerlink" title="Homebrew for Mac"></a>Homebrew for Mac</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p> Homebrew简介，安装与使用</p></blockquote><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://www.jianshu.com/p/bca8fc1ff3f0" target="_blank" rel="noopener">本文严重抄袭此文章</a></p><p><a href="https://brew.sh/index_zh-cn.html" target="_blank" rel="noopener">Homebrew 官方网站</a></p><p><code>Homebrew</code>是一个包管理器，用于安装<code>Apple</code>没有预装但你需要的<code>UNIX</code>工具。（比如著名的<code>wget</code>）。</p><p><code>Homebrew</code>会将软件包安装到独立目录(<code>/usr/local/Cellar</code>)，并将其文件软链接至<code>/usr/local</code>。</p><p><code>Homebrew</code>不会将文件安装到它本身目录之外，所以您可将<code>Homebrew</code>安装到任意位置。</p><p><code>Homebrew</code>使<code>macOS</code>更完整。使用<code>gem</code>来安装<code>gems</code>、用<code>brew</code>来安装那些依赖包。</p><blockquote><p><code>wget</code>是一个从网络上自动下载文件的自由工具，支持通过 <code>HTTP、HTTPS、FTP</code> 三个最常见的 <code>TCP/IP</code>协议下载，并可以使用<code>HTTP</code>代理。<code>&quot;wget&quot;</code> 这个名称来源于 <code>“World Wide Web”</code> 与 <code>“get”</code> 的结合。</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul><li><p>安装<code>XCode</code>或者<code>Command Line Tools for Xcode</code>。Xcode可以从AppStore里下载安装，<code>Command Line Tools for Xcode</code>需要在终端中输入以下代码运行安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-select --install</span><br></pre></td></tr></table></figure></li><li><p>安装Homebrew。将以下命令粘贴至终端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure><p>脚本会在执行前暂停，并说明将它将做什么。</p><blockquote><p>安装完成以后，需要运行<code>brew doctor</code>命令检测下是否有什么冲突的地方（如没有卸载<code>MacPorts</code>等等）</p><p><code>Homebrew</code>安装成功后，会自动创建目录<code>/usr/local/Cellar</code>来存放<code>Homebrew</code>安装的程序。</p></blockquote><p>移除Homebrew。将以下命令粘贴至终端 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall)&quot;</span><br></pre></td></tr></table></figure></li></ul><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">// 搜索包</span><br><span class="line">brew search mysql</span><br><span class="line"></span><br><span class="line">// 安装包</span><br><span class="line">brew install mysql</span><br><span class="line"></span><br><span class="line">// 查看包信息，比如目前的版本，依赖，安装后注意事项等</span><br><span class="line">brew info mysql</span><br><span class="line"></span><br><span class="line">// 卸载包</span><br><span class="line">brew uninstall wget</span><br><span class="line"></span><br><span class="line">// 显示已安装的包</span><br><span class="line">brew list</span><br><span class="line"></span><br><span class="line">// 查看brew的帮助</span><br><span class="line">brew –<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line">// 更新， 这会更新 Homebrew 自己</span><br><span class="line">brew update</span><br><span class="line"></span><br><span class="line">// 检查过时（是否有新版本），这会列出所有安装的包里，哪些可以升级</span><br><span class="line">brew outdated</span><br><span class="line">brew outdated mysql</span><br><span class="line"></span><br><span class="line">// 升级所有可以升级的软件们</span><br><span class="line">brew upgrade</span><br><span class="line">brew upgrade mysql</span><br><span class="line"></span><br><span class="line">// 清理不需要的版本极其安装包缓存</span><br><span class="line">brew cleanup</span><br><span class="line">brew cleanup mysql</span><br></pre></td></tr></table></figure><h2 id="扩展：Homebrew-Cask"><a href="#扩展：Homebrew-Cask" class="headerlink" title="扩展：Homebrew Cask"></a>扩展：Homebrew Cask</h2><p>你已经感受到了使用<code>Homebrew</code>安装命令行程序的便利。那么接下来，我们将通过<code>Homebrew Cask</code>优雅、简单、快速的安装和管理<code>OS X</code>图形界面程序，比如<code>Google Chrome</code>和<code>Dropbox</code>。</p><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install caskroom/cask/brew-cask</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>基本用法与<code>brew</code>相同，只不过在<code>brew</code>后面加了一个<code>cask</code>单词。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 安装软件</span><br><span class="line">brew cask install google-chrome</span><br><span class="line"></span><br><span class="line">// 卸载软件</span><br><span class="line">brew cask uninstall google-chrome</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>JDK 8 can be downloaded from <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">Oracle’s JDK Page</a>.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 安装Bazel</span><br><span class="line">brew install bazel</span><br><span class="line"></span><br><span class="line">// 查看Bazel版本</span><br><span class="line">bazel version</span><br><span class="line"></span><br><span class="line">// 提示需要安装java JDK</span><br></pre></td></tr></table></figure><p><strong>移除JAVA JDK</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -fr /Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin</span><br><span class="line">sudo rm -fr /Library/PreferencesPanes/JavaControlPanel.prefPane</span><br><span class="line">sudo rm -fr ~/Library/Application\ Support/Java</span><br><span class="line">sudo rm -rf /Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Macintosh </category>
          
          <category> Application </category>
          
          <category> Homebrew </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Macintosh </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Windows Note</title>
      <link href="/posts/4105617365.html"/>
      <url>/posts/4105617365.html</url>
      <content type="html"><![CDATA[<h1 id="Windows-Note"><a href="#Windows-Note" class="headerlink" title="Windows Note"></a>Windows Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>此文用来记录平时使用Windows遇到的问题与心得.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="重装电脑"><a href="#重装电脑" class="headerlink" title="重装电脑"></a>重装电脑</h2><p><img src="https://ws1.sinaimg.cn/large/006gHug0gy1fzed33f457j31hb0tzwqy.jpg" alt=""></p><ul><li><p>UWP </p><ul><li>网易云音乐</li><li>OneNote</li><li>QuickLook</li></ul></li><li><p>Applications </p><ul><li>Coding <ul><li></li><li>Intellij IDEA</li><li>Git</li><li>Notepad++</li><li>Java</li><li>Python3</li></ul></li><li>Office</li><li>Fun <ul><li>Tim</li><li>WeChat</li><li><a href="https://t1.daumcdn.net/potplayer/PotPlayer/Version/Latest/PotPlayerSetup64.exe" target="_blank" rel="noopener">PotPlayer</a></li><li>Chrome</li></ul></li><li>Tools <ul><li>7-zip</li><li>SSR </li><li>v2rayN</li><li>Notion</li><li>Picgo</li><li>IDM</li><li>迅雷</li><li>Pandownload</li><li>Rainmeter</li><li>Typora</li></ul></li></ul></li><li>Others<ul><li>Hexo Blog</li></ul></li></ul>]]></content>
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>V2Ray Tutorial</title>
      <link href="/posts/4208935620.html"/>
      <url>/posts/4208935620.html</url>
      <content type="html"><![CDATA[<h1 id="V2Ray-Tutorial"><a href="#V2Ray-Tutorial" class="headerlink" title="V2Ray Tutorial"></a>V2Ray Tutorial</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>v2ray是一个代理平台，能够配置多种协议，有很多的玩法、用法（动态端口、mKCP、Mux等等）。更多的内容请查看<a href="https://www.v2ray.com/" target="_blank" rel="noopener">V2Ray官网</a>。</p></blockquote><a id="more"></a><h2 id="平台支持"><a href="#平台支持" class="headerlink" title="平台支持"></a>平台支持</h2><p>V2Ray 在以下平台中可用：</p><ul><li><p>Windows 7 及之后版本（x86 / amd64）；</p></li><li><p>Mac OS X 10.10 Yosemite 及之后版本（amd64）；</p></li><li>Linux 2.6.23 及之后版本（x86 / amd64 / arm / arm64 / mips64 / mips）；<ul><li>包括但不限于 Debian 7 / 8、Ubuntu 12.04 / 14.04 及后续版本、CentOS 6 / 7、Arch Linux；</li></ul></li><li>FreeBSD (x86 / amd64)；</li><li>OpenBSD (x86 / amd64)；</li><li>Dragonfly BSD (amd64)；</li></ul><h2 id="Windows平台"><a href="#Windows平台" class="headerlink" title="Windows平台"></a>Windows平台</h2><p>V2RayN 是 PC 平台一个对新手比较友好的 V2Ray GUI 客户端。</p><h3 id="下载V2Ray"><a href="#下载V2Ray" class="headerlink" title="下载V2Ray"></a>下载V2Ray</h3><ul><li><a href="https://github.com/v2ray/v2ray-core/releases" target="_blank" rel="noopener">Github Release</a></li><li><a href="https://www.v2ray.com/download/" target="_blank" rel="noopener">Github 分流</a></li><li><a href="https://github.com/v2ray/homebrew-v2ray" target="_blank" rel="noopener">Homebrew</a></li><li><a href="https://www.archlinux.org/packages/community/x86_64/v2ray/" target="_blank" rel="noopener">Arch Linux</a></li><li><a href="https://snapcraft.io/v2ray-core" target="_blank" rel="noopener">Snapcraft</a></li></ul><p>压缩包均为 zip 格式，找到对应平台的压缩包，下载解压。</p><h3 id="下载V2RayN"><a href="#下载V2RayN" class="headerlink" title="下载V2RayN"></a>下载V2RayN</h3><ul><li><a href="https://github.com/2dust/v2rayN/releases/latest" target="_blank" rel="noopener">Github Release</a></li></ul><p>解压，将解压出来的 v2rayN.exe 和 zh-Hans 文件夹全部复制到之前下载并解压出来的 v2ray-windows-xx 文件夹目录中。</p><h3 id="傻瓜式配置应用"><a href="#傻瓜式配置应用" class="headerlink" title="傻瓜式配置应用"></a>傻瓜式配置应用</h3><p>双击<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![](https://ws1.sinaimg.cn/large/006gHug0ly1fxi2g58k7zj30rk0ir797.jpg)</span><br><span class="line"></span><br><span class="line">点击订阅-订阅设置，在url栏填写订阅地址，并选择确定。</span><br><span class="line"></span><br><span class="line">![](https://ws1.sinaimg.cn/large/006gHug0ly1fxi2l0q028j30g90flwee.jpg)</span><br><span class="line"></span><br><span class="line">### 注意事项</span><br><span class="line"></span><br><span class="line">- 如果发生**应用占用CPU过高**，建议更换本地监听端口，在参数设置-基础设置中进行更改。</span><br><span class="line"></span><br><span class="line">更改后建议重启服务或者重启设备；</span><br><span class="line"></span><br><span class="line">- 连不上就换一个服务器试一试；</span><br><span class="line">- 客户端允许最多50个同时使用，月流量50G，仅供科学上网使用</span><br><span class="line">- **v2ray要求系统时间准确,如果连接不上,请检查系统的时间是否准确**；</span><br><span class="line">- 服务器模式</span><br><span class="line">  - 全局：全部流量走国外服务器</span><br><span class="line">  - PAC：跳过大陆IP，其他走国外服务器</span><br><span class="line">  - 直连：不走国外服务器</span><br><span class="line"></span><br><span class="line">![](https://ws1.sinaimg.cn/large/006gHug0ly1fxl9li1dqlj309w02l3ye.jpg)</span><br><span class="line"></span><br><span class="line">### Enjoy it!</span><br><span class="line"></span><br><span class="line">![](https://ws1.sinaimg.cn/large/006gHug0ly1fxjhye6sonj30nl0ehglt.jpg)</span><br><span class="line"></span><br><span class="line">## Mac平台</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- [GitHub](https://github.com/Cenmrev/V2RayX/releases)下载</span><br><span class="line">- 我是通过Homebrew-Cask直接安装</span><br></pre></td></tr></table></figure></p><p>  brew cask install v2rayx<br>  <code>`</code></p><ul><li>配置(我这里导入链接突然不起作用)</li></ul><p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fyegvhwe3ij30fd0dudhd.jpg" alt="image-20181221165341210"></p><p>将自己的节点信息输入进去并保存,切换服务器,Load Core即可使用.</p><h2 id="Linux平台"><a href="#Linux平台" class="headerlink" title="Linux平台"></a>Linux平台</h2><p>配置较为复杂以及使用率较低，就不再赘述。</p>]]></content>
      
      <categories>
          
          <category> V2Ray </category>
          
      </categories>
      
      
        <tags>
            
            <tag> V2Ray </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Docker Tutorial</title>
      <link href="/posts/2887120666.html"/>
      <url>/posts/2887120666.html</url>
      <content type="html"><![CDATA[<h1 id="Docker-Tutorial"><a href="#Docker-Tutorial" class="headerlink" title="Docker Tutorial"></a>Docker Tutorial</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>此文用来记录平时使用Git遇到的问题与心得.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><p><a href="https://download.docker.com/mac/stable/Docker.dmg" target="_blank" rel="noopener">注册Docker ID下载文件</a></p><ul><li><p>查看是否安装成功</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ docker version</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">$ docker info</span><br><span class="line"><span class="comment"># 运行hello-world</span></span><br><span class="line"><span class="comment"># 本地没有image文件会先从library拉取</span></span><br><span class="line">$ docker container run hello-world</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># result</span></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the <span class="string">"hello-world"</span> image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image <span class="built_in">which</span> runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, <span class="built_in">which</span> sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"> $ docker run -it ubuntu bash</span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br></pre></td></tr></table></figure></li></ul><h2 id="使用技巧"><a href="#使用技巧" class="headerlink" title="使用技巧"></a>使用技巧</h2><h3 id="image"><a href="#image" class="headerlink" title="image"></a>image</h3><blockquote><p><strong>Docker 把应用程序及其依赖，打包在 image 文件里面。</strong>只有通过这个文件，才能生成 Docker 容器。image 文件可以看作是容器的模板。Docker 根据 image 文件生成容器的实例。同一个 image 文件，可以生成多个同时运行的容器实例。</p><p>image 是二进制文件。实际开发中，一个 image 文件往往通过继承另一个 image 文件，加上一些个性化设置而生成。举例来说，你可以在 Ubuntu 的 image 基础上，往里面加入 Apache 服务器，形成你的 image。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出本机的所有 image 文件。</span></span><br><span class="line">$ docker image ls</span><br><span class="line"><span class="comment"># 删除 image 文件</span></span><br><span class="line">$ docker image rm [imageName]</span><br><span class="line"><span class="comment"># 从libaray拉取image</span></span><br><span class="line">$ docker image pull library/hello-world</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">$ docker image pull hello-world</span><br></pre></td></tr></table></figure><h3 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h3><blockquote><p><strong>image 文件生成的容器实例，本身也是一个文件，称为容器文件。</strong>也就是说，一旦容器生成，就会同时存在两个文件： image 文件和容器文件。而且关闭容器并不会删除容器文件，只是容器停止运行而已。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出本机正在运行的容器</span></span><br><span class="line">$ docker container ls</span><br><span class="line"><span class="comment"># 列出本机所有容器，包括终止运行的容器</span></span><br><span class="line">$ docker container ls --all</span><br><span class="line"><span class="comment"># 删除容器</span></span><br><span class="line">$ docker container rm [containerID]</span><br><span class="line"><span class="comment"># 安装运行 Ubuntu 的 image</span></span><br><span class="line">$ docker container run -it ubuntu bash</span><br><span class="line"><span class="comment"># 终止容器,强行立即终止</span></span><br><span class="line">$ docker container <span class="built_in">kill</span> [containID]</span><br></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动已经生成、已经停止运行的容器文件。</span></span><br><span class="line"><span class="comment"># docker container run命令是新建容器，每运行一次，就会新建一个容器。同样的命令运行两次，就会生成两个一模一样的容器文件。</span></span><br><span class="line">$ docker container start [containerID]</span><br><span class="line">$ docker container stop [containerID]</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看 docker 容器的输出，即容器里面 Shell 的标准输出。如果docker run命令运行容器的时候，没有使用-it参数，就要用这个命令查看输出。</span></span><br><span class="line">$ docker container logs [containerID]</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入一个正在运行的 docker 容器。如果docker run命令运行容器的时候，没有使用-it参数，就要用这个命令进入容器。一旦进入了容器，就可以在容器的 Shell 执行命令了。</span></span><br><span class="line">$ docker container <span class="built_in">exec</span> -it [containerID] /bin/bash</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从正在运行的 Docker 容器里面，将文件拷贝到本机。</span></span><br><span class="line">$ docker container cp [containID]:[/path/to/file] .</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Macintosh Note</title>
      <link href="/posts/1565465933.html"/>
      <url>/posts/1565465933.html</url>
      <content type="html"><![CDATA[<h1 id="Macintosh-Note"><a href="#Macintosh-Note" class="headerlink" title="Macintosh Note"></a>Macintosh Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>此文用来记录平时使用Mac遇到的问题与心得.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="系统快捷键"><a href="#系统快捷键" class="headerlink" title="系统快捷键"></a>系统快捷键</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 查看当前文件路径</span><br><span class="line">option+command+c = alt+win+c</span><br><span class="line"># 截图</span><br><span class="line">## 保存截图文件</span><br><span class="line">command+shift+3#全屏</span><br><span class="line">command+shift+4#自由</span><br><span class="line">## 不保存截图文件</span><br><span class="line">control+command+shift+3#全屏</span><br><span class="line">control+command+shift+4#自由</span><br></pre></td></tr></table></figure><h2 id="必备软件"><a href="#必备软件" class="headerlink" title="必备软件"></a>必备软件</h2><ol><li>Google Chrome</li><li>QQ</li><li>VS Code</li><li>iTerm 2</li><li>TickTick</li><li>V2RayX</li><li>LastPass</li><li>Typora</li><li>IntelliJ IDEA</li><li>WeChat</li><li>XMind Zen</li><li>The Unarchiver</li><li>Tuxera NTFS for Mac</li><li><del>Sequel Pro</del></li><li>iStat Menus</li><li><del>CleanMyMac X</del></li></ol><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1g0k891iv80j31hc0u0e81.jpg" alt="image-20190226230916091"></p><h2 id="字体渲染次像素抗锯齿"><a href="#字体渲染次像素抗锯齿" class="headerlink" title="字体渲染次像素抗锯齿"></a>字体渲染次像素抗锯齿</h2><p>打开 【终端】应用，输入下面命令，全局启用 <strong>次像素抗锯齿</strong> 渲染：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO</span><br></pre></td></tr></table></figure><p>设置字体 <strong>次像素抗锯齿</strong> 级别 (类似 Linux 的 <code>hintstyle</code> 微调样式) 的命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults -currentHost write -globalDomain AppleFontSmoothing -int 3</span><br></pre></td></tr></table></figure><p>查看设置后的选项值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ defaults read -g CGFontRenderingFontSmoothingDisabled</span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">$ defaults -currentHost read -globalDomain AppleFontSmoothing</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>然后重新登录Mac账户后生效</p><p>修改完后 【系统偏好设置】—&gt; 【通用】最下面的 【使用平滑字体】选项：</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1g0sb9kqomlj30ik0ifq5q.jpg" alt="image-20190305225806700"></p><h2 id="iTerm-2"><a href="#iTerm-2" class="headerlink" title="iTerm 2"></a>iTerm 2</h2><h3 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h3><a href="/posts/141487065.html" title="详细设置请看这篇文章">详细设置请看这篇文章</a><ol><li><p>安装Homebrew</p><p><code>ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)”</code></p></li><li><p>首先下载 <a href="https://link.jianshu.com/?t=http%3A%2F%2Fwww.iterm2.com%2F" target="_blank" rel="noopener">iTerm 2</a></p></li><li><p>安装<a href="https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2Frobbyrussell%2Foh-my-zsh" target="_blank" rel="noopener">oh-my-zsh</a></p><p><code>curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh</code></p></li><li><p>安装<a href="https://link.jianshu.com/?t=http%3A%2F%2Fpowerline.readthedocs.org%2Fen%2Flatest%2Finstallation.html" target="_blank" rel="noopener">Powerline</a></p></li><li><p>使用agnoster主题</p><ol><li>下载<a href="https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2Ffcamblor%2Foh-my-zsh-agnoster-fcamblor" target="_blank" rel="noopener">agnoster</a>主题</li></ol><blockquote><p>到下载的工程里面运行install文件,主题将安装到<code>~/.oh-my-zsh/themes</code>目录下</p></blockquote><ol><li>设置该主题</li></ol><blockquote><p>进入<code>~/.zshrc</code>打开<code>.zshrc</code>文件，然后将<code>ZSH_THEME</code>后面的字段改为<code>agnoster</code>。<code>ZSH_THEME=&quot;agnoster&quot;</code>（agnoster即为要设置的主题）</p></blockquote></li><li><p>增加代码高亮效果</p><ol><li><p>cd到<code>.zshrc</code>所在目录</p></li><li><p>下载工程文件</p><p><code>git clone git://github.com/zsh-users/zsh-syntax-highlighting.git</code></p></li><li><p>打开<code>.zshrc</code>文件，在最后添加下面内容</p><p><code>source /.../zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</code></p></li><li><p>cd <code>~/.oh-my-zsh/custom/plugins</code></p></li><li><p>再次打开<code>.zshrc</code>文件，在最后面添加下面内容</p><p><code>plugins=(zsh-syntax-highlighting)</code></p></li></ol></li></ol><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ol><li><p>默认使用zsh: <code>chsh -s /bin/zsh</code></p></li><li><p>取消显示计算机名</p><blockquote><p>在~/.oh-my-zsh/themes路径下找到agnoster.zsh-theme文件，将里面的build_prompt下的prompt_context字段在注释掉即可。</p></blockquote></li><li><p>跳板机互传文件</p><blockquote><p>由于使用跳板机，所以这里需要使用lrzsz</p><p>注意lrzsz与expect连接方式不能共存，容易出现假死</p><p>如果需要免输入密码登录，建议使用sshpass方式进行连接远程服务器</p></blockquote><ul><li><p>安装lrzsz</p><p><code>brew install lrzsz</code></p></li><li><p>配置lrzsz</p><p>在/usr/local/bin 目录下创建两个文件<code>iterm2-recv-zmodem.sh</code>， <code>iterm2-send-zmodem.sh</code></p><ul><li><p>iterm2-recv-zmodem.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Author: Matt Mastracci (matthew@mastracci.com)</span></span><br><span class="line"><span class="comment"># AppleScript from http://stackoverflow.com/questions/4309087/cancel-button-on-osascript-in-a-bash-script</span></span><br><span class="line"><span class="comment"># licensed under cc-wiki with attribution required </span></span><br><span class="line"><span class="comment"># Remainder of script public domain</span></span><br><span class="line"></span><br><span class="line">osascript -e <span class="string">'tell application "iTerm2" to version'</span> &gt; /dev/null 2&gt;&amp;1 &amp;&amp; NAME=iTerm2 || NAME=iTerm</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$NAME</span> = <span class="string">"iTerm"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    FILE=`osascript -e <span class="string">'tell application "iTerm" to activate'</span> -e <span class="string">'tell application "iTerm" to set thefile to choose folder with prompt "Choose a folder to place received files in"'</span> -e <span class="string">"do shell script (\"echo \"&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\"\")"</span>`</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    FILE=`osascript -e <span class="string">'tell application "iTerm2" to activate'</span> -e <span class="string">'tell application "iTerm2" to set thefile to choose folder with prompt "Choose a folder to place received files in"'</span> -e <span class="string">"do shell script (\"echo \"&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\"\")"</span>`</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$FILE</span> = <span class="string">""</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> Cancelled.</span><br><span class="line">    <span class="comment"># Send ZModem cancel</span></span><br><span class="line">    <span class="built_in">echo</span> -e \\x18\\x18\\x18\\x18\\x18</span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> \<span class="comment"># Cancelled transfer</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="string">"<span class="variable">$FILE</span>"</span></span><br><span class="line">    /usr/<span class="built_in">local</span>/bin/rz -E -e -b</span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> \<span class="comment"># Sent \-\&gt; $FILE</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li><li><p>iterm2-send-zmodem.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Author: Matt Mastracci (matthew@mastracci.com)</span></span><br><span class="line"><span class="comment"># AppleScript from http://stackoverflow.com/questions/4309087/cancel-button-on-osascript-in-a-bash-script</span></span><br><span class="line"><span class="comment"># licensed under cc-wiki with attribution required </span></span><br><span class="line"><span class="comment"># Remainder of script public domain</span></span><br><span class="line"></span><br><span class="line">osascript -e <span class="string">'tell application "iTerm2" to version'</span> &gt; /dev/null 2&gt;&amp;1 &amp;&amp; NAME=iTerm2 || NAME=iTerm</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$NAME</span> = <span class="string">"iTerm"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    FILE=`osascript -e <span class="string">'tell application "iTerm" to activate'</span> -e <span class="string">'tell application "iTerm" to set thefile to choose file with prompt "Choose a file to send"'</span> -e <span class="string">"do shell script (\"echo \"&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\"\")"</span>`</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    FILE=`osascript -e <span class="string">'tell application "iTerm2" to activate'</span> -e <span class="string">'tell application "iTerm2" to set thefile to choose file with prompt "Choose a file to send"'</span> -e <span class="string">"do shell script (\"echo \"&amp;(quoted form of POSIX path of thefile as Unicode text)&amp;\"\")"</span>`</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$FILE</span> = <span class="string">""</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> Cancelled.</span><br><span class="line">    <span class="comment"># Send ZModem cancel</span></span><br><span class="line">    <span class="built_in">echo</span> -e \\x18\\x18\\x18\\x18\\x18</span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> \<span class="comment"># Cancelled transfer</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    /usr/<span class="built_in">local</span>/bin/sz <span class="string">"<span class="variable">$FILE</span>"</span> -e -b</span><br><span class="line">    sleep 1</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> \<span class="comment"># Received $FILE</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li><li><p>将文件写好后保存好，使用如下命令添加权限</p><p><code>chmod a+x iterm2-*</code></p></li></ul></li><li><p>配置iTerm2</p><p>点击 iTerm2 的设置界面 Perference-&gt; Profiles -&gt; Default -&gt; Advanced -&gt; Triggers 的 Edit 按钮</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Regular expression: rz waiting to receive.\*\*B0100</span><br><span class="line">Action: Run Silent Coprocess</span><br><span class="line">Parameters: /usr/<span class="built_in">local</span>/bin/iterm2-send-zmodem.sh</span><br><span class="line"></span><br><span class="line">Regular expression: \*\*B00000000000000</span><br><span class="line">Action: Run Silent Coprocess</span><br><span class="line">Parameters: /usr/<span class="built_in">local</span>/bin/iterm2-recv-zmodem.sh</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h2><h3 id="偏好设置截图"><a href="#偏好设置截图" class="headerlink" title="偏好设置截图"></a><strong>偏好设置截图</strong></h3><p><img src="https://ws4.sinaimg.cn/large/006tNbRwly1fyegnspbpbj30e70bgta3.jpg" alt="image-20181221164616930"></p><p><img src="https://ws1.sinaimg.cn/large/006tNbRwly1fyego5tc13j30e90fuq56.jpg" alt="image-20181221164638191"></p><p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fyegoil35vj30e80g2q5e.jpg" alt="image-20181221164658153"></p><p>「注」iPic需要在App Store中提前下载好。</p><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">标题：#</span><br><span class="line">最大标题：command + 1 或者：#</span><br><span class="line">大标题：command + 2 或者：##</span><br><span class="line">标准标题：command + 3 或者：###</span><br><span class="line">中标题：command + 4 或者：####</span><br><span class="line">小标题：command + 5 或者：#####</span><br><span class="line">插入表格：command + T</span><br><span class="line">插入代码：command + Alt +c </span><br><span class="line">行间公式 command + Alt + b</span><br><span class="line">段落：command + 0</span><br><span class="line">竖线: command + Alt +q</span><br><span class="line">有序列表（1.  2.）: 输入数字+“.”之后输入空格 或者：command + Alt + o   </span><br><span class="line">黑点标记: command + Alt + u  </span><br><span class="line">隔离线: shift + command +  -</span><br><span class="line">超链接：command + Alt + l</span><br><span class="line">插入链接：command +k</span><br><span class="line">下划线：command +u </span><br><span class="line">加粗：command +b</span><br><span class="line">搜索：command +f</span><br></pre></td></tr></table></figure><h2 id="V2RayX"><a href="#V2RayX" class="headerlink" title="V2RayX"></a>V2RayX</h2><ul><li><a href="https://github.com/Cenmrev/V2RayX/releases" target="_blank" rel="noopener">GitHub</a>下载</li><li><p>通过Homebrew-Cask直接安装</p><p><code>brew cask install v2rayx</code></p></li><li><p>配置</p></li></ul><p><img src="https://ws3.sinaimg.cn/large/006tNbRwly1fyegvhwe3ij30fd0dudhd.jpg" alt="image-20181221165341210"></p><p>将自己的节点信息输入进去并保存,切换服务器,Load Core即可使用.</p><h2 id="Sequel-Pro"><a href="#Sequel-Pro" class="headerlink" title="Sequel Pro"></a>Sequel Pro</h2><h3 id="配置自带格式化工具"><a href="#配置自带格式化工具" class="headerlink" title="配置自带格式化工具"></a>配置自带格式化工具</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"># check for empty STDIN</span><br><span class="line">SQL=$(cat)</span><br><span class="line">if [ -z "$SQL" ]; then</span><br><span class="line">echo "No SQL statements passed."</span><br><span class="line">exit $SP_BUNDLE_EXIT_SHOW_AS_TEXT_TOOLTIP</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># check if connected to the internet and if server is up</span><br><span class="line">connected=$(/sbin/ping -t 8 -c 1 -on www.dpriver.com 2&gt; /dev/null | grep '69\.5\.11\.169' | wc -l)</span><br><span class="line">if [ $connected -eq "0" ]; then</span><br><span class="line">echo "<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">red</span>&gt;</span>You are probably not connected to the internet or http://www.dpriver.com/ server is down.<span class="tag">&lt;/<span class="name">font</span>&gt;</span>"</span><br><span class="line">exit $SP_BUNDLE_EXIT_SHOW_AS_HTML_TOOLTIP</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># show info alert about sending the SQL statements to an online service</span><br><span class="line">if [ ! -e infoShowed ]; then</span><br><span class="line">touch infoShowed</span><br><span class="line">osascript -e 'tell app "Sequel Pro" to display dialog "This command will send the SQL statement(s) - unencrypted - to an online service (http://www.dpriver.com).  Please consider this before sending confidential data!\n\nThis message will only be displayed once." with icon caution' 2&gt; 1</span><br><span class="line">if [ `cat 1 | wc -c` -ne 0 ]; then</span><br><span class="line">rm -f 1</span><br><span class="line">exit $SP_BUNDLE_EXIT_NONE</span><br><span class="line">fi</span><br><span class="line">rm -f 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># send SQL to www.dpriver.com and replace the formatted SQL string in first responder; if a parser error occurred</span><br><span class="line"># show error message and try to jump to the error</span><br><span class="line">cat &lt;&lt;HTML</span><br><span class="line"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">"http://www.dpriver.com/pp/"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Connecting www.dpriver.com<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">function lookForResult() &#123;</span></span><br><span class="line"><span class="undefined">if(document.all.outputsql.value.length &gt; 8) &#123;</span></span><br><span class="line"><span class="undefined">if(document.all.errorhint.style.display == "inline") &#123;</span></span><br><span class="line"><span class="undefined">var errormes = document.all.outputsql.value;</span></span><br><span class="line"><span class="undefined">var re = /.*?\(\d+\s*,\s*(\d+)\).*/;</span></span><br><span class="line"><span class="undefined">re.exec(errormes);</span></span><br><span class="line"><span class="undefined">var pos = parseInt(RegExp.\$1) - 1;</span></span><br><span class="line"><span class="undefined">re = /.*?(\d+).*/;</span></span><br><span class="line"><span class="undefined">re.exec('$SP_SELECTED_TEXT_RANGE');</span></span><br><span class="line"><span class="undefined">var offset = parseInt(RegExp.\$1);</span></span><br><span class="line"><span class="undefined">pos = pos + offset;</span></span><br><span class="line"><span class="undefined">alert(document.all.outputsql.value);</span></span><br><span class="line"><span class="undefined">window.system.setSelectedTextRange(pos+'');</span></span><br><span class="line"><span class="undefined">&#125; else &#123;</span></span><br><span class="line"><span class="undefined">var txt = document.all.outputsql.value;</span></span><br><span class="line"><span class="undefined">var len = txt.length;</span></span><br><span class="line"><span class="undefined">window.system.setSelectedTextRange('$SP_SELECTED_TEXT_RANGE');</span></span><br><span class="line"><span class="undefined"> window.system.insertText(txt.slice(0,len-2));</span></span><br><span class="line"><span class="undefined"> &#125;</span></span><br><span class="line"><span class="undefined"> window.system.closeHTMLOutputWindow();</span></span><br><span class="line"><span class="undefined">&#125; else &#123;</span></span><br><span class="line"><span class="undefined">setTimeout("lookForResult()",50);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">function waitForResult() &#123;</span></span><br><span class="line"><span class="undefined">window.system.suppressExceptionAlert();</span></span><br><span class="line"><span class="undefined">setTimeout("lookForResult()",50);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"JavaScript"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"pp.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">'window.resizeTo(300,200);SQLFMT.format(document.all.sp_submit);waitForResult()'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"retvalues"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>Copyright &amp;copy; 2001-2010 Gudu Software<span class="tag">&lt;<span class="name">br</span>&gt;</span>All Rights Reserved<span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:support@dpriver.com"</span>&gt;</span>Contact US<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">right</span>&gt;</span>Please wait…<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"page-container-1"</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"SqlFmtForm"</span> <span class="attr">name</span>=<span class="string">"frm_sqlformat"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"/cgi-bin/ppserver"</span> <span class="attr">onsubmit</span>=<span class="string">"return false;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"secondpanel"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"sp_database"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"desc"</span> <span class="attr">style</span>=<span class="string">"display:inline;"</span>&gt;</span>Database<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"dbvendor"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"mysql"</span> <span class="attr">selected</span>&gt;</span>MySQL<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"desc"</span> <span class="attr">style</span>=<span class="string">"display:inline;padding:0 0 0px 40px; border:0px solid;"</span>&gt;</span>Output:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"outputfmt"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"SQL"</span> <span class="attr">selected</span>&gt;</span>SQL(Text)<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"sqlpanel"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"sp_inputsql"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span> =<span class="string">"inputsql"</span> <span class="attr">name</span>=<span class="string">"inputsql"</span> <span class="attr">cols</span>=<span class="string">"1"</span> <span class="attr">rows</span>=<span class="string">"1"</span> <span class="attr">wrap</span>=<span class="string">"off"</span>&gt;</span></span><br><span class="line">$SQL</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"sp_submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"btnformat"</span> <span class="attr">name</span>=<span class="string">"print"</span> <span class="attr">value</span>=<span class="string">"Format SQL"</span> <span class="attr">onclick</span>=<span class="string">"SQLFMT.format(this)"</span> <span class="attr">value</span>=<span class="string">"Format SQL"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span>(Time used: <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"timestamp"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">span</span>&gt;</span> seconds)<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"sp_submit"</span> <span class="attr">style</span>=<span class="string">"text-align:left;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">id</span>=<span class="string">"errorhint"</span> <span class="attr">class</span>=<span class="string">"desc"</span> <span class="attr">style</span>=<span class="string">"color:#DF0000 !important;display:none;"</span>&gt;</span></span><br><span class="line">Can't format input sql, make sure there is no syntax error and select correct database.</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span>OR Report a bug of this sql beautifier<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">"ioutputsql"</span> &gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"sp_outputsql"</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span> = <span class="string">"outputsql"</span> <span class="attr">name</span>=<span class="string">"outputsql"</span> <span class="attr">cols</span>=<span class="string">"80"</span> <span class="attr">rows</span>=<span class="string">"15"</span> <span class="attr">wrap</span>=<span class="string">"off"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"sp_errormsg"</span> <span class="attr">style</span>=<span class="string">"display:none;"</span>&gt;</span></span><br><span class="line">Error message goes to here!</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"formatoptions"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"keywordcs"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Uppercase"</span> <span class="attr">selected</span> &gt;</span>Uppercase<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Lowercase"</span> &gt;</span>Lowercase<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"InitCap"</span> &gt;</span>InitCap<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Unchanged"</span> &gt;</span>Unchanged<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"identifiercs"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Uppercase"</span> &gt;</span>Uppercase<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Lowercase"</span> <span class="attr">selected</span> &gt;</span>Lowercase<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"InitCap"</span> &gt;</span>InitCap<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Unchanged"</span> &gt;</span>Unchanged<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"initcapeachword"</span> &gt;</span>Init cap each word<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"functioncs"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Uppercase"</span> &gt;</span>Uppercase<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Lowercase"</span> &gt;</span>Lowercase<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"InitCap"</span> <span class="attr">selected</span> &gt;</span>InitCap<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Unchanged"</span> &gt;</span>Unchanged<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"lnbrwithcomma"</span> <span class="attr">value</span>=<span class="string">"after"</span> <span class="attr">checked</span> &gt;</span> After</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"lnbrwithcomma"</span> <span class="attr">value</span>=<span class="string">"before"</span> &gt;</span> Before</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"lnbrwithcomma"</span> <span class="attr">value</span>= <span class="string">"beforewithspace"</span> &gt;</span> Before with space</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"liststyle"</span> <span class="attr">value</span>=<span class="string">"stack"</span> <span class="attr">checked</span>&gt;</span>Stacked</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"liststyle"</span> <span class="attr">value</span>=<span class="string">"nostack"</span>&gt;</span>Not Stacked</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"salign"</span> <span class="attr">value</span>=<span class="string">"sleft"</span> <span class="attr">checked</span>&gt;</span> Align left</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"salign"</span> <span class="attr">value</span>=<span class="string">"sright"</span> &gt;</span> Align right</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"andorunderwhere"</span> <span class="attr">value</span>=<span class="string">"yes"</span> <span class="attr">checked</span>&gt;</span> And/Or under Where</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"removelnbr"</span> <span class="attr">value</span>=<span class="string">"no"</span> <span class="attr">checked</span>&gt;</span> Remove Linebreak before beautify</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"trimquotechar"</span> <span class="attr">value</span>=<span class="string">"yes"</span>&gt;</span> Trim Quoted Char of Each Line quoted char of eachline: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"quotechar"</span> <span class="attr">value</span>= <span class="string">"&amp;#34"</span> <span class="attr">size</span> = <span class="string">5</span> &gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"compactmode"</span> <span class="attr">value</span>=<span class="string">"yes"</span>&gt;</span> Compact the output of sql output</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"maxlenincm"</span> <span class="attr">value</span>= <span class="string">"80"</span> <span class="attr">size</span> = <span class="string">5</span> &gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"clientid"</span> <span class="attr">value</span>=<span class="string">"dpriver-9094-8133-2031"</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">HTML</span><br></pre></td></tr></table></figure><h2 id="调整Launchpad图标大小"><a href="#调整Launchpad图标大小" class="headerlink" title="调整Launchpad图标大小"></a>调整Launchpad图标大小</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 调整每一列显示图标数量</span></span><br><span class="line">defaults write com.apple.dock springboard-rows -int 7</span><br><span class="line"><span class="comment"># 调整每一行显示图标数量</span></span><br><span class="line">defaults write com.apple.dock springboard-columns -int 12</span><br><span class="line"><span class="comment"># 由于修改了每一页显示图标数量，需要重启Launchpad</span></span><br><span class="line">defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock</span><br></pre></td></tr></table></figure><h2 id="VS-Code"><a href="#VS-Code" class="headerlink" title="VS Code"></a>VS Code</h2>]]></content>
      
      <categories>
          
          <category> Macintosh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Macintosh </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Maven Tutorial</title>
      <link href="/posts/159979374.html"/>
      <url>/posts/159979374.html</url>
      <content type="html"><![CDATA[<h1 id="Maven-Tutorial"><a href="#Maven-Tutorial" class="headerlink" title="Maven Tutorial"></a>Maven Tutorial</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>Maven是一个非常有用的依赖管理工具，Maven一个很重要的作用是用来管理Jar包的.</p><ul><li>通过maven工程可以直接从maven仓库下载需要的jar包到本地，不用再需要从外部添加，maven仓库可以是网上的镜像地址，也可以是公司内部的仓库；</li><li>通过maven可以实现对java 工程的同意管理和规范化使用；</li></ul><p>本文主要介绍Maven的配置过程.</p></blockquote><a id="more"></a><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="下载Maven"><a href="#下载Maven" class="headerlink" title="下载Maven"></a>下载Maven</h3><p><a href="https://maven.apache.org/download.cgi" target="_blank" rel="noopener">官网下载Maven</a>后, 解压到文件夹,路径名之后配置环境变量需要用到.</p><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fyfatdsrdqj31hb0r90y1.jpg" alt=""></p><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>在环境变量中新建<code>M2_HOME</code>系统变量,路径为<code>D:\Program Files\apache-maven-3.6.0</code>,就是你解压的文件夹的位置.</p><p>在path系统变量中添加一个,路径为<code>%M2_HOME%\bin</code>, 保存后进入命令行输入<code>mvn -version</code>查看是否配置成功.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\PmbJa&gt;mvn -version</span><br><span class="line">Apache Maven 3.6.0 (97c98ec64a1fdfee7767ce5ffb20918da4f719f3; 2018-10-25T02:41:47+08:00)</span><br><span class="line">Maven home: D:\Program Files\apache-maven-3.6.0\bin\..</span><br><span class="line">Java version: 1.8.0_191, vendor: Oracle Corporation, runtime: D:\Program Files\Java\jdk1.8.0_191\jre</span><br><span class="line">Default locale: en_US, platform encoding: GBK</span><br><span class="line">OS name: <span class="string">"windows 10"</span>, version: <span class="string">"10.0"</span>, arch: <span class="string">"amd64"</span>, family: <span class="string">"windows"</span></span><br></pre></td></tr></table></figure><h3 id="Maven文件夹配置"><a href="#Maven文件夹配置" class="headerlink" title="Maven文件夹配置"></a>Maven文件夹配置</h3><p>进入<code>%M2_HOME%\bin\conf</code>文件夹下,编辑<code>settings.xml</code>文件,将localRepository设置为自己的M2仓库位置.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">&lt;!-- localRepository</span></span><br><span class="line"><span class="comment">   | The path to the local repository maven will use to store artifacts.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | Default: $&#123;user.home&#125;/.m2/repository</span></span><br><span class="line"><span class="comment">  &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>\path\M2\Repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><p>另外也可以设置镜像</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- mirrors</span></span><br><span class="line"><span class="comment"> | This is a list of mirrors to be used in downloading artifacts from remote repositories.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> | It works like this: a POM may declare a repository to use in resolving certain artifacts.</span></span><br><span class="line"><span class="comment"> | However, this repository may have problems with heavy traffic at times, so people have mirrored</span></span><br><span class="line"><span class="comment"> | it to several places.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> | That repository definition will have a unique id, so we can create a mirror reference for that</span></span><br><span class="line"><span class="comment"> | repository, to be used as an alternate download site. The mirror site will be the preferred</span></span><br><span class="line"><span class="comment"> | server for that repository.</span></span><br><span class="line"><span class="comment"> |--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="配置IntelliJ-IDEA集成Maven"><a href="#配置IntelliJ-IDEA集成Maven" class="headerlink" title="配置IntelliJ IDEA集成Maven"></a>配置IntelliJ IDEA集成Maven</h3><p>打开IntelliJ IDEA-&gt;File-&gt;Setting,搜索Maven,在下图的位置修改成上一步修改的xml文件,下面的Local repository会自动修改.</p><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fyfbh2i3ajj30sa0jsta6.jpg" alt=""></p><h3 id="Maven-for-Hello-World"><a href="#Maven-for-Hello-World" class="headerlink" title="Maven for Hello World"></a>Maven for Hello World</h3><ul><li>右键Projects-&gt;New-&gt;Module</li></ul><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fyfbxlftq1j30j30m6403.jpg" alt=""></p><ul><li><p>选择Maven,直接下一步</p><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fyfbz63u6rj30k20gk75w.jpg" alt=""></p></li><li><p>设置Group,ArtifactId</p><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fyfc0one2mj30k30gj74d.jpg" alt=""></p></li><li><p>Finish</p><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fyfc1tpp00j30k30gjwem.jpg" alt=""></p></li><li><p>点击Enable Auto-Import,等待下载</p><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fyfc5bgpb4j30b703eglh.jpg" alt=""></p></li><li><p>项目结构</p><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fyfc7bwmrkj30d206iweh.jpg" alt=""></p></li><li><p>选择Project Structure</p><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fyfcby08o5j30sk0nm758.jpg" alt="">            </p></li><li><p>选择Modules-&gt;Web</p><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fyfccrm7svj30sl0nm407.jpg" alt=""></p></li><li><p>双击Web Resource Directory,选择scr/main目录,在后面加上webapp</p><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fyfch6rnfhj30sk0nnab6.jpg" alt=""></p></li><li><p>设置Web的描述文件的位置</p><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fyfciutjaoj30sm0nldgz.jpg" alt=""></p></li><li><p>设置ArtifactId</p><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fyfcke29g8j30sm0npwff.jpg" alt=""></p></li><li><p>未完待续</p></li></ul>]]></content>
      
      <categories>
          
          <category> Java </category>
          
          <category> Maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>VSCode Customised</title>
      <link href="/posts/322488916.html"/>
      <url>/posts/322488916.html</url>
      <content type="html"><![CDATA[<h1 id="VSCode-Customised"><a href="#VSCode-Customised" class="headerlink" title="VSCode Customised"></a>VSCode Customised</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>VSCode.</p><p>此文用来记录VSCode 使用技巧.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="USER-SETTINGS"><a href="#USER-SETTINGS" class="headerlink" title="USER SETTINGS"></a>USER SETTINGS</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"workbench.startupEditor"</span>: <span class="string">"newUntitledFile"</span>,</span><br><span class="line">    <span class="attr">"editor.minimap.enabled"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"terminal.external.windowsExec"</span>: <span class="string">"C:\\Program Files\\Git\\bin\\bash.exe"</span>,</span><br><span class="line">    <span class="attr">"terminal.integrated.shell.windows"</span>: <span class="string">"C:\\Program Files\\Git\\bin\\bash.exe"</span>,</span><br><span class="line">    <span class="attr">"workbench.colorTheme"</span>: <span class="string">"One Dark Pro"</span>,</span><br><span class="line">    <span class="attr">"workbench.iconTheme"</span>: <span class="string">"vscode-icons"</span>,</span><br><span class="line">    <span class="attr">"diffEditor.ignoreTrimWhitespace"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"workbench.sideBar.location"</span>: <span class="string">"left"</span>,</span><br><span class="line">    <span class="attr">"editor.wordWrap"</span>: <span class="string">"on"</span>,</span><br><span class="line">    <span class="attr">"latex-workshop.latex.tools"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"latexmk"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"latexmk"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"-synctex=1"</span>,</span><br><span class="line">                <span class="string">"-interaction=nonstopmode"</span>,</span><br><span class="line">                <span class="string">"-file-line-error"</span>,</span><br><span class="line">                <span class="string">"-pdf"</span>,</span><br><span class="line">                <span class="string">"%DOC%"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"xelatex"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"xelatex"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"-synctex=1"</span>,</span><br><span class="line">                <span class="string">"-interaction=nonstopmode"</span>,</span><br><span class="line">                <span class="string">"-file-line-error"</span>,</span><br><span class="line">                <span class="string">"%DOC%"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"pdflatex"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"pdflatex"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"-synctex=1"</span>,</span><br><span class="line">                <span class="string">"-interaction=nonstopmode"</span>,</span><br><span class="line">                <span class="string">"-file-line-error"</span>,</span><br><span class="line">                <span class="string">"%DOC%"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"bibtex"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"bibtex"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"%DOCFILE%"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"latex-workshop.latex.recipes"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"xelatex"</span>,</span><br><span class="line">            <span class="attr">"tools"</span>: [</span><br><span class="line">                <span class="string">"xelatex"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"latexmk"</span>,</span><br><span class="line">            <span class="attr">"tools"</span>: [</span><br><span class="line">                <span class="string">"latexmk"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"pdflatex -&gt; bibtex -&gt; pdflatex*2"</span>,</span><br><span class="line">            <span class="attr">"tools"</span>: [</span><br><span class="line">                <span class="string">"pdflatex"</span>,</span><br><span class="line">                <span class="string">"bibtex"</span>,</span><br><span class="line">                <span class="string">"pdflatex"</span>,</span><br><span class="line">                <span class="string">"pdflatex"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"latex-workshop.latex.clean.enabled"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"latex-workshop.latex.clean.fileTypes"</span>: [</span><br><span class="line">        <span class="string">"*.aux"</span>,</span><br><span class="line">        <span class="string">"*.bbl"</span>,</span><br><span class="line">        <span class="string">"*.blg"</span>,</span><br><span class="line">        <span class="string">"*.idx"</span>,</span><br><span class="line">        <span class="string">"*.ind"</span>,</span><br><span class="line">        <span class="string">"*.lof"</span>,</span><br><span class="line">        <span class="string">"*.lot"</span>,</span><br><span class="line">        <span class="string">"*.out"</span>,</span><br><span class="line">        <span class="string">"*.toc"</span>,</span><br><span class="line">        <span class="string">"*.acn"</span>,</span><br><span class="line">        <span class="string">"*.acr"</span>,</span><br><span class="line">        <span class="string">"*.alg"</span>,</span><br><span class="line">        <span class="string">"*.glg"</span>,</span><br><span class="line">        <span class="string">"*.glo"</span>,</span><br><span class="line">        <span class="string">"*.gls"</span>,</span><br><span class="line">        <span class="string">"*.ist"</span>,</span><br><span class="line">        <span class="string">"*.fls"</span>,</span><br><span class="line">        <span class="string">"*.log"</span>,</span><br><span class="line">        <span class="string">"*.fdb_latexmk"</span>,</span><br><span class="line">        <span class="string">"*.gz"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"latex-workshop.view.pdf.viewer"</span>: <span class="string">"external"</span>,</span><br><span class="line">    <span class="attr">"latex-workshop.view.pdf.external.command"</span>: &#123;</span><br><span class="line">        <span class="attr">"command"</span>: <span class="string">"C:/Program Files/SumatraPDF/SumatraPDF.exe"</span>,</span><br><span class="line">        <span class="attr">"args"</span>: [</span><br><span class="line">            <span class="string">"%PDF%"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"latex-workshop.view.pdf.external.synctex"</span>: &#123;</span><br><span class="line">        <span class="attr">"command"</span>: <span class="string">"SumatraPDF.exe"</span>,</span><br><span class="line">        <span class="attr">"args"</span>: [</span><br><span class="line">            <span class="string">"-forward-search"</span>,</span><br><span class="line">            <span class="string">"%TEX%"</span>,</span><br><span class="line">            <span class="string">"%LINE%"</span>,</span><br><span class="line">            <span class="string">"%PDF%"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"workbench.startupEditor"</span>: <span class="string">"newUntitledFile"</span>,</span><br><span class="line">    <span class="attr">"editor.minimap.enabled"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"workbench.colorTheme"</span>: <span class="string">"One Dark Pro"</span>,</span><br><span class="line">    <span class="attr">"workbench.iconTheme"</span>: <span class="string">"vscode-icons"</span>,</span><br><span class="line">    <span class="attr">"diffEditor.ignoreTrimWhitespace"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"workbench.sideBar.location"</span>: <span class="string">"left"</span>,</span><br><span class="line">    <span class="attr">"editor.wordWrap"</span>: <span class="string">"on"</span>,</span><br><span class="line">    <span class="attr">"editor.fontSize"</span>: <span class="number">16</span>,</span><br><span class="line">    <span class="attr">"terminal.integrated.fontFamily"</span>: <span class="string">"Source Code Pro for Powerline"</span>,</span><br><span class="line">    <span class="attr">"terminal.integrated.fontSize"</span>: <span class="number">16</span>,</span><br><span class="line">    <span class="attr">"gitlens.views.repositories.files.layout"</span>: <span class="string">"list"</span>,</span><br><span class="line">    <span class="attr">"java.home"</span>: <span class="string">"/Library/Java/JavaVirtualMachines/jdk1.8.0_201.jdk/Contents/Home"</span>,</span><br><span class="line">    <span class="attr">"files.exclude"</span>: &#123;</span><br><span class="line">        <span class="attr">"**/.classpath"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">"**/.project"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">"**/.settings"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">"**/.factorypath"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"python.jediEnabled"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"java.errors.incompleteClasspath.severity"</span>: <span class="string">"ignore"</span>,</span><br><span class="line">    <span class="attr">"editor.suggestSelection"</span>: <span class="string">"first"</span>,</span><br><span class="line">    <span class="attr">"vsintellicode.modify.editor.suggestSelection"</span>: <span class="string">"automaticallyOverrodeDefaultValue"</span>,</span><br><span class="line">    <span class="attr">"latex-workshop.latex.tools"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"xelatex"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"xelatex"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"-synctex=1"</span>,</span><br><span class="line">                <span class="string">"-interaction=nonstopmode"</span>,</span><br><span class="line">                <span class="string">"-file-line-error"</span>,</span><br><span class="line">                <span class="string">"-pdf"</span>,</span><br><span class="line">                <span class="string">"%DOC%"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"latexmk"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"latexmk"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"-synctex=1"</span>,</span><br><span class="line">                <span class="string">"-interaction=nonstopmode"</span>,</span><br><span class="line">                <span class="string">"-file-line-error"</span>,</span><br><span class="line">                <span class="string">"-pdf"</span>,</span><br><span class="line">                <span class="string">"%DOC%"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"pdflatex"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"pdflatex"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"-synctex=1"</span>,</span><br><span class="line">                <span class="string">"-interaction=nonstopmode"</span>,</span><br><span class="line">                <span class="string">"-file-line-error"</span>,</span><br><span class="line">                <span class="string">"%DOC%"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"bibtex"</span>,</span><br><span class="line">            <span class="attr">"command"</span>: <span class="string">"bibtex"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: [</span><br><span class="line">                <span class="string">"%DOCFILE%"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"latex-workshop.latex.recipes"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"xelatex"</span>,</span><br><span class="line">            <span class="attr">"tools"</span>: [</span><br><span class="line">                <span class="string">"xelatex"</span>,</span><br><span class="line">                <span class="string">"xelatex"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"pdflatex -&gt; bibtex -&gt; pdflatex*2"</span>,</span><br><span class="line">            <span class="attr">"tools"</span>: [</span><br><span class="line">                <span class="string">"pdflatex"</span>,</span><br><span class="line">                <span class="string">"bibtex"</span>,</span><br><span class="line">                <span class="string">"pdflatex"</span>,</span><br><span class="line">                <span class="string">"pdflatex"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"latex-workshop.view.pdf.viewer"</span>: <span class="string">"tab"</span>,</span><br><span class="line">    <span class="attr">"latex-workshop.latex.autoClean.run"</span>: <span class="string">"onBuilt"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="EXTENSIONS"><a href="#EXTENSIONS" class="headerlink" title="EXTENSIONS"></a>EXTENSIONS</h2><ul><li><p>One Dark Pro</p></li><li><p>vscode-icons</p></li><li><p>ESLint</p></li><li><p>GitLens</p></li><li><p>LaTeX Workshop</p></li><li><p><del>Insert Date String</del></p><p><code>Windows:</code><kbd>ctrl</kbd>+<kbd>shift</kbd>+<kbd>I</kbd></p><p><code>MacOS</code><kbd>command</kbd>+<kbd>shift</kbd>+<kbd>I</kbd></p></li><li></li></ul>]]></content>
      
      <categories>
          
          <category> Applications </category>
          
          <category> VSCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Applications </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux Note</title>
      <link href="/posts/2223431484.html"/>
      <url>/posts/2223431484.html</url>
      <content type="html"><![CDATA[<h1 id="Linux-Note"><a href="#Linux-Note" class="headerlink" title="Linux Note"></a>Linux Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>此文用来记录平时使用Linux遇到的问题与心得.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="Linux-命令"><a href="#Linux-命令" class="headerlink" title="Linux 命令"></a>Linux 命令</h2><ul><li><p>sudo</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 为某条命令指定用户</span></span><br><span class="line">sudo -Hu user-name commond</span><br></pre></td></tr></table></figure></li></ul><h2 id="Linux-配置"><a href="#Linux-配置" class="headerlink" title="Linux 配置"></a>Linux 配置</h2><ul><li><p>Java</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看JDK路径</span></span><br><span class="line">whereis java</span><br><span class="line"><span class="built_in">which</span> java （java执行路径）</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$JAVA_HOME</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置JDK环境变量</span></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.91.x86_64</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$JAVA_HOME</span>/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib:<span class="variable">$JRE_HOME</span>/lib</span><br></pre></td></tr></table></figure></li><li></li></ul><h2 id="Linux-发行版"><a href="#Linux-发行版" class="headerlink" title="Linux 发行版"></a>Linux 发行版</h2><ul><li>Ubuntu</li><li>Mint</li><li>Manjaro</li><li>Elementary</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ul><li>双系统切换后时间不一致</li></ul><blockquote><p>原因</p><p>Windows和Ubuntu在默认情况下看待硬件时间（主板上的BOIS显示的时间）的方式不一样</p><ul><li>Windows把系统硬件时间当作本地时间（Local time），即操作系统中显示的时间跟BIOS中显示的时间是一样的.</li><li>Linux/Unix/Mac把硬件时间当作UTC（Universal Time Coordinated,协调世界时），操作系统中显示的时间是硬件时间经过换算得来.</li></ul></blockquote><p>解决方案</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更改Windows</span></span><br><span class="line"><span class="comment"># 如果要让Windows把硬件时间当作UTC</span></span><br><span class="line"><span class="comment"># 在CMD窗口（快捷键Win+R，输入cmd，回车）中输入如下命令，可以快速编辑注册表</span></span><br><span class="line">Reg add HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1</span><br><span class="line"><span class="comment"># 或者直接编辑注册表，打开注册表编辑器（快捷键Win+R，输入regedit，回车），并找到一下目录位置</span></span><br><span class="line"><span class="comment"># 添加一项类型为REG_DWORD的键值，命名为RealTimeIsUniversal，值为1，重启后时间即回复正常</span></span><br><span class="line">HKEY_LOCAL_MACHINE/SYSTEM/CurrentControlSet/Control/TimeZoneInformation/</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>WebHook Based on Git(Using PHP)</title>
      <link href="/posts/182327132.html"/>
      <url>/posts/182327132.html</url>
      <content type="html"><![CDATA[<h1 id="WebHook-Based-on-Git-Using-PHP"><a href="#WebHook-Based-on-Git-Using-PHP" class="headerlink" title="WebHook Based on Git(Using PHP)"></a>WebHook Based on Git(Using PHP)</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>使用Webhook实现远程服务器自动拉取更新内容</p></blockquote><a id="more"></a><h2 id="生成公钥"><a href="#生成公钥" class="headerlink" title="生成公钥"></a>生成公钥</h2><ul><li>Git用户公钥</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"test@test.com"</span></span><br><span class="line"><span class="comment"># 然后一直回车就行</span></span><br><span class="line"><span class="comment"># 生成的文件通常是 /root/.ssh/id_rsa，如果非root用户请查看提示上的路径</span></span><br></pre></td></tr></table></figure><ul><li>单独的服务器用户公钥</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo -Hu www ssh-keygen -t rsa </span><br><span class="line"><span class="comment"># 服务器运行PHP的用户为www,所以Hooks文件中涉及到权限的地方都需要声明为该用户</span></span><br><span class="line"><span class="comment"># 所以也就需要在Remote中加入该用户对应的公钥</span></span><br><span class="line"><span class="comment"># 意思是为www用户生成公钥</span></span><br><span class="line"><span class="comment"># 也是一直回车,中间会提示密钥存储位置</span></span><br></pre></td></tr></table></figure><p>接下来将这两个公钥加入账户中,获取对仓库的权限</p><h2 id="Hook文件"><a href="#Hook文件" class="headerlink" title="Hook文件"></a>Hook文件</h2><h3 id="创建和修改目录权限："><a href="#创建和修改目录权限：" class="headerlink" title="创建和修改目录权限："></a>创建和修改目录权限：</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line">mkdir /mnt/wwwroot/xxxx</span><br><span class="line"><span class="comment"># 修改目录权限</span></span><br><span class="line">chown -R www:www /mnt/wwwroot/xxxx</span><br></pre></td></tr></table></figure><h3 id="用www用户创建Hook文件-声明权限"><a href="#用www用户创建Hook文件-声明权限" class="headerlink" title="用www用户创建Hook文件,声明权限"></a>用www用户创建Hook文件,声明权限</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -Hu www touch /data/wwwroot/xxxx/webhook.php</span><br></pre></td></tr></table></figure><h3 id="创建log文件夹"><a href="#创建log文件夹" class="headerlink" title="创建log文件夹"></a>创建log文件夹</h3><p><code>sudo -Hu www mkdir log</code></p><h3 id="Hook文件内容"><a href="#Hook文件内容" class="headerlink" title="Hook文件内容"></a>Hook文件内容</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//git webhook 自动部署脚本</span></span><br><span class="line"><span class="comment">//项目存放物理路径</span></span><br><span class="line">$path = <span class="string">"/mnt/wwwroot/www.xxxx.com"</span>;</span><br><span class="line"></span><br><span class="line">$requestBody = file_get_contents(<span class="string">"php://input"</span>);</span><br><span class="line">$content = json_decode($requestBody, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//if(empty($content))&#123;</span></span><br><span class="line"><span class="comment">//    die("sent fail");</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//若是主分支且提交数大于0</span></span><br><span class="line"><span class="keyword">if</span> ($content[<span class="string">'ref'</span>]==<span class="string">'refs/heads/master'</span> &amp;&amp; $content[<span class="string">'total_commits_count'</span>]&gt;<span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//$res = shell_exec("cd &#123;$path&#125; &amp;&amp; git fetch --all &amp;&amp; git reset --hard origin/master ");</span></span><br><span class="line">    <span class="comment">//$res = shell_exec("cd &#123;$path&#125; &amp;&amp; git add . &amp;&amp; git commit -m 'commit by svn' &amp;&amp; git pull &amp;&amp; git push 2&gt;&amp;1");</span></span><br><span class="line">    $res = shell_exec(<span class="string">"cd &#123;$path&#125; &amp;&amp; git pull origin master "</span>);</span><br><span class="line"></span><br><span class="line">    $res_log = <span class="string">'-------------------------'</span>.PHP_EOL;</span><br><span class="line">    $res_log .= $content[<span class="string">'user_name'</span>] . <span class="string">' 在'</span> . date(<span class="string">'Y-m-d H:i:s'</span>) . <span class="string">'向'</span> . $content[<span class="string">'repository'</span>][<span class="string">'name'</span>] . <span class="string">'项目的'</span> . $content[<span class="string">'ref'</span>] . <span class="string">'分支push了</span></span><br><span class="line"><span class="string">'</span> . $content[<span class="string">'total_commits_count'</span>] . <span class="string">'个commit：'</span> . PHP_EOL;</span><br><span class="line">    $res_log .= $res.PHP_EOL;</span><br><span class="line"></span><br><span class="line">    file_put_contents(<span class="string">"&#123;$path&#125;/log/"</span>.date(<span class="string">'Y-m'</span>,time()).<span class="string">".txt"</span>, $res_log, FILE_APPEND);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>确保你的hook文件可以访问,例如<a href="https://test.com/hook.php" target="_blank" rel="noopener">https://test.com/hook.php</a> ,Hook文件准备完成.</p><h3 id="配置Remote和服务器仓库"><a href="#配置Remote和服务器仓库" class="headerlink" title="配置Remote和服务器仓库"></a>配置Remote和服务器仓库</h3><ul><li><p>配置公钥,将之前生成的公钥文件加入到Remote仓库的SSH公钥选项中</p></li><li><p>服务器仓库</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo -Hu www <span class="built_in">clone</span> git@repo_address/gittest.git /自定义文件夹</span><br><span class="line"><span class="comment"># 意思是以www用户的身份clone仓库,权限属于www用户</span></span><br></pre></td></tr></table></figure><ul><li>添加WebHooks规则</li></ul><blockquote><p>在每个仓库的设置中进行设置</p><p>可以选择推送事件/标签推送事件/评论/缺陷事件/合并请求/构建事件</p></blockquote><p>链接中填写外网访问服务器Hook文件的地址, 点击增加WEBHOOKS即可.</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>在本地仓库中:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim test.txt</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"test hook"</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>在服务器端:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看更改是否拉取到服务器</span></span><br><span class="line">vim test.txt</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Git </category>
          
          <category> WebHook </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>TortoiseGit on windows tutorial</title>
      <link href="/posts/2835625644.html"/>
      <url>/posts/2835625644.html</url>
      <content type="html"><![CDATA[<h1 id="Tutorial-of-TortoiseGit-on-Windows"><a href="#Tutorial-of-TortoiseGit-on-Windows" class="headerlink" title="Tutorial of TortoiseGit on Windows"></a>Tutorial of TortoiseGit on Windows</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>Tutorial of TortoiseGit on Windows.</p></blockquote><blockquote><p><strong>TortoiseGit</strong> is a <a href="https://en.wikipedia.org/wiki/Git_(software" target="_blank" rel="noopener">Git</a>) revision control client, implemented as a <a href="https://en.wikipedia.org/wiki/Windows_shell_extension" target="_blank" rel="noopener">Windows shell extension</a> and based on <a href="https://en.wikipedia.org/wiki/TortoiseSVN" target="_blank" rel="noopener">TortoiseSVN</a>. It is <a href="https://en.wikipedia.org/wiki/Free_software" target="_blank" rel="noopener">free software</a> released under the <a href="https://en.wikipedia.org/wiki/GNU_General_Public_License" target="_blank" rel="noopener">GNU General Public License</a>.</p><p>In <a href="https://en.wikipedia.org/wiki/Windows_Explorer" target="_blank" rel="noopener">Windows Explorer</a>, besides showing context menu items for Git commands, TortoiseGit provides icon overlays that indicate the status of Git working trees and files.</p><p>It also comes with the TortoiseGitMerge utility to visually compare two files and resolve conflicts.</p></blockquote><a id="more"></a><h2 id="安装-TortoiseGit"><a href="#安装-TortoiseGit" class="headerlink" title="安装 TortoiseGit"></a>安装 TortoiseGit</h2><ul><li>需要下载<a href="https://git-for-windows.github.io/" target="_blank" rel="noopener">Git</a> 以及<a href="https://tortoisegit.org/download/" target="_blank" rel="noopener">TortoiseGit</a></li><li>TortoiseGit 官网自带<a href="https://download.tortoisegit.org/tgit/2.7.0.0/TortoiseGit-LanguagePack-2.7.0.0-64bit-zh_CN.msi" target="_blank" rel="noopener">中文语言包(64位)</a></li></ul><p>安装比较简单,一路Next,只需要注意下面几点:</p><ul><li>开始安装一路Next</li></ul><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fy1ihp5lf3j30ds0aqmzk.jpg" alt=""></p><h2 id="配置软件"><a href="#配置软件" class="headerlink" title="配置软件"></a>配置软件</h2><ul><li>勾选Run first start wizard</li></ul><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fy1ijn70pij30ds0arjtu.jpg" alt=""></p><ul><li>设置本地Git路径</li></ul><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fy1il1lh0aj30e20d2jrk.jpg" alt=""></p><ul><li>设置用户名与邮箱地址</li></ul><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fy1lw1k3ylj30e20d274f.jpg" alt=""></p><ul><li>选择OpenSSh作为SSH软件工具(默认的会出现不知名错误)</li></ul><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fy1lx5jf6pj30e00d3dgd.jpg" alt=""></p><ul><li>在相同的页面选择Generate PuTTY key pair</li></ul><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fy1lykjwk4j30e00d3wew.jpg" alt=""></p><ul><li>点击生成,鼠标需要在空白处移动,不然进度会非常慢</li></ul><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fy1m09d3whj30db0cy3yr.jpg" alt=""></p><ul><li>把生成的密钥内容粘贴进git库中的SSH 密钥的位置(设置-SSH 公钥)并保存到本地</li></ul><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fy1m39awzmj31aq09kt9m.jpg" alt=""></p><ul><li>打开Pageant(TortoiseGit文件夹下),点击Add,将刚刚生成的文件添加进去</li></ul><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fy1m5jlob6j30dx09wdfq.jpg" alt=""></p><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><h3 id="Clone到本地"><a href="#Clone到本地" class="headerlink" title="Clone到本地"></a>Clone到本地</h3><ul><li>工程文件夹下选择Git Clone,将Remote工程文件夹拉取到本地</li></ul><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fy1marnmo5j30760dbaa7.jpg" alt=""></p><ul><li>URL中填写项目地址(SSH),Directory中填写工程所在位置,点击OK即可拉取到本地(与SVN操作大致相同)</li></ul><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fy1memcuvqj30g70a53ys.jpg" alt=""></p><h3 id="将本地更新推送到远程"><a href="#将本地更新推送到远程" class="headerlink" title="将本地更新推送到远程"></a>将本地更新推送到远程</h3><ul><li>选择Git Commit…</li></ul><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fy1ofofgi9j306y0damxa.jpg" alt=""></p><ul><li>输入Message后点击Commit</li></ul><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fy1og9o9czj30hj0fugmd.jpg" alt=""></p><ul><li>接着点击Push并勾选合适的参数推送到远程客户端</li></ul><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fy1ohdmgsij30g40a4glq.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fy1ohry5h2j30fh0ekmxk.jpg" alt=""></p><ul><li>Push完成,一次本地更新结束,其他操作类似</li></ul><h3 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h3><ul><li>TortoiseGitDiff</li></ul><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fy1oifael8j30eq0e33ys.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fy1oixcwo8j313o0lsmyf.jpg" alt=""></p><ul><li>TortoiseGit选项</li></ul><p><img src="https://ws1.sinaimg.cn/large/006gHug0ly1fy1oj3vctmj30do0nhjsv.jpg" alt=""></p>]]></content>
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Java Note</title>
      <link href="/posts/1928241614.html"/>
      <url>/posts/1928241614.html</url>
      <content type="html"><![CDATA[<h1 id="Java-Note"><a href="#Java-Note" class="headerlink" title="Java Note"></a>Java Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>此文用来记录平时使用Java遇到的问题与心得.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="Java常用函数"><a href="#Java常用函数" class="headerlink" title="Java常用函数"></a>Java常用函数</h2><h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><ul><li>indexOf()</li><li>charAt()</li></ul><h2 id="Unix-时间戳与标准时间互转"><a href="#Unix-时间戳与标准时间互转" class="headerlink" title="Unix 时间戳与标准时间互转"></a>Unix 时间戳与标准时间互转</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Java将Unix时间戳转换成指定格式日期字符串</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> timestampString 时间戳 如："1473048265";</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> formats 要格式化的格式 默认："yyyy-MM-dd HH:mm:ss";</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 返回结果 如："2016-09-05 16:06:42";</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// imported</span></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">TimeStamp2Date</span><span class="params">(String timestampString, String formats)</span></span>&#123;</span><br><span class="line">    Long timestamp = Long.parseLong(timestampString);</span><br><span class="line">    String _date = <span class="keyword">new</span> SimpleDateFormat(formats, Locale.CHINA).format(<span class="keyword">new</span> Date(timestamp));</span><br><span class="line">    <span class="keyword">return</span> _date;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>调用方法</p><p><code>TimeStamp2Date(&quot;1473048265&quot;, &quot;yyyy-MM-dd HH:mm:ss”);</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 日期格式字符串转换成时间戳</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> dateStr 字符串日期</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> format   如：yyyy-MM-dd HH:mm:ss</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">Date2TimeStamp</span><span class="params">(String dateStr, String format)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(format);</span><br><span class="line">        <span class="keyword">return</span> String.valueOf(sdf.parse(dateStr).getTime() / <span class="number">1000</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>MySQL Note</title>
      <link href="/posts/2102782187.html"/>
      <url>/posts/2102782187.html</url>
      <content type="html"><![CDATA[<h1 id="MySQL-Note"><a href="#MySQL-Note" class="headerlink" title="MySQL Note"></a>MySQL Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>此文用来记录平时使用MySQL遇到的问题与心得.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="MySQL常用命令"><a href="#MySQL常用命令" class="headerlink" title="MySQL常用命令"></a>MySQL常用命令</h2><ul><li>为用户修改密码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET PASSWORD FOR &apos;Username&apos;@&apos;Host&apos; = PASSWORD(&apos;password&apos;);</span><br></pre></td></tr></table></figure><ul><li>创建用户</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER Username IDENTIFIED BY &apos;password&apos;;</span><br><span class="line">GRANT SELECT, INSERT, UPDATE, DELETE, EXECUTE ON snatch.* TO &apos;Username&apos;@&apos;%&apos; identified by &apos;password&apos;;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><ul><li>删除用户</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Delete FROM user Where User=&apos;user-name&apos; and Host=&apos;host&apos;;</span><br></pre></td></tr></table></figure><h2 id="MySQL遇到的问题"><a href="#MySQL遇到的问题" class="headerlink" title="MySQL遇到的问题"></a>MySQL遇到的问题</h2><h3 id="InnoDB引擎自增id中断问题"><a href="#InnoDB引擎自增id中断问题" class="headerlink" title="InnoDB引擎自增id中断问题"></a>InnoDB引擎自增id中断问题</h3><blockquote><p> 如果在插入的过程中出现了删除的操作,那么下一条数据的自增id将跳过这个id,从而出现自增id中断的问题.</p></blockquote><p>如何检查:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 如果两个数不一样,那么就说明中间出现了断层</span><br><span class="line">SELECT COUNT(*) FROM table_name;</span><br><span class="line">SELECT MAX(id) FROM table_name;</span><br><span class="line"># 显示断层的id</span><br><span class="line">SELECT id FROM </span><br><span class="line">(SELECT id FROM table_name ORDER BY id ASC) t WHERE NOT EXISTS (SELECT 1 FROM table_name WHERE id=t.id-1);</span><br></pre></td></tr></table></figure><p>解决办法</p><ul><li>不适用默认自增id,自己设定id</li><li>在每次插入之前都将AUTO_INCREMENT设置为1<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name AUTO_INCREMENT=1;</span><br></pre></td></tr></table></figure></li></ul><h2 id="查询优化"><a href="#查询优化" class="headerlink" title="查询优化"></a>查询优化</h2><h3 id="limit、between等语句"><a href="#limit、between等语句" class="headerlink" title="limit、between等语句"></a>limit、between等语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># sql-1</span><br><span class="line">select * FROM table_name limit index1,index2-index1;</span><br><span class="line"># sql-2</span><br><span class="line">select * FROM table_name</span><br><span class="line">WHERE id BETWEEN index1 AND index2 limit 100;</span><br></pre></td></tr></table></figure><p>数据量比较大的话,<code>sql-2</code>的查询效率会比<code>sql-1</code>高很多,在数据量比较大的情况下一般使用between语句.</p><h2 id="查询表头信息"><a href="#查询表头信息" class="headerlink" title="查询表头信息"></a>查询表头信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW COLUMNS FROM snatch.`jcy_prop`;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hackintosh for Lenovo Ideapad 700 15isk</title>
      <link href="/posts/3505015416.html"/>
      <url>/posts/3505015416.html</url>
      <content type="html"><![CDATA[<h1 id="Hacintash-for-Lenovo-Ideapad-700-15isk"><a href="#Hacintash-for-Lenovo-Ideapad-700-15isk" class="headerlink" title="Hacintash for Lenovo Ideapad 700 15isk"></a>Hacintash for Lenovo Ideapad 700 15isk</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>引言<br>最近更换了固态硬盘，所以就有一个闲置了出来，然后就在京东上面买了一个M.2接口NGFF协议的固态硬盘盒，用来装Hackintosh.</p></blockquote><a id="more"></a><h2 id="Windows-下制作MacOS安装盘"><a href="#Windows-下制作MacOS安装盘" class="headerlink" title="Windows 下制作MacOS安装盘"></a>Windows 下制作MacOS安装盘</h2><h3 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h3><ul><li><p>容量大于8G的U盘</p></li><li><p><a href="https://www.balena.io/etcher/" target="_blank" rel="noopener">etcher</a></p></li><li><p>Lenovo Ideapad 700 15isk专用CLOVER文件</p></li><li>系统镜像：<a href="https://blog.daliansky.net/macOS-Mojave-10.14.1-18B75-official-version-with-Clover-4726-original-image.html" target="_blank" rel="noopener">【黑果小兵】macOS Mojave 10.14.1 18B75 正式版 with Clover 4726原版镜像</a></li></ul><h3 id="制作安装镜像"><a href="#制作安装镜像" class="headerlink" title="制作安装镜像"></a>制作安装镜像</h3><p>镜像制作：下载<a href="https://etcher.io/" target="_blank" rel="noopener">etcher</a>，打开镜像，选择U盘，点击Flash即可<a href="http://7.daliansky.net/etcher.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/etcher.png" alt="etcher"></a></p><p>安装镜像的制作到这里就完成了,下一步,我们需要将电脑专用的EFI文件复制进刚制作好的USB磁盘的EFI分区里。</p><h3 id="Windows下将专用的EFI文件复制到USB安装盘的EFI分区下"><a href="#Windows下将专用的EFI文件复制到USB安装盘的EFI分区下" class="headerlink" title="Windows下将专用的EFI文件复制到USB安装盘的EFI分区下"></a>Windows下将专用的EFI文件复制到USB安装盘的EFI分区下</h3><p>以系统管理员身份打开<code>cmd</code>窗口,输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">c:\&gt;diskpart</span><br><span class="line">list disk           # 磁盘列表</span><br><span class="line">select disk n       # 选择EFI分区所在的磁盘，n为磁盘号</span><br><span class="line">list partition      # 磁盘分区列表</span><br><span class="line">select partition n  # 选择EFI分区，n为EFI分区号</span><br><span class="line">set id=&quot;ebd0a0a2-b9e5-4433-87c0-68b6b72699c7&quot;# 设置为基本数据分区</span><br><span class="line">assign letter=X     # x为EFI分区盘符</span><br><span class="line">exit# 退出diskpart</span><br><span class="line">notepad</span><br></pre></td></tr></table></figure><h3 id="BIOS设置"><a href="#BIOS设置" class="headerlink" title="BIOS设置"></a>BIOS设置</h3><p>进入BIOS,默认开启了安全认证,UEFI引导需要关闭安全启动<code>Secure Boot Mode</code>方式,否则无法加载UEFI引导设备.并设置MacOS启动U盘为第一启动序列,保存并重新启动.</p><h2 id="MacOS安装"><a href="#MacOS安装" class="headerlink" title="MacOS安装"></a>MacOS安装</h2><h3 id="第一阶段-以下为摘抄"><a href="#第一阶段-以下为摘抄" class="headerlink" title="第一阶段(以下为摘抄)"></a>第一阶段(以下为摘抄)</h3><ul><li>进入<code>Clover</code>主菜单</li></ul><p><img src="http://7.daliansky.net/XiaoMiCloverboot.png" alt="CLOVER菜单"></p><p>移动光标到<code>Boot OS X Install from XiaoMiPro 10131</code>回车 如果无法进入安装界面,需要打开啰嗦模式进行排错,具体的操作方法请参考<a href="https://blog.daliansky.net/clover-user-manual.html" target="_blank" rel="noopener">Clover使用教程</a> 。</p><ul><li>开始引导MacOS系统</li></ul><p><img src="http://7.daliansky.net/ParallelsPicture.png" alt=""></p><p>这个过程需要1-2分钟,耐心等待进入安装程序,出现语言选择界面</p><p><img src="http://7.daliansky.net/ParallelsPicture1.png" alt=""></p><p>出现<code>macOS实用工具</code>界面,选择磁盘工具</p><p><img src="http://7.daliansky.net/ParallelsPicture0.png" alt=""></p><h4 id="磁盘工具"><a href="#磁盘工具" class="headerlink" title="磁盘工具"></a>磁盘工具</h4><p><a href="http://7.daliansky.net/ParallelsPicture0.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/ParallelsPicture0.png" alt="ParallelsPicture0"></a>选择<code>显示所有设备</code>:<a href="http://7.daliansky.net/ParallelsPicture2.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/ParallelsPicture2.png" alt="ParallelsPicture2"></a>选择<code>SSD Media</code>,点击<code>抹掉</code>按钮,选择默认的<code>Mac OS扩展(日志型)</code>,将名称修改为<code>Macintosh HD</code>,点击<code>抹掉</code>按钮</p><p><strong>假设您的磁盘是空的且数据是已经备份过的,别怪我没提醒你!!!</strong></p><p><a href="http://7.daliansky.net/ParallelsPicture6.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/ParallelsPicture6.png" alt="ParallelsPicture6"></a>抹盘成功后,它会自动生成一个200MB的EFI分区,这样做的好处是不会出现安装过程中的由于EFI分区尺寸小于200MB而引起的无法安装的错误.当然前提是你的磁盘中没有重要的数据,或者您的数据已经提前备份过了.<a href="http://7.daliansky.net/ParallelsPicture7.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/ParallelsPicture7.png" alt="ParallelsPicture7"></a>到这里,磁盘工具的动作就已经结束了.退出磁盘工具进入安装界面,进行系统的安装了.</p><h4 id="安装macOS"><a href="#安装macOS" class="headerlink" title="安装macOS"></a>安装macOS</h4><p><a href="http://7.daliansky.net/ParallelsPicture8.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/ParallelsPicture8.png" alt="ParallelsPicture8"></a>进入安装界面<a href="http://7.daliansky.net/ParallelsPicture11.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/ParallelsPicture11.png" alt="ParallelsPicture11"></a>选择继续<a href="http://7.daliansky.net/ParallelsPicture12.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/ParallelsPicture12.png" alt="ParallelsPicture12"></a><a href="http://7.daliansky.net/ParallelsPicture13.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/ParallelsPicture13.png" alt="ParallelsPicture13"></a>点击同意,选择<code>Macintosh HD</code> <img src="http://7.daliansky.net/ParallelsPicture 14.png" alt="ParallelsPicture 14"> 选择安装 <img src="http://7.daliansky.net/ParallelsPicture 15.png" alt="ParallelsPicture 15"> 期间,它会把USB安装盘上的安装文件预复制到要安装的系统分区里,这个过程在小米Pro的笔记本上它跑得飞快,数据复制完后,它会自动重启<a href="http://7.daliansky.net/ParallelsPicture16.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/ParallelsPicture16.png" alt="ParallelsPicture16"></a>然后进行第二阶段的安装</p><h3 id="第二阶段"><a href="#第二阶段" class="headerlink" title="第二阶段"></a>第二阶段</h3><p>第二阶段的安装会有两种界面,一种是不进安装界面直接安装,另一种是先进入安装界面直接安装,需要注意的是,无论是哪一种界面下,安装的过程中全程是禁用鼠标和键盘的,需要你做的只是耐心等待它安装完成</p><p><img src="http://7.daliansky.net/ParallelsPicture 17.png" alt="ParallelsPicture 17"></p><p>安装速度取决于你的磁盘速度,第二阶段的安装已经与USB安装盘没什么关系了.macOS 10.13的安装完全区别于10.12,它不能免二次安装,甚至还需要重启多次,这些都是正常现象,请不要大惊小怪的. 系统安装完成后,重启进入系统设置向导</p><h4 id="国家选择"><a href="#国家选择" class="headerlink" title="国家选择"></a>国家选择</h4><p><a href="http://7.daliansky.net/Installer3.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer3.png" alt="Installer3"></a>首先让你选择国家,这里我选择中国<a href="http://7.daliansky.net/Installer4.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer4.png" alt="Installer4"></a>点击<code>继续</code>,设置键盘</p><h4 id="设置键盘"><a href="#设置键盘" class="headerlink" title="设置键盘"></a>设置键盘</h4><p><a href="http://7.daliansky.net/Installer5.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer5.png" alt="Installer5"></a>这里询问你<code>是否传输信息到这台Mac</code></p><h4 id="数据恢复"><a href="#数据恢复" class="headerlink" title="数据恢复"></a>数据恢复</h4><p>可以从Mac或者Time Machine备份恢复</p><p><a href="http://7.daliansky.net/Installer6.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer6.png" alt="Installer6"></a>我选择<code>现在不传输任何信息</code>,点击<code>继续</code></p><h4 id="Apple-ID登录"><a href="#Apple-ID登录" class="headerlink" title="Apple ID登录"></a>Apple ID登录</h4><p><a href="http://7.daliansky.net/Installer7.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer7.png" alt="Installer7"></a>选择是否<code>使用您的Apple ID登录</code>,如何想现在就登录到<code>Apple ID</code>,请输入<code>Apple ID</code>和密码登录,否则选择<code>不登录</code>,进入系统后也可以设置登录到<code>iCloud</code>,点击<code>继续</code><a href="http://7.daliansky.net/Installer8.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer8.png" alt="Installer8"></a>阅读条款与条件,选择<code>同意</code>继续<a href="http://7.daliansky.net/Installer9.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer9.png" alt="Installer9"></a>出现<code>创建电脑用户</code>的窗口,输入用户名和密码,点击<code>继续</code></p><h4 id="创建电脑用户"><a href="#创建电脑用户" class="headerlink" title="创建电脑用户"></a>创建电脑用户</h4><p><a href="http://7.daliansky.net/Installer10.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer10.png" alt="Installer10"></a>系统会创建初始用户<a href="http://7.daliansky.net/Installer11.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer11.png" alt="Installer11"></a>用户创建成功后,弹出<code>iCloud</code>的<code>正在设置用户</code>的窗口<a href="http://7.daliansky.net/Installer12.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer12.png" alt="Installer12"></a>紧接着弹出设置<code>iClound钥匙串</code>的设置窗口,选择<code>稍候设置</code>,点击<code>继续</code></p><h4 id="设置iCloud钥匙串"><a href="#设置iCloud钥匙串" class="headerlink" title="设置iCloud钥匙串"></a>设置iCloud钥匙串</h4><p><a href="http://7.daliansky.net/Installer13.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer13.png" alt="Installer13"></a>出现<code>快捷设置</code>,点击<code>继续</code></p><h4 id="快捷设置"><a href="#快捷设置" class="headerlink" title="快捷设置"></a>快捷设置</h4><p>自定义设置定位以及数据反馈,请根据自己的喜好进行设置</p><p><a href="http://7.daliansky.net/Installer14.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer14.png" alt="Installer14"></a>出现<code>iCloud中的所有文件</code>,如果你需要<code>将文稿和桌面上的文件储存在 iCloud Drive中</code>,请勾选,否则取消勾选,点击继续</p><h4 id="iCloud文件同步设置"><a href="#iCloud文件同步设置" class="headerlink" title="iCloud文件同步设置"></a>iCloud文件同步设置</h4><p><a href="http://7.daliansky.net/Installer16.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer16.png" alt="Installer16"></a>出现<code>FileVault磁盘加密</code>,如果你需要<code>打开 Filevault 磁盘加密</code>,请勾选,否则取消勾选,点击继续</p><h4 id="FileVault磁盘加密设置"><a href="#FileVault磁盘加密设置" class="headerlink" title="FileVault磁盘加密设置"></a>FileVault磁盘加密设置</h4><p><a href="http://7.daliansky.net/Installer17.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer17.png" alt="Installer17"></a>出现<code>正在设置您的Mac</code>,请稍候完成设置向导</p><h4 id="设置向导完成"><a href="#设置向导完成" class="headerlink" title="设置向导完成"></a>设置向导完成</h4><p><a href="http://7.daliansky.net/Installer18.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer18.png" alt="Installer18"></a></p><p>出现桌面后,整个的安装向导就完成了.<a href="http://7.daliansky.net/Installer19.png" target="_blank" rel="noopener"><img src="http://7.daliansky.net/Installer19.png" alt="Installer19"></a></p><h3 id="安装后的系统设置"><a href="#安装后的系统设置" class="headerlink" title="安装后的系统设置"></a>安装后的系统设置</h3><p>教你将U盘上的EFI复制到磁盘的EFI分区,脱离USB运行[macOS篇]</p><blockquote><p>新的系统安装成功后，EFI还位于U盘里，总不能一直挂着U盘使用系统吧。这个时候如果你想将U盘里的EFI复制到磁盘的EFI分区里，却苦于找不到看不见EFI分区，这个时候是该让<code>diskutil</code>登场了。</p></blockquote><p><code>diskutil</code>命令的基本用法：</p><h4 id="查看磁盘分区表"><a href="#查看磁盘分区表" class="headerlink" title="查看磁盘分区表"></a>查看磁盘分区表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diskutil list</span><br></pre></td></tr></table></figure><p>/dev/disk0(internal, physical):</p><table><thead><tr><th>#:</th><th>TYPE</th><th>NAME</th><th>SIZE</th><th>IDENTIFIER</th></tr></thead><tbody><tr><td>0:</td><td>GUID_partition_scheme</td><td></td><td>256 GB</td><td>disk0</td></tr><tr><td>1:</td><td>EFI</td><td>EFI</td><td>200 MB</td><td>disk0s1</td></tr><tr><td>2:</td><td>Apple_HFS</td><td>MAC</td><td>128 GB</td><td>disk0s2</td></tr><tr><td>3:</td><td>Microsoft Basic Data</td><td>WIN10</td><td>127.7 GB</td><td>disk0s3</td></tr></tbody></table><p>/dev/disk1(internal, physical):</p><table><thead><tr><th>#:</th><th>TYPE</th><th>NAME</th><th>SIZE</th><th>IDENTIFIER</th></tr></thead><tbody><tr><td>0:</td><td>GUID_partition_scheme</td><td></td><td>16 GB</td><td>disk1</td></tr><tr><td>1:</td><td>EFI</td><td>EFI</td><td>200 MB</td><td>disk1s1</td></tr><tr><td>2:</td><td>Apple_HFS</td><td>Install macOS Sierra</td><td>15.8 GB</td><td>disk1s2</td></tr></tbody></table><h4 id="挂载磁盘EFI分区"><a href="#挂载磁盘EFI分区" class="headerlink" title="挂载磁盘EFI分区"></a>挂载磁盘EFI分区</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo diskutil mount disk0s1</span><br></pre></td></tr></table></figure><h4 id="挂载U盘EFI分区"><a href="#挂载U盘EFI分区" class="headerlink" title="挂载U盘EFI分区"></a>挂载U盘EFI分区</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo diskutil mount disk1s1</span><br></pre></td></tr></table></figure><p>打开Finder，注意后面有个<kbd>.</kbd></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open .</span><br></pre></td></tr></table></figure><p>左侧会显示挂载了两个EFI分区，将U盘EFI目录全部复制到磁盘的EFI分区即可。</p><h4 id="合并EFI分区"><a href="#合并EFI分区" class="headerlink" title="合并EFI分区"></a>合并EFI分区</h4><p><strong>这里有一点需要注意</strong>:如果之前安装过Windows系统的话,会存在EFI的目录,只是EFI的目录下面只有BOOT和Microsoft这两个目录,如果希望添加macOS的Clover引导的话,可以将USB的EFI分区里面的EFI目录下面的CLOVER复制到磁盘里的EFI目录下,也就是执行的是<strong><em>合并</em></strong>的操作,让EFI同时支持WINDOWS和macOS的引导.千万不要全部复制,否则有可能造成EFI无法启动Windows.</p><h4 id="复制EFI分区"><a href="#复制EFI分区" class="headerlink" title="复制EFI分区"></a>复制EFI分区</h4><p>如果磁盘上的EFI分区里为空的,可以直接将USB的EFI分区下面的EFI目录直接复制到磁盘上的EFI分区里.</p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>现在就可以拔掉U盘，尽情重启啦！</p><h2 id="后续工作"><a href="#后续工作" class="headerlink" title="后续工作"></a>后续工作</h2><ul><li>iMessage无法使用<ul><li>更改苹果三码实现</li><li>没有在苹果设备上注册过的账号一定是不可用的</li><li>之后继续尝试其他方案</li></ul></li><li>网卡、蓝牙无法使用</li><li>HIDPI提高分辨率</li></ul>]]></content>
      
      <categories>
          
          <category> Macintosh </category>
          
          <category> Hackintosh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hackintosh </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo Blog Update Process</title>
      <link href="/posts/4037015145.html"/>
      <url>/posts/4037015145.html</url>
      <content type="html"><![CDATA[<h1 id="Hexo-Blog-Update-Process"><a href="#Hexo-Blog-Update-Process" class="headerlink" title="Hexo Blog Update Process"></a>Hexo Blog Update Process</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>This post is talking about the processes of updating the content of <a href="https://jacksonleon.coding.me/" target="_blank" rel="noopener">Blog</a>.</p></blockquote><a id="more"></a><h2 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h2><ol><li><p>Write posts anywhere</p><ol><li>use the Typora to edit the markdown files</li><li>save files on the devices</li></ol></li><li><p>Upload it to remote repo through Git</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加文件</span></span><br><span class="line">$ git add --all</span><br><span class="line"><span class="comment"># commit messages</span></span><br><span class="line">$ git commit -m <span class="string">"commit messages"</span></span><br><span class="line"><span class="comment"># 推送更新到远程分支</span></span><br><span class="line">$ git push origin [branch]</span><br></pre></td></tr></table></figure></li><li><p>Sync the content from the remote repo on my Personal Computer</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin master</span><br></pre></td></tr></table></figure></li><li><p>Update the content on the blog</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line"><span class="comment"># 本地测试</span></span><br><span class="line">$ hexo s</span><br><span class="line">$ ./deploy.sh</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「Leetcode」627. Swap Salary</title>
      <link href="/posts/3296282374.html"/>
      <url>/posts/3296282374.html</url>
      <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="627-Swap-Salary"><a href="#627-Swap-Salary" class="headerlink" title="627. Swap Salary"></a>627. Swap Salary</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Given a table <code>salary</code>, such as the one below, that has m=male and f=female values. Swap all f and m values (i.e., change all f values to m and vice versa) with a single update query and no intermediate temp table.</p><p>For example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">| id | name | sex | salary |</span><br><span class="line">|----|------|-----|--------|</span><br><span class="line">| 1  | A    | m   | 2500   |</span><br><span class="line">| 2  | B    | f   | 1500   |</span><br><span class="line">| 3  | C    | m   | 5500   |</span><br><span class="line">| 4  | D    | f   | 500    |</span><br></pre></td></tr></table></figure><p>After running your query, the above salary table should have the following rows: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">| id | name | sex | salary |</span><br><span class="line">|----|------|-----|--------|</span><br><span class="line">| 1  | A    | f   | 2500   |</span><br><span class="line">| 2  | B    | m   | 1500   |</span><br><span class="line">| 3  | C    | f   | 5500   |</span><br><span class="line">| 4  | D    | m   | 500    |</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Write your MySQL query statement below</span><br><span class="line">update salary </span><br><span class="line">set sex=IF(sex=&apos;f&apos;,&apos;m&apos;,&apos;f&apos;)</span><br></pre></td></tr></table></figure><h3 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h3><p>MySQL的东西忘得都差不多了，这些还是要定期复习一下的。话说这种判断式的语句真的非常好用啊！</p>]]></content>
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「Leetcode」876. Middle of the Linked List</title>
      <link href="/posts/3852375072.html"/>
      <url>/posts/3852375072.html</url>
      <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="876-Middle-of-the-Linked-List"><a href="#876-Middle-of-the-Linked-List" class="headerlink" title="876. Middle of the Linked List"></a>876. Middle of the Linked List</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Given a non-empty, singly linked list with head node <code>head</code>, return a middle node of linked list.</p><p>If there are two middle nodes, return the second middle node.</p></blockquote><a id="more"></a><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><ul><li><p>one</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,2,3,4,5]</span><br><span class="line">Output: Node 3 from this list (Serialization: [3,4,5])</span><br><span class="line">The returned node has value 3.  (The judge&apos;s serialization of this node is [3,4,5]).</span><br><span class="line">Note that we returned a ListNode object ans, such that:</span><br><span class="line">ans.val = 3, ans.next.val = 4, ans.next.next.val = 5, and ans.next.next.next = NULL.</span><br></pre></td></tr></table></figure></li><li><p>two</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,2,3,4,5,6]</span><br><span class="line">Output: Node 4 from this list (Serialization: [4,5,6])</span><br><span class="line">Since the list has two middle nodes with values 3 and 4, we return the second one.</span><br></pre></td></tr></table></figure></li></ul><p><strong>Note</strong>: The number of nodes in the given list will be between <code>1</code> and <code>100</code>.</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">middleNode</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">        ListNode *slow, *fast;</span><br><span class="line">        slow=head;fast=head;</span><br><span class="line">        <span class="keyword">while</span>(fast!=<span class="literal">NULL</span> &amp;&amp; fast-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            slow=slow-&gt;next;</span><br><span class="line">            fast=fast-&gt;next-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slow;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h3><p>其实是一个搜索的过程，正常逻辑就是遍历链表到头，获取一半的长度，截取后半部分就可以，但是由于是链表，搜索起来耗费时间空间。</p><p>可以把链表内容复制到数组，从而将目标找到。也可以设置两个指针: <code>slow</code> 、<code>fast</code>，<code>fast</code>移动速度为<code>slow</code>的两倍，那么当<code>fast</code>到达链表尾部时，<code>slow</code>此时在链表中部，返回<code>slow</code>指针就达到了我们的目的。</p>]]></content>
      
      <categories>
          
          <category> LeetCode </category>
          
          <category> Linked List </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> Array </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「Leetcode」852. Peak Index in a Mountain Array</title>
      <link href="/posts/756872862.html"/>
      <url>/posts/756872862.html</url>
      <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="852-Peak-Index-in-a-Mountain-Array"><a href="#852-Peak-Index-in-a-Mountain-Array" class="headerlink" title="852. Peak Index in a Mountain Array"></a>852. Peak Index in a Mountain Array</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Let’s call an array <code>A</code> a <em>mountain</em> if the following properties hold:</p><ul><li><code>A.length &gt;= 3</code></li><li>There exists some <code>0 &lt; i &lt; A.length - 1</code> such that <code>A[0] &lt; A[1] &lt; ... A[i-1] &lt; A[i] &gt; A[i+1] &gt; ... &gt; A[A.length - 1]</code></li></ul><p>Given an array that is definitely a mountain, return any <code>i</code> such that <code>A[0] &lt; A[1] &lt; ... A[i-1] &lt; A[i] &gt; A[i+1] &gt; ... &gt; A[A.length - 1]</code>.</p></blockquote><a id="more"></a><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><ul><li><p>one</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [0,1,0]</span><br><span class="line">Output: 1</span><br></pre></td></tr></table></figure></li><li><p>two</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [0,2,1,0]</span><br><span class="line">Output: 1</span><br></pre></td></tr></table></figure></li></ul><h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><ul><li><code>3 &lt;= A.length &lt;= 10000</code></li><li><code>0 &lt;= A[i] &lt;= 10^6</code></li><li>A is a mountain, as defined above.</li></ul><h3 id="Solution-C"><a href="#Solution-C" class="headerlink" title="Solution(C++)"></a>Solution(C++)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int peakIndexInMountainArray(vector&lt;int&gt;&amp; A) &#123;</span><br><span class="line">        for(int i=0;i&lt;A.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            if(A[i]&gt;A[i+1])</span><br><span class="line">                return i;</span><br><span class="line">        &#125;</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h3><p>直接根据<code>Mountain Array</code>的定义来确定<code>i</code>的位置，比较无脑的办法就是直接遍历数组。</p>]]></content>
      
      <categories>
          
          <category> LeetCode </category>
          
          <category> Binary Search </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> String </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>LeetCode Analysis</title>
      <link href="/posts/1393014657.html"/>
      <url>/posts/1393014657.html</url>
      <content type="html"><![CDATA[<h1 id="LeetCode-Analysis"><a href="#LeetCode-Analysis" class="headerlink" title="LeetCode Analysis"></a>LeetCode Analysis</h1><table><thead><tr><th>LeetCode ID</th><th>Name</th><th>Status</th><th>Difficulty</th><th>Language</th></tr></thead><tbody><tr><td>191</td><td><a href="https://leetcode.com/problems/number-of-1-bits" target="_blank" rel="noopener">Number of 1 Bits</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>386</td><td><a href="https://leetcode.com/problems/lexicographical-numbers" target="_blank" rel="noopener">Lexicographical Numbers</a></td><td>Solved</td><td>M</td><td>C/C++</td></tr><tr><td>387</td><td><a href="https://leetcode.com/problems/first-unique-character-in-a-string" target="_blank" rel="noopener">First Unique Character in a String</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>461</td><td><a href="https://leetcode.com/problems/hamming-distance" target="_blank" rel="noopener">Hamming Distance</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>535</td><td><a href="https://leetcode.com/problems/encode-and-decode-tinyurl" target="_blank" rel="noopener">Encode and Decode TinyURL</a></td><td>Solved</td><td>M</td><td>C/C++</td></tr><tr><td>595</td><td><a href="https://leetcode.com/problems/big-countries" target="_blank" rel="noopener">Big Countries</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>617</td><td><a href="https://leetcode.com/problems/merge-two-binary-trees" target="_blank" rel="noopener">Merge Two Binary Trees</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>627</td><td><a href="https://leetcode.com/problems/swap-salary/description/" target="_blank" rel="noopener">Swap Salary</a></td><td>Solved</td><td>E</td><td>MySQL</td></tr><tr><td>654</td><td><a href="https://leetcode.com/problems/maximum-binary-tree" target="_blank" rel="noopener">Maximum Binary Tree</a></td><td>Solved</td><td>M</td><td>C/C++</td></tr><tr><td>657</td><td><a href="https://leetcode.com/problems/judge-route-circle" target="_blank" rel="noopener">Judge Route Circle</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>709</td><td><a href="https://leetcode.com/problems/to-lower-case" target="_blank" rel="noopener">To Lower Case</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>771</td><td><a href="https://leetcode.com/problems/jewels-and-stones" target="_blank" rel="noopener">Jewels and Stones</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>804</td><td><a href="https://leetcode.com/problems/unique-morse-code-words" target="_blank" rel="noopener">Unique Morse Code Words</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>807</td><td><a href="https://leetcode.com/problems/max-increase-to-keep-city-skyline" target="_blank" rel="noopener">Max Increase to Keep City Skyline</a></td><td>Solved</td><td>M</td><td>C/C++</td></tr><tr><td>832</td><td><a href="https://leetcode.com/problems/flipping-an-image" target="_blank" rel="noopener">Flipping an Image</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>852</td><td><a href="https://leetcode.com/problems/peak-index-in-a-mountain-array/description/" target="_blank" rel="noopener">Peak Index in a Mountain Array</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr><tr><td>876</td><td><a href="https://leetcode.com/problems/middle-of-the-linked-list/description/" target="_blank" rel="noopener">Middle of the Linked List</a></td><td>Solved</td><td>E</td><td>C/C++</td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「Leetcode」617. Merge Two Binary Trees</title>
      <link href="/posts/1733828030.html"/>
      <url>/posts/1733828030.html</url>
      <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="617-Merge-Two-Binary-Trees"><a href="#617-Merge-Two-Binary-Trees" class="headerlink" title="617. Merge Two Binary Trees"></a>617. Merge Two Binary Trees</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Given two binary trees and imagine that when you put one of them to cover the other, some nodes of the two trees are overlapped while the others are not.</p><p>You need to merge them into a new binary tree. The merge rule is that if two nodes overlap, then sum node values up as the new value of the merged node. Otherwise, the NOT null node will be used as the node of new tree.</p></blockquote><a id="more"></a><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Input: </span><br><span class="line">   Tree 1                    Tree 2                  </span><br><span class="line">          1                         2                             </span><br><span class="line">         / \                       / \                            </span><br><span class="line">        3   2                     1   3                        </span><br><span class="line">       /                           \   \                      </span><br><span class="line">      5                             4   7                  </span><br><span class="line">Output: </span><br><span class="line">Merged tree:</span><br><span class="line">     3</span><br><span class="line">    / \</span><br><span class="line">   4   5</span><br><span class="line">  / \   \ </span><br><span class="line"> 5   4   7</span><br></pre></td></tr></table></figure><p><strong>Note</strong>: The merging process must start from the root nodes of both trees. </p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><ul><li><p>C++</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * struct TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode *left;</span></span><br><span class="line"><span class="comment"> *     TreeNode *right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">mergeTrees</span><span class="params">(TreeNode* t1, TreeNode* t2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(t1==<span class="literal">NULL</span> &amp;&amp; t2==<span class="literal">NULL</span>)<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> tempValue=(t1==<span class="literal">NULL</span>?<span class="number">0</span>:t1-&gt;val)+(t2==<span class="literal">NULL</span>?<span class="number">0</span>:t2-&gt;val);</span><br><span class="line">        TreeNode* res=<span class="keyword">new</span> TreeNode(tempValue);</span><br><span class="line">        </span><br><span class="line">        res-&gt;left=mergeTrees((t1==<span class="literal">NULL</span>?<span class="literal">NULL</span>:t1-&gt;left),(t2==<span class="literal">NULL</span>?<span class="literal">NULL</span>:t2-&gt;left));</span><br><span class="line">        res-&gt;right=mergeTrees((t1==<span class="literal">NULL</span>?<span class="literal">NULL</span>:t1-&gt;right),(t2==<span class="literal">NULL</span>?<span class="literal">NULL</span>:t2-&gt;right));</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul><h3 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h3><p>使用递归遍历两个树，注意从头节点开始获取<code>val</code></p>]]></content>
      
      <categories>
          
          <category> LeetCode </category>
          
          <category> Tree </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> Tree </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo-NexT博客样式自定义</title>
      <link href="/posts/1540132352.html"/>
      <url>/posts/1540132352.html</url>
      <content type="html"><![CDATA[<h1 id="Hexo-NexT博客样式自定义"><a href="#Hexo-NexT博客样式自定义" class="headerlink" title="Hexo-NexT博客样式自定义"></a>Hexo-NexT博客样式自定义</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>默认的主题样式非常简单，但是在有些方面还有些缺陷，其实NexT主题中已经包含这些主题，我们只需要把他们启用就OK啦。</p></blockquote><a id="more"></a><h2 id="更新NexT主题"><a href="#更新NexT主题" class="headerlink" title="更新NexT主题"></a>更新NexT主题</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><p>其中Blog文件夹下的_config.yml为站点配置文件，themes/next下的_config.yml为主题配置文件。</p><h2 id="开启主页菜单"><a href="#开启主页菜单" class="headerlink" title="开启主页菜单"></a>开启主页菜单</h2><p>打开主题配置文件，找到menu内容，将需要用到的菜单取消注释</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line"><span class="attr">  about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span></span><br><span class="line"><span class="attr">  tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br><span class="line"><span class="attr">  archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line">  <span class="comment"># schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment"># sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment"># commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure><p>启用的菜单需要添加对应的页面<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"categories"</span></span><br></pre></td></tr></table></figure></p><p>并在<code>index.md</code>文件中添加<code>type: &quot;categories&quot;</code></p><h2 id="添加Fork-me-on-github"><a href="#添加Fork-me-on-github" class="headerlink" title="添加Fork me on github"></a>添加Fork me on github</h2><p>在<a href="https://blog.github.com/2008-12-19-github-ribbons/" target="_blank" rel="noopener">GitHub Ribbons</a>或<a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">GitHub Corners</a>选择一款你喜欢的挂饰，拷贝方框内的代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://your-url"</span> <span class="attr">class</span>=<span class="string">"github-corner"</span> <span class="attr">aria-label</span>=<span class="string">"View source on Github"</span>&gt;</span><span class="tag">&lt;<span class="name">svg</span> <span class="attr">width</span>=<span class="string">"80"</span> <span class="attr">height</span>=<span class="string">"80"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 250 250"</span> <span class="attr">style</span>=<span class="string">"fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2"</span> <span class="attr">fill</span>=<span class="string">"currentColor"</span> <span class="attr">style</span>=<span class="string">"transform-origin: 130px 106px;"</span> <span class="attr">class</span>=<span class="string">"octo-arm"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z"</span> <span class="attr">fill</span>=<span class="string">"currentColor"</span> <span class="attr">class</span>=<span class="string">"octo-body"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined">.github-corner:hover .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;@keyframes octocat-wave&#123;0%,100%&#123;transform:rotate(0)&#125;20%,60%&#123;transform:rotate(-25deg)&#125;40%,80%&#123;transform:rotate(10deg)&#125;&#125;@media (max-width:500px)&#123;.github-corner:hover .octo-arm&#123;animation:none&#125;.github-corner .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>在<code>/themes/next/layout/_layout.swig</code>文件中，将上述代码放到<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>下方。</p><h2 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h2><ul><li><p>安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure></li><li><p>编辑站点配置文件，在文件末尾添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plugins: hexo-generate-feed</span><br></pre></td></tr></table></figure></li><li><p>配置主题配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Set rss to false to disable feed link.</span><br><span class="line"># Leave rss as empty to use site&apos;s feed link.</span><br><span class="line"># Set rss to specific value if you have burned your feed already.</span><br><span class="line">rss: /atom.xml //注意：有一个空格</span><br></pre></td></tr></table></figure></li></ul><h2 id="修改底部标签样式"><a href="#修改底部标签样式" class="headerlink" title="修改底部标签样式"></a>修改底部标签样式</h2><p>修改<code>\themes\next\layout\_macro\post.swig</code>中文件，搜索<code>rel=&quot;tag&quot;&gt;#</code>，将#替换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code>。</p><h2 id="修改代码块自定义样式"><a href="#修改代码块自定义样式" class="headerlink" title="修改代码块自定义样式"></a>修改代码块自定义样式</h2><p>修改<code>\themes\next\source\css\_custom\custom.styl</code><br><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Custom styles.</span></span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff7600</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fbf7f8</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 大代码块的自定义样式</span></span><br><span class="line"><span class="selector-class">.highlight</span>, pre &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.highlight</span>, <span class="selector-tag">code</span>, pre &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d6d6d6</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="修改主题配置文件，搜索Social"><a href="#修改主题配置文件，搜索Social" class="headerlink" title="修改主题配置文件，搜索Social"></a>修改主题配置文件，搜索Social</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># [社交平台名]: [社交地址] || [图标名称]</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line"><span class="attr">  GitHub:</span> <span class="attr">https://github.com/JacksonLeon</span> <span class="string">||</span> <span class="string">github</span></span><br><span class="line"><span class="attr">  E-Mail:</span> <span class="attr">mailto:pumbjackson@gmail.com</span> <span class="string">||</span> <span class="string">envelope</span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || facebook</span></span><br><span class="line">  <span class="comment">#VK Group: https://vk.com/yourname || vk</span></span><br><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || skype</span></span><br></pre></td></tr></table></figure><h2 id="添加点击爱心效果"><a href="#添加点击爱心效果" class="headerlink" title="添加点击爱心效果"></a>添加点击爱心效果</h2><p>给NexT主题内添加页面点击出现爱心的效果</p><h3 id="创建js文件"><a href="#创建js文件" class="headerlink" title="创建js文件"></a>创建js文件</h3><p>在<code>/themes/next/source/js/src</code>下新建文件<code>clicklove.js</code>，接着把该<a href="http://7u2ss1.com1.z0.glb.clouddn.com/love.js" target="_blank" rel="noopener">链接</a>下的代码拷贝粘贴到<code>clicklove.js</code>文件中。<br>代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span> (<span class="params">e, t, a</span>) </span>&#123; <span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>) </span>&#123; c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>), o(), r() &#125; <span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>) </span>&#123; <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="number">0</span>; e &lt; d.length; e++)d[e].alpha &lt;= <span class="number">0</span> ? (t.body.removeChild(d[e].el), d.splice(e, <span class="number">1</span>)) : (d[e].y-- , d[e].scale += <span class="number">.004</span>, d[e].alpha -= <span class="number">.013</span>, d[e].el.style.cssText = <span class="string">"left:"</span> + d[e].x + <span class="string">"px;top:"</span> + d[e].y + <span class="string">"px;opacity:"</span> + d[e].alpha + <span class="string">";transform:scale("</span> + d[e].scale + <span class="string">","</span> + d[e].scale + <span class="string">") rotate(45deg);background:"</span> + d[e].color + <span class="string">";z-index:99999"</span>); requestAnimationFrame(r) &#125; <span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>) </span>&#123; <span class="keyword">var</span> t = <span class="string">"function"</span> == <span class="keyword">typeof</span> e.onclick &amp;&amp; e.onclick; e.onclick = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123; t &amp;&amp; t(), i(e) &#125; &#125; <span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>) </span>&#123; <span class="keyword">var</span> a = t.createElement(<span class="string">"div"</span>); a.className = <span class="string">"heart"</span>, d.push(&#123; <span class="attr">el</span>: a, <span class="attr">x</span>: e.clientX - <span class="number">5</span>, <span class="attr">y</span>: e.clientY - <span class="number">5</span>, <span class="attr">scale</span>: <span class="number">1</span>, <span class="attr">alpha</span>: <span class="number">1</span>, <span class="attr">color</span>: s() &#125;), t.body.appendChild(a) &#125; <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>) </span>&#123; <span class="keyword">var</span> a = t.createElement(<span class="string">"style"</span>); a.type = <span class="string">"text/css"</span>; <span class="keyword">try</span> &#123; a.appendChild(t.createTextNode(e)) &#125; <span class="keyword">catch</span> (t) &#123; a.styleSheet.cssText = e &#125; t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a) &#125; <span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> <span class="string">"rgb("</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">","</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">","</span> + ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) + <span class="string">")"</span> &#125; <span class="keyword">var</span> d = []; e.requestAnimationFrame = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="keyword">return</span> e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123; setTimeout(e, <span class="number">1e3</span> / <span class="number">60</span>) &#125; &#125;(), n() &#125;(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br></pre></td></tr></table></figure><h3 id="修改-layout-swig"><a href="#修改-layout-swig" class="headerlink" title="修改_layout.swig"></a>修改_layout.swig</h3><p>在<code>\themes\next\layout\_layout.swig</code>文件末尾添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clicklove.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>##添加字数统计、阅读时长</p><h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure><h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><p>Activate this plugin in <strong>hexo’s _config.yml</strong> (which locates in the root dir of your blog) by enabled any option:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br></pre></td></tr></table></figure><p>If <code>symbols_count_time</code> not specified (or commented), plugin will totally disabled.</p><h3 id="NexT-theme"><a href="#NexT-theme" class="headerlink" title="NexT theme"></a>NexT theme</h3><p>This plugin integrated in «NexT» and after plugin enabled in main Hexo config, you may adjust options in NexT config:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true</span><br><span class="line">  item_text_post: true</span><br><span class="line">  item_text_total: false</span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br></pre></td></tr></table></figure><h4 id="Parameters"><a href="#Parameters" class="headerlink" title="Parameters"></a>Parameters</h4><ul><li><p><code>AWL</code>— Average Word Length (chars count in word). Default:<code>4</code>. You can check this <a href="https://charactercounttool.com/" target="_blank" rel="noopener">here</a></p><ul><li>CN ≈ <code>2</code></li><li>EN ≈ <code>5</code></li><li>RU ≈ <code>6</code></li></ul></li><li><p><code>WPM</code>— Words Per Minute. Default:<code>275</code>. You can check this <a href="https://wordcounter.net/" target="_blank" rel="noopener">here</a></p><ul><li>Slow ≈ <code>200</code></li><li>Normal ≈ <code>275</code></li><li>Fast ≈ <code>350</code></li></ul></li><li><code>Suffix</code> — If time to read less then 60 minutes, added suffix as string parameter. Default: <code>mins.</code></li></ul><p><strong>Note for Chinese users:</strong> because in Chinese language average word length about <code>~1.5</code> and if you at most cases write posts in Chinese (without mixed English), recommended to set <code>awl</code> to <code>2</code> and <code>wpm</code> to <code>300</code>.<br>But if you usualy mix your posts with English, <code>awl</code> to <code>4</code> and <code>wpm</code> to <code>275</code> will be nice.</p><h2 id="底部隐藏由Hexo强力驱动、主题"><a href="#底部隐藏由Hexo强力驱动、主题" class="headerlink" title="底部隐藏由Hexo强力驱动、主题"></a>底部隐藏由Hexo强力驱动、主题</h2><p>打开主题配置文件，搜索<code>footer</code>下的<code>powered</code>以及<code>theme</code>设置为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">enable: false</span><br><span class="line">version: false</span><br></pre></td></tr></table></figure><h2 id="在文章底部增加版权信息"><a href="#在文章底部增加版权信息" class="headerlink" title="在文章底部增加版权信息"></a>在文章底部增加版权信息</h2><ul><li>在目录<code>Blog/themes/next/layout/_macro/</code>，添加文件 <code>my-copyright.swig</code>，内容如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if page.copyright %&#125;</span><br><span class="line">&lt;div class=&quot;my_post_copyright&quot;&gt;</span><br><span class="line">  &lt;script src=&quot;//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;!-- JS库 sweetalert 可修改路径 --&gt;</span><br><span class="line">  &lt;script src=&quot;https://cdn.bootcss.com/jquery/2.0.0/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;https://unpkg.com/sweetalert/dist/sweetalert.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot;&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&lt;a href=&quot;/&quot; title=&quot;访问 &#123;&#123; theme.author &#125;&#125; 的个人博客&quot;&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123; page.updated.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot; title=&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt;</span><br><span class="line">    &lt;span class=&quot;copy-path&quot;  title=&quot;点击复制文章链接&quot;&gt;&lt;i class=&quot;fa fa-clipboard&quot; data-clipboard-text=&quot;&#123;&#123; page.permalink &#125;&#125;&quot;  aria-label=&quot;复制成功！&quot;&gt;&lt;/i&gt;&lt;/span&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class=&quot;fa fa-creative-commons&quot;&gt;&lt;/i&gt; &lt;a rel=&quot;license&quot; href=&quot;https://creativecommons.org/licenses/by-nc-nd/4.0/&quot; target=&quot;_blank&quot; title=&quot;Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)&quot;&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 转载请保留原文链接及作者。&lt;/p&gt;  </span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt; </span><br><span class="line">    var clipboard = new Clipboard(&apos;.fa-clipboard&apos;);</span><br><span class="line">    $(&quot;.fa-clipboard&quot;).click(function()&#123;</span><br><span class="line">      clipboard.on(&apos;success&apos;, function()&#123;</span><br><span class="line">        swal(&#123;   </span><br><span class="line">          title: &quot;&quot;,   </span><br><span class="line">          text: &apos;复制成功&apos;,</span><br><span class="line">          icon: &quot;success&quot;, </span><br><span class="line">          showConfirmButton: true</span><br><span class="line">          &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    &#125;);  </span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><ul><li>在<code>Blog/themes/next/source/css/_common/components/post/</code>添加文件<code>my-post-copyright.styl</code>，文件内容如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">.my_post_copyright &#123;</span><br><span class="line">  width: 85%;</span><br><span class="line">  max-width: 45em;</span><br><span class="line">  margin: 2.8em auto 0;</span><br><span class="line">  padding: 0.5em 1.0em;</span><br><span class="line">  border: 1px solid #d3d3d3;</span><br><span class="line">  font-size: 0.93rem;</span><br><span class="line">  line-height: 1.6em;</span><br><span class="line">  word-break: break-all;</span><br><span class="line">  background: rgba(255,255,255,0.4);</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright p&#123;margin:0;&#125;</span><br><span class="line">.my_post_copyright span &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  width: 5.2em;</span><br><span class="line">  color: #b5b5b5;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .raw &#123;</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 5em;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright a &#123;</span><br><span class="line">  color: #808080;</span><br><span class="line">  border-bottom:0;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright a:hover &#123;</span><br><span class="line">  color: #a3d2a3;</span><br><span class="line">  text-decoration: underline;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright:hover .fa-clipboard &#123;</span><br><span class="line">  color: #000;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .post-url:hover &#123;</span><br><span class="line">  font-weight: normal;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .copy-path &#123;</span><br><span class="line">  margin-left: 1em;</span><br><span class="line">  width: 1em;</span><br><span class="line">  +mobile()&#123;display:none;&#125;</span><br><span class="line">&#125;</span><br><span class="line">.my_post_copyright .copy-path:hover &#123;</span><br><span class="line">  color: #808080;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改<code>Blog/themes/next/layout/_macro/post.swig</code>，在如图位置添加以下代码：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">      &#123;% if not is_index %&#125;</span><br><span class="line">        &#123;% include &apos;my-copyright.swig&apos; %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><img src="https://ws3.sinaimg.cn/large/006tNc79gy1fzrxip5z2zj30o809f3zy.jpg" alt="image-20190202114207092"></p><ul><li>在<code>Blog/themes/next/source/css/_common/components/post/post.styl</code>文件最后加入下面的代码：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import &quot;my-post-copyright&quot;</span><br></pre></td></tr></table></figure><ul><li>在<code>Front-matter</code>中加入<code>copyright : ture</code>：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: Hexo-NexT博客主题美化</span><br><span class="line">categories: </span><br><span class="line">- Tutorial</span><br><span class="line">- Hexo</span><br><span class="line">copyright: true</span><br><span class="line">date: 2018-07-17 08:36:16</span><br><span class="line">updated: 2018-12-22 14:27:53</span><br><span class="line">tags: [Hexo, Blog, Tutorial]</span><br></pre></td></tr></table></figure><ul><li>配置根目录下的<code>_config.yml</code>文件，配置为：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: https://wenmobo.github.io/  //你的网站地址</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure><ul><li>效果图如下所示：</li></ul><p><img src="https://ws3.sinaimg.cn/large/006tNc79gy1fzrxkndwc2j30jk04cmxu.jpg" alt="image-20190202114405264"></p><h2 id="自定义样式"><a href="#自定义样式" class="headerlink" title="自定义样式"></a>自定义样式</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//站点</span></span><br><span class="line"><span class="comment">// 站点名字体</span></span><br><span class="line">.site-title &#123;</span><br><span class="line">    font-size: <span class="number">26</span>px;</span><br><span class="line">    line-height: <span class="number">50</span>px;</span><br><span class="line">    letter-spacing: <span class="number">1</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 页面最顶部的横线</span></span><br><span class="line">.headband &#123;</span><br><span class="line">    height: <span class="number">2</span>px;</span><br><span class="line">    background-image: linear-gradient(90deg, #F79533 0%, #F37055 15%, #EF4E7B 30%, #A166AB 44%, #5073B8 58%, #1098AD 72%, #07B39B 86%, #6DBA82 100%);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 页面留白更改</span></span><br><span class="line">.header-inner &#123;</span><br><span class="line">    padding-top: <span class="number">0</span>px;</span><br><span class="line">    padding-bottom: <span class="number">0</span>px;</span><br><span class="line">    <span class="comment">//圆角矩形</span></span><br><span class="line">    border-radius: <span class="number">15</span>px <span class="number">15</span>px <span class="number">15</span>px <span class="number">15</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 去除在页面文章之间的分割线</span></span><br><span class="line">.posts-expand .post-eof &#123;</span><br><span class="line">    margin: <span class="number">0</span>px;</span><br><span class="line">    background-color: rgba(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 页面底部页码</span></span><br><span class="line">.pagination .page-number.current &#123;</span><br><span class="line">    background: #34495e;</span><br><span class="line">    <span class="comment">//底部页码圆形</span></span><br><span class="line">    width: <span class="number">15</span>px;</span><br><span class="line">    border-radius: <span class="number">100</span>%;</span><br><span class="line">    box-shadow: <span class="number">0</span>px <span class="number">0</span>px <span class="number">10</span>px <span class="number">0</span>px rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>);</span><br><span class="line">    background-color: rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, <span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br><span class="line">.pagination .prev, .pagination .next, .pagination .page-number &#123;</span><br><span class="line">    margin-bottom: <span class="number">10</span>px;</span><br><span class="line">    border: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 去除页面底部页码上面的横线</span></span><br><span class="line">.pagination &#123;</span><br><span class="line">    border: none;</span><br><span class="line">    margin: <span class="number">0</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// archives页面顶部文字</span></span><br><span class="line">.page-archive .archive-page-counter &#123;</span><br><span class="line">    font-size: <span class="number">18</span>px;</span><br><span class="line">    color: rgb(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// archives页面时间轴左边线条第一个圆点颜色</span></span><br><span class="line">.page-archive .posts-collapse .archive-move-on &#123;</span><br><span class="line">    top: <span class="number">15</span>px;</span><br><span class="line">    opacity: <span class="number">1</span>;</span><br><span class="line">    background-color: rgb(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    box-shadow: <span class="number">0</span>px <span class="number">0</span>px <span class="number">10</span>px <span class="number">0</span>px rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//post背景</span></span><br><span class="line">.content-wrap&#123;</span><br><span class="line">    float: right;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">    padding: <span class="number">40</span>px;</span><br><span class="line">    <span class="comment">//width: calc(100% - 252px);</span></span><br><span class="line">    <span class="comment">// 统一背景颜色</span></span><br><span class="line">    background: #eee;</span><br><span class="line">    min-height: <span class="number">700</span>px;</span><br><span class="line">    box-shadow: initial;</span><br><span class="line">    border-radius: <span class="number">30</span>px <span class="number">30</span>px <span class="number">30</span>px <span class="number">30</span>px;</span><br><span class="line"></span><br><span class="line">    +tablet() &#123;</span><br><span class="line">    width: <span class="number">100</span>%;</span><br><span class="line">    padding: <span class="number">8</span>px;</span><br><span class="line">    border-radius: <span class="number">30</span>px;</span><br><span class="line">    &#125;</span><br><span class="line">    +mobile() &#123;</span><br><span class="line">    width: <span class="number">100</span>%;</span><br><span class="line">    padding: <span class="number">8</span>px;</span><br><span class="line">    min-height: auto;</span><br><span class="line">    border-radius: <span class="number">30</span>px;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//整体背景色</span></span><br><span class="line">body &#123;</span><br><span class="line">    color: #000;</span><br><span class="line">    <span class="comment">//统一背景颜色</span></span><br><span class="line">    background: #eee;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//上方留白去除</span></span><br><span class="line">.posts-expand &#123;</span><br><span class="line">    padding-top: <span class="number">10</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.posts-expand .post-meta &#123;</span><br><span class="line">    margin: <span class="number">5</span>px <span class="number">0</span>px <span class="number">0</span>px <span class="number">0</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.post-button &#123;</span><br><span class="line">    margin-top: <span class="number">0</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//回到顶端背景颜色</span></span><br><span class="line">.back-to-top&#123;</span><br><span class="line">    <span class="comment">//统一背景颜色</span></span><br><span class="line">    background: #eee;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 文章</span></span><br><span class="line">.post &#123;</span><br><span class="line">    margin-bottom: <span class="number">25</span>px;</span><br><span class="line">    padding: <span class="number">45</span>px <span class="number">36</span>px <span class="number">36</span>px <span class="number">36</span>px;</span><br><span class="line">    box-shadow: <span class="number">0</span>px <span class="number">0</span>px <span class="number">10</span>px <span class="number">0</span>px rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>);</span><br><span class="line">    background-color: rgb(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    border-radius: <span class="number">15</span>px <span class="number">15</span>px <span class="number">15</span>px <span class="number">15</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 文章``代码块的自定义样式</span></span><br><span class="line">code &#123;</span><br><span class="line">    margin: <span class="number">0</span>px <span class="number">4</span>px;</span><br><span class="line">    background: rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.75</span>)</span><br><span class="line">    color: rgb(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 大代码块的自定义样式</span></span><br><span class="line">.highlight, pre &#123;</span><br><span class="line">    margin: <span class="number">5</span>px <span class="number">0</span>;</span><br><span class="line">    padding: <span class="number">5</span>px;</span><br><span class="line">    border-radius: <span class="number">3</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.highlight, code, pre &#123;</span><br><span class="line">    border: 1px solid #d6d6d6;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//文章标题颜色</span></span><br><span class="line">.posts-expand .post-title-link&#123;</span><br><span class="line">    color: #000;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 文章底部跳转</span></span><br><span class="line">.post-nav-item a &#123;</span><br><span class="line">    <span class="comment">//color: rgb(80, 115, 184);</span></span><br><span class="line">    font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line">.post-nav-item a:hover &#123;</span><br><span class="line">    <span class="comment">//color: rgb(161, 102, 171);</span></span><br><span class="line">    font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 文章内标题样式（左边的竖线）</span></span><br><span class="line">.post-body h2, h3, h4, h5, h6 &#123;</span><br><span class="line">    border-left: <span class="number">4</span>px solid rgb(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>);</span><br><span class="line">    margin-left: <span class="number">-36</span>px;</span><br><span class="line">    padding-left: <span class="number">32</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 去掉图片边框</span></span><br><span class="line">.posts-expand .post-body img &#123;</span><br><span class="line">    border: none;</span><br><span class="line">    padding: <span class="number">0</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.post-gallery .post-gallery-img img &#123;</span><br><span class="line">    padding: <span class="number">3</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// [Read More]按钮样式</span></span><br><span class="line">.post-button .btn &#123;</span><br><span class="line">    color: #555 !important;</span><br><span class="line">    background-color: rgb(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    border-radius: <span class="number">3</span>px;</span><br><span class="line">    font-size: <span class="number">15</span>px;</span><br><span class="line">    box-shadow: inset <span class="number">0</span>px <span class="number">0</span>px <span class="number">10</span>px <span class="number">0</span>px rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">    <span class="comment">//border: none !important;</span></span><br><span class="line">    transition-property: unset;</span><br><span class="line">    padding: <span class="number">3</span>px <span class="number">15</span>px;</span><br><span class="line">    border-radius: <span class="number">16</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.post-button .btn:hover &#123;</span><br><span class="line">    color: rgb(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>) !important;</span><br><span class="line">    border-radius: <span class="number">3</span>px;</span><br><span class="line">    font-size: <span class="number">15</span>px;</span><br><span class="line">    box-shadow: inset <span class="number">0</span>px <span class="number">0</span>px <span class="number">10</span>px <span class="number">0</span>px rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">    background-color: rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.75</span>);</span><br><span class="line">    border-radius: <span class="number">16</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//侧栏</span></span><br><span class="line">.sidebar&#123;</span><br><span class="line">    <span class="comment">//统一背景颜色</span></span><br><span class="line">    background: #eee;</span><br><span class="line">&#125;</span><br><span class="line">.sidebar-inner &#123;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">    width: <span class="number">240</span>px;</span><br><span class="line">    color: #555;</span><br><span class="line">    background: #fff;</span><br><span class="line">    box-shadow: <span class="number">0</span> <span class="number">2</span>px <span class="number">2</span>px <span class="number">0</span> rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>), <span class="number">0</span> <span class="number">3</span>px <span class="number">1</span>px <span class="number">-2</span>px rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.06</span>), <span class="number">0</span> <span class="number">1</span>px <span class="number">5</span>px <span class="number">0</span> rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>), <span class="number">0</span> <span class="number">-1</span>px <span class="number">0.5</span>px <span class="number">0</span> rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.09</span>);</span><br><span class="line">    border-radius: <span class="number">15</span>px;</span><br><span class="line">    opacity: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">.sidebar-inner .affix-top&#123;</span><br><span class="line">    border-radius: <span class="number">15</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 侧栏站点作者名</span></span><br><span class="line">.site-author-name &#123;</span><br><span class="line">    display: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 侧栏头像（圆形以及旋转效果）</span></span><br><span class="line">.site-author-image &#123;</span><br><span class="line">    border: <span class="number">2</span>px solid rgb(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    border-radius: <span class="number">100</span>%;</span><br><span class="line">    transition: transform <span class="number">1.0</span>s ease-out;</span><br><span class="line">&#125;</span><br><span class="line">img:hover &#123;</span><br><span class="line">    transform: rotateZ(<span class="number">360</span>deg);</span><br><span class="line">&#125;</span><br><span class="line">.posts-expand .post-body img:hover &#123;</span><br><span class="line">    transform: initial;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//归档</span></span><br><span class="line"><span class="comment">// archives页面顶部文字</span></span><br><span class="line">.page-archive .archive-page-counter &#123;</span><br><span class="line">    font-size: <span class="number">18</span>px;</span><br><span class="line">    color: rgb(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// archives页面时间轴左边线条第一个圆点颜色</span></span><br><span class="line">.page-archive .posts-collapse .archive-move-on &#123;</span><br><span class="line">    top: <span class="number">15</span>px;</span><br><span class="line">    opacity: <span class="number">1</span>;</span><br><span class="line">    background-color: rgb(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    box-shadow: <span class="number">0</span>px <span class="number">0</span>px <span class="number">10</span>px <span class="number">0</span>px rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单</span></span><br><span class="line"><span class="comment">// 菜单超链接字体大小</span></span><br><span class="line">.menu .menu-item a &#123;</span><br><span class="line">    font-size: <span class="number">14</span>px;</span><br><span class="line">    <span class="comment">//圆角矩形</span></span><br><span class="line">    border-radius: <span class="number">20</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 菜单各项边距</span></span><br><span class="line">.menu .menu-item &#123;</span><br><span class="line">    margin: <span class="number">5</span>px <span class="number">15</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//选中菜单颜色以及圆角矩形</span></span><br><span class="line">.menu-item-active a, .menu .menu-item a:hover, .menu .menu-item span.exturl:hover &#123;</span><br><span class="line">    background: #000000;</span><br><span class="line">    color: #fff;</span><br><span class="line">    border-radius: <span class="number">20</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.menu-item-active a:after, .menu .menu-item a:hover:after, .menu .menu-item span.exturl:hover:after &#123;</span><br><span class="line">    background-color: #fff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//其他</span></span><br><span class="line"><span class="comment">// 自定义页脚跳动的心样式</span></span><br><span class="line">@keyframes heartAnimate &#123;</span><br><span class="line">    <span class="number">0</span>%,<span class="number">100</span>%&#123;<span class="attr">transform</span>:scale(<span class="number">1</span>);&#125;</span><br><span class="line">    <span class="number">10</span>%,<span class="number">30</span>%&#123;<span class="attr">transform</span>:scale(<span class="number">0.9</span>);&#125;</span><br><span class="line">    <span class="number">20</span>%,<span class="number">40</span>%,<span class="number">60</span>%,<span class="number">80</span>%&#123;<span class="attr">transform</span>:scale(<span class="number">1.1</span>);&#125;</span><br><span class="line">    <span class="number">50</span>%,<span class="number">70</span>%&#123;<span class="attr">transform</span>:scale(<span class="number">1.1</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line">#heart &#123;</span><br><span class="line">    animation: heartAnimate <span class="number">1.33</span>s ease-<span class="keyword">in</span>-out infinite;</span><br><span class="line">&#125;</span><br><span class="line">.with-love &#123;</span><br><span class="line">    color: rgb(<span class="number">255</span>, <span class="number">113</span>, <span class="number">168</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 自定义特别的样式</span></span><br><span class="line">h2.love &#123;</span><br><span class="line">    border-left: none;</span><br><span class="line">    color: rgb(<span class="number">255</span>, <span class="number">113</span>, <span class="number">168</span>);</span><br><span class="line">    -webkit-text-fill-color: unset;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//弃用</span></span><br><span class="line"><span class="comment">/*位置</span></span><br><span class="line"><span class="comment">.post-button &#123;</span></span><br><span class="line"><span class="comment">    text-align: left;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br></pre></td></tr></table></figure><h2 id="文章链接唯一化"><a href="#文章链接唯一化" class="headerlink" title="文章链接唯一化"></a>文章链接唯一化</h2><p>也许你会数次更改文章题目或者变更文章发布时间，在默认设置下，文章链接都会改变，不利于搜索引擎收录，也不利于分享。唯一永久链接才是更好的选择。</p><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p>「注」安装后，不要在 hexo s 模式下更改文章文件名，否则文章将成空白。</p><h3 id="在站点配置文件中-permalink"><a href="#在站点配置文件中-permalink" class="headerlink" title="在站点配置文件中 permalink"></a>在站点配置文件中 permalink</h3><p>查找代码 <code>permalink:</code>，将其更改为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: posts/:abbrlink/  # “posts/” 可自行更换</span><br></pre></td></tr></table></figure><h3 id="在站点配置文件中添加abbrlink"><a href="#在站点配置文件中添加abbrlink" class="headerlink" title="在站点配置文件中添加abbrlink"></a>在站点配置文件中添加abbrlink</h3><p>添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># abbrlink config</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32  # 算法：crc16(default) and crc32 </span><br><span class="line">  rep: dec    # 进制：dec(default) and hex</span><br></pre></td></tr></table></figure><p>选择依据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">crc16 &amp; hex</span><br><span class="line">    https://post.zz173.com/posts/66c8.html</span><br><span class="line">crc16 &amp; dec</span><br><span class="line">    https://post.zz173.com/posts/65535.html</span><br><span class="line">crc32 &amp; hex</span><br><span class="line">    https://post.zz173.com/posts/8ddf18fb.html</span><br><span class="line">crc32 &amp; dec</span><br><span class="line">    https://post.zz173.com/posts/1690090958.html</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://github.com/Rozbo/hexo-abbrlink" target="_blank" rel="noopener">rozbo/hexo-abbrlink</a><br><a href="https://post.zz173.com/detail/hexo-abbrlink.html" target="_blank" rel="noopener">hexo-abbrlink介绍</a><br><a href="https://chekun.me/post/hexo-uuid/" target="_blank" rel="noopener">Hexo插件之Hexo-UUID</a></p>]]></content>
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「Leetcode」832. Flipping an Image</title>
      <link href="/posts/585836704.html"/>
      <url>/posts/585836704.html</url>
      <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="832-Flipping-an-Image"><a href="#832-Flipping-an-Image" class="headerlink" title="832. Flipping an Image"></a>832. Flipping an Image</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Given a binary matrix A, we want to flip the image horizontally, then invert it, and return the resulting image.<br>To flip an image horizontally means that each row of the image is reversed.  For example, flipping <code>[1, 1, 0]</code> horizontally results in <code>[0, 1, 1]</code>.<br>To invert an image means that each 0 is replaced by 1, and each 1 is replaced by 0. For example, inverting <code>[0, 1, 1]</code> results in <code>[1, 0, 0]</code>.</p></blockquote><a id="more"></a><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><h4 id="one"><a href="#one" class="headerlink" title="one"></a>one</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input: [[1,1,0],[1,0,1],[0,0,0]]</span><br><span class="line">Output: [[1,0,0],[0,1,0],[1,1,1]]</span><br><span class="line">Explanation: First reverse each row: [[0,1,1],[1,0,1],[0,0,0]].</span><br><span class="line">Then, invert the image: [[1,0,0],[0,1,0],[1,1,1]]</span><br></pre></td></tr></table></figure><h4 id="two"><a href="#two" class="headerlink" title="two"></a>two</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input: [[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]</span><br><span class="line">Output: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]</span><br><span class="line">Explanation: First reverse each row: [[0,0,1,1],[1,0,0,1],[1,1,1,0],[0,1,0,1]].</span><br><span class="line">Then invert the image: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]</span><br></pre></td></tr></table></figure><h3 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h3><ul><li><code>1 &lt;= A.length = A[0].length &lt;= 20</code></li><li><code>0 &lt;= A[i][j] &lt;= 1</code></li></ul><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; flipAndInvertImage(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; A) &#123;</span><br><span class="line">        <span class="keyword">int</span> size=A[<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;A.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//矩阵内顺序反转</span></span><br><span class="line">            reverse(A[i].begin(),A[i].end());</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;size;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//反转</span></span><br><span class="line">                A[i][j]=<span class="number">1</span>-A[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> A;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> LeetCode </category>
          
          <category> Array </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> Matrix </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「Leetcode」709. To Lower Case</title>
      <link href="/posts/1103497448.html"/>
      <url>/posts/1103497448.html</url>
      <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance   </p><p>Author: JosephLau</p><hr><h2 id="709-To-Lower-Case"><a href="#709-To-Lower-Case" class="headerlink" title="709. To Lower Case"></a>709. To Lower Case</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Implement function ToLowerCase() that has a string parameter str, and returns the same string in lowercase.</p></blockquote><a id="more"></a><h3 id="C-Solution"><a href="#C-Solution" class="headerlink" title="C++ Solution"></a>C++ Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">toLowerCase</span><span class="params">(<span class="built_in">string</span> str)</span> </span>&#123;        </span><br><span class="line">        transform(str.begin(),str.end(),str.begin(),::<span class="built_in">tolower</span>);</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>STL</code>的<code>algorithm</code>库给我们提供了模板函数<code>transform</code>可以轻松解决这个问题.</p><blockquote><p>函数原型</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt; <span class="class"><span class="keyword">class</span> <span class="title">InputIterator</span>, <span class="title">class</span> <span class="title">OutputIterator</span>, <span class="title">class</span> <span class="title">UnaryOperator</span> &gt;</span></span><br><span class="line"><span class="class">  <span class="title">OutputIterator</span> <span class="title">transform</span> ( <span class="title">InputIterator</span> <span class="title">first1</span>, <span class="title">InputIterator</span> <span class="title">last1</span>,</span></span><br><span class="line"><span class="class">                             <span class="title">OutputIterator</span> <span class="title">result</span>, <span class="title">UnaryOperator</span> <span class="title">op</span> );</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">template</span> &lt; <span class="class"><span class="keyword">class</span> <span class="title">InputIterator1</span>, <span class="title">class</span> <span class="title">InputIterator2</span>,</span></span><br><span class="line"><span class="class">           <span class="title">class</span> <span class="title">OutputIterator</span>, <span class="title">class</span> <span class="title">BinaryOperator</span> &gt;</span></span><br><span class="line"><span class="class">  <span class="title">OutputIterator</span> <span class="title">transform</span> ( <span class="title">InputIterator1</span> <span class="title">first1</span>, <span class="title">InputIterator1</span> <span class="title">last1</span>,</span></span><br><span class="line"><span class="class">                             <span class="title">InputIterator2</span> <span class="title">first2</span>, <span class="title">OutputIterator</span> <span class="title">result</span>,</span></span><br><span class="line"><span class="class">                             <span class="title">BinaryOperator</span> <span class="title">binary_op</span> );</span></span><br></pre></td></tr></table></figure><blockquote><p>测试代码</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> strA = <span class="string">"pmbjackson@outlook.com"</span>;  </span><br><span class="line">    <span class="built_in">string</span> strB = <span class="string">"pumbjackson@gmail.com"</span>;  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Before transform:\n"</span>);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"strA:%s \n"</span>, strA.c_str());  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"strB:%s \n\n"</span>, strB.c_str());  </span><br><span class="line">  </span><br><span class="line">    transform(strA.begin(), strA.end(), strA.begin(), ::<span class="built_in">toupper</span>);  </span><br><span class="line">    transform(strB.begin(), strB.end(), strB.begin(), ::<span class="built_in">toupper</span>);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"After transform to toupper:\n"</span>);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"strA:%s \n"</span>, strA.c_str());  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"strB:%s \n\n"</span>, strB.c_str());  </span><br><span class="line">  </span><br><span class="line">    transform(strA.begin(), strA.end(), strA.begin(), ::<span class="built_in">tolower</span>);  </span><br><span class="line">    transform(strB.begin(), strB.end(), strB.begin(), ::<span class="built_in">tolower</span>);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"After transform to lower:\n"</span>);  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"strA:%s \n"</span>, strA.c_str());  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"strB:%s \n\n"</span>, strB.c_str());  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>运行结果</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">strA:pmbjackson@outlook.com  </span><br><span class="line">strB:pumbjackson@gmail.com</span><br><span class="line">  </span><br><span class="line">After transform to toupper:  </span><br><span class="line">strA:PMBJACKSON@OUTLOOK.COM   </span><br><span class="line">strB:PUMBJACKSON@GMAIL.COM   </span><br><span class="line">  </span><br><span class="line">After transform to lower:  </span><br><span class="line">strA:pmbjackson@outlook.com   </span><br><span class="line">strB:pumbjackson@gmail.com</span><br></pre></td></tr></table></figure><h2 id="Java-Solution"><a href="#Java-Solution" class="headerlink" title="Java Solution"></a>Java Solution</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toLowerCase</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> str.toLowerCase();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> LeetCode </category>
          
          <category> String </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> String </tag>
            
            <tag> STL </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Django-blog</title>
      <link href="/posts/706331224.html"/>
      <url>/posts/706331224.html</url>
      <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirement.txt</span><br></pre></td></tr></table></figure><blockquote><p>requirement.txt</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">bootstrap-admin   </span><br><span class="line">dj-database-url   </span><br><span class="line">dj-static         </span><br><span class="line">Django            </span><br><span class="line">django-markdown   </span><br><span class="line">django-toolbelt   </span><br><span class="line">Markdown          </span><br><span class="line">markdown2         </span><br><span class="line">pip               </span><br><span class="line">psycopg2          </span><br><span class="line">Pygments          </span><br><span class="line">pygobject         </span><br><span class="line">python-apt        </span><br><span class="line">pytz              </span><br><span class="line">setuptools        </span><br><span class="line">ssh-import-id     </span><br><span class="line">static3           </span><br><span class="line">virtualenv        </span><br><span class="line">wheel</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ django-admin.py startproject my_blog</span><br><span class="line">$ python manage.py startapp article</span><br><span class="line"></span><br><span class="line">INSTALLED_APPS = (</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">'article'</span>,  <span class="comment">#这里填写的是app的名称</span></span><br><span class="line">)</span><br><span class="line">ALLOWED_HOSTS = [<span class="string">'*'</span>]</span><br><span class="line"></span><br><span class="line">$ python manage.py runserver 0.0.0.0:2210</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Python </category>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Django </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Operating System Note</title>
      <link href="/posts/2700998608.html"/>
      <url>/posts/2700998608.html</url>
      <content type="html"><![CDATA[<h1 id="Operating-System-Note"><a href="#Operating-System-Note" class="headerlink" title="Operating System Note"></a>Operating System Note</h1><hr><h2 id="页面置换算法"><a href="#页面置换算法" class="headerlink" title="页面置换算法"></a>页面置换算法</h2><blockquote><p>选择调出页面的算法就称为页面置换算法。好的页面置换算法应有较低的页面更换频率，也就是说，应将以后不会再访问或者以后较长时间内不会再访问的页面先调出。</p></blockquote><p>常见的页面置换算法有：最佳置换算法、先进先出（FIFO）、最近最久未使用（LRU）、时钟（CLOCK）置换算法。</p><h3 id="OPT"><a href="#OPT" class="headerlink" title="OPT"></a>OPT</h3><blockquote><p>最佳置换算法所选择的被淘汰页面将是以后永不使用的，或者是在最长时间内不再被访问的页面,这样可以保证获得最低的缺页率。但由于人们目前无法预知进程在内存下的若千页面中哪个是未来最长时间内不再被访问的，因而该算法其实是无法实现。</p></blockquote><p>虽然OPT算法是无法实现的，但是我们可以利用他对其他页面置换算法进行评价。</p>]]></content>
      
      
        <tags>
            
            <tag> Operating System </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OpenCV Note</title>
      <link href="/posts/735415811.html"/>
      <url>/posts/735415811.html</url>
      <content type="html"><![CDATA[<h1 id="OpenCV-Note"><a href="#OpenCV-Note" class="headerlink" title="OpenCV Note"></a>OpenCV Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>此文用来记录平时使用OpenCV遇到的问题与心得.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="安装与配置"><a href="#安装与配置" class="headerlink" title="安装与配置"></a>安装与配置</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><blockquote><p>这里使用VS 2017与Opencv 3.4.1为例，其他版本基本相似</p></blockquote><ul><li><a href="https://sourceforge.net/projects/opencvlibrary/files/opencv-win/3.4.1/opencv-3.4.1-vc14_vc15.exe/download" target="_blank" rel="noopener">下载Opencv</a></li><li>双击运行，安装到磁盘（Opencv安装位置下面需要用到）</li><li>等解压完成就可以了</li></ul><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="系统环境变量配置"><a href="#系统环境变量配置" class="headerlink" title="系统环境变量配置"></a>系统环境变量配置</h4><ul><li>（以Windows 10为例）我的电脑-&gt;右键-&gt;属性-&gt;高级系统设置-&gt;环境变量</li><li>系统变量中找到path选择编辑</li><li>新建，内容为<code>%Opencv%\build\x64\vc15\bin</code>，其中<code>%Opencv%</code>为Opencv安装路径</li></ul><!--more--><h4 id="VS-2017配置"><a href="#VS-2017配置" class="headerlink" title="VS 2017配置"></a>VS 2017配置</h4><ul><li>创建VS 2017项目，Visual C++ -&gt; Win32 -&gt; Win32控制台应用程序</li><li>附加选项中勾上空项目，点击完成</li><li>点击视图-&gt;其他窗口-&gt;属性管理器</li><li>在你需要进行编译的环境下右键选择<code>添加新项目属性表</code></li><li>例如右键<code>Debug | x64</code>选择<code>添加新项目属性表</code>，名称为<code>Debug_64.props</code>，保存位置默认</li><li><p>在通用属性 -&gt; VC++目录 -&gt; 包含目录中分别添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%opencv%\build\include</span><br><span class="line">%opencv%\build\include\opencv</span><br><span class="line">%opencv%\build\include\opencv2</span><br></pre></td></tr></table></figure></li><li><p>库目录中添加<code>%opencv%\build\x64\vc15\lib</code></p></li><li>在通用属性 -&gt; 链接器 -&gt; 输入中添加<code>opencv_world341d.lib</code></li><li><code>Release</code>环境下的属性配置与<code>Debug</code>类似，不同的是在通用属性 -&gt; 链接器 -&gt; 输入中添加的是<code>opencv_world341.lib</code></li><li>以后若是创建新项目，可以直接在属性管理器中相应的编译环境下右键<code>添加现有项目属性表</code>，添加相应的属性表</li></ul><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/core/core.hpp&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/highgui/highgui.hpp&gt;  </span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 读入一张图片（test）    </span></span><br><span class="line">    Mat img = imread(<span class="string">"test.jpg"</span>);</span><br><span class="line">    <span class="comment">// 创建一个名为 "test"窗口    </span></span><br><span class="line">    namedWindow(<span class="string">"test"</span>);</span><br><span class="line">    <span class="comment">// 在窗口中显示test</span></span><br><span class="line">    imshow(<span class="string">"test"</span>, img);</span><br><span class="line">    <span class="comment">// 任意按键后窗口关闭</span></span><br><span class="line">    waitKey(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> OpenCV </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Opencv </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>MATLAB Note</title>
      <link href="/posts/2034843354.html"/>
      <url>/posts/2034843354.html</url>
      <content type="html"><![CDATA[<h1 id="MATLAB-Note"><a href="#MATLAB-Note" class="headerlink" title="MATLAB Note"></a>MATLAB Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>此文用来记录平时使用MatLab遇到的问题与心得.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="输出无白边图片"><a href="#输出无白边图片" class="headerlink" title="输出无白边图片"></a>输出无白边图片</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">imshow(I,<span class="string">'border'</span>,<span class="string">'tight'</span>,<span class="string">'initialmagnification'</span>,<span class="string">'fit'</span>);</span><br><span class="line"><span class="comment">% 'border','tight'的组合功能意思是去掉图像周边空白</span></span><br><span class="line"><span class="comment">% 'InitialMagnification','fit'组合的意思是图像填充整个figure窗口</span></span><br></pre></td></tr></table></figure><h2 id="平移、旋转、缩放、镜像"><a href="#平移、旋转、缩放、镜像" class="headerlink" title="平移、旋转、缩放、镜像"></a>平移、旋转、缩放、镜像</h2><!--more--><h3 id="平移"><a href="#平移" class="headerlink" title="平移"></a>平移</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">init = imread(<span class="string">'Fig3.tif'</span>); <span class="comment">% 读取图像</span></span><br><span class="line">[R, C] = <span class="built_in">size</span>(init); <span class="comment">% 获取图像大小</span></span><br><span class="line">res = <span class="built_in">zeros</span>(R, C); <span class="comment">% 构造结果矩阵。每个像素点默认初始化为0（黑色）</span></span><br><span class="line">delX = <span class="number">50</span>; <span class="comment">% 平移量X</span></span><br><span class="line">delY = <span class="number">50</span>; <span class="comment">% 平移量Y</span></span><br><span class="line">tras = [<span class="number">1</span> <span class="number">0</span> delX; <span class="number">0</span> <span class="number">1</span> delY; <span class="number">0</span> <span class="number">0</span> <span class="number">1</span>]; <span class="comment">% 平移的变换矩阵 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : R</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span> : C</span><br><span class="line">        temp = [i; j; <span class="number">1</span>];</span><br><span class="line">        temp = tras * temp; <span class="comment">% 矩阵乘法</span></span><br><span class="line">        x = temp(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        y = temp(<span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="comment">% 变换后的位置判断是否越界</span></span><br><span class="line">        <span class="keyword">if</span> (x &lt;= R) &amp; (y &lt;= C) &amp; (x &gt;= <span class="number">1</span>) &amp; (y &gt;= <span class="number">1</span>)</span><br><span class="line">            res(x, y) = init(<span class="built_in">i</span>, <span class="built_in">j</span>);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">imshow(uint8(res)); <span class="comment">% 显示图像</span></span><br></pre></td></tr></table></figure><h3 id="旋转"><a href="#旋转" class="headerlink" title="旋转"></a>旋转</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">init = imread(<span class="string">'Fig3.tif'</span>); <span class="comment">% 读取图像</span></span><br><span class="line">[R, C] = <span class="built_in">size</span>(init); <span class="comment">% 获取图像大小</span></span><br><span class="line">res = <span class="built_in">zeros</span>( R,  C); <span class="comment">% 构造结果矩阵。每个像素点默认初始化为0（黑色）</span></span><br><span class="line"></span><br><span class="line">alfa = <span class="number">-15</span> * <span class="number">3.1415926</span> / <span class="number">180.0</span>; <span class="comment">% 旋转角度</span></span><br><span class="line">tras = [cos(alfa) -sin(alfa) <span class="number">0</span>; sin(alfa) cos(alfa) <span class="number">0</span>; <span class="number">0</span> <span class="number">0</span> <span class="number">1</span>]; <span class="comment">% 旋转的变换矩阵</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : R</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span> : C</span><br><span class="line">        temp = [i; j; <span class="number">1</span>];</span><br><span class="line">        temp = tras * temp;<span class="comment">% 矩阵乘法</span></span><br><span class="line">        x = uint16(temp(<span class="number">1</span>, <span class="number">1</span>));</span><br><span class="line">        y = uint16(temp(<span class="number">2</span>, <span class="number">1</span>));</span><br><span class="line">        <span class="comment">% 变换后的位置判断是否越界</span></span><br><span class="line">        <span class="keyword">if</span> (x &lt;= R) &amp; (y &lt;= C) &amp; (x &gt;= <span class="number">1</span>) &amp; (y &gt;= <span class="number">1</span>)</span><br><span class="line">            res(<span class="built_in">i</span>, <span class="built_in">j</span>) = init(x, y);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">imshow(uint8(res));  <span class="comment">% 显示图像</span></span><br></pre></td></tr></table></figure><h3 id="缩放"><a href="#缩放" class="headerlink" title="缩放"></a>缩放</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">init = imread(<span class="string">'Fig3.tif'</span>); <span class="comment">% 读取图像</span></span><br><span class="line">[R, C] = <span class="built_in">size</span>(init); <span class="comment">% 获取图像大小</span></span><br><span class="line">timesX = <span class="number">3</span>; <span class="comment">% X轴缩放量</span></span><br><span class="line">timesY = <span class="number">3</span>; <span class="comment">% Y轴缩放量</span></span><br><span class="line">res = <span class="built_in">zeros</span>(timesX * R, timesY * C); <span class="comment">% 构造结果矩阵。每个像素点默认初始化为0（黑色）</span></span><br><span class="line">tras = [<span class="number">1</span>/timesX <span class="number">0</span> <span class="number">0</span>; <span class="number">0</span> <span class="number">1</span>/timesY <span class="number">0</span>; <span class="number">0</span> <span class="number">0</span> <span class="number">1</span>]; <span class="comment">% 缩放的变换矩阵 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : timesX * R</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span> : timesY * C</span><br><span class="line">        temp = [i; j; <span class="number">1</span>];</span><br><span class="line">        temp = tras * temp; <span class="comment">% 矩阵乘法</span></span><br><span class="line">        x = uint8(temp(<span class="number">1</span>, <span class="number">1</span>));</span><br><span class="line">        y = uint8(temp(<span class="number">2</span>, <span class="number">1</span>));</span><br><span class="line">        <span class="comment">% 变换后的位置判断是否越界</span></span><br><span class="line">        <span class="keyword">if</span> (x &lt;= R) &amp; (y &lt;= C) &amp; (x &gt;= <span class="number">1</span>) &amp; (y &gt;= <span class="number">1</span>)</span><br><span class="line">            res(<span class="built_in">i</span>, <span class="built_in">j</span>) = init(x, y);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">imshow(uint8(res)); <span class="comment">% 显示图像</span></span><br></pre></td></tr></table></figure><h3 id="镜像（水平）"><a href="#镜像（水平）" class="headerlink" title="镜像（水平）"></a>镜像（水平）</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">init = imread(<span class="string">'Fig3.tif'</span>);</span><br><span class="line">[R, C] = <span class="built_in">size</span>(init);</span><br><span class="line">res = <span class="built_in">zeros</span>(R, C);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : R</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span> : C</span><br><span class="line">        x = <span class="built_in">i</span>;</span><br><span class="line">        y = C - <span class="built_in">j</span> + <span class="number">1</span>;</span><br><span class="line">        res(x, y) = init(<span class="built_in">i</span>, <span class="built_in">j</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">imshow(uint8(res));</span><br></pre></td></tr></table></figure><h3 id="Graythresh与im2bw函数"><a href="#Graythresh与im2bw函数" class="headerlink" title="Graythresh与im2bw函数"></a>Graythresh与im2bw函数</h3><blockquote><p>graythresh函数输入一副图像，输出就是阈值。在这个函数中，是使用最大类间方差法找到图片的一个合适的阈值（threshold）。再利用im2bw（将灰度图像转换为二值图像）函数，将找到的阈值输入，就可以把原图变为一个二值图。</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">thresh = graythresh(image)</span><br><span class="line">img = im2bw(image, thresh)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> MatLab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>我脑海中的NLP</title>
      <link href="/posts/3866712056.html"/>
      <url>/posts/3866712056.html</url>
      <content type="html"><![CDATA[<p>中华文化博大精深，汉语更是其中的代表，近年来的NLP更是有了非常多的“用武之地”。例如，语义智能分析，当女朋友问你“爱不爱我”，有的时候是“我要包包”，有的时候是“我要口红”，有的时候就是单纯的想要你的肯定的回答，这个时候NLP就可以起到救命的作用^_^。</p><p>“沟通，是人最紧迫又最困难的事。除了生存，人解决孤独、恐惧等所有精神层面的问题，都要靠沟通。”这些年机器翻译、机器写新闻甚至是机器写诗都陆续出现，机器表现出的强大的能力背后是自然语言处理对于机器与人类之间沟通的作用。</p><p>想象一下，人类与机器沟通，甚至通过机器与自然界沟通，这是一个多么宏大的愿景啊！以前看过一部电影叫做《Her》，当初看这部电影主要是因为女神斯嘉丽·约翰逊给她配的音，但是看过之后反而被这部电影所描绘的世界给吸引住了。在《Her》的世界里，人类需要做什么直接告诉“Her”就行，孤单的时候“Her”可以是一个真正懂你的“完美情人”，而不仅仅是近年来只能订闹钟、打电话、查天气的Siri、Cortana、Google Assistant、小爱同学之流。</p><p>我认为未来的人工智能，必须是能够听懂及能够一定程度上满足人类需求的“工具”，那么这个“听懂”的前提很大一部分上依赖于现在的自然语言处理，也是未来人工智能的入口。</p>]]></content>
      
      
        <tags>
            
            <tag> NLP </tag>
            
            <tag> Program Thinking </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>小说爬虫</title>
      <link href="/posts/247701255.html"/>
      <url>/posts/247701255.html</url>
      <content type="html"><![CDATA[<h1 id="使用Python爬虫爬取网络小说"><a href="#使用Python爬虫爬取网络小说" class="headerlink" title="使用Python爬虫爬取网络小说"></a>使用Python爬虫爬取网络小说</h1><ul><li><p>小说网址</p><blockquote><p><a href="https://www.uxiaoshuo.com/" target="_blank" rel="noopener">https://www.uxiaoshuo.com/</a></p></blockquote></li><li><p>使用<a href="https://www.uxiaoshuo.com/124/124629/" target="_blank" rel="noopener">绝色妖娆：鬼医至尊</a>为例（主要是女朋友想看<code>^_^</code>）</p></li></ul><a id="more"></a><p>下面是程序代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span>  requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">req_header=&#123;</span><br><span class="line"><span class="string">'Accept'</span>:<span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,</span><br><span class="line"><span class="string">'Accept-Encoding'</span>:<span class="string">'gzip, deflate, br'</span>,</span><br><span class="line"><span class="string">'Accept-Language'</span>:<span class="string">'zh-CN,zh;q=0.9'</span>,</span><br><span class="line"><span class="string">'Cookie'</span>:<span class="string">'UM_distinctid=162afbabff819e-03f2f082776e95-b34356b-1fa400-162afbabff9294; CNZZDATA1259019190=1993576859-1523364262-https%253A%252F%252Fwww.baidu.com%252F%7C1523364262; bookid=124629; chapterid=6510968; chaptername=%25u7B2C1%25u7AE0%2520%25u6797%25u4E2D%25u9634%25u8C0B'</span>,</span><br><span class="line"><span class="string">'Host'</span>:<span class="string">'www.uxiaoshuo.com'</span>,</span><br><span class="line"><span class="string">'Proxy-Connection'</span>:<span class="string">'keep-alive'</span>,</span><br><span class="line"><span class="string">'Referer'</span>:<span class="string">'https://www.uxiaoshuo.com/'</span>,</span><br><span class="line"><span class="string">'Upgrade-Insecure-Requests'</span>:<span class="string">'1'</span>,</span><br><span class="line"><span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">req_url_base=<span class="string">'http://www.uxiaoshuo.com'</span>                <span class="comment">#小说主地址</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_txt</span><span class="params">(txt_id)</span>:</span></span><br><span class="line">    txt=&#123;&#125;</span><br><span class="line">    _req_url=[]</span><br><span class="line">    txt[<span class="string">'title'</span>]=<span class="string">''</span></span><br><span class="line">    txt[<span class="string">'id'</span>]=str(txt_id)                                   <span class="comment">#小说编号</span></span><br><span class="line">    _req_url=txt[<span class="string">'id'</span>].split(<span class="string">'.'</span>)</span><br><span class="line">    req_url=req_url_base+ txt[<span class="string">'id'</span>]                         <span class="comment">#根据小说编号获取小说URL</span></span><br><span class="line">    print(<span class="string">"小说编号："</span>+req_url)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        res=requests.get(req_url, params=req_header)             <span class="comment">#获取小说第一章界面</span></span><br><span class="line">        soups=BeautifulSoup(res.text,<span class="string">"html.parser"</span>)             <span class="comment">#soup转化</span></span><br><span class="line">        <span class="comment">#获取小说题目</span></span><br><span class="line">        txt[<span class="string">'title'</span>]=soups.select(<span class="string">'#webhtml .box_con .con_top a'</span>)[<span class="number">1</span>].text</span><br><span class="line">        <span class="comment">#打开小说文件写入小说相关信息</span></span><br><span class="line">        fo = open(<span class="string">'&#123;0&#125;.txt'</span>.format(txt[<span class="string">'title'</span>]), <span class="string">"ab+"</span>)</span><br><span class="line">        <span class="comment">#循环写入章节内容</span></span><br><span class="line">        <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> _req_url[<span class="number">-1</span>]!=<span class="string">'html'</span>:</span><br><span class="line">                print(txt[<span class="string">'title'</span>]+<span class="string">"全部下载成功！"</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            txt[<span class="string">'c_title'</span>]=soups.select(<span class="string">'#webhtml .box_con .zhangjieming h1'</span>)[<span class="number">0</span>].text     <span class="comment">##章节名称</span></span><br><span class="line">            txt[<span class="string">'content'</span>]=soups.select(<span class="string">'#webhtml .box_con .zhangjieTXT'</span>)[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> txt[<span class="string">'content'</span>].select(<span class="string">"script"</span>):           <span class="comment">#去除无用内容</span></span><br><span class="line">                i.decompose()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> txt[<span class="string">'content'</span>].select(<span class="string">"div"</span>):</span><br><span class="line">                i.decompose()</span><br><span class="line">            txt[<span class="string">'content'</span>]=re.sub( <span class="string">'\s+'</span>, <span class="string">'\r\n\t'</span>, txt[<span class="string">'content'</span>].text).strip(<span class="string">'\r\n'</span>)</span><br><span class="line">            <span class="comment">#以二进制写入章节题目</span></span><br><span class="line">            fo.write((<span class="string">'\n'</span>+txt[<span class="string">'c_title'</span>]+<span class="string">'\r\n'</span>).encode(<span class="string">'UTF-8'</span>))</span><br><span class="line">            <span class="comment">#以二进制写入章节内容</span></span><br><span class="line">            fo.write((<span class="string">'\n'</span>+txt[<span class="string">'content'</span>]+<span class="string">'\n'</span>).encode(<span class="string">'UTF-8'</span>))</span><br><span class="line">            print(txt[<span class="string">'c_title'</span>])</span><br><span class="line">            <span class="comment"># print('章节名:'+txt['c_title'])</span></span><br><span class="line">            <span class="comment"># print("章节内容：\n"+txt['content'])</span></span><br><span class="line">            req_url=soups.select(<span class="string">'#webhtml .zhangjieming .bottem1 a'</span>)[<span class="number">3</span>][<span class="string">'href'</span>]</span><br><span class="line">            _req_url=req_url.split(<span class="string">'.'</span>)</span><br><span class="line">            req_url=req_url_base+req_url</span><br><span class="line">            res=requests.get(req_url, params=req_header)             <span class="comment">#获取下一章界面</span></span><br><span class="line">            soups=BeautifulSoup(res.text,<span class="string">"html.parser"</span>)             <span class="comment">#soup转化</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">get_txt(<span class="string">'/124/124629/7404934.html'</span>)</span><br><span class="line">get_txt(<span class="string">'/135/135169/7373986.html'</span>)</span><br></pre></td></tr></table></figure><blockquote><p>要爬取该网站内的小说，只需要将参数改成自己需要的小说就可以了</p></blockquote>]]></content>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Reptile </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「Leetcode」657. Judge Route Circle</title>
      <link href="/posts/3224175457.html"/>
      <url>/posts/3224175457.html</url>
      <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="657-Judge-Route-Circle"><a href="#657-Judge-Route-Circle" class="headerlink" title="657. Judge Route Circle"></a>657. Judge Route Circle</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Initially, there is a Robot at position (0, 0). Given a sequence of its moves, judge if this robot makes a circle, which means it moves back to the original place.<br>The move sequence is represented by a string. And each move is represent by a character. The valid robot moves are <code>R</code> (Right), <code>L</code> (Left), <code>U</code> (Up) and <code>D</code> (down). The output should be true or false representing whether the robot makes a circle.</p></blockquote><a id="more"></a><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><ul><li><p>One</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: &quot;UD&quot;</span><br><span class="line">Output: true</span><br></pre></td></tr></table></figure></li><li><p>Two</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: &quot;LL&quot;</span><br><span class="line">Output: false</span><br></pre></td></tr></table></figure></li></ul><h3 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h3><ul><li><p>C++ Solution</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">judgeCircle</span><span class="params">(<span class="built_in">string</span> moves)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> b=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:moves)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">switch</span>(c)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'R'</span>:a++;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'L'</span>:a--;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'U'</span>:b++;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'D'</span>:b--;<span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> a==<span class="number">0</span>&amp;&amp;b==<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>Wrong Answer</p><ul><li><p>Solution</p>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">judgeCircle</span><span class="params">(<span class="built_in">string</span> moves)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>* alp=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">26</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:moves)</span><br><span class="line">        &#123;</span><br><span class="line">            alp[c-<span class="string">'A'</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>((alp[<span class="string">'R'</span>-<span class="string">'A'</span>]==alp[<span class="string">'L'</span>-<span class="string">'A'</span>])&amp;&amp;(alp[<span class="string">'U'</span>-<span class="string">'A'</span>]      ==alp[<span class="string">'D'</span>-<span class="string">'A'</span>]))<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>Test Case</p><blockquote><p>按道理solution应该没错的，可是不知道哪里有点问题，神经病啊！！！！！</p></blockquote>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RULDDLLDLRDUUUURULRURRRRLRULRLULLLRRULULDDRDLRULDRRULLUDDURDLRRUDRUDDURLLLUUDULRUDRLURRDRLLDDLLLDLRLLRUUDUURDRLDUDRUDRLUDULRLUDRLDDUULDDLDURULUDUUDDRRDUURRLRDLDLRLLDRRUUURDLULLURRRRDRRURDUURDLRRUULRURRUULULUUDURUDLRDDDDDURRRLRUDRUULUUUULDURDRULLRRRUDDDUUULUURRDRDDRLLDRLDULDLUUDRDLULLDLDDRUUUUDDRRRDLLLLURUURLRUUULRDDULUULUURDURDDDRRURLURDLLLRLULRDLDDLRDRRRRLUURRRRLDUDLLRUDLDRDLDRUULDRDULRULRRDLDLLLUDLDLULLDURUURRLLULUURLRLRDUDULLDURRUDDLDDLLUDURLLRLDLDUDLURLLDRRURRDUDLDUULDUDRRUDULLUUDURRRURLULDDLRRURULUURURRDULUULDDDUUDRLDDRLULDUDDLLLDLDURDLRLUURDDRLUDRLUDLRRLUUULLDUUDUDURRUULLDDUDLURRDDLURLDRDRUDRLDDLDULDRULUDRRDRLLUURULURRRUDRLLUURULURRLUULRDDDRDDLDRLDRLDUDRLDRLDDLDUDDURUDUDDDLRRDLUUUDUDURLRDRURUDUDDRDRRLUDURULDULDDRLDLUURUULUDRLRLRLLLLRLDRURRRUULRDURDRRDDURULLRDUDRLULRRLLLDRLRLRRDULDDUDUURLRULUUUULURULDLDRDRLDDLRLURRUULRRLDULLUULUDUDRLDUDRDLLDULURLUDDUURULDURRUURLRDRRRLDDULLLLDDRRLRRDRDLRUDUUDLRLDRDRURULDLULRRDLLURDLLDLRDRURLRUDURDRRRULURDRURLDRRRDUDUDUDURUUUUULURDUDDRRDULRDDLULRDRULDRUURRURLUDDDDLDRLDLLLLRLDRLRDRRRLLDRDRUULURLDRULLDRRDUUDLURLLDULDUUDLRRRDDUDRLDULRDLLULRRUURRRURLRRLDDUDDLULRUDULDULRDUDRLRDULRUUDDRUURUDLDRDUDDUULLUDDLLRLURURLRRULLDDDLURDRRDLLLLULLDLUDDLURLLDDRLDLLDDRDRDDUDLDURLUUUUUDLLLRLDULDDRDDDDRUDLULDRRLLLDUUUDDDRDDLLULUULRRULRUDRURDDULURDRRURUULDDDDUULLLURRRRDLDDLRLDDDRLUUDRDDRDDLUDLUUULLDLRDLURRRLRDRLURUURLULLLLRDDLLLLRUDURRLDURULURULDDRULUDRLDRLLURURRRDURURDRRUDLDDLLRRDRDDLRLRLUDUDRRUDLLDUURUURRDUDLRRLRURUDURDLRRULLDLLUDURUDDRUDULLDUDRRDDUDLLLDLRDRUURLLDLDRDDLDLLUDRDDRUUUDDULRUULRDRUDUURRRURUDLURLRDDLUULRDULRDURLLRDDDRRUDDUDUDLLDDRRUUDURDLLUURDLRULULDULRUURUDRULDRDULLULRRDDLDRDLLLDULRRDDLDRDLLRDDRLUUULUURULRULRUDULRULRUURUDUUDLDUDUUURLLURDDDUDUDLRLULDLDUDUULULLRDUDLDRUDRUULRURDDLDDRDULRLRLRRRRLRULDLLLDDRLUDLULLUUDLDRRLUDULRDRLLRRRULRLRLLUDRUUDUDDLRLDRDDDDRDLDRURULULRUURLRDLLDDRLLRUDRRDDRDUDULRUDULURRUDRDLRDUUDDLDRUDLLDDLRLULLLRUUDRRRRUULLRLLULURLDUDDURLRULULDLDRURDRLLURRDLURRURLULDLRLDUDLULLLDRDLULDLRULLLUDUDUDUDLDDDDDRDLUDUULLUDRLUURDRLULD</span><br></pre></td></tr></table></figure>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">output: <span class="literal">false</span></span><br><span class="line">expect: <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      <categories>
          
          <category> LeetCode </category>
          
          <category> String </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> String </tag>
            
            <tag> Circle </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「Leetcode」387. First Unique Character in a String</title>
      <link href="/posts/1822856309.html"/>
      <url>/posts/1822856309.html</url>
      <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="387-First-Unique-Character-in-a-String"><a href="#387-First-Unique-Character-in-a-String" class="headerlink" title="387. First Unique Character in a String"></a>387. First Unique Character in a String</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Given a string, find the first non-repeating character in it and return it’s index. If it doesn’t exist, return -1.</p></blockquote><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = &quot;leetcode&quot;</span><br><span class="line">return 0.</span><br><span class="line"></span><br><span class="line">s = &quot;loveleetcode&quot;,</span><br><span class="line">return 2.</span><br></pre></td></tr></table></figure><blockquote><p><strong>Note:</strong> You may assume the string contain only lowercase letters.</p></blockquote><a id="more"></a><h3 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h3><ul><li><p>C++ Solution</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">firstUniqChar</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>* alp=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">26</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:s)</span><br><span class="line">        &#123;</span><br><span class="line">            alp[c-<span class="string">'a'</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(alp[s[i]-<span class="string">'a'</span>]==<span class="number">1</span>)<span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>Someting Wrong</p><blockquote><p>明明测试用例是对的，但是提交就是错的，很郁闷，结果在下面发现 </p></blockquote></li></ul><blockquote><p>Note: is Run Code inconsistent with Submit Solution? If you are using global variables or C/C++, check this out.First, please check if you are using any global or static variables. They are Evil, period. If you must declare one, reset them in the first line of your called method or in the default constructor. Why? Because the judger executes all test cases using the same program instance, global/static variables affect the program state from one test case to another. See this Discuss thread for more details.Are you using C or C++? If the answer is yes, chances are your code has bugs in it which cause one of the earlier test cases to trigger an undefined behavior. See this Discuss thread for an example of undefined behavior. These bugs could be hard to debug, so good luck. Or just give up on C/C++ entirely and code in a more predictable language, like Java. Just kidding.<br>总之很郁闷</p></blockquote><ul><li><p>Jave Solution</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">firstUniqChar</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] alp=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">26</span>];</span><br><span class="line">        <span class="keyword">char</span>[] arr=s.toCharArray();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c:arr)</span><br><span class="line">        &#123;</span><br><span class="line">            alp[c-<span class="string">'a'</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(alp[arr[i]-<span class="string">'a'</span>]==<span class="number">1</span>)<span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>9 ms Soluton in Java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">firstUniqChar</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> resIndex = s.length();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(resIndex == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c = <span class="string">'a'</span>;c&lt;=<span class="string">'z'</span>;c++)&#123;           </span><br><span class="line">            <span class="keyword">int</span> index = s.indexOf(c);      </span><br><span class="line">            <span class="keyword">if</span>(index!=-<span class="number">1</span> &amp;&amp; index == s.lastIndexOf(c))&#123;</span><br><span class="line">                resIndex = Math.min(resIndex,index);</span><br><span class="line">            &#125;        </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> resIndex == s.length() ? -<span class="number">1</span> : resIndex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      <categories>
          
          <category> LeetCode </category>
          
          <category> String </category>
          
          <category> Hash Table </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> String </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>双系统删除Ubuntu后出现grub rescure&gt;解决办法</title>
      <link href="/posts/2711132068.html"/>
      <url>/posts/2711132068.html</url>
      <content type="html"><![CDATA[<h1 id="双系统删除Ubuntu后出现grub-rescure"><a href="#双系统删除Ubuntu后出现grub-rescure" class="headerlink" title="双系统删除Ubuntu后出现grub rescure"></a>双系统删除Ubuntu后出现grub rescure</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>在笔记本电脑上安装了两个Linux系统，有一个几乎不用，所以决定把它给删除了,然后就出现了问题.</p></blockquote><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GRUB loading</span><br><span class="line">error:unknow filesystem</span><br><span class="line">grub rescue&gt;</span><br></pre></td></tr></table></figure><p>下面几种操作会导致这种问题：</p><ul><li>想删除Ubuntu，于是直接在Windows下删除/格式化了Ubuntu所在的分区。</li><li>调整磁盘，利用工具合并/分割/调整/删除分区，使磁盘分区数目发生了变化。</li><li>重新安装系统，把Linux安装到了新分区，原有分区已经格式化，但是没有重新安装grub2。</li><li>用Ubuntu备份工具/衍生版制造工具等，把主分区恢复成了8.X的老版本，结果老版本的grub是grub1,于是把grub2破坏掉了。</li></ul><p>总归是由于操作者不知道grub2分为两部分，一部分（一般情况下）写在了mbr上，另一部分写在了某个分区的<code>/boot/grub</code>目录（如果<code>/boot</code>单独分区，则直接写在对应分区的<code>/grub</code>目录）里面。由于上述操作，致使grub2的mbr里面的那一部分找不到<code>/grub</code>目录里面的那一部分了（或者另一部分已经删除了）。</p><!-- more --><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><h3 id="彻底删除grub2"><a href="#彻底删除grub2" class="headerlink" title="彻底删除grub2"></a>彻底删除grub2</h3><blockquote><p>已经使用此方法成功解决</p></blockquote><p>适用于已经不想再使用Ubuntu，要转回Windows的人。只要有Windows启动盘（非Ghost），用它启动，至选择安装位置，不用真正安装，退出重启就可以。或者用它启动到故障修复台，运行fixboot或者fixmbr都可以。<br>win7命令行下，则是执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BootRec.exe /fixmbr</span><br></pre></td></tr></table></figure><p><code>/fixmbr</code>修复mbr，<code>/FixBoot</code>修复启动扇区，<code>/ScanOs</code>检测已安装的win7，<code>/RebuildBcd</code>重建bcd。</p><h3 id="重新安装、修复grub2"><a href="#重新安装、修复grub2" class="headerlink" title="重新安装、修复grub2"></a>重新安装、修复grub2</h3><h4 id="先使用ls命令，找到Ubuntu安装在哪个分区"><a href="#先使用ls命令，找到Ubuntu安装在哪个分区" class="headerlink" title="先使用ls命令，找到Ubuntu安装在哪个分区"></a>先使用<code>ls</code>命令，找到Ubuntu安装在哪个分区</h4><p>在grub rescue&gt;下输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br></pre></td></tr></table></figure><p>会罗列所有的磁盘分区信息，比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(hd0,1),(hd0,5),(hd0,3),(hd0,2)</span><br></pre></td></tr></table></figure><h4 id="依次调用如下命令：-X表示各个分区号码"><a href="#依次调用如下命令：-X表示各个分区号码" class="headerlink" title="依次调用如下命令： X表示各个分区号码"></a>依次调用如下命令： X表示各个分区号码</h4><p>如果<code>/boot</code>没有单独分区，用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls (hd0,X)/boot/grub</span><br></pre></td></tr></table></figure><p>如果<code>/boot</code>单独分区，则用下列命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls （hd0,X)/grub</span><br></pre></td></tr></table></figure><p>正常情况下，会列出来几百个文件，很多文件的扩展名是<code>.mod</code>、<code>.lst</code>和<code>.img</code>，还有一个文件是<code>grub.cfg</code>。假设找到（hd0,5）时，显示了文件夹中的文件，则表示Linux安装在这个分区。</p><h4 id="如果找到了正确的grub目录，则设法临时性将grub的两部分关联起来"><a href="#如果找到了正确的grub目录，则设法临时性将grub的两部分关联起来" class="headerlink" title="如果找到了正确的grub目录，则设法临时性将grub的两部分关联起来"></a>如果找到了正确的grub目录，则设法临时性将grub的两部分关联起来</h4><p>以下是<code>/boot</code>没有单独分区的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grub rescue&gt;<span class="built_in">set</span> root=(hd0,5)</span><br><span class="line">grub rescue&gt;<span class="built_in">set</span> prefix=(hd0,5)/boot/grub</span><br><span class="line">grub rescue&gt;insmod /boot/grub/normal.mod</span><br></pre></td></tr></table></figure><p>以下是<code>/boot</code>单独分区的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grub rescue&gt;<span class="built_in">set</span> root=(hd0,5)</span><br><span class="line">grub rescue&gt;<span class="built_in">set</span> prefix=(hd0,5)/grub</span><br><span class="line">grub rescue&gt;insmod /grub/normal.mod</span><br></pre></td></tr></table></figure><p>为了显示出丢失的grub菜单，需要调用如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub rescue&gt;normal</span><br></pre></td></tr></table></figure><p>如果重启后问题依旧存在，则需要进入Linux中对grub进行修复。启动起来，进入Ubuntu之后，在终端执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo update-grub</span><br><span class="line">$ sudo grub-install /dev/sda</span><br></pre></td></tr></table></figure><p>sda是硬盘号码，千万不要指定分区号码，例如sda1，sda5等都不对。</p><h4 id="如果找不到正确的-grub目录，则尝试寻找是否有linux核心文件，则依次在grub-rescue-gt-下调用如下命令：-X表示各个分区号码"><a href="#如果找不到正确的-grub目录，则尝试寻找是否有linux核心文件，则依次在grub-rescue-gt-下调用如下命令：-X表示各个分区号码" class="headerlink" title="如果找不到正确的/grub目录，则尝试寻找是否有linux核心文件，则依次在grub rescue&gt;下调用如下命令： X表示各个分区号码"></a>如果找不到正确的/grub目录，则尝试寻找是否有linux核心文件，则依次在<code>grub rescue&gt;</code>下调用如下命令： X表示各个分区号码</h4><p>如果<code>/boot</code>没有单独分区：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls (hd0,X)/boot</span><br></pre></td></tr></table></figure><p>如果<code>/boot</code>单独分区：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls （hd0,X)</span><br></pre></td></tr></table></figure><p>找名字类似<code>vmlinuz-3.0.0-12-generic</code>这样的文件，这是Linux核心文件，如果找到，记下(hd0,X)中的X值。假设找到（hd0,5）时，显示了文件夹中的文件。</p><p>然后用live cd或者live usb启动，在live cd的Ubuntu终端中依次输入以下命令（sda5中的5必须改成上面记录下来数值）：</p><p>如果<code>/boot</code>没有单独分区：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mount /dev/sda5 /mnt</span><br><span class="line">sudo grub-install --boot-directory=/mnt/boot /dev/sda</span><br></pre></td></tr></table></figure><p>如果<code>/boot</code>单独分区：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mount /dev/sda5 /mnt</span><br><span class="line">sudo grub-install --boot-directory=/mnt /dev/sda</span><br></pre></td></tr></table></figure><p>然后重新启动即可。</p><p>以上这两句命令也可以解决“安装Ubuntu时grub安装位置不对，没有将grub安装到/dev/sda，造成启动时不出现Ubuntu启动项直接进入Windows”的问题，不过需要自行确定sda5中的5改成什么数字。</p><h4 id="如果连Linux核心文件都没有，那么就得彻底重新安装"><a href="#如果连Linux核心文件都没有，那么就得彻底重新安装" class="headerlink" title="如果连Linux核心文件都没有，那么就得彻底重新安装"></a>如果连Linux核心文件都没有，那么就得彻底重新安装</h4><p>找到了grub分区的目录，却找不到<code>normal.mod</code>这个文件，所以最后直接借助U盘里的Linux系统来完成修复了。面对这种状况的时候，最坏的打算就是重新安装系统了，可惜的就是那些辛辛苦苦收集的资料了。不过谁让自己瞎折腾的呢？这一切代价都需要自己去承担。不过索性有强大的网络，让我找到了解决的措施，在此感谢那些无私奉献的Linux爱好者辛勤的付出，是他们的存在才让生活更美好！</p><h4 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h4><p><a href="http://www.2cto.com/os/201111/112327.html" target="_blank" rel="noopener">Grub Rescue修复方法</a><br><a href="http://blog.sina.com.cn/s/blog_4d6c45250100wxnq.html" target="_blank" rel="noopener">grub rescue修复方法</a><br><a href="http://www.cnblogs.com/samcn/archive/2011/03/30/1999615.html" target="_blank" rel="noopener">Ubuntu启动问题以及Grub Rescue修复方法</a><br><a href="http://blog.csdn.net/jikiwh/article/details/5497900" target="_blank" rel="noopener">Grub Rescue来修复Grub 问题</a><br><a href="http://blog.csdn.net/tody_guo/article/details/7537454" target="_blank" rel="noopener">grub rescue模式下启动并修复</a><br><a href="http://tech.ccidnet.com/art/738/20100803/2140203_1.html" target="_blank" rel="noopener">Ubuntu Grub Rescue几种修复方法</a><br><a href="http://blog.csdn.net/miromelo/article/details/6132702" target="_blank" rel="noopener">grub rescue修复</a><br><a href="http://openwares.net/linux/grub_rescue_unkown_filesystem.html" target="_blank" rel="noopener">grub rescue 模式下引导修复</a></p>]]></content>
      
      <categories>
          
          <category> BUGs </category>
          
          <category> Linux </category>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「Leetcode」386. Lexicographical Numbers</title>
      <link href="/posts/784341676.html"/>
      <url>/posts/784341676.html</url>
      <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="386-Lexicographical-Numbers"><a href="#386-Lexicographical-Numbers" class="headerlink" title="386. Lexicographical Numbers"></a>386. Lexicographical Numbers</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Given an integer <code>n</code>, return <code>1-n</code> in lexicographical order. For example, given 13, return: <code>[1,10,11,12,13,2,3,4,5,6,7,8,9]</code>. Please optimize your algorithm to use less time and space. The input size may be as large as <code>5,000,000</code>.</p></blockquote><a id="more"></a><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; lexicalOrder(<span class="keyword">int</span> n) &#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; res;</span><br><span class="line">        <span class="keyword">int</span> cur=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            res.push_back(cur);</span><br><span class="line">            <span class="keyword">if</span>(cur*<span class="number">10</span>&lt;=n)   <span class="comment">//首先判断能否直接再后面加0</span></span><br><span class="line">                cur*=<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(cur%<span class="number">10</span>!=<span class="number">9</span>&amp;&amp;(cur+<span class="number">1</span>)&lt;=n)  <span class="comment">//正常情况下+1</span></span><br><span class="line">                cur++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">while</span>((cur/<span class="number">10</span>)%<span class="number">10</span>==<span class="number">9</span>)   <span class="comment">//处理*9_的情况，例如192(n=192)的下一个应该是(1__开头结束)2开头，而不是20</span></span><br><span class="line">                &#123;</span><br><span class="line">                    cur/=<span class="number">10</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                cur=(cur/<span class="number">10</span>)+<span class="number">1</span>; <span class="comment">//这一轮个位结束，从上一位+1继续开始</span></span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Hints"><a href="#Hints" class="headerlink" title="Hints"></a>Hints</h3><blockquote><p>字典排序(数字)</p><ul><li>首先判断能否直接再后面加0即乘10</li><li>正常情况下直接+1</li><li>还有这一轮个位结束，回到上一位+1重新开始</li><li>处理* 9 *的特殊情况，这种情况下需要从上一个不是9的位置开始也就是循环除以10</li></ul></blockquote>]]></content>
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> Sort </tag>
            
            <tag> Lexicographical </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「Leetcode」807. Max Increase to Keep City Skyline</title>
      <link href="/posts/3710545512.html"/>
      <url>/posts/3710545512.html</url>
      <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="807-Max-Increase-to-Keep-City-Skyline"><a href="#807-Max-Increase-to-Keep-City-Skyline" class="headerlink" title="807. Max Increase to Keep City Skyline"></a>807. Max Increase to Keep City Skyline</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>In a 2 dimensional array grid, each value <code>grid[i][j]</code> represents the height of a building located there. We are allowed to increase the height of any number of buildings, by any amount (the amounts can be different for different buildings). Height 0 is considered to be a building as well. At the end, the “skyline” when viewed from all four directions of the grid, i.e. <code>top</code>, <code>bottom</code>, <code>left</code>, and <code>right</code>, must be the same as the skyline of the original grid. A city’s skyline is the outer contour of the rectangles formed by all the buildings when viewed from a distance. See the following example.What is the <code>maximum total sum</code> that the height of the buildings can be increased?</p></blockquote><a id="more"></a><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: grid = [[3,0,8,4],[2,4,5,7],[9,2,6,3],[0,3,1,0]]</span><br><span class="line">Output: 35</span><br></pre></td></tr></table></figure><h3 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">The grid is:</span><br><span class="line">[[3, 0, 8, 4], </span><br><span class="line"> [2, 4, 5, 7],</span><br><span class="line"> [9, 2, 6, 3],</span><br><span class="line"> [0, 3, 1, 0]]</span><br><span class="line"></span><br><span class="line">The skyline viewed from top or bottom is: [9, 4, 8, 7]</span><br><span class="line">The skyline viewed from left or right is: [8, 7, 9, 3]</span><br><span class="line"></span><br><span class="line">The grid after increasing the height of buildings without affecting skylines is:</span><br><span class="line"></span><br><span class="line">gridNew = [ [8, 4, 8, 7],</span><br><span class="line">            [7, 4, 7, 7],</span><br><span class="line">            [9, 4, 8, 7],</span><br><span class="line">            [3, 3, 3, 3] ]</span><br></pre></td></tr></table></figure><h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><ul><li><code>1 &lt; grid.length = grid[0].length &lt;= 50</code>.</li><li>All heights <code>grid[i][j]</code> are in the range <code>[0, 100]</code>.</li><li>All buildings in <code>grid[i][j]</code> occupy the entire grid cell: that is, they are a <code>1 x 1 x grid[i][j]</code> rectangular prism.</li></ul><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxIncreaseKeepingSkyline</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; grid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = grid.size();</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; col, row;   <span class="comment">//The Skyline Matrix</span></span><br><span class="line">        <span class="keyword">int</span> max;    <span class="comment">//初始化col、row数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) </span><br><span class="line">        &#123;</span><br><span class="line">            max=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) </span><br><span class="line">                <span class="keyword">if</span>(max&lt;grid[i][j])max=grid[i][j];</span><br><span class="line">            row.push_back(max);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) </span><br><span class="line">        &#123;</span><br><span class="line">            max=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) </span><br><span class="line">                <span class="keyword">if</span>(max&lt;grid[j][i])max=grid[j][i];</span><br><span class="line">            col.push_back(max);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> tmp;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                tmp=row[i]&lt;col[j]?row[i]:col[j];    <span class="comment">//girdNew</span></span><br><span class="line">                res += tmp - grid[i][j];    <span class="comment">//累加增加的值</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> Matrix </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「Leetcode」804. Unique Morse Code Words</title>
      <link href="/posts/2627122790.html"/>
      <url>/posts/2627122790.html</url>
      <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="804-Unique-Morse-Code-Words"><a href="#804-Unique-Morse-Code-Words" class="headerlink" title="804. Unique Morse Code Words"></a>804. Unique Morse Code Words</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>International Morse Code defines a standard encoding where each letter is mapped to a series of dots and dashes, as follows: <code>&quot;a&quot;</code> maps to <code>&quot;.-&quot;</code>, <code>&quot;b&quot;</code> maps to <code>&quot;-...&quot;</code>, <code>&quot;c&quot;</code> maps to <code>&quot;-.-.&quot;</code>, and so on. </p></blockquote><blockquote><p>For convenience, the full table for the 26 letters of the English alphabet is given below:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&quot;.-&quot;,&quot;-...&quot;,&quot;-.-.&quot;,&quot;-..&quot;,&quot;.&quot;,&quot;..-.&quot;,&quot;--.&quot;,&quot;....&quot;,&quot;..&quot;,&quot;.---&quot;,&quot;-.-&quot;,&quot;.-..&quot;,&quot;--&quot;,&quot;-.&quot;,&quot;---&quot;,&quot;.--.&quot;,&quot;--.-&quot;,&quot;.-.&quot;,&quot;...&quot;,&quot;-&quot;,&quot;..-&quot;,&quot;...-&quot;,&quot;.--&quot;,&quot;-..-&quot;,&quot;-.--&quot;,&quot;--..&quot;]</span><br></pre></td></tr></table></figure><blockquote><p>Now, given a list of words, each word can be written as a concatenation of the Morse code of each letter. For example, “cab” can be written as “-.-.-….-“, (which is the concatenation “-.-.” + “-…” + “.-“). We’ll call such a concatenation, the transformation of a word. Return the number of different transformations among all words we have.</p></blockquote><a id="more"></a><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Input: words = [&quot;gin&quot;, &quot;zen&quot;, &quot;gig&quot;, &quot;msg&quot;]</span><br><span class="line">Output: 2</span><br><span class="line">Explanation: </span><br><span class="line">The transformation of each word is:</span><br><span class="line">&quot;gin&quot; -&gt; &quot;--...-.&quot;</span><br><span class="line">&quot;zen&quot; -&gt; &quot;--...-.&quot;</span><br><span class="line">&quot;gig&quot; -&gt; &quot;--...--.&quot;</span><br><span class="line">&quot;msg&quot; -&gt; &quot;--...--.&quot;</span><br><span class="line"></span><br><span class="line">There are 2 different transformations, &quot;--...-.&quot; and &quot;--...--.&quot;.</span><br></pre></td></tr></table></figure><h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><ul><li>The length of words will be at most 100.</li><li>Each words[i] will have length in range [1, 12].</li><li>words[i] will only consist of lowercase letters.</li></ul><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">uniqueMorseRepresentations</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; words)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; letters=&#123;<span class="string">".-"</span>,<span class="string">"-..."</span>,<span class="string">"-.-."</span>,<span class="string">"-.."</span>,<span class="string">"."</span>,<span class="string">"..-."</span>,<span class="string">"--."</span>,<span class="string">"...."</span>,<span class="string">".."</span>,<span class="string">".---"</span>,<span class="string">"-.-"</span>,<span class="string">".-.."</span>,<span class="string">"--"</span>,<span class="string">"-."</span>,<span class="string">"---"</span>,<span class="string">".--."</span>,<span class="string">"--.-"</span>,<span class="string">".-."</span>,<span class="string">"..."</span>,<span class="string">"-"</span>,<span class="string">"..-"</span>,<span class="string">"...-"</span>,<span class="string">".--"</span>,<span class="string">"-..-"</span>,<span class="string">"-.--"</span>,<span class="string">"--.."</span>&#125;;</span><br><span class="line">        <span class="built_in">set</span>&lt;<span class="built_in">string</span>&gt; res;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">string</span> word:words)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> code;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">auto</span> w:word)</span><br><span class="line">            &#123;</span><br><span class="line">                code+=letters[w-<span class="string">'a'</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            res.insert(code);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Hints"><a href="#Hints" class="headerlink" title="Hints"></a>Hints</h3><ul><li><p>利用Set的特性：<code>元素无重复</code>，直接返回<code>set</code>的<code>size()</code>就可以得到<code>the number of different transformations among all words</code></p></li><li><p>根据ASCⅡ码的特点，<code>words</code>中的word包含的每个字母可以直接替换为<code>Morse Code</code>，再将字符串连接起来就可以得到每个<code>word</code>对应的<code>Morse Code</code></p></li></ul>]]></content>
      
      <categories>
          
          <category> LeetCode </category>
          
          <category> String </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> String </tag>
            
            <tag> Morse-Code </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「Leetcode」191. Number of 1 Bits</title>
      <link href="/posts/188551222.html"/>
      <url>/posts/188551222.html</url>
      <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="191-Number-of-1-Bits"><a href="#191-Number-of-1-Bits" class="headerlink" title="191. Number of 1 Bits"></a>191. Number of 1 Bits</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Write a function that takes an unsigned integer and returns the number of <code>1</code> bits it has (also known as the <code>Hamming weight</code>). For example, the 32-bit integer <code>11</code> has binary representation <code>00000000000000000000000000001011</code>, so the function should return 3.</p></blockquote><a id="more"></a><h4 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h4><ul><li><p>Hamming Weight</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">hammingWeight</span><span class="params">(<span class="keyword">uint32_t</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> c=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(n)</span><br><span class="line">        &#123;</span><br><span class="line">            c++;</span><br><span class="line">            n&amp;=n<span class="number">-1</span>; <span class="comment">//逐次获取最低非0 bit位</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>Bit Mask</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hammingWeight</span><span class="params">(self, n)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type n: int</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        res=<span class="number">0</span></span><br><span class="line">        mask=<span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">            <span class="keyword">if</span> n&amp;mask:  <span class="comment"># &amp;：按位与</span></span><br><span class="line">                res+=<span class="number">1</span></span><br><span class="line">            mask=mask&lt;&lt;<span class="number">1</span></span><br><span class="line">            <span class="comment"># n=n&gt;&gt;1    #n移位或者mask移位</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      <categories>
          
          <category> LeetCode </category>
          
          <category> Bit Manipulation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> Hamming-Distance </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo Note</title>
      <link href="/posts/2993135007.html"/>
      <url>/posts/2993135007.html</url>
      <content type="html"><![CDATA[<h1 id="Hexo-Note"><a href="#Hexo-Note" class="headerlink" title="Hexo Note"></a>Hexo Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>记录使用Hexo博客期间的心得。</p></blockquote><a id="more"></a><h2 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h2><h3 id="Hexo博客实现页内跳转"><a href="#Hexo博客实现页内跳转" class="headerlink" title="Hexo博客实现页内跳转"></a>Hexo博客实现页内跳转</h3><blockquote><p>如何在Hexo中写MarkDown文档，不使用绝对地址进行跳转到本博客中另外一个页面</p></blockquote><p><del><a href="/posts/1565465933.html" title="传送门在此">传送门在此</a>，代码如下：</del></p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 出现了莫名的BUG</span><br><span class="line">&#123;% post_link Settings-of-iTerm2-on-Mac 详细设置请看这篇文章 %&#125;</span><br></pre></td></tr></table></figure><p>上面的方法失效了，本博客目前使用的是<code>permalink</code>链接到唯一的文章，改了文章名也没有关系</p><p><a href="/posts/1540132352.html">具体设置方法请看这里</a></p><h3 id="Markdown写作注意事项"><a href="#Markdown写作注意事项" class="headerlink" title="Markdown写作注意事项"></a>Markdown写作注意事项</h3><ul><li><p>引用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span>引用内容<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line"></span><br><span class="line">/* 如果上下间距很小，可以像下面这样写 */</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span>引用内容<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>居中和右对齐</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/* 居中 */</span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"></span><br><span class="line">/* 右对齐 */</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"text-align:right"</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>字体大小和颜色</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"#xxxxxx"</span> <span class="attr">size</span>=<span class="string">"number"</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">/* 详细请查看 http://www.w3school.com.cn/tags/tag_font.asp */</span><br></pre></td></tr></table></figure></li><li><p>Todo list</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-check-square"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 已完成<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-square"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 未完成<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="主题自带样式-note-标签"><a href="#主题自带样式-note-标签" class="headerlink" title="主题自带样式 note 标签"></a>主题自带样式 note 标签</h3><p>在主题配置文件<code>_config.yml</code>里有一个关于这个的配置，但官方文档没有提供 HTML 的使用方式，个人认为这种方式更简单，也不会产生一些奇怪的显示 bugs……</p><div class="note default"><p>default</p></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note default&quot;&gt;&lt;p&gt;default&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><div class="note primary"><p>primary</p></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note primary&quot;&gt;&lt;p&gt;primary&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><div class="note success"><p>success</p></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note success&quot;&gt;&lt;p&gt;success&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><div class="note info"><p>info</p></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;info&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><div class="note warning"><p>warning</p></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note warning&quot;&gt;&lt;p&gt;warning&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><div class="note danger"><p>danger</p></div><div class="note danger">            <p>note danger, note danger, note danger<br>note danger, note danger, note danger<br>note danger, note danger, note danger</p>          </div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note danger&quot;&gt;&lt;p&gt;danger&lt;/p&gt;&lt;/div&gt;</span><br><span class="line">// 或者这样</span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">note danger, note danger, note danger</span><br><span class="line">note danger, note danger, note danger</span><br><span class="line">note danger, note danger, note danger</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note danger no-icon"><p>danger no-icon</p></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;note danger no-icon&quot;&gt;&lt;p&gt;danger no-icon&lt;/p&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>首先可以在主题配置文件中需要配置下，贴上我的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">文件位置：~/blog/themes/next/_config.yml# Note tag (bs-callout).</span><br><span class="line">note:</span><br><span class="line">  # 风格</span><br><span class="line">  style: flat</span><br><span class="line">  # 要不要图标</span><br><span class="line">  icons: true</span><br><span class="line">  # 圆角矩形</span><br><span class="line">  border_radius: 3</span><br><span class="line">  light_bg_offset:</span><br></pre></td></tr></table></figure><p>里面的三种风格长啥样？开启图标长啥样？可以查看<a href="https://github.com/iissnan/hexo-theme-next/pull/1697" target="_blank" rel="noopener">这个页面</a>，更多的介绍也在这个页面。</p><h3 id="主题自带样式-label-标签"><a href="#主题自带样式-label-标签" class="headerlink" title="主题自带样式 label 标签"></a>主题自带样式 label 标签</h3><p>首先可以在主题配置文件中有配置，需要配置下，贴上我的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">文件位置：~/blog/themes/next/_config.yml# Label tag.</span><br><span class="line">label: true</span><br></pre></td></tr></table></figure><p>然后效果如下（@ 前面的是<code>label</code>的名字，后面的是要显示的文字）：</p><span class="label default">default</span><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label default@default %&#125;</span><br></pre></td></tr></table></figure><span class="label primary">primary</span><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label primary@primary %&#125;</span><br></pre></td></tr></table></figure><span class="label success">success</span><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label success@success %&#125;</span><br></pre></td></tr></table></figure><span class="label info">info</span><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label info@info %&#125;</span><br></pre></td></tr></table></figure><span class="label warning">warning</span><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label warning@warning %&#125;</span><br></pre></td></tr></table></figure><span class="label danger">danger</span><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label danger@danger %&#125;</span><br></pre></td></tr></table></figure><div class="note warning">            <p>目前博主发现个 bug，如果把它加在一段文字的段首，则会有点问题，见<a href="https://github.com/iissnan/hexo-theme-next/issues/2022" target="_blank" rel="noopener">issue</a> 。</p>          </div><h2 id="BUGs"><a href="#BUGs" class="headerlink" title="BUGs"></a>BUGs</h2><ol><li><p>Hexo解析问题</p><blockquote><p>例如：文章中代码块外出现<code>}}</code>时，Hexo 解析就会出现问题</p></blockquote><p><strong>解决办法：</strong></p><ul><li><p>One </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line"> 含有双大括号的内容</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure></li><li><p>The Other</p><blockquote><p>避免这种问题</p></blockquote></li></ul></li></ol>]]></content>
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「Leetcode」461. Hamming Distance</title>
      <link href="/posts/1065998898.html"/>
      <url>/posts/1065998898.html</url>
      <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="461-Hamming-Distance"><a href="#461-Hamming-Distance" class="headerlink" title="461. Hamming Distance"></a>461. Hamming Distance</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>The Hamming distance between two integers is the number of positions at which the corresponding bits are different.Given two integers x and y, calculate the Hamming distance.</p></blockquote><a id="more"></a><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Input: x = 1, y = 4</span><br><span class="line"></span><br><span class="line">Output: 2</span><br><span class="line"></span><br><span class="line">Explanation:</span><br><span class="line">1   (0 0 0 1)</span><br><span class="line">4   (0 1 0 0)</span><br><span class="line">       ↑   ↑</span><br><span class="line"></span><br><span class="line">The above arrows point to positions where the corresponding bits are different.</span><br></pre></td></tr></table></figure><h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><blockquote><p>0 ≤ x , y &lt; 2^31</p></blockquote><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">hammingDistance</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> dist=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> tmp=x^y;</span><br><span class="line">        <span class="keyword">while</span>(tmp)</span><br><span class="line">        &#123;</span><br><span class="line">            dist++;</span><br><span class="line">            tmp&amp;=tmp<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dist;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Hints"><a href="#Hints" class="headerlink" title="Hints"></a>Hints</h3><blockquote><p>汉明距离是使用在数据传输差错控制编码里面的，汉明距离是一个概念，它表示两个（相同长度）字对应位不同的数量，我们以d（x,y）表示两个字x,y之间的汉明距离。对两个字符串进行异或运算，并统计结果为1的个数，那么这个数就是汉明距离。 </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">利用按位异或运算符^将不同bit位置为1，再逐次消除最低位非0 bit位得到Hamming Distance.</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> LeetCode </category>
          
          <category> Bit Manipulation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> Hamming-Distance </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「Leetcode」654. Maximum Binary Tree</title>
      <link href="/posts/2948637492.html"/>
      <url>/posts/2948637492.html</url>
      <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="654-Maximum-Binary-Tree"><a href="#654-Maximum-Binary-Tree" class="headerlink" title="654. Maximum Binary Tree"></a>654. Maximum Binary Tree</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><blockquote><p>Given an integer array with no duplicates. A maximum tree building on this array is defined as follow: The root is the maximum number in the array. The left subtree is the maximum tree constructed from left part subarray divided by the maximum number. The right subtree is the maximum tree constructed from right part subarray divided by the maximum number. Construct the maximum tree by the given array and output the root node of this tree.</p></blockquote><a id="more"></a><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Input: [3,2,1,6,0,5]</span><br><span class="line">Output: return the tree root node representing the following tree:</span><br><span class="line"></span><br><span class="line">      6</span><br><span class="line">    /   \</span><br><span class="line">   3     5</span><br><span class="line">    \   / </span><br><span class="line">     2 0   </span><br><span class="line">      \</span><br><span class="line">       1</span><br></pre></td></tr></table></figure><h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><ul><li>The size of the given array will be in the range [1,1000].</li></ul><h3 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h3><h4 id="C-from-Discuss-C-O-N-solution"><a href="#C-from-Discuss-C-O-N-solution" class="headerlink" title="C++ from Discuss : C++ O(N) solution"></a>C++ from Discuss : <a href="https://leetcode.com/problems/maximum-binary-tree/discuss/106146/" target="_blank" rel="noopener">C++ O(N) solution</a></h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * struct TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode *left;</span></span><br><span class="line"><span class="comment"> *     TreeNode *right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">constructMaximumBinaryTree</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;TreeNode*&gt; mbt;  <span class="comment">//堆栈存储数组</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.size();i++)  <span class="comment">//从左到右扫描数组</span></span><br><span class="line">        &#123;</span><br><span class="line">            TreeNode* cur=<span class="keyword">new</span> TreeNode(nums[i]);    <span class="comment">//当前数初始化树节点</span></span><br><span class="line">            <span class="keyword">while</span>(!mbt.empty()&amp;&amp;mbt.back()-&gt;val&lt;nums[i])</span><br><span class="line">            &#123;   <span class="comment">/*当堆栈不空且新数比堆栈中最后的数字小时，</span></span><br><span class="line"><span class="comment">                当前节点作为父节点，先前的作为左子树</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                cur-&gt;left=mbt.back();</span><br><span class="line">                mbt.pop_back();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!mbt.empty())    <span class="comment">//正常情况新节点直接作为右子树</span></span><br><span class="line">                mbt.back()-&gt;right=cur;</span><br><span class="line">            mbt.push_back(cur);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mbt.front(); <span class="comment">//返回头节点</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="Hints"><a href="#Hints" class="headerlink" title="Hints"></a>Hints</h4><ul><li>从左向右直接扫描数组</li><li>遇到比上一节点的val值小的直接作为右子树的头节点</li><li>所以比较适合使用堆栈来存储数组</li><li>当遇到比堆栈back()大的，作为其父节点</li><li>过几天再重新写试试看能不能写出来</li><li>就这样</li></ul><h4 id="Python-递归"><a href="#Python-递归" class="headerlink" title="Python 递归"></a>Python 递归</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">constructMaximumBinaryTree</span><span class="params">(self, nums)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :rtype: TreeNode</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> nums:</span><br><span class="line">            pos=nums.index(max(nums))</span><br><span class="line">            root=TreeNode(nums[pos])</span><br><span class="line">            root.left=self.constructMaximumBinaryTree(nums[:pos])</span><br><span class="line">            root.right=self.constructMaximumBinaryTree(nums[pos+<span class="number">1</span>:])</span><br><span class="line">            <span class="keyword">return</span> root</span><br></pre></td></tr></table></figure><h4 id="Hints-1"><a href="#Hints-1" class="headerlink" title="Hints"></a>Hints</h4><ul><li>先找到最大的数赋值给root节点</li><li>接着递归将左边数组返回左子树的头节点</li><li>相同地对右子树进行操作</li></ul>]]></content>
      
      <categories>
          
          <category> LeetCode </category>
          
          <category> Tree </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> Tree </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Blog with Hexo</title>
      <link href="/posts/3307335557.html"/>
      <url>/posts/3307335557.html</url>
      <content type="html"><![CDATA[<h1 id="Blog-with-Hexo"><a href="#Blog-with-Hexo" class="headerlink" title="Blog with Hexo"></a>Blog with Hexo</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>Tutorial for build your blog with Hexo.</p></blockquote><a id="more"></a><h2 id="Github-pages"><a href="#Github-pages" class="headerlink" title="Github pages"></a>Github pages</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>要使用Hexo， 需要系统支持Node.js以及Git</p><ul><li>Node.js </li></ul><p>官网下载相应程序安装，最好是最新版<br><a href="https://nodejs.org/en/" target="_blank" rel="noopener">下载</a></p><ul><li>Git</li></ul><p>也是官网下载安装<a href="https://git-scm.com/" target="_blank" rel="noopener">下载</a></p><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> */hexo    <span class="comment"># 进入hexo博客文件夹下</span></span><br><span class="line">$ npm install hexo --save</span><br><span class="line">$ npm install hexo-cli -g<span class="comment"># 安装hexo</span></span><br><span class="line">$ hexo init blog</span><br><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ npm install   <span class="comment"># 安装依赖组件</span></span><br><span class="line">$ hexo g    <span class="comment"># hexo generate</span></span><br><span class="line">$ hexo s    <span class="comment"># hexo server 本地查看</span></span><br></pre></td></tr></table></figure><ul><li><p>其他命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new post <span class="string">"post-name"</span> <span class="comment"># 默认为post</span></span><br><span class="line">$ hexo new page <span class="string">"page-name"</span> <span class="comment"># 新建页面</span></span><br></pre></td></tr></table></figure></li><li><p>简写</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g == hexo generate</span><br><span class="line">$ hexo s == hexo server</span><br><span class="line">$ hexo n == hexo new</span><br><span class="line">$ hexo d == hexo deploy</span><br></pre></td></tr></table></figure></li><li><p>本地环境查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure></li><li><p>我的本地环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">hexo: 3.6.0</span><br><span class="line">hexo-cli: 1.1.0</span><br><span class="line">os: Windows_NT 10.0.16299 win32 x64</span><br><span class="line">http_parser: 2.7.0</span><br><span class="line">node: 9.8.0</span><br><span class="line">v8: 6.2.414.46-node.21</span><br><span class="line">uv: 1.19.2</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">ares: 1.13.0</span><br><span class="line">modules: 59</span><br><span class="line">nghttp2: 1.29.0</span><br><span class="line">napi: 2</span><br><span class="line">openssl: 1.0.2n</span><br><span class="line">icu: 60.2</span><br><span class="line">unicode: 10.0</span><br><span class="line">cldr: 32.0.1</span><br><span class="line">tz: 2017c</span><br></pre></td></tr></table></figure></li></ul><h4 id="Hexo-主题"><a href="#Hexo-主题" class="headerlink" title="Hexo 主题"></a>Hexo 主题</h4><ul><li><p>安装主题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next.git themes/next</span><br><span class="line"><span class="comment"># 这种方案下，会出现仓库上传到Git后，本文件夹会变成@，不会显示具体内容的情况</span></span><br></pre></td></tr></table></figure></li><li><p>更新主题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes/next</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure></li><li><p>启用主题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure></li></ul><h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><p>GitHub Pages 主要用于管理自己的网站，不过，由于空间免费稳定，比较适合用来做搭建一个个人博客。</p><ul><li><p>创建自己的Github账号</p></li><li><p>创建repository<br>创建一个公共仓库用来存放网站静态内容，不过仓库名字必须是username/username.github.io，这是Github特殊的命名约定，你可以通过 <a href="https://username.github.io" target="_blank" rel="noopener">https://username.github.io</a> 来访问自己的博客。</p></li></ul><h4 id="使用Hexo-deploy部署"><a href="#使用Hexo-deploy部署" class="headerlink" title="使用Hexo deploy部署"></a>使用Hexo deploy部署</h4><ul><li>部署到Github<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">github:</span> <span class="string">git@github.com:username/username.github.io.git,master</span></span><br></pre></td></tr></table></figure></li></ul><p>注意空格</p><ul><li><p>安装扩展</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d    <span class="comment"># hexo deploy</span></span><br></pre></td></tr></table></figure></li><li><p>Github Repository</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/username/username.github.io.git .deploy/username.github.io</span><br></pre></td></tr></table></figure><p>将之前创建的空repo clone到本地，每次hexo d生成的public文件夹下内容复制到刚刚的文件夹下，再push到master brunch下，就可以更新github端的内容，为此我们创建一个sh脚本文件<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">cp -R public/* .deploy/JacksonLeon</span><br><span class="line"><span class="built_in">cd</span> .deploy/JacksonLeon</span><br><span class="line">git fetch origin</span><br><span class="line">git add .</span><br><span class="line">DATE=<span class="string">"<span class="variable">$(echo $(date --rfc-2822)</span>)"</span></span><br><span class="line">git commit -m <span class="string">"Auto builder by JacksonLeon CI: <span class="variable">$DATE</span>"</span></span><br><span class="line">git merge origin/master</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure></p><p>每次添加完文章后直接运行脚本就可以了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> */hexo/blog</span><br><span class="line">$ ./deploy.sh</span><br></pre></td></tr></table></figure></p><h2 id="Coding-pages"><a href="#Coding-pages" class="headerlink" title="Coding pages"></a>Coding pages</h2><p>由于国内访问Github速度比较慢，所以我们还可以使用 coding.net 的pages服务，大部分与Github pages设置相同，要注意的是，仓库名必须为用户名，不然会出现css解析错误以及404的现象。</p><ul><li><p>_config.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> </span><br><span class="line"><span class="attr">    github:</span> <span class="string">git@github.com:username/username.github.io.git,master</span></span><br><span class="line"><span class="attr">    coding:</span> <span class="string">git@git.coding.net:username/username.git,master</span></span><br></pre></td></tr></table></figure></li><li><p>.deploy.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">cp -R public/* .deploy/JacksonLeon</span><br><span class="line"><span class="built_in">cd</span> .deploy/JacksonLeon</span><br><span class="line">git fetch origin</span><br><span class="line">git add .</span><br><span class="line">DATE=<span class="string">"<span class="variable">$(echo $(date --rfc-2822)</span>)"</span></span><br><span class="line">git commit -m <span class="string">"Auto builder by JacksonLeon CI: <span class="variable">$DATE</span>"</span></span><br><span class="line">git merge origin/master</span><br><span class="line">git push origin master</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">cp -R public/* .deploy/JacksonLeon.github.io</span><br><span class="line"><span class="built_in">cd</span> .deploy/JacksonLeon.github.io</span><br><span class="line">git fetch origin</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"Auto builder by JacksonLeon CI: <span class="variable">$DATE</span>"</span></span><br><span class="line">git merge origin/master</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure></li></ul><h2 id="欢迎大家访问"><a href="#欢迎大家访问" class="headerlink" title="欢迎大家访问"></a>欢迎大家访问</h2><ul><li><p><a href="https://jacksonleon.github.io/" target="_blank" rel="noopener">Blog on Github Pages</a></p></li><li><p><a href="https://jacksonleon.coding.me/JacksonLeon/" target="_blank" rel="noopener">Blog on Coding Pages</a></p></li></ul>]]></content>
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「Leetcode」771. Jewels and Stones</title>
      <link href="/posts/4173599199.html"/>
      <url>/posts/4173599199.html</url>
      <content type="html"><![CDATA[<h1 id="LeetCode-Note"><a href="#LeetCode-Note" class="headerlink" title="LeetCode Note"></a>LeetCode Note</h1><p>Sorted by Acceptance</p><p>Author: JosephLau</p><hr><h2 id="771-Jewels-and-Stones"><a href="#771-Jewels-and-Stones" class="headerlink" title="771. Jewels and Stones"></a>771. Jewels and Stones</h2><h3 id="Desciption"><a href="#Desciption" class="headerlink" title="Desciption"></a>Desciption</h3><blockquote><p>You’re given strings J representing the types of stones that are jewels, and S representing the stones you have.  Each character in S is a type of stone you have.  You want to know how many of the stones you have are also jewels. The letters in J are guaranteed distinct, and all characters in J and S are letters. Letters are case sensitive, so “a” is considered a different type of stone from “A”.</p></blockquote><a id="more"></a><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><ul><li><p>Example 1</p><figure class="highlight m"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: J <span class="built_in">=</span> <span class="string">"aA"</span>, S <span class="built_in">=</span> <span class="string">"aAAbbbb"</span></span><br><span class="line">Output: <span class="number">3</span></span><br></pre></td></tr></table></figure></li><li><p>Example 2</p><figure class="highlight m"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: J <span class="built_in">=</span> <span class="string">"z"</span>, S <span class="built_in">=</span> <span class="string">"ZZ"</span></span><br><span class="line">Output: <span class="number">0</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><ul><li>S and J  wil consist of letters and have length at most 500</li><li>The charactors in J are distinct</li></ul><h3 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h3><h4 id="first-try"><a href="#first-try" class="headerlink" title="first try"></a>first try</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">numJewelsInStones</span><span class="params">(<span class="built_in">string</span> J, <span class="built_in">string</span> S)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> c=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;J.size();i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;S.size();j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(J[i]==S[j])</span><br><span class="line">                &#123;</span><br><span class="line">                    c++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="Solutions-in-Discuss"><a href="#Solutions-in-Discuss" class="headerlink" title="Solutions in Discuss"></a>Solutions in Discuss</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">numJewelsInStones</span><span class="params">(<span class="built_in">string</span> J, <span class="built_in">string</span> S)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> c=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">set</span>&lt;<span class="keyword">char</span>&gt; setj(J.begin(),J.end());</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> s:S)<span class="keyword">if</span>(setj.count(s))c++;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>Java Solution</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">numJewelsInStones</span><span class="params">(String J, String S)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> c=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;S.length();i++)</span><br><span class="line">            <span class="keyword">if</span>(J.indexOf(S.charAt(i))&gt;-<span class="number">1</span>)</span><br><span class="line">                c++;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> LeetCode </category>
          
          <category> Hash Table </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> String </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>MarkDown 语法</title>
      <link href="/posts/4269544267.html"/>
      <url>/posts/4269544267.html</url>
      <content type="html"><![CDATA[<p><strong>NOTE:</strong> This is Simplelified Chinese Edition Document of Markdown Syntax. If you are seeking for English Edition Document. Please refer to <a href="http://daringfireball.net/projects/markdown/syntax" target="_blank" rel="noopener">Markdown: Syntax</a>.</p><p><strong>声明：</strong> 这份文档派生(fork)于<a href="http://markdown.tw/" target="_blank" rel="noopener">繁体中文版</a>，在此基础上进行了繁体转简体工作，并进行了适当的润色。此文档用 Markdown 语法编写，你可以到这里<a href="http://gitcafe.com/riku/Markdown-Syntax-CN/blob/master/syntax.md" target="_blank" rel="noopener">查看它的源文件</a>。「繁体中文版的原始文件可以<a href="https://github.com/othree/markdown-syntax-zhtw/blob/master/syntax.md" target="_blank" rel="noopener">查看这里</a> 。」–By @<a href="http://twitter.com/riku" target="_blank" rel="noopener">riku</a> / 本项目托管于 <a href="http://gitcafe.com/riku/Markdown-Syntax-CN" target="_blank" rel="noopener">GitCafe</a></p><p><strong>注：</strong> 本项目同时也托管于 <a href="https://github.com/riku/Markdown-Syntax-CN" target="_blank" rel="noopener">Github</a> 上，请通过 fork＋pull request 方式来帮忙改进本项目。</p><h1 id="Markdown-语法说明-简体中文版"><a href="#Markdown-语法说明-简体中文版" class="headerlink" title="Markdown 语法说明 (简体中文版)"></a>Markdown 语法说明 (简体中文版)</h1><hr><a id="more"></a><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="宗旨"><a href="#宗旨" class="headerlink" title="宗旨"></a>宗旨</h3><p>Markdown 的目标是实现「易读易写」。</p><p>可读性，无论如何，都是最重要的。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括 <a href="http://docutils.sourceforge.net/mirror/setext.html" target="_blank" rel="noopener">Setext</a>、<a href="http://www.aaronsw.com/2002/atx/" target="_blank" rel="noopener">atx</a>、<a href="http://textism.com/tools/textile/" target="_blank" rel="noopener">Textile</a>、<a href="http://docutils.sourceforge.net/rst.html" target="_blank" rel="noopener">reStructuredText</a>、<a href="http://www.triptico.com/software/grutatxt.html" target="_blank" rel="noopener">Grutatext</a> 和 <a href="http://ettext.taint.org/doc/" target="_blank" rel="noopener">EtText</a>，而最大灵感来源其实是纯文本电子邮件的格式。</p><p>总之， Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像<em> 强调 </em>。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。</p><h3 id="兼容-HTML"><a href="#兼容-HTML" class="headerlink" title="兼容 HTML"></a>兼容 HTML</h3><p>Markdown 语法的目标是：成为一种适用于网络的_书写_语言。</p><p>Markdown 不是想要取代 HTML，甚至也没有要和它相近，它的语法种类很少，只对应 HTML 标记的一小部分。Markdown 的构想_不是<em>要使得 HTML 文档更容易书写。在我看来， HTML 已经很容易写了。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种</em>发布<em>的格式，Markdown 是一种</em>书写_的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。</p><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。</p><p>要制约的只有一些 HTML 区块元素――比如 <code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>、<code>&lt;p&gt;</code> 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符或空格来缩进。Markdown 的生成器有足够智能，不会在 HTML 区块标签外加上不必要的 <code>&lt;p&gt;</code> 标签。</p><p>例子如下，在 Markdown 文件里加上一段 HTML 表格：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">这是一个普通段落。</span><br><span class="line"></span><br><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;Foo&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line"></span><br><span class="line">这是另一个普通段落。</span><br></pre></td></tr></table></figure><p>请注意，在 HTML 区块标签间的 Markdown 格式语法将不会被处理。比如，你在 HTML 区块内使用 Markdown 样式的<code>*强调*</code>会没有效果。</p><p>HTML 的区段（行内）标签如 <code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code> 可以在 Markdown 的段落、列表或是标题里随意使用。依照个人习惯，甚至可以不用 Markdown 格式，而直接采用 HTML 标签来格式化。举例说明：如果比较喜欢 HTML 的 <code>&lt;a&gt;</code> 或 <code>&lt;img&gt;</code> 标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图像标签语法。</p><p>和处在 HTML 区块标签间不同，Markdown 语法在 HTML 区段标签间是有效的。</p><h3 id="特殊字符自动转换"><a href="#特殊字符自动转换" class="headerlink" title="特殊字符自动转换"></a>特殊字符自动转换</h3><p>在 HTML 文件中，有两个字符需要特殊处理： <code>&lt;</code> 和 <code>&amp;</code> 。 <code>&lt;</code> 符号用于起始标签，<code>&amp;</code> 符号则用于标记 HTML 实体，如果你只是想要显示这些字符的原型，你必须要使用实体的形式，像是 <code>&amp;lt;</code> 和 <code>&amp;amp;</code>。</p><p><code>&amp;</code> 字符尤其让网络文档编写者受折磨，如果你要打「<code>AT&amp;T</code>」 ，你必须要写成「<code>AT&amp;amp;T</code>」。而网址中的 <code>&amp;</code> 字符也要转换。比如你要链接到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://images.google.com/images?num=30&amp;q=larry+bird</span><br></pre></td></tr></table></figure><p>你必须要把网址转换写为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://images.google.com/images?num=30&amp;amp;q=larry+bird</span><br></pre></td></tr></table></figure><p>才能放到链接标签的 <code>href</code> 属性里。不用说也知道这很容易忽略，这也可能是 HTML 标准检验所检查到的错误中，数量最多的。</p><p>Markdown 让你可以自然地书写字符，需要转换的由它来处理好了。如果你使用的 <code>&amp;</code> 字符是 HTML 字符实体的一部分，它会保留原状，否则它会被转换成 <code>&amp;amp</code>;。</p><p>所以你如果要在文档中插入一个版权符号 <code>©</code>，你可以这样写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;copy;</span><br></pre></td></tr></table></figure><p>Markdown 会保留它不动。而若你写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AT&amp;T</span><br></pre></td></tr></table></figure><p>Markdown 就会将它转为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AT&amp;amp;T</span><br></pre></td></tr></table></figure><p>类似的状况也会发生在 <code>&lt;</code> 符号上，因为 Markdown 允许 <a href="#html">兼容 HTML</a> ，如果你是把 <code>&lt;</code> 符号作为 HTML 标签的定界符使用，那 Markdown 也不会对它做任何转换，但是如果你写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 &lt; 5</span><br></pre></td></tr></table></figure><p>Markdown 将会把它转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 &amp;lt; 5</span><br></pre></td></tr></table></figure><p>不过需要注意的是，code 范围内，不论是行内还是区块， <code>&lt;</code> 和 <code>&amp;</code> 两个符号都_一定_会被转换成 HTML 实体，这项特性让你可以很容易地用 Markdown 写 HTML code （和 HTML 相对而言， HTML 语法中，你要把所有的 <code>&lt;</code> 和 <code>&amp;</code> 都转换为 HTML 实体，才能在 HTML 文件里面写出 HTML code。）</p><hr><h2 id="区块元素"><a href="#区块元素" class="headerlink" title="区块元素"></a>区块元素</h2><h3 id="段落和换行"><a href="#段落和换行" class="headerlink" title="段落和换行"></a>段落和换行</h3><p>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。</p><p>「由一个或多个连续的文本行组成」这句话其实暗示了 Markdown 允许段落内的强迫换行（插入换行符），这个特性和其他大部分的 text-to-HTML 格式不一样（包括 Movable Type 的「Convert Line Breaks」选项），其它的格式会把每个换行符都转成 <code>&lt;br /&gt;</code> 标签。</p><p>如果你_确实_想要依赖 Markdown 来插入 <code>&lt;br /&gt;</code> 标签的话，在插入处先按入两个以上的空格然后回车。</p><p>的确，需要多费点事（多加空格）来产生 <code>&lt;br /&gt;</code> ，但是简单地「每个换行都转换为 <code>&lt;br /&gt;</code>」的方法在 Markdown 中并不适合， Markdown 中 email 式的 <a href="#blockquote">区块引用</a> 和多段落的 <a href="#list">列表</a> 在使用换行来排版的时候，不但更好用，还更方便阅读。</p><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>Markdown 支持两种标题的语法，类 <a href="http://docutils.sourceforge.net/mirror/setext.html" target="_blank" rel="noopener">Setext</a> 和类 <a href="http://www.aaronsw.com/2002/atx/" target="_blank" rel="noopener">atx</a> 形式。</p><p>类 Setext 形式是用底线的形式，利用 <code>=</code> （最高阶标题）和 <code>-</code> （第二阶标题），例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is an H1</span><br><span class="line">=============</span><br><span class="line"></span><br><span class="line">This is an H2</span><br><span class="line">-------------</span><br></pre></td></tr></table></figure><p>任何数量的 <code>=</code> 和 <code>-</code> 都可以有效果。</p><p>类 Atx 形式则是在行首插入 1 到 6 个 <code>#</code> ，对应到标题 1 到 6 阶，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 这是 H1</span><br><span class="line"></span><br><span class="line">## 这是 H2</span><br><span class="line"></span><br><span class="line">###### 这是 H6</span><br></pre></td></tr></table></figure><p>你可以选择性地「闭合」类 atx 样式的标题，这纯粹只是美观用的，若是觉得这样看起来比较舒适，你就可以在行尾加上 <code>#</code>，而行尾的 <code>#</code> 数量也不用和开头一样（行首的井字符数量决定标题的阶数）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 这是 H1 #</span><br><span class="line"></span><br><span class="line">## 这是 H2 ##</span><br><span class="line"></span><br><span class="line">### 这是 H3 ######</span><br></pre></td></tr></table></figure><h3 id="区块引用-Blockquotes"><a href="#区块引用-Blockquotes" class="headerlink" title="区块引用 Blockquotes"></a>区块引用 Blockquotes</h3><p>Markdown 标记区块引用是使用类似 email 中用 <code>&gt;</code> 的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 <code>&gt;</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,</span><br><span class="line">&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span><br><span class="line">&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">&gt; </span><br><span class="line">&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse</span><br><span class="line">&gt; id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>Markdown 也允许你偷懒只在整个段落的第一行最前面加上 <code>&gt;</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,</span><br><span class="line">consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span><br><span class="line">Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line"></span><br><span class="line">&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse</span><br><span class="line">id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 <code>&gt;</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is the first level of quoting.</span><br><span class="line">&gt;</span><br><span class="line">&gt; &gt; This is nested blockquote.</span><br><span class="line">&gt;</span><br><span class="line">&gt; Back to the first level.</span><br></pre></td></tr></table></figure><p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; ## 这是一个标题。</span><br><span class="line">&gt; </span><br><span class="line">&gt; 1\.   这是第一行列表项。</span><br><span class="line">&gt; 2\.   这是第二行列表项。</span><br><span class="line">&gt; </span><br><span class="line">&gt; 给出一些例子代码：</span><br><span class="line">&gt; </span><br><span class="line">&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);</span><br></pre></td></tr></table></figure><p>任何像样的文本编辑器都能轻松地建立 email 型的引用。例如在 BBEdit 中，你可以选取文字后然后从选单中选择<em>增加引用阶层</em>。</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>Markdown 支持有序列表和无序列表。</p><p>无序列表使用星号、加号或是减号作为列表标记：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*   Red</span><br><span class="line">*   Green</span><br><span class="line">*   Blue</span><br></pre></td></tr></table></figure><p>等同于：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+   Red</span><br><span class="line">+   Green</span><br><span class="line">+   Blue</span><br></pre></td></tr></table></figure><p>也等同于：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-   Red</span><br><span class="line">-   Green</span><br><span class="line">-   Blue</span><br></pre></td></tr></table></figure><p>有序列表则使用数字接着一个英文句点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1\.  Bird</span><br><span class="line">2\.  McHale</span><br><span class="line">3\.  Parish</span><br></pre></td></tr></table></figure><p>很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果，上面的列表所产生的 HTML 标记为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;ol&gt;</span><br><span class="line">&lt;li&gt;Bird&lt;/li&gt;</span><br><span class="line">&lt;li&gt;McHale&lt;/li&gt;</span><br><span class="line">&lt;li&gt;Parish&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br></pre></td></tr></table></figure><p>如果你的列表标记写成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1\.  Bird</span><br><span class="line">1\.  McHale</span><br><span class="line">1\.  Parish</span><br></pre></td></tr></table></figure><p>或甚至是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3\. Bird</span><br><span class="line">1\. McHale</span><br><span class="line">8\. Parish</span><br></pre></td></tr></table></figure><p>你都会得到完全相同的 HTML 输出。重点在于，你可以让 Markdown 文件的列表数字和输出的结果相同，或是你懒一点，你可以完全不用在意数字的正确性。</p><p>如果你使用懒惰的写法，建议第一个项目最好还是从 1. 开始，因为 Markdown 未来可能会支持有序列表的 start 属性。</p><p>列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。</p><p>要让列表看起来更漂亮，你可以把内容用固定的缩进整理好：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</span><br><span class="line">    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,</span><br><span class="line">    viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.</span><br><span class="line">    Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>但是如果你懒，那也行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</span><br><span class="line">Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,</span><br><span class="line">viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.</span><br><span class="line">Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>如果列表项目间用空行分开，在输出 HTML 时 Markdown 就会将项目内容用 <code>&lt;p&gt;</code> 标签包起来，举例来说：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*   Bird</span><br><span class="line">*   Magic</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;Bird&lt;/li&gt;</span><br><span class="line">&lt;li&gt;Magic&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>但是这个：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*   Bird</span><br><span class="line"></span><br><span class="line">*   Magic</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1\.  This is a list item with two paragraphs. Lorem ipsum dolor</span><br><span class="line">    sit amet, consectetuer adipiscing elit. Aliquam hendrerit</span><br><span class="line">    mi posuere lectus.</span><br><span class="line"></span><br><span class="line">    Vestibulum enim wisi, viverra nec, fringilla in, laoreet</span><br><span class="line">    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum</span><br><span class="line">    sit amet velit.</span><br><span class="line"></span><br><span class="line">2\.  Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*   This is a list item with two paragraphs.</span><br><span class="line"></span><br><span class="line">    This is the second paragraph in the list item. You&apos;re</span><br><span class="line">only required to indent the first line. Lorem ipsum dolor</span><br><span class="line">sit amet, consectetuer adipiscing elit.</span><br><span class="line"></span><br><span class="line">*   Another item in the same list.</span><br></pre></td></tr></table></figure><p>如果要在列表项目内放进引用，那 <code>&gt;</code> 就需要缩进：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*   A list item with a blockquote:</span><br><span class="line"></span><br><span class="line">    &gt; This is a blockquote</span><br><span class="line">    &gt; inside a list item.</span><br></pre></td></tr></table></figure><p>如果要放代码区块的话，该区块就需要缩进_两次_，也就是 8 个空格或是 2 个制表符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*   一列表项包含一个列表区块：</span><br><span class="line"></span><br><span class="line">        &lt;代码写在这&gt;</span><br></pre></td></tr></table></figure><p>当然，项目列表很可能会不小心产生，像是下面这样的写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1986\. What a great season.</span><br></pre></td></tr></table></figure><p>换句话说，也就是在行首出现<em>数字-句点-空白</em>，要避免这样的状况，你可以在句点前面加上反斜杠。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1986\. What a great season.</span><br></pre></td></tr></table></figure><h3 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h3><p>和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown 会用 <code>&lt;pre&gt;</code> 和 <code>&lt;code&gt;</code> 标签来把代码区块包起来。</p><p>要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，例如，下面的输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是一个普通段落：</span><br><span class="line"></span><br><span class="line">    这是一个代码区块。</span><br></pre></td></tr></table></figure><p>Markdown 会转换成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;这是一个普通段落：&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;pre&gt;&lt;code&gt;这是一个代码区块。</span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>这个每行一阶的缩进（4 个空格或是 1 个制表符），都会被移除，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Here is an example of AppleScript:</span><br><span class="line"></span><br><span class="line">    tell application &quot;Foo&quot;</span><br><span class="line">        beep</span><br><span class="line">    end tell</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;pre&gt;&lt;code&gt;tell application &quot;Foo&quot;</span><br><span class="line">    beep</span><br><span class="line">end tell</span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</p><p>在代码区块里面， <code>&amp;</code> 、 <code>&lt;</code> 和 <code>&gt;</code> 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，再加上缩进就可以了，剩下的 Markdown 都会帮你处理，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;footer&quot;&gt;</span><br><span class="line">    &amp;copy; 2004 Foo Corporation</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;footer&quot;&amp;gt;</span><br><span class="line">    &amp;amp;copy; 2004 Foo Corporation</span><br><span class="line">&amp;lt;/div&amp;gt;</span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>代码区块中，一般的 Markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 Markdown 语法撰写 Markdown 语法相关的文件。</p><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">* * *</span><br><span class="line"></span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">*****</span><br><span class="line"></span><br><span class="line">- - -</span><br><span class="line"></span><br><span class="line">---------------------------------------</span><br></pre></td></tr></table></figure><hr><h2 id="区段元素"><a href="#区段元素" class="headerlink" title="区段元素"></a>区段元素</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>Markdown 支持两种形式的链接语法： <em>行内式</em>和<em>参考式</em>两种形式。</p><p>不管是哪一种，链接文字都是用 [方括号] 来标记。</p><p>要建立一个<em>行内式</em>的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">This is [an example](http://example.com/ &quot;Title&quot;) inline link.</span><br><span class="line"></span><br><span class="line">[This link](http://example.net/) has no title attribute.</span><br></pre></td></tr></table></figure><p>会产生：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;</span><br><span class="line">an example&lt;/a&gt; inline link.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no</span><br><span class="line">title attribute.&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>如果你是要链接到同样主机的资源，你可以使用相对路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">See my [About](/about/) page for details.</span><br></pre></td></tr></table></figure><p><em>参考式</em>的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is [an example][id] reference-style link.</span><br></pre></td></tr></table></figure><p>你也可以选择性地在两个方括号中间加上一个空格：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is [an example] [id] reference-style link.</span><br></pre></td></tr></table></figure><p>接着，在文件的任意处，你可以把这个标记的链接内容定义出来：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[id]: http://example.com/  &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>链接内容定义的形式为：</p><ul><li>方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字</li><li>接着一个冒号</li><li>接着一个以上的空格或制表符</li><li>接着链接的网址</li><li>选择性地接着 title 内容，可以用单引号、双引号或是括弧包着</li></ul><p>下面这三种链接的定义都是相同：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[foo]: http://example.com/  &quot;Optional Title Here&quot;</span><br><span class="line">[foo]: http://example.com/  &apos;Optional Title Here&apos;</span><br><span class="line">[foo]: http://example.com/  (Optional Title Here)</span><br></pre></td></tr></table></figure><p><strong>请注意：</strong> 有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。</p><p>链接网址也可以用方括号包起来：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[id]: http://example.com/longish/path/to/resource/here</span><br><span class="line">    &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。</p><p>链接辨别标签可以有字母、数字、空白和标点符号，但是并_不_区分大小写，因此下面两个链接是一样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[link text][a]</span><br><span class="line">[link text][A]</span><br></pre></td></tr></table></figure><p><em>隐式链接标记</em>功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 “Google” 链接到 google.com，你可以简化成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Google][]</span><br></pre></td></tr></table></figure><p>然后定义链接内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Google]: http://google.com/</span><br></pre></td></tr></table></figure><p>由于链接文字可能包含空白，所以这种简化型的标记内也许包含多个单词：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Visit [Daring Fireball][] for more information.</span><br></pre></td></tr></table></figure><p>然后接着定义链接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Daring Fireball]: http://daringfireball.net/</span><br></pre></td></tr></table></figure><p>链接的定义可以放在文件中的任何一个地方，我比较偏好直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。</p><p>下面是一个参考式链接的范例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google] [1] than from</span><br><span class="line">[Yahoo] [2] or [MSN] [3].</span><br><span class="line"></span><br><span class="line">  [1]: http://google.com/        &quot;Google&quot;</span><br><span class="line">  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;</span><br><span class="line">  [3]: http://search.msn.com/    &quot;MSN Search&quot;</span><br></pre></td></tr></table></figure><p>如果改成用链接名称的方式写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google][] than from</span><br><span class="line">[Yahoo][] or [MSN][].</span><br><span class="line"></span><br><span class="line">  [google]: http://google.com/        &quot;Google&quot;</span><br><span class="line">  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;</span><br><span class="line">  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;</span><br></pre></td></tr></table></figure><p>上面两种写法都会产生下面的 HTML。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot;</span><br><span class="line">title=&quot;Google&quot;&gt;Google&lt;/a&gt; than from</span><br><span class="line">&lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt;</span><br><span class="line">or &lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>下面是用行内式写的同样一段内容的 Markdown 文件，提供作为比较之用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)</span><br><span class="line">than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or</span><br><span class="line">[MSN](http://search.msn.com/ &quot;MSN Search&quot;).</span><br></pre></td></tr></table></figure><p>参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的却会增加到 176 个字元，如果是用纯 HTML 格式来写，会有 234 个字元，在 HTML 格式中，标签比文本还要多。</p><p>使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断。</p><h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><p>Markdown 使用星号（<code>*</code>）和底线（<code>_</code>）作为标记强调字词的符号，被 <code>*</code> 或 <code>_</code> 包围的字词会被转成用 <code>&lt;em&gt;</code> 标签包围，用两个 <code>*</code> 或 <code>_</code> 包起来的话，则会被转成 <code>&lt;strong&gt;</code>，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*single asterisks*</span><br><span class="line"></span><br><span class="line">_single underscores_</span><br><span class="line"></span><br><span class="line">**double asterisks**</span><br><span class="line"></span><br><span class="line">__double underscores__</span><br></pre></td></tr></table></figure><p>会转成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;em&gt;single asterisks&lt;/em&gt;</span><br><span class="line"></span><br><span class="line">&lt;em&gt;single underscores&lt;/em&gt;</span><br><span class="line"></span><br><span class="line">&lt;strong&gt;double asterisks&lt;/strong&gt;</span><br><span class="line"></span><br><span class="line">&lt;strong&gt;double underscores&lt;/strong&gt;</span><br></pre></td></tr></table></figure><p>你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。</p><p>强调也可以直接插在文字中间：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">un*frigging*believable</span><br></pre></td></tr></table></figure><p>但是<strong>如果你的 <code>*</code> 和 <code>_</code> 两边都有空白的话，它们就只会被当成普通的符号</strong>。</p><p>如果要在文字前后直接插入普通的星号或底线，你可以用反斜线：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\*this text is surrounded by literal asterisks\*</span><br></pre></td></tr></table></figure><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>如果要标记一小段行内代码，你可以用反引号把它包起来（<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>Use the <code>printf()</code> function.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">会产生：</span><br></pre></td></tr></table></figure><p>Use the <code>printf()</code> function.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段：</span><br></pre></td></tr></table></figure><p><code>There is a literal backtick (`) here.</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">这段语法会产生：</span><br></pre></td></tr></table></figure><p><code>There is a literal backtick (`) here.</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样你就可以在区段的一开始就插入反引号：</span><br></pre></td></tr></table></figure><p>A single backtick in a code span: <code>`</code></p><p>A backtick-delimited string in a code span: <code>`foo`</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">会产生：</span><br></pre></td></tr></table></figure><p>A single backtick in a code span: <code>`</code></p><p>A backtick-delimited string in a code span: <code><code>foo</code></code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在代码区段内，`&amp;` 和方括号**都**会被自动地转成 HTML 实体，这使得插入 HTML 原始码变得很容易，Markdown 会把下面这段：</span><br></pre></td></tr></table></figure><p>Please don’t use any <code>&lt;blink&gt;</code> tags.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">转为：</span><br></pre></td></tr></table></figure><p>Please don’t use any <code>&lt;blink&gt;</code> tags.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">你也可以这样写：</span><br></pre></td></tr></table></figure><p><code>&amp;#8212;</code> is the decimal-encoded equivalent of <code>&amp;mdash;</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">以产生：</span><br></pre></td></tr></table></figure><p><code>&amp;#8212;</code> is the decimal-encoded<br>equivalent of <code>&amp;mdash;</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 图片</span><br><span class="line"></span><br><span class="line">很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。</span><br><span class="line"></span><br><span class="line">Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： _行内式_和_参考式_。</span><br><span class="line"></span><br><span class="line">行内式的图片语法看起来像是：</span><br></pre></td></tr></table></figure><p><img src="/path/to/img.jpg" alt="Alt text"></p><p><img src="/path/to/img.jpg" alt="Alt text" title="Optional title"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">详细叙述如下：</span><br><span class="line"></span><br><span class="line">*   一个惊叹号 `!`</span><br><span class="line">*   接着一个方括号，里面放上图片的替代文字</span><br><span class="line">*   接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 &apos;title&apos; 文字。</span><br><span class="line"></span><br><span class="line">参考式的图片语法则长得像这样：</span><br></pre></td></tr></table></figure><p><img src="url/to/image" alt="Alt text" title="Optional title attribute"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 `&lt;img&gt;` 标签。</span><br><span class="line"></span><br><span class="line">* * *</span><br><span class="line"></span><br><span class="line">## 其它</span><br><span class="line"></span><br><span class="line">### 自动链接</span><br><span class="line"></span><br><span class="line">Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用方括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：</span><br></pre></td></tr></table></figure><p><a href="http://example.com/" target="_blank" rel="noopener">http://example.com/</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Markdown 会转为：</span><br></pre></td></tr></table></figure></p><p><a href="http://example.com/" target="_blank" rel="noopener">http://example.com/</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">邮址的自动链接也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以糊弄一些不好的邮址收集机器人，例如：</span><br></pre></td></tr></table></figure></p><p><a href="mailto:&#97;&#x64;&#100;&#x72;&#101;&#x73;&#115;&#64;&#x65;&#x78;&#x61;&#109;&#112;&#108;&#101;&#46;&#99;&#111;&#109;" target="_blank" rel="noopener">&#97;&#x64;&#100;&#x72;&#101;&#x73;&#115;&#64;&#x65;&#x78;&#x61;&#109;&#112;&#108;&#101;&#46;&#99;&#111;&#109;</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Markdown 会转成：</span><br></pre></td></tr></table></figure></p><p><a href="&#x6D;&#x61;i&#x6C;&#x74;&#x6F;:&#x61;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#64;&#101;&#120;&#x61;&#109;&#x70;&#x6C;e&#x2E;&#99;&#111;&#109;">&#x61;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#64;&#101;&#120;&#x61;<br>&#109;&#x70;&#x6C;e&#x2E;&#99;&#111;&#109;</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在浏览器里面，这段字串（其实是 `&lt;a href=&quot;mailto:address@example.com&quot;&gt;address@example.com&lt;/a&gt;`）会变成一个可以点击的「address@example.com」链接。</span><br><span class="line"></span><br><span class="line">（这种作法虽然可以糊弄不少的机器人，但并不能全部挡下来，不过总比什么都不做好些。不管怎样，公开你的信箱终究会引来广告信件的。）</span><br><span class="line"></span><br><span class="line">### 反斜杠</span><br><span class="line"></span><br><span class="line">Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 `&lt;em&gt;` 标签），你可以在星号的前面加上反斜杠：</span><br></pre></td></tr></table></figure></p><p>*literal asterisks*<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</span><br></pre></td></tr></table></figure></p><p>\   反斜线<br>`   反引号</p><ul><li>星号<br>_   底线<br>{}  花括号<br>[]  方括号<br>()  括弧<h1 id="井字号"><a href="#井字号" class="headerlink" title="井字号"></a>井字号</h1></li></ul><ul><li>加号</li></ul><ul><li>减号<br>.   英文句点<br>!   惊叹号<br><code>`</code></li></ul><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>感谢 <a href="https://twitter.com/#!/leafy7382" target="_blank" rel="noopener">leafy7382</a> 协助翻译，<a href="http://iamhlb.com/" target="_blank" rel="noopener">hlb</a>、<a href="http://twitter.com/randylien" target="_blank" rel="noopener">Randylien</a> 帮忙润稿，<a href="https://twitter.com/#!/ethantw" target="_blank" rel="noopener">ethantw</a> 的<a href="http://ethantw.net/projects/han/" target="_blank" rel="noopener">汉字标准格式・CSS Reset</a>， <a href="http://kidwm.net/" target="_blank" rel="noopener">WM</a> 回报文字错误。</p><p>感谢 <a href="https://github.com/fenprace" target="_blank" rel="noopener">fenprace</a>，<a href="https://github.com/addv" target="_blank" rel="noopener">addv</a>。</p>]]></content>
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
            <tag> Reproduce </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Vim Note</title>
      <link href="/posts/3542455720.html"/>
      <url>/posts/3542455720.html</url>
      <content type="html"><![CDATA[<h1 id="Vim-Note"><a href="#Vim-Note" class="headerlink" title="Vim Note"></a>Vim Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>此文用来记录平时使用Vim遇到的问题与心得.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="Vim使用技巧"><a href="#Vim使用技巧" class="headerlink" title="Vim使用技巧"></a>Vim使用技巧</h2><h3 id="批量删除内容"><a href="#批量删除内容" class="headerlink" title="批量删除内容"></a>批量删除内容</h3><ul><li><p>全部删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 进入文章末尾</span></span><br><span class="line">G   <span class="comment">##注意大写</span></span><br><span class="line">:1,:d  <span class="comment">## 删除全部内容</span></span><br></pre></td></tr></table></figure></li><li><p>删除部分内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 定位到要删除的文档末尾</span></span><br><span class="line">200G</span><br><span class="line">:9,:d   <span class="comment">##删除9-200之间的内容</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="复制粘贴"><a href="#复制粘贴" class="headerlink" title="复制粘贴"></a>复制粘贴</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 复制当前行</span></span><br><span class="line">yy</span><br><span class="line"><span class="comment"># 在当前行粘贴</span></span><br><span class="line">p</span><br></pre></td></tr></table></figure><h3 id="查找替换"><a href="#查找替换" class="headerlink" title="查找替换"></a>查找替换</h3><p>在normal模式下按下<code>/</code>即可进入查找模式，输入要查找的字符串并按下回车。 Vim会跳转到第一个匹配。按下<code>n</code>查找下一个，按下<code>N</code>查找上一个。</p><p>Vim查找支持正则表达式，例如<code>/vim$</code>匹配行尾的<code>&quot;vim&quot;</code>。 需要查找特殊字符需要转义，例如<code>/vim\$</code>匹配<code>&quot;vim$&quot;</code>。</p><blockquote><p>注意查找回车应当用<code>\n</code>，而替换为回车应当用<code>\r</code>（相当于<code>&lt;CR&gt;</code>）。</p></blockquote><h3 id="查找当前单词"><a href="#查找当前单词" class="headerlink" title="查找当前单词"></a>查找当前单词</h3><p>在normal模式下按下<code>*</code>即可查找光标所在单词（word）， 要求每次出现的前后为空白字符或标点符号。例如当前为<code>foo</code>， 可以匹配<code>foo bar</code>中的<code>foo</code>，但不可匹配<code>foobar</code>中的<code>foo</code>。 这在查找函数名、变量名时非常有用。</p><p>按下<code>g*</code>即可查找光标所在单词的字符序列，每次出现前后字符无要求。 即<code>foo bar</code>和<code>foobar</code>中的<code>foo</code>均可被匹配到。</p><p><code>:s</code>（substitute）命令用来查找和替换字符串。语法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:&#123;作用范围&#125;s/&#123;目标&#125;/&#123;替换&#125;/&#123;替换标志&#125;</span><br></pre></td></tr></table></figure><p>例如<code>:%s/foo/bar/g</code>会在全局范围(<code>%</code>)查找<code>foo</code>并替换为<code>bar</code>，所有出现都会被替换（<code>g</code>）。</p><h3 id="作用范围"><a href="#作用范围" class="headerlink" title="作用范围"></a>作用范围</h3><p>作用范围分为当前行、全文、选区等等。</p><p>当前行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:s/foo/bar/g</span><br></pre></td></tr></table></figure><p>全文：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/foo/bar/g</span><br></pre></td></tr></table></figure><p>选区，在Visual模式下选择区域后输入<code>:</code>，Vim即可自动补全为 <code>:&#39;&lt;,&#39;&gt;</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:&apos;&lt;,&apos;&gt;s/foo/bar/g</span><br></pre></td></tr></table></figure><p>2-11行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:5,12s/foo/bar/g</span><br></pre></td></tr></table></figure><p>当前行<code>.</code>与接下来两行<code>+2</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:.,+2s/foo/bar/g</span><br></pre></td></tr></table></figure><h3 id="替换标志"><a href="#替换标志" class="headerlink" title="替换标志"></a>替换标志</h3><p>上文中命令结尾的<code>g</code>即是替换标志之一，表示全局<code>global</code>替换（即替换目标的所有出现）。 还有很多其他有用的替换标志：</p><p>空替换标志表示只替换从光标位置开始，目标的第一次出现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/foo/bar</span><br></pre></td></tr></table></figure><p><code>i</code>表示大小写不敏感查找，<code>I</code>表示大小写敏感：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:%s/foo/bar/i</span><br><span class="line"># 等效于模式中的\c（不敏感）或\C（敏感）</span><br><span class="line">:%s/foo\c/bar</span><br></pre></td></tr></table></figure><p><code>c</code>表示需要确认，例如全局查找<code>&quot;foo&quot;</code>替换为<code>&quot;bar&quot;</code>并且需要确认：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/foo/bar/gc</span><br></pre></td></tr></table></figure><p>回车后Vim会将光标移动到每一次<code>&quot;foo&quot;</code>出现的位置，并提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">replace with bar (y/n/a/q/l/^E/^Y)?</span><br></pre></td></tr></table></figure><p>按下<code>y</code>表示替换，<code>n</code>表示不替换，<code>a</code>表示替换所有，<code>q</code>表示退出查找模式， <code>l</code>表示替换当前位置并退出。<code>^E</code>与<code>^Y</code>是光标移动快捷键，参考： <a href="https://harttle.land/2015/11/07/vim-cursor.html" target="_blank" rel="noopener">Vim中如何快速进行光标移动</a>。</p><h3 id="高亮设置"><a href="#高亮设置" class="headerlink" title="高亮设置"></a>高亮设置</h3><h4 id="高亮颜色设置"><a href="#高亮颜色设置" class="headerlink" title="高亮颜色设置"></a>高亮颜色设置</h4><p>如果你像我一样觉得高亮的颜色不太舒服，可以在 <code>~/.vimrc</code> 中进行设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">highlight Search ctermbg=yellow ctermfg=black </span><br><span class="line">highlight IncSearch ctermbg=black ctermfg=yellow </span><br><span class="line">highlight MatchParen cterm=underline ctermbg=NONE ctermfg=NONE</span><br></pre></td></tr></table></figure><p>上述配置指定 Search 结果的前景色（foreground）为黑色，背景色（background）为灰色； 渐进搜索的前景色为黑色，背景色为黄色；光标处的字符加下划线。</p><blockquote><p>更多的CTERM颜色可以查阅：<a href="http://vim.wikia.com/wiki/Xterm256_color_names_for_console_Vim" target="_blank" rel="noopener">http://vim.wikia.com/wiki/Xterm256_color_names_for_console_Vim</a></p></blockquote><h4 id="禁用-启用高亮"><a href="#禁用-启用高亮" class="headerlink" title="禁用/启用高亮"></a>禁用/启用高亮</h4><p>有木有觉得每次查找替换后 Vim 仍然高亮着搜索结果？ 可以手动让它停止高亮，在normal模式下输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:nohighlight</span><br><span class="line"># 等效于</span><br><span class="line">:nohl</span><br></pre></td></tr></table></figure><p>其实上述命令禁用了所有高亮，只禁用搜索高亮的命令是<code>:set nohlsearch</code>。 下次搜索时需要<code>:set hlsearch</code>再次启动搜索高亮。</p><h4 id="延时禁用"><a href="#延时禁用" class="headerlink" title="延时禁用"></a>延时禁用</h4><p>怎么能够让Vim查找/替换后一段时间自动取消高亮，发生查找时自动开启呢？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&quot; 当光标一段时间保持不动了，就禁用高亮</span><br><span class="line">autocmd cursorhold * set nohlsearch</span><br><span class="line">&quot; 当输入查找命令时，再启用高亮</span><br><span class="line">noremap n :set hlsearch&lt;cr&gt;n</span><br><span class="line">noremap N :set hlsearch&lt;cr&gt;N</span><br><span class="line">noremap / :set hlsearch&lt;cr&gt;/</span><br><span class="line">noremap ? :set hlsearch&lt;cr&gt;?</span><br><span class="line">noremap * *:set hlsearch&lt;cr&gt;</span><br></pre></td></tr></table></figure><blockquote><p>将上述配置粘贴到<code>~/.vimrc</code>，重新打开vim即可生效。</p></blockquote><h4 id="一键禁用"><a href="#一键禁用" class="headerlink" title="一键禁用"></a>一键禁用</h4><p>如果延时禁用搜索高亮仍然不够舒服，可以设置快捷键来一键禁用/开启搜索高亮：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">noremap n :set hlsearch&lt;cr&gt;n</span><br><span class="line">noremap N :set hlsearch&lt;cr&gt;N</span><br><span class="line">noremap / :set hlsearch&lt;cr&gt;/</span><br><span class="line">noremap ? :set hlsearch&lt;cr&gt;?</span><br><span class="line">noremap * *:set hlsearch&lt;cr&gt;</span><br><span class="line"></span><br><span class="line">nnoremap &lt;c-h&gt; :call DisableHighlight()&lt;cr&gt;</span><br><span class="line">function! DisableHighlight()</span><br><span class="line">    set nohlsearch</span><br><span class="line">endfunc</span><br></pre></td></tr></table></figure><p>希望关闭高亮时只需要按下 <code>Ctrl+H</code>，当发生下次搜索时又会自动启用。</p><h3 id="大小写"><a href="#大小写" class="headerlink" title="大小写"></a>大小写</h3><h4 id="大小写敏感查找"><a href="#大小写敏感查找" class="headerlink" title="大小写敏感查找"></a>大小写敏感查找</h4><p>在查找模式中加入<code>\c</code>表示大小写不敏感查找，<code>\C</code>表示大小写敏感查找。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/foo\c</span><br></pre></td></tr></table></figure><p>将会查找所有的<code>&quot;foo&quot;</code>,<code>&quot;FOO&quot;</code>,<code>&quot;Foo&quot;</code>等字符串。</p><h4 id="大小写敏感配置"><a href="#大小写敏感配置" class="headerlink" title="大小写敏感配置"></a>大小写敏感配置</h4><p>Vim 默认采用大小写敏感的查找，为了方便我们常常将其配置为大小写不敏感：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot; 设置默认进行大小写不敏感查找</span><br><span class="line">set ignorecase</span><br><span class="line">&quot; 如果有一个大写字母，则切换到大小写敏感查找</span><br><span class="line">set smartcase</span><br></pre></td></tr></table></figure><blockquote><p>将上述设置粘贴到你的<code>~/.vimrc</code>，重新打开Vim即可生效。</p></blockquote>]]></content>
      
      <categories>
          
          <category> Vim </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vim </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git note</title>
      <link href="/posts/3890174064.html"/>
      <url>/posts/3890174064.html</url>
      <content type="html"><![CDATA[<h1 id="Git-Note"><a href="#Git-Note" class="headerlink" title="Git Note"></a>Git Note</h1><p>Author: JosephLau</p><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><blockquote><p>此文用来记录平时使用Git遇到的问题与心得.</p><p>本文长期更新.</p></blockquote><a id="more"></a><h2 id="遇到的报错与解决办法"><a href="#遇到的报错与解决办法" class="headerlink" title="遇到的报错与解决办法"></a>遇到的报错与解决办法</h2><ul><li><p><strong>File Mode</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 遇到的问题</span></span><br><span class="line">[root@me file]<span class="comment"># git diff .gitignore</span></span><br><span class="line">diff --git a/.gitignore b/.gitignore</span><br><span class="line">old mode 100644</span><br><span class="line">new mode 100755</span><br></pre></td></tr></table></figure><blockquote><p><strong>解决办法:</strong></p><p>filemode的变化，文件chmod后其文件某些位是改变了的，如果严格的比较原文件和chmod后的文件，两者是有区别的，但是源代码通常只关心文本内容，因此chmod产生的变化应该忽略，所以设置一下：</p><p><code>git config --add core.filemode false</code></p></blockquote></li><li><p><strong>在.gitignore文件中添加忽略规则无效</strong></p><blockquote><p>项目开始的时候 没有将一些无关文件配置进 .gitignore里面。导致文件已经进行跟踪了，但是目前想把这些文件add 到 .gitignore文件中，但是发现没有效果。 修改文件之后，git 依然检测到了，文件改动。</p><p><strong>解决办法</strong>:</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 原来git有一条规则，“如果一个文件一开始没有添加到.gitignore里面，中途添加进去。git将不会忽略这个文件。”在这种情况下，必须使用</span></span><br><span class="line">git rm --cached &lt; file name &gt;</span><br><span class="line"><span class="comment"># git rm --cached -r &lt; file name &gt; 强制删除</span></span><br><span class="line"><span class="comment"># 这个命令 来 移除对这个文件的跟踪，然后将 这个不想被跟踪的文件 添加到 .gitignore文件里面 就可以了。</span></span><br><span class="line"><span class="comment"># 做完这些工作之后 你还必须 再 commit 一次，这次commit之后 ，文件就可以被忽略了。</span></span><br></pre></td></tr></table></figure></li><li><p><code>fatal: refusing to merge unrelated histories</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在使用Git创建项目的时候，在两个分支合并的时候，出现了下面的这个错误。</span></span><br><span class="line">git merge origin/master</span><br><span class="line">fatal: refusing to merge unrelated histories</span><br></pre></td></tr></table></figure><blockquote><p><strong>解决办法:</strong></p><p>在你操作命令后面加</p><p><code>--allow-unrelated-histories</code> </p><p>例如</p><p><code>git merge master --allow-unrelated-histories</code></p></blockquote></li><li><p><strong><code>commit</code>之后想撤销</strong></p><blockquote><p>commit之后想要撤销commit某个文件</p><p><strong>解决办法:</strong></p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看commit日志</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"><span class="comment"># reset commit</span></span><br><span class="line"><span class="comment"># 想要撤销的commit的前一次commit id</span></span><br><span class="line">git reset --soft [commit id]</span><br><span class="line"><span class="comment"># 取消暂存</span></span><br><span class="line">git reset HEAD README.md</span><br><span class="line"><span class="comment"># 重新commit</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"message"</span></span><br></pre></td></tr></table></figure></li><li><p><strong>To prevent you from losing history, non-fast-forward updates were rejected</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">To git</span><br><span class="line"> ! [rejected]        master -&gt; master (non-fast-forward)</span><br><span class="line">error: failed to push some refs to &apos;git&apos;</span><br><span class="line">To prevent you from losing history, non-fast-forward updates were rejected</span><br><span class="line">Merge the remote changes before pushing again.  See the &apos;Note about</span><br><span class="line">fast-forwards&apos; section of &apos;git push --help&apos; for details.</span><br></pre></td></tr></table></figure><blockquote><p>出现原因在于：git仓库中已经有一部分代码，所以它不允许你直接把你的代码覆盖上去。于是你有2个选择方式：</p><ol><li><p>强推，即利用强覆盖方式用你本地的代码替代git仓库内的内容</p><p><code>git push -f</code></p></li><li><p>先把git的东西fetch到你本地然后merge后再push</p><p><code>git pull</code></p></li></ol></blockquote></li><li><p><strong>拉取远程强制覆盖本地</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取remote最新代码</span></span><br><span class="line">git fetch --all</span><br><span class="line"><span class="comment"># 覆盖本地</span></span><br><span class="line">git reset --hard origin master</span><br></pre></td></tr></table></figure></li><li><p><strong>push失败</strong></p><p>push时提示</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git push github deploy</span><br><span class="line">error: src refspec deploy does not match any.</span><br></pre></td></tr></table></figure><blockquote><p>我的情况是当前仓库没有分支，需要创建分支</p></blockquote><p><code>git checkout -b deploy</code></p><blockquote><p>或者</p></blockquote><p><code>git push github HEAD:deploy</code></p></li><li><p><strong>生成密钥</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"your email address"</span></span><br><span class="line"><span class="comment"># Windows存储在/c/user/username/.ssh中</span></span><br><span class="line"><span class="comment"># Mac存储在~/.ssh中</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="Git常用命令"><a href="#Git常用命令" class="headerlink" title="Git常用命令"></a>Git常用命令</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git add [filename]</span><br><span class="line"><span class="comment"># 提交暂存区到仓库区</span></span><br><span class="line">git commit -m [message]</span><br><span class="line"><span class="comment"># 提交暂存区的指定文件到仓库区</span></span><br><span class="line">git commit [file1] [file2] ... -m [message]</span><br><span class="line"><span class="comment"># 提交工作区自上次commit之后的变化，直接到仓库区</span></span><br><span class="line">git commit -a</span><br><span class="line"><span class="comment"># 提交时显示所有diff信息</span></span><br><span class="line">git commit -v</span><br><span class="line"><span class="comment"># 使用一次新的commit，替代上一次提交</span></span><br><span class="line"><span class="comment"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span></span><br><span class="line">git commit --amend -m [message]</span><br><span class="line"><span class="comment"># 重做上一次commit，并包括指定文件的新变化</span></span><br><span class="line">git commit --amend [file1] [file2] ...</span><br><span class="line"><span class="comment"># 暂时将未提交的变化移除，稍后再移入</span></span><br><span class="line">git stash</span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure><h2 id="Git-Workspace"><a href="#Git-Workspace" class="headerlink" title="Git Workspace"></a>Git Workspace</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Workspace：工作区</span><br><span class="line">Index/Stage：暂存区</span><br><span class="line">Repository：仓库区（或本地仓库）</span><br><span class="line">Remote：远程仓库</span><br></pre></td></tr></table></figure><h2 id="Git-Push-免密码登陆"><a href="#Git-Push-免密码登陆" class="headerlink" title="Git Push 免密码登陆"></a>Git Push 免密码登陆</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##设置git config --global</span></span><br><span class="line"><span class="comment">##credential.helper设置为store</span></span><br><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure><h2 id="查看设置是否完成"><a href="#查看设置是否完成" class="headerlink" title="查看设置是否完成"></a>查看设置是否完成</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##查看git config设置内容</span></span><br><span class="line">git config --list</span><br><span class="line">user.name=your-username</span><br><span class="line">user.email=example@example.com</span><br><span class="line">credential.helper=store</span><br></pre></td></tr></table></figure><h2 id="Git-Push-操作"><a href="#Git-Push-操作" class="headerlink" title="Git Push 操作"></a>Git Push 操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"message"</span></span><br><span class="line">git merge origin/master</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h2 id="新建Repo"><a href="#新建Repo" class="headerlink" title="新建Repo"></a>新建Repo</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在当前目录新建一个Git代码库</span></span><br><span class="line">git init</span><br><span class="line"><span class="comment"># 新建一个目录，将其初始化为Git代码库</span></span><br><span class="line">git init[project-name]</span><br><span class="line"><span class="comment"># 下载一个项目和它的整个代码历史</span></span><br><span class="line">git <span class="built_in">clone</span> [url]</span><br></pre></td></tr></table></figure><h2 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示当前的Git配置</span></span><br><span class="line">git config--list</span><br><span class="line"><span class="comment"># 编辑Git配置文件</span></span><br><span class="line">git config -e[--global]</span><br><span class="line"><span class="comment"># 设置提交代码时的用户信息</span></span><br><span class="line">git config[--global] user.name <span class="string">"[name]"</span></span><br><span class="line">git config[--global] user.email <span class="string">"[email address]"</span></span><br></pre></td></tr></table></figure><h2 id="增加删除文件"><a href="#增加删除文件" class="headerlink" title="增加删除文件"></a>增加删除文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加指定文件到暂存区</span></span><br><span class="line">git add [file1][file2] ...</span><br><span class="line"><span class="comment"># 添加指定目录到暂存区，包括子目录</span></span><br><span class="line">git add [dir]</span><br><span class="line"><span class="comment"># 添加当前目录的所有文件到暂存区</span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment"># 添加每个变化前，都会要求确认</span></span><br><span class="line"><span class="comment"># 对于同一个文件的多处变化，可以实现分次提交</span></span><br><span class="line">git add -p</span><br><span class="line"><span class="comment"># 删除工作区文件，并且将这次删除放入暂存区</span></span><br><span class="line">git rm [file1][file2] ...</span><br><span class="line"><span class="comment"># 停止追踪指定文件，但该文件会保留在工作区</span></span><br><span class="line">git rm --cached[file]</span><br><span class="line"><span class="comment"># 改名文件，并且将这个改名放入暂存区</span></span><br><span class="line">git mv[file-original] [file-renamed]</span><br></pre></td></tr></table></figure><h2 id="代码提交"><a href="#代码提交" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提交暂存区到仓库区</span></span><br><span class="line">git commit -m[message]</span><br><span class="line"><span class="comment"># 提交暂存区的指定文件到仓库区</span></span><br><span class="line">git commit [file1] [file2] ... -m [message]</span><br><span class="line"><span class="comment"># 提交工作区自上次commit之后的变化，直接到仓库区</span></span><br><span class="line">git commit -a</span><br><span class="line"><span class="comment"># 提交时显示所有diff信息</span></span><br><span class="line">git commit -v</span><br><span class="line"><span class="comment"># 使用一次新的commit，替代上一次提交</span></span><br><span class="line"><span class="comment"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span></span><br><span class="line">git commit --amend -m [message]</span><br><span class="line"><span class="comment"># 重做上一次commit，并包括指定文件的新变化</span></span><br><span class="line">git commit--amend [file1] [file2] ...</span><br></pre></td></tr></table></figure><h2 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出所有本地分支</span></span><br><span class="line">git branch</span><br><span class="line"><span class="comment"># 列出所有远程分支</span></span><br><span class="line">git branch -r</span><br><span class="line"><span class="comment"># 列出所有本地分支和远程分支</span></span><br><span class="line">git branch -a</span><br><span class="line"><span class="comment"># 新建一个分支，但依然停留在当前分支</span></span><br><span class="line">git branch[branch-name]</span><br><span class="line"><span class="comment"># 新建一个分支，并切换到该分支</span></span><br><span class="line">git checkout -b[branch]</span><br><span class="line"><span class="comment"># 新建一个分支，指向指定commit</span></span><br><span class="line">git branch[branch] [commit]</span><br><span class="line"><span class="comment"># 新建一个分支，与指定的远程分支建立追踪关系</span></span><br><span class="line">git branch--track [branch] [remote-branch]</span><br><span class="line"><span class="comment"># 切换到指定分支，并更新工作区</span></span><br><span class="line">git checkout[branch-name]</span><br><span class="line"><span class="comment"># 切换到上一个分支</span></span><br><span class="line">git checkout -</span><br><span class="line"><span class="comment"># 建立追踪关系，在现有分支与指定的远程分支之间</span></span><br><span class="line">git branch--<span class="built_in">set</span>-upstream [branch] [remote-branch]</span><br><span class="line"><span class="comment"># 合并指定分支到当前分支</span></span><br><span class="line">git merge[branch]</span><br><span class="line"><span class="comment"># 选择一个commit，合并进当前分支</span></span><br><span class="line">git cherry-pick[commit]</span><br><span class="line"><span class="comment"># 删除分支</span></span><br><span class="line">git branch -d[branch-name]</span><br><span class="line"><span class="comment"># 删除远程分支</span></span><br><span class="line">git push origin--delete [branch-name]</span><br><span class="line">git branch -dr[remote/branch]</span><br></pre></td></tr></table></figure><h2 id="标签操作"><a href="#标签操作" class="headerlink" title="标签操作"></a>标签操作</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出所有tag</span></span><br><span class="line">git tag</span><br><span class="line"><span class="comment"># 新建一个tag在当前commit</span></span><br><span class="line">git tag [tag]</span><br><span class="line"><span class="comment"># 新建一个tag在指定commit</span></span><br><span class="line">git tag [tag][commit]</span><br><span class="line"><span class="comment"># 删除本地tag</span></span><br><span class="line">git tag -d[tag]</span><br><span class="line"><span class="comment"># 删除远程tag</span></span><br><span class="line">git push origin:refs/tags/[tagName]</span><br><span class="line"><span class="comment"># 查看tag信息</span></span><br><span class="line">git show [tag]</span><br><span class="line"><span class="comment"># 提交指定tag</span></span><br><span class="line">git push[remote] [tag]</span><br><span class="line"><span class="comment"># 提交所有tag</span></span><br><span class="line">git push[remote] --tags</span><br><span class="line"><span class="comment"># 新建一个分支，指向某个tag</span></span><br><span class="line">git checkout -b[branch] [tag]</span><br></pre></td></tr></table></figure><h2 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示有变更的文件</span></span><br><span class="line">git status</span><br><span class="line"><span class="comment"># 显示当前分支的版本历史</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"><span class="comment"># 显示commit历史，以及每次commit发生变更的文件</span></span><br><span class="line">git <span class="built_in">log</span> --<span class="built_in">stat</span></span><br><span class="line"><span class="comment"># 搜索提交历史，根据关键词</span></span><br><span class="line">git <span class="built_in">log</span> -S [keyword]</span><br><span class="line"><span class="comment"># 显示某个commit之后的所有变动，每个commit占据一行</span></span><br><span class="line">git <span class="built_in">log</span> [tag]HEAD --pretty=format:%s</span><br><span class="line"><span class="comment"># 显示某个commit之后的所有变动，其"提交说明"必须符合搜索条件</span></span><br><span class="line">git <span class="built_in">log</span> [tag]HEAD --grep feature</span><br><span class="line"><span class="comment"># 显示某个文件的版本历史，包括文件改名</span></span><br><span class="line">git <span class="built_in">log</span> --follow [file]</span><br><span class="line">git whatchanged [file]</span><br><span class="line"><span class="comment"># 显示指定文件相关的每一次diff</span></span><br><span class="line">git <span class="built_in">log</span> -p[file]</span><br><span class="line"><span class="comment"># 显示过去5次提交</span></span><br><span class="line">git <span class="built_in">log</span> -5--pretty --oneline</span><br><span class="line"><span class="comment"># 显示所有提交过的用户，按提交次数排序</span></span><br><span class="line">git shortlog -sn</span><br><span class="line"><span class="comment"># 显示指定文件是什么人在什么时间修改过</span></span><br><span class="line">git blame [file]</span><br><span class="line"><span class="comment"># 显示暂存区和工作区的差异</span></span><br><span class="line">git diff</span><br><span class="line"><span class="comment"># 显示暂存区和上一个commit的差异</span></span><br><span class="line">git diff --cached [file]</span><br><span class="line"><span class="comment"># 显示工作区与当前分支最新commit之间的差异</span></span><br><span class="line">git diff HEAD</span><br><span class="line"><span class="comment"># 显示两次提交之间的差异</span></span><br><span class="line">git diff [first-branch]...[second-branch]</span><br><span class="line"><span class="comment"># 显示今天你写了多少行代码</span></span><br><span class="line">git diff --shortstat <span class="string">"@&#123;0 day ago&#125;"</span></span><br><span class="line"><span class="comment"># 显示某次提交的元数据和内容变化</span></span><br><span class="line">git show [commit]</span><br><span class="line"><span class="comment"># 显示某次提交发生变化的文件</span></span><br><span class="line">git show --name-only [commit]</span><br><span class="line"><span class="comment"># 显示某次提交时，某个文件的内容</span></span><br><span class="line">git show [commit]:[filename]</span><br><span class="line"><span class="comment"># 显示当前分支的最近几次提交</span></span><br><span class="line">git reflog</span><br></pre></td></tr></table></figure><h2 id="远程同步"><a href="#远程同步" class="headerlink" title="远程同步"></a>远程同步</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载远程仓库的所有变动</span></span><br><span class="line">git fetch[remote]</span><br><span class="line"><span class="comment"># 显示所有远程仓库</span></span><br><span class="line">git remote -v</span><br><span class="line"><span class="comment"># 显示某个远程仓库的信息</span></span><br><span class="line">git remote show[remote]</span><br><span class="line"><span class="comment"># 增加一个新的远程仓库，并命名</span></span><br><span class="line">git remote add[shortname] [url]</span><br><span class="line"><span class="comment"># 取回远程仓库的变化，并与本地分支合并</span></span><br><span class="line">git pull[remote] [branch]</span><br><span class="line"><span class="comment"># 上传本地指定分支到远程仓库</span></span><br><span class="line">git push[remote] [branch]</span><br><span class="line"><span class="comment"># 强行推送当前分支到远程仓库，即使有冲突</span></span><br><span class="line">git push[remote] --force</span><br><span class="line"><span class="comment"># 推送所有分支到远程仓库</span></span><br><span class="line">git push[remote] --all</span><br></pre></td></tr></table></figure><h2 id="撤销操作"><a href="#撤销操作" class="headerlink" title="撤销操作"></a>撤销操作</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 恢复暂存区的指定文件到工作区</span></span><br><span class="line">git checkout [file]</span><br><span class="line"><span class="comment"># 恢复某个commit的指定文件到暂存区和工作区</span></span><br><span class="line">git checkout [commit] [file]</span><br><span class="line"><span class="comment"># 恢复暂存区的所有文件到工作区</span></span><br><span class="line">git checkout .</span><br><span class="line"><span class="comment"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span></span><br><span class="line">git reset [file]</span><br><span class="line"><span class="comment"># 重置暂存区与工作区，与上一次commit保持一致</span></span><br><span class="line">git reset --hard</span><br><span class="line"><span class="comment"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span></span><br><span class="line">git reset[commit]</span><br><span class="line"><span class="comment"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span></span><br><span class="line">git reset--hard [commit]</span><br><span class="line"><span class="comment"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span></span><br><span class="line">git reset--keep [commit]</span><br><span class="line"><span class="comment"># 新建一个commit，用来撤销指定commit</span></span><br><span class="line"><span class="comment"># 后者的所有变化都将被前者抵消，并且应用到当前分支</span></span><br><span class="line">git revert [commit]</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/1243066710.html"/>
      <url>/posts/1243066710.html</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
</search>
